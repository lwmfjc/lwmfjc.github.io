<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>随记</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/</link><description>Recent content on 随记</description><generator>Hugo</generator><language>zh</language><atom:link href="https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/index.xml" rel="self" type="application/rss+xml"/><item><title>从校招入职腾讯的四年工作总结</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/four-year-work-in-tencent-summary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/four-year-work-in-tencent-summary/</guid><description>&lt;p>程序员是一个流动性很大的职业，经常会有新面孔的到来，也经常会有老面孔的离开，有主动离开的，也有被动离职的。&lt;/p>
&lt;p>再加上这几年卷得厉害，做的事更多了，拿到的却更少了，互联网好像也没有那么香了。&lt;/p>
&lt;p>人来人往，变动无常的状态，其实也早已习惯。&lt;/p>
&lt;p>打工人的唯一出路，无外乎精进自己的专业技能，提升自己的核心竞争力，这样无论有什么变动，走到哪里，都能有口饭吃。&lt;/p>
&lt;p>今天分享一位博主，校招入职腾讯，工作四年后，离开的故事。&lt;/p>
&lt;p>至于为什么离开，我也不清楚，可能是有其他更好的选择，或者是觉得当前的工作对自己的提升有限。&lt;/p>
&lt;p>&lt;strong>下文中的“我”，指这位作者本人。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>原文地址：
&lt;a href="https://zhuanlan.zhihu.com/p/602517682">https://zhuanlan.zhihu.com/p/602517682&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>研究生毕业后， 一直在腾讯工作，不知不觉就过了四年。个人本身没有刻意总结的习惯，以前只顾着往前奔跑了，忘了停下来思考总结。记得看过一个职业规划文档，说的三年一个阶段，五年一个阶段的说法，现在恰巧是四年，同时又从腾讯离开，该做一个总结了。&lt;/p>
&lt;p>先对自己这四年做一个简单的评价吧：个人认为，没有完全的浪费和辜负这四年的光阴。为何要这么说了？因为我发现和别人对比，好像意义不大，比我混的好的人很多；比我混的差的人也不少。说到底，我只是一个普普通通的人，才不惊人，技不压众，接受自己的平凡，然后看自己做的，是否让自己满意就好。&lt;/p>
&lt;p>下面具体谈几点吧，我主要想聊下工作，绩效，EPC，嫡系看法，最后再谈下收获。&lt;/p>
&lt;h2 id="工作情况">
 工作情况
 &lt;a class="anchor" href="#%e5%b7%a5%e4%bd%9c%e6%83%85%e5%86%b5">#&lt;/a>
&lt;/h2>
&lt;p>我在腾讯内部没有转过岗，但是做过的项目也还是比较丰富的，包括：BUGLY、分布式调用链（Huskie)、众包系统（SOHO)，EPC 度量系统。其中一些是对外的，一些是内部系统，可能有些大家不知道。还是比较感谢这些项目经历，既有纯业务的系统，也有偏框架的系统，让我学到了不少知识。&lt;/p>
&lt;p>接下来，简单介绍一下每个项目吧，毕竟每一个项目都付出了很多心血的：&lt;/p>
&lt;p>BUGLY，这是一个终端 Crash 联网上报的系统，很多 APP 都接入了。Huskie，这是一个基于 zipkin 搭建的分布式调用链跟踪项目。SOHO，这是一个众包系统，主要是将数据标准和语音采集任务众包出去，让人家做。EPC 度量系统，这是研发效能度量系统，主要是度量研发效能情况的。这里我谈一下对于业务开发的理解和认识，很多人可能都跟我最开始一样，有一个疑惑，整天做业务开发如何成长？换句话说，就是说整天做 CRUD，如何成长？我开始也有这样的疑惑，后来我转变了观念。&lt;/p>
&lt;p>我觉得对于系统的复杂度，可以粗略的分为技术复杂度和业务复杂度，对于业务系统，就是业务复杂度高一些，对于框架系统就是技术复杂度偏高一些。解决这两种复杂度，都具有很大的挑战。&lt;/p>
&lt;p>此前做过的众包系统，就是各种业务逻辑，搞过去，搞过来，其实这就是业务复杂度高。为了解决这个问题，我们开始探索和实践领域驱动（DDD），确实带来了一些帮助，不至于系统那么混乱了。同时，我觉得这个过程中，自己对于 DDD 的感悟，对于我后来的项目系统划分和设计以及开发都带来了帮助。&lt;/p>
&lt;p>当然 DDD 不是银弹，我也不是吹嘘它有多好，只是了解了它后，有时候设计和开发时，能换一种思路。&lt;/p>
&lt;p>可以发现，其实平时咱们做业务，想做好，其实也没那么容易，如果可以多探索多实践，将一些好的方法或思想或架构引入进来，与个人和业务都会有有帮助。&lt;/p>
&lt;h2 id="绩效情况">
 绩效情况
 &lt;a class="anchor" href="#%e7%bb%a9%e6%95%88%e6%83%85%e5%86%b5">#&lt;/a>
&lt;/h2>
&lt;p>我在腾讯工作四年，腾讯半年考核一次，一共考核八次，回想了下，四年来的绩效情况为:三星，三星，五星，三星，五星，四星，四星，三星。统计一下， 四五星占比刚好一半。&lt;/p>
&lt;p>&lt;img src="https://oss.javaguide.cn/github/javaguide/high-quality-technical-articles/640.png" alt="" />&lt;/p>
&lt;p>PS：还好以前有奖杯，不然一点念想都没了。(现在腾讯似乎不发了）&lt;/p>
&lt;p>印象比较深的是两次五星获得经历。第一次五星是工作的第二年，那一年是在做众包项目，因为项目本身难度不大，因此我把一些精力投入到了团队的基础建设中，帮团队搭建了 java 以及 golang 的项目脚手架，又做了几次中心技术分享，最终 Leader 觉得我表现比较突出，因此给了我五星。看来，主动一些，与个人与团队都是有好处的，最终也能获得一些回报。&lt;/p>
&lt;p>第二次五星，就是与 EPC 有关了。说一个搞笑的事，我也是后来才知道的，项目初期，总监去汇报时，给老板演示系统，加载了很久指标才刷出来，总监很不好意思的说正在优化；过了一段时间，又去汇报演示，结果又很尴尬的刷了很久才出来，总监无赖表示还是在优化。没想到，自己曾经让总监这么丢脸，哈哈。好吧，说一下结果，最终，我自己写了一个查询引擎替换了 Mondrian，之后再也没有出现那种尴尬的情况了。随之而来，也给了好绩效鼓励。做 EPC 度量项目，我觉得自己成长很大，比如抗压能力，当你从零到一搭建一个系统时，会有一个先扛住再优化的过程，此外如果你的项目很重要，尤其是数据相关，那么任何一点问题，都可能让你神经紧绷，得想尽办法降低风险和故障。此外，另一个不同的感受就是，以前得项目，我大多是开发者，而这个系统，我是 Owner 负责人，当你 Owner 一个系统时，你得时刻负责，同时还需要思考系统的规划和方向，此外还需要分配好需求和把控进度，角色体验跟以前完全不一样。&lt;/p>
&lt;h2 id="谈谈-epc">
 谈谈 EPC
 &lt;a class="anchor" href="#%e8%b0%88%e8%b0%88-epc">#&lt;/a>
&lt;/h2>
&lt;p>很多人都骂 EPC，或者笑 EPC，作为度量平台核心开发者之一，我来谈谈客观的看法。&lt;/p>
&lt;p>其实 EPC 初衷是好的，希望通过全方位多维度的研效指标，来度量研发效能各环节的质量，进而反推业务，提升研发效能。然而，最终在实践的过程中，才发现，客观条件并不支持（工具还没建设好）；此外，一味的追求指标数据，使得下面的人想方设法让指标好看，最终违背了初衷。&lt;/p></description></item><item><title>滴滴和头条两年后端工作经验分享</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/two-years-of-back-end-develop--experience-in-didi-and-toutiao/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/two-years-of-back-end-develop--experience-in-didi-and-toutiao/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>推荐语&lt;/strong>：很实用的工作经验分享，看完之后十分受用！&lt;/p>
&lt;p>&lt;strong>内容概览&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>要学会深入思考，总结沉淀，这是我觉得最重要也是最有意义的一件事。&lt;/li>
&lt;li>积极学习，保持技术热情。如果我们积极学习，保持技术能力、知识储备与工作年限成正比，这到了 35 岁哪还有什么焦虑呢，这样的大牛我觉得应该也是各大公司抢着要吧？&lt;/li>
&lt;li>在能为公司办成事，创造价值这一点上，我觉得最重要的两个字就是主动，主动承担任务，主动沟通交流，主动推动项目进展，主动协调资源，主动向上反馈，主动创造影响力等等。&lt;/li>
&lt;li>脸皮要厚一点，多找人聊，快速融入，最忌讳有问题也不说，自己把自己孤立起来。&lt;/li>
&lt;li>想舔就舔，不想舔也没必要酸别人，Respect Greatness。&lt;/li>
&lt;li>时刻准备着，技术在手就没什么可怕的，哪天干得不爽了直接跳槽。&lt;/li>
&lt;li>平时积极总结沉淀，多跟别人交流，形成方法论。&lt;/li>
&lt;li>……&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>原文地址&lt;/strong>：
&lt;a href="https://www.nowcoder.com/discuss/351805">https://www.nowcoder.com/discuss/351805&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>先简单交代一下背景吧，某不知名 985 的本硕，17 年毕业加入滴滴，当时找工作时候也是在牛客这里跟大家一起奋战的。今年下半年跳槽到了头条，一直从事后端研发相关的工作。之前没有实习经历，算是两年半的工作经验吧。这两年半之间完成了一次晋升，换了一家公司，有过开心满足的时光，也有过迷茫挣扎的日子，不过还算顺利地从一只职场小菜鸟转变为了一名资深划水员。在这个过程中，总结出了一些还算实用的划水经验，有些是自己领悟到的，有些是跟别人交流学到的，在这里跟大家分享一下。&lt;/p>
&lt;h2 id="学会深入思考总结沉淀">
 学会深入思考，总结沉淀
 &lt;a class="anchor" href="#%e5%ad%a6%e4%bc%9a%e6%b7%b1%e5%85%a5%e6%80%9d%e8%80%83%e6%80%bb%e7%bb%93%e6%b2%89%e6%b7%80">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>我想说的第一条就是要学会深入思考，总结沉淀，这是我觉得最重要也是最有意义的一件事。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>先来说深入思考。&lt;/strong> 在程序员这个圈子里，常能听到一些言论：&lt;em>“我这个工作一点技术含量都没有，每天就 CRUD，再写写 if-else，这 TM 能让我学到什么东西？”&lt;/em>&lt;/p>
&lt;p>抛开一部分调侃和戏谑的论调不谈，这可能确实是一部分同学的真实想法，至少曾经的我，就这么认为过。后来随着工作经验的积累，加上和一些高 level 的同学交流探讨之后，我发现这个想法其实是非常错误的。之所以出现没什么可学的这样的看法，基本上是思维懒惰的结果。&lt;strong>任何一件看起来很不起眼的小事，只要进行深入思考，稍微纵向挖深或者横向拓宽一下，都是足以让人沉溺的知识海洋。&lt;/strong>&lt;/p>
&lt;p>举一个例子。某次有个同学跟我说，这周有个服务 OOM 了，查了一周发现有个地方 defer 写的有问题，改了几行代码上线修复了，周报都没法写。可能大家也遇到过这样的场景，还算是有一定的代表性。其实就查 bug 这件事来说，是一个发现问题，排查问题，解决问题的过程，包含了触发、定位、复现、根因、修复、复盘等诸多步骤，花了一周来做这件事，一定有不断尝试与纠错的过程，这里面其实就有很多思考的空间。比如说定位，如何缩小范围的？走了哪些弯路？用了哪些分析工具？比如说根因，可以研究的点起码有 linux 的 OOM，k8s 的 OOM，go 的内存管理，defer 机制，函数闭包的原理等等。如果这些真的都不涉及，仍然花了一周时间做这件事，那复盘应该会有很多思考，提出来几十个 WHY 没问题吧&amp;hellip;&lt;/p>
&lt;p>&lt;strong>再来说下总结沉淀。&lt;/strong> 这个我觉得也是大多数程序员比较欠缺的地方，只顾埋头干活，可以把一件事做的很好。但是几乎从来不做抽象总结，以至于工作好几年了，所掌握的知识还是零星的几点，不成体系，不仅容易遗忘，而且造成自己视野比较窄，看问题比较局限。适时地做一些总结沉淀是很重要的，这是一个从术到道的过程，会让自己看问题的角度更广，层次更高。遇到同类型的问题，可以按照总结好的方法论，系统化、层次化地推进和解决。&lt;/p>
&lt;p>还是举一个例子。做后台服务，今天优化了 1G 内存，明天优化了 50%的读写耗时，是不是可以做一下性能优化的总结？比如说在应用层，可以管理服务对接的应用方，梳理他们访问的合理性；在架构层，可以做缓存、预处理、读写分离、异步、并行等等；在代码层，可以做的事情更多了，资源池化、对象复用、无锁化设计、大 key 拆分、延迟处理、编码压缩、gc 调优还有各种语言相关的高性能实践&amp;hellip;等下次再遇到需要性能优化的场景，一整套思路立马就能套用过来了，剩下的就是工具和实操的事儿了。&lt;/p>
&lt;p>还有的同学说了，我就每天跟 PM 撕撕逼，做做需求，也不做性能优化啊。先不讨论是否可以搞性能优化，单就做业务需求来讲，也有可以总结的地方。比如说，如何做系统建设？系统核心能力，系统边界，系统瓶颈，服务分层拆分，服务治理这些问题有思考过吗？每天跟 PM 讨论需求，那作为技术同学该如何培养产品思维，引导产品走向，如何做到架构先行于业务，这些问题也是可以思考和总结的吧。就想一下，连接手维护别人烂代码这种蛋疼的事情，都能让 Martin Fowler 整出来一套重构理论，还显得那么高大上，我们确实也没啥必要对自己的工作妄自菲薄&amp;hellip;&lt;/p>
&lt;p>所以说：&lt;strong>学习和成长是一个自驱的过程，如果觉得没什么可学的，大概率并不是真的没什么可学的，而是因为自己太懒了，不仅是行动上太懒了，思维上也太懒了。可以多写技术文章，多分享，强迫自己去思考和总结，毕竟如果文章深度不够，大家也不好意思公开分享。&lt;/strong>&lt;/p>
&lt;h2 id="积极学习保持技术热情">
 积极学习，保持技术热情
 &lt;a class="anchor" href="#%e7%a7%af%e6%9e%81%e5%ad%a6%e4%b9%a0%e4%bf%9d%e6%8c%81%e6%8a%80%e6%9c%af%e7%83%ad%e6%83%85">#&lt;/a>
&lt;/h2>
&lt;p>最近两年在互联网圈里广泛传播的一种焦虑论叫做 35 岁程序员现象，大意是说程序员这个行业干到 35 岁就基本等着被裁员了。不可否认，互联网行业在这一点上确实不如公务员等体制内职业。但是，这个问题里 35 岁程序员并不是绝对生理意义上的 35 岁，应该是指那些工作十几年和工作两三年没什么太大区别的程序员。后面的工作基本是在吃老本，没有主动学习与充电，35 岁和 25 岁差不多，而且没有了 25 岁时对学习成长的渴望，反而添了家庭生活的诸多琐事，薪资要求往往也较高，在企业看来这确实是没什么竞争力。&lt;/p></description></item><item><title>华为 OD 275 天后，我进了腾讯！</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/huawei-od-275-days/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/huawei-od-275-days/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>推荐语&lt;/strong>：一位朋友的华为 OD 工作经历以及腾讯面试经历分享，内容很不错。&lt;/p>
&lt;p>&lt;strong>原文地址&lt;/strong>：
&lt;a href="https://www.cnblogs.com/shoufeng/p/14322931.html">https://www.cnblogs.com/shoufeng/p/14322931.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="时间线">
 时间线
 &lt;a class="anchor" href="#%e6%97%b6%e9%97%b4%e7%ba%bf">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>18 年 7 月，毕业于某不知名 985 计科专业；&lt;/li>
&lt;li>毕业前，在某马的 JavaEE（后台开发）培训了 6 个月；&lt;/li>
&lt;li>第一份工作（18-07 ~ 19-12）接触了大数据，感觉大数据更有前景；&lt;/li>
&lt;li>19 年 12 月，入职中国平安产险（去到才发现是做后台开发 😢）；&lt;/li>
&lt;li>20 年 3 月，从平安辞职，跳去华为 OD 做大数据基础平台；&lt;/li>
&lt;li>2021 年 1 月，入职鹅厂&lt;/li>
&lt;/ul>
&lt;h2 id="华为-od-工作经历总结">
 华为 OD 工作经历总结
 &lt;a class="anchor" href="#%e5%8d%8e%e4%b8%ba-od-%e5%b7%a5%e4%bd%9c%e7%bb%8f%e5%8e%86%e6%80%bb%e7%bb%93">#&lt;/a>
&lt;/h2>
&lt;h3 id="为什么会去华为-od">
 为什么会去华为 OD
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e5%8e%bb%e5%8d%8e%e4%b8%ba-od">#&lt;/a>
&lt;/h3>
&lt;p>在平安产险（正式员工）只待了 3 个月，就跳去华为 OD，朋友们都是很不理解的 —— 好好的正编不做，去什么外包啊 😂&lt;/p>
&lt;p>但那个时候，我铁了心要去做大数据，不想和没完没了的 CRUD 打交道。刚好面试通过的岗位是华为 Cloud BU 的大数据部门，做的是国内政企中使用率绝对领先的大数据平台……
平台和工作内容都不错，这么好的机会，说啥也要去啊 💪&lt;/p>
&lt;blockquote>
&lt;p>其实有想过在平安内部转岗到大数据的，但是不满足“入职一年以上”这个要求；
「等待就是浪费生命」，在转正流程还没批下来的时候，赶紧溜了 😂&lt;/p>
&lt;/blockquote>
&lt;h3 id="华为-od-的工作内容">
 华为 OD 的工作内容
 &lt;a class="anchor" href="#%e5%8d%8e%e4%b8%ba-od-%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%86%85%e5%ae%b9">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>带着无限的期待，火急火燎地去华为报到了。&lt;/strong>&lt;/p>
&lt;p>和招聘的 HR 说的一样，和华为自有员工一起办公，工作内容和他们完全一样：&lt;/p>
&lt;blockquote>
&lt;p>主管根据你的能力水平分配工作，逐渐增加难度，能者多劳；
试用期 6 个月，有导师带你，一般都是高你 2 个 Level 的华为自有员工，基本都是部门大牛。&lt;/p></description></item><item><title>一个中科大差生的 8 年程序员工作总结</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/8-years-programmer-work-summary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/personal-experience/8-years-programmer-work-summary/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>推荐语&lt;/strong>：这篇文章讲述了一位中科大的朋友 8 年的经历：从 2013 年毕业之后加入上海航天 x 院某卫星研究所，再到入职华为，从华为离职。除了丰富的经历之外，作者在文章还给出了很多自己对于工作/生活的思考。我觉得非常受用！我在这里，向这位作者表达一下衷心的感谢。&lt;/p>
&lt;p>&lt;strong>原文地址&lt;/strong>：
&lt;a href="https://www.cnblogs.com/scada/p/14259332.html">https://www.cnblogs.com/scada/p/14259332.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="前言">
 前言
 &lt;a class="anchor" href="#%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h2>
&lt;p>今年终于从大菊花厂离职了，离职前收入大概 60w 不到吧！在某乎属于比较差的，今天终于有空写一下自己的职场故事，也算是给自己近 8 年的程序员工作做个总结复盘。&lt;/p>
&lt;p>近 8 年有些事情做对了，也有更多事情做错了，在这里记录一下，希望能够给后人一些帮助吧，也欢迎私信交流。文笔不好，见谅，有些细节记不清了，如果有出入，就当是我编的这个故事吧。&lt;/p>
&lt;p>&lt;em>PS：有几个问题先在这里解释一下，评论就不一一回复了&lt;/em>&lt;/p>
&lt;ol>
&lt;li>关于差生，我本人在科大时确实成绩偏下，差生主要讲这一点，没其他意思。&lt;/li>
&lt;li>因为买房是我人生中的大事，我认为需要记录和总结一下，本文中会有买房，房价之类的信息出现，您如果对房价，炒房等反感的话，请您停止阅读，并且我再这里为浪费您的时间先道个歉。&lt;/li>
&lt;/ol>
&lt;h2 id="2013-年">
 2013 年
 &lt;a class="anchor" href="#2013-%e5%b9%b4">#&lt;/a>
&lt;/h2>
&lt;h3 id="加入上海航天-x-院某卫星研究所">
 加入上海航天 x 院某卫星研究所
 &lt;a class="anchor" href="#%e5%8a%a0%e5%85%a5%e4%b8%8a%e6%b5%b7%e8%88%aa%e5%a4%a9-x-%e9%99%a2%e6%9f%90%e5%8d%ab%e6%98%9f%e7%a0%94%e7%a9%b6%e6%89%80">#&lt;/a>
&lt;/h3>
&lt;p>本人 86 年生人，13 年从中科大软件相关专业毕业，由于父母均是老师，从小接受的教育就是努力学习，找个稳定的“好工作”，报效国家。&lt;/p>
&lt;p>于是乎，毕业时候头脑一热加入了上海航天 x 院某卫星研究所，没有经过自己认真思考，仅仅听从父母意见，就草率的决定了自己的第一份工作，这也为我 5 年后离职埋下了隐患。这里总结第一条经验：&lt;/p>
&lt;p>&lt;strong>如果你的亲人是普通阶层，那对于人生中一些大事来说，他们给的建议往往就是普通阶层的思维，他们的阶层就是他们一生思维决策的结果，如果你的目标是跳出本阶层，那最好只把他们的建议当成参考。&lt;/strong>&lt;/p>
&lt;p>13 年 4 月份，我坐上火车来到上海，在一路换乘地铁来到了大闵行，出了地铁走路到单位，一路上建筑都比较老旧，我心里想这跟老家也没什么区别嘛，还大上海呢。&lt;/p>
&lt;p>到达单位报道，负责报道的老师很亲切，填写完资料，分配了一间宿舍，还给了大概 3k 左右安家费，当时我心里那个激动啊（乡下孩子没有见过钱啊，见谅），拿了安家费，在附近小超市买好生活用品，这样我就开始了自己航天生涯。&lt;/p>
&lt;p>经过 1 个月集中培训后，我分配到部门，主要负责卫星上嵌入式软件开发。不过说是高大上的卫星软件开发，其实刚开始就是打杂，给实验室、厂房推箱子搬设备，呵呵，说航天是个体力活相信很多航天人都有同感吧。不过当时年轻，心思很单纯，每天搬完设备，晚上主动加班，看文档材料，画软件流程图，编程练习，日子过得很充实。&lt;/p>
&lt;p>记得第一个月到手大概 5k 左右（好少呀），当时很多一起入职的同事抱怨，我没有，我甚至不太愿意和他们比较工资，这里总结第二条经验：&lt;/p>
&lt;p>&lt;strong>不要和你的同事比工资，没有意义，比工资总会有人受伤，更多的是负面影响，并且很多时候受伤的会是你。&lt;/strong>&lt;/p>
&lt;h3 id="工作中暂露头角">
 工作中暂露头角
 &lt;a class="anchor" href="#%e5%b7%a5%e4%bd%9c%e4%b8%ad%e6%9a%82%e9%9c%b2%e5%a4%b4%e8%a7%92">#&lt;/a>
&lt;/h3>
&lt;p>工作大概一个月的时候，我遇到了一件事情，让我从新员工里面开始暂露头角。事情是这样的当时国家要对军工单位进行 GJB5000A 软件开发等级认证（搞过这个认证的同学应该都知道，过这个认证那是要多酸爽有多酸爽），但是当时一个负责配置管理的同事却提出离职，原因是他考上了公务员，当时我们用的那个软件平台后台的版本控制是 SVN 实现的，恰好我在学校写程序时用过，呵呵，话说回来现在学生自己写软件很少有人会在本地搭版本控制器吧！我记得当时还被同学嘲笑过，这让我想起了乔布斯学习美术字的故事，这里总结一下：&lt;/p>
&lt;p>&lt;strong>不要说一项技能没有用，任何你掌握的技能都有价值，但是你要学会找到发挥它的场景。如果有一天你落水了，你可能会很庆幸，自己以前学会了游泳。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>工作中如果要上升，你要勇于承担麻烦的、有挑战的任务，当你推掉麻烦的时候，你也推掉了机遇。&lt;/strong>&lt;/p>
&lt;p>好了，扯远了，回到前面，当时我主动跟单位认证负责人提出，我可以帮忙负责这方面的工作，我有一定经验。这里要提一下这个负责人，是位女士，她是我非常敬佩的一个前辈，认真，负责，无私，整个人为国家的航天事业奉献了几十年，其实航天领域有非常多这样的老前辈，他们默默奋斗，拿着不高的薪水，为祖国的国防建设做出了巨大的贡献。当时这位负责人，看我平时工作认真积极，思维反应也比较灵活（因为过认证需要和认证专家现场答辩的）就同意了我的请求，接受到这个任务之后，我迅速投入，学习认证流程、体系文件、迅速掌握认证工作要点，一点一点把相关的工作做好，同时周期性对业务进行复盘，总结复盘可能是我自己的一个优点：&lt;/p>
&lt;p>&lt;strong>很多人喜欢不停的做事，但不会停下来思考，缺乏总结复盘的能力，其实阶段性总结复盘，不仅能够固化前面的经验，也能梳理后面的方向；把事情做对很重要，但是更重要的是做对的事；另外不要贪快，方向正确慢就是快&lt;/strong>(后半句是我后来才想明白的，如果早想明白，就不会混成目前这样了）&lt;/p>
&lt;p>1 个月后，当时有惊无险通过了当年的认证，当时负责人主动向单位申请了 2k 特别奖，当时我真的非常高兴，主要是自己的工作产生了价值，得到了认可。后来几个月的日子平淡无奇，有印象的好像只有两件事情。&lt;/p></description></item></channel></rss>