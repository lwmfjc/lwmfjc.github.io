<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>随记</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/programmer/</link><description>Recent content on 随记</description><generator>Hugo</generator><language>zh</language><atom:link href="https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/programmer/index.xml" rel="self" type="application/rss+xml"/><item><title>程序员高效出书避坑和实践指南</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/programmer/efficient-book-publishing-and-practice-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/programmer/efficient-book-publishing-and-practice-guide/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>推荐语&lt;/strong>：详细介绍了程序员出书的一些常见问题，强烈建议有出书想法的朋友看看这篇文章。&lt;/p>
&lt;p>&lt;strong>原文地址&lt;/strong>：
&lt;a href="https://www.cnblogs.com/JavaArchitect/p/14128202.html">https://www.cnblogs.com/JavaArchitect/p/14128202.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>古有三不朽， 所谓立德、立功、立言。程序员出一本属于自己的书，如果说是立言，可能过于高大上，但终究也算一件雅事。&lt;/p>
&lt;p>出书其实不挣钱，而且从写作到最终拿钱的周期也不短。但程序员如果有一本属于自己的技术书，那至少在面试中能很好地证明自己，也能渐渐地在业内积累自己的名气，面试和做其它事情时也能有不少底气。在本文里，本人就将结合自己的经验和自己踩过的坑，和大家聊聊程序员出书的那些事。&lt;/p>
&lt;h2 id="1出书的稿酬收益和所需要的时间">
 1.出书的稿酬收益和所需要的时间
 &lt;a class="anchor" href="#1%e5%87%ba%e4%b9%a6%e7%9a%84%e7%a8%bf%e9%85%ac%e6%94%b6%e7%9b%8a%e5%92%8c%e6%89%80%e9%9c%80%e8%a6%81%e7%9a%84%e6%97%b6%e9%97%b4">#&lt;/a>
&lt;/h2>
&lt;p>先说下出书的收益和需要付出的代价，这里姑且先不谈“出书带来的无形资产”，先谈下真金白银的稿酬。&lt;/p>
&lt;p>如果直接和出版社联系，一般稿酬是版税，是书价格的 8%乘以印刷数（或者实际销售数），如果你是大牛的话，还可以往上加，不过一般版税估计也就 10%到 12%。请注意这里的价格是书的全价，不是打折后的价格。&lt;/p>
&lt;p>比如一本书全价是 70 块，在京东等地打 7 折销售，那么版税是 70 块的 8%，也就是说卖出一本作者能有 5.6 的收益，当然真实拿到手以后还再要扣税。&lt;/p>
&lt;p>同时也请注意合同的约定是支付稿酬的方式是印刷数还是实际销售数，我和出版社谈的，一般是印刷数量，这有什么差别呢？现在计算机类的图书一般是首印 2500 册，那么实际拿到手的钱数是 70*8%*2500，当然还要扣税。但如果是按实际销售数量算的话，如果首印才销了 1800 本的话，那么就得按这个数量算钱了。&lt;/p>
&lt;p>现在一本 300 页的书，定价一般在 70 左右，按版税 8%和 2500 册算的话，税前收益是 14000，税后估计是 12000 左右，对新手作者的话，300 的书至少要写 8 个月，由此大家可以算下平均每个月的收益，算下来其实每月也就 1500 的收益，真不多。&lt;/p>
&lt;p>别人的情况我不敢说，但我出书以后，除了稿酬，还有哪些其它的收益呢？&lt;/p>
&lt;ul>
&lt;li>在当下和之前的公司面试时，告诉面试官我在相关方面出过书以后，面试官就直接会认为我很资深，帮我省了不少事情。&lt;/li>
&lt;li>我还在做线下的培训，我就直接拿我最近出的 Python 书做教材了，省得我再备课了。&lt;/li>
&lt;li>和别人谈项目，能用我的书证明自己的技术实力，如果是第一次和别人打交道，那么这种证明能立杆见效。&lt;/li>
&lt;/ul>
&lt;p>尤其是第一点，其实对一些小公司或者是一些外派开发岗而言，如果候选人在这个方面出过书，甚至都有可能免面试直接录取，本人之前面试过一个大公司的外派岗，就得到过这种待遇。&lt;/p>
&lt;h2 id="2支付稿酬的时间点和加印后的收益">
 2.支付稿酬的时间点和加印后的收益
 &lt;a class="anchor" href="#2%e6%94%af%e4%bb%98%e7%a8%bf%e9%85%ac%e7%9a%84%e6%97%b6%e9%97%b4%e7%82%b9%e5%92%8c%e5%8a%a0%e5%8d%b0%e5%90%8e%e7%9a%84%e6%94%b6%e7%9b%8a">#&lt;/a>
&lt;/h2>
&lt;p>我是和出版社直接联系出书，支付稿酬的时间点一般是在首印后的 3 个月内拿到首印部分稿酬的一部分（具体是 50%到 90%），然后在图书出版后的一年后再拿到其它部分的稿酬。当下有不少书，能销掉首印的册数就不错了，不过也有不少书能加印，甚至出第二和第三版，一般加印册数的版税会在加印后的半年到一年内结清。&lt;/p>
&lt;p>从支付稿酬的时间点上来，对作者确实会有延迟，外加上稿酬也不算高，相对于作者的辛勤劳动，所以出书真不是挣钱的事，而且拿钱的周期还长。如果个别图书公司工作人员一方面在出书阶段对作者没什么帮助， 另一方面还要在中间再挣个差价，那么真有些作践作者的辛勤劳动了。&lt;/p>
&lt;h2 id="3同图书公司打交道的所见所闻">
 3.同图书公司打交道的所见所闻
 &lt;a class="anchor" href="#3%e5%90%8c%e5%9b%be%e4%b9%a6%e5%85%ac%e5%8f%b8%e6%89%93%e4%ba%a4%e9%81%93%e7%9a%84%e6%89%80%e8%a7%81%e6%89%80%e9%97%bb">#&lt;/a>
&lt;/h2>
&lt;p>在和出版社编辑沟通前，我也和图书公司的工作人员交流过，不少工作人员对我也是比较尊重，交流虽然不算深入，但也算客气。不过最终对比出版社给出的稿酬等条件，我还是没有通过图书公司出书，这也是比较可惜的事情。下面我给出些具体的经历。&lt;/p>
&lt;ul>
&lt;li>我经常在博客园等地收到一些图书公司工作人员的留言，问要不要出书，一般我不问，他们不会说自己是出版社编辑还是图书公司的工作人员。有个别图书公司的工作人员，会向作者，尤其是新手作者，说些“出版社编辑一般不会直接和作者联系”，以及“出书一般是通过图书公司”等的话。其实这些话不能算错，比如你不联系出版社编辑，那么对方自然不会直接联系你，但相反如果作者直接和出版社编辑联系，第一没难度，第二可能更直接。&lt;/li>
&lt;li>我和出版社编辑交流大纲时，即使大纲有不足，他们也能直接给出具体的修改意见，比如某个章节该写什么，某个小节的大纲该怎么写。而我和个别图书公司的工作人员交流过大纲时，得到的反馈大多是“要重写”，怎么个重写法？这些工作人员可能只能给出抽象的意见，什么都要我自己琢磨。在我之前的博文
&lt;a href="./how-do-programmers-publish-a-technical-book">程序员怎样出版一本技术书&lt;/a>里，我就给出过具体的经历。&lt;/li>
&lt;li>由于交流不深，所以我没有和图书公司签订过出书协议，但我知道，只有出版社能出书。由于没有经历过，所以我也不知道图书公司在合同里是否有避规风险等条款，但我见过一位图书公司人员人员给出的一些退稿案例，并隐约流露出对作者的责备之意。细思感觉不妥，对接的工作人员第一不能在出问题的第一时间及时发现并向作者反馈，第二在出问题之后不能对应协调最终导致退稿，第三在退稿之后，作者在付出劳动的情况下图书公司不仅不用承担任何风险，并还能指摘作者。对此，退稿固然有作者的因素，但同是作者的我未免有兔死狐悲之谈。而我在出版社出书时，编辑有时候甚至会主动关心，主动给素材，哪怕有问题也会第一时间修改，所以甚至大范围修改稿件的情况都基本没有出现。&lt;/li>
&lt;li>再说下图书公司给作者的稿酬。我见过按页给钱，比如一页 30 到 50 块，并卖断版权，即书重印后作者也无法再得到稿酬，如果是按版税给钱，我也见过给 6%，至于图书公司能否给到 8 个点甚至更高，我没见到过，所以不知道，也不敢擅拟。&lt;/li>
&lt;/ul>
&lt;p>我交流过的图书公司工作人员不多，交流也不深，因为我现在主要是和出版社的编辑交流。所以以上只是我对个别图书公司编辑的感受，我无意以偏概全，而和我交流的一些图书公司工作人员至少态度上对我很尊重。所以大家也可以对比尝试下和图书公司以及出版社合作的不同方式。不管怎样，你在写书甚至在签出书协议前，你需要问清楚如下的事项，并且对方有义务让你了解如下的事实。&lt;/p></description></item><item><title>程序员怎样出版一本技术书</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/programmer/how-do-programmers-publish-a-technical-book/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/programmer/how-do-programmers-publish-a-technical-book/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>推荐语&lt;/strong>：详细介绍了程序员应该如何从头开始出一本自己的书籍。&lt;/p>
&lt;p>&lt;strong>原文地址&lt;/strong>：
&lt;a href="https://www.cnblogs.com/JavaArchitect/p/12195219.html">https://www.cnblogs.com/JavaArchitect/p/12195219.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>在面试或联系副业的时候，如果能令人信服地证明自己的实力，那么很有可能事半功倍。如何证明自己的实力？最有信服力的是大公司职位背景背书，没有之一，比如在 BAT 担任资深架构，那么其它话甚至都不用讲了。&lt;/p>
&lt;p>不过，不是每个人入职后马上就是大公司架构师，在上进的路上，还可以通过公众号，专栏博文，GitHub 代码量和出书出视频等方式来证明自己。和其它方式相比，属于自己的技术图书由于经过了国家级出版社的加持，相对更能让别人认可自己的实力，而对于一些小公司而言，一本属于自己的书甚至可以说是免面试的通行证。所以在本文里，就将和广大程序员朋友聊聊出版技术书的那些事。&lt;/p>
&lt;h2 id="1不是有能力了再出书而是在出书过程中升能力">
 1.不是有能力了再出书，而是在出书过程中升能力
 &lt;a class="anchor" href="#1%e4%b8%8d%e6%98%af%e6%9c%89%e8%83%bd%e5%8a%9b%e4%ba%86%e5%86%8d%e5%87%ba%e4%b9%a6%e8%80%8c%e6%98%af%e5%9c%a8%e5%87%ba%e4%b9%a6%e8%bf%87%e7%a8%8b%e4%b8%ad%e5%8d%87%e8%83%bd%e5%8a%9b">#&lt;/a>
&lt;/h2>
&lt;p>我知道的不少朋友，是在工作 3 年内出了第一本书，有些优秀的，甚至在校阶段就出书了。&lt;/p>
&lt;p>与之相比还有另外一种态度，不少同学可能想，要等到技术积累到一定程度再写。其实这或许就不怎么积极了，边写书，边升技术，而且写出的书对人还有帮助，这绝对可以做到的。&lt;/p>
&lt;p>比如有同学向深入了解最近比较热门的 Python 数据分析和机器学习，那么就可以在系统性的学习之后，整理之前学习到的爬虫，数据分析和机器学习的案例，根据自己的理解，用适合于初学者的方式整理一下，然后就能出书了。这种书，对资深的人帮助未必大，但由于包含案例，对入门级的读者绝对有帮助，因为这属于现身说法。而且话说回来，如果没有出书这个动力，或者学习过程也就是浅尝辄止，或者未必能全身心地投入，有了出书这个目标，更能保证学习的效果。&lt;/p>
&lt;h2 id="2适合初级开发高级开发和架构师写的书">
 2.适合初级开发，高级开发和架构师写的书
 &lt;a class="anchor" href="#2%e9%80%82%e5%90%88%e5%88%9d%e7%ba%a7%e5%bc%80%e5%8f%91%e9%ab%98%e7%ba%a7%e5%bc%80%e5%8f%91%e5%92%8c%e6%9e%b6%e6%9e%84%e5%b8%88%e5%86%99%e7%9a%84%e4%b9%a6">#&lt;/a>
&lt;/h2>
&lt;p>之前也提到了，初级开发适合写案例书，就拿 Python 爬虫数据分析机器学习题材为例，可以先找几本这方面现成的书，这些书里，或者章节内容不同，但一起集成看的话，应该可以包含这方面的内容。然后就参考别人书的思路，比如一章写爬虫，一章写 pandas，一章写 matplotlib 等等，整合起来，就可以用 若干个章节构成一本书了。总之，别人书里包含什么内容，你别照抄，但可以参考别人写哪些技术点。&lt;/p>
&lt;p>定好章节后，再定下每个章节的小节，比如第三章讲爬虫案例，那么可以定 3.1 讲爬虫概念，3.2 讲如何搭建 Scrapy 库，3.3 讲如何开发 Scrapy 爬虫案例，通过先章再节的次序，就可以定好一本书的框架。由于是案例书，所以是先给运行通的代码，再用这些代码案例教别人入门，所以案例未必很深，但需要让初学者看了就能懂，而且按照你给出的知识体系逐步学习之后，能理解这个主题的内容。并且，能在看完你这本书以后，能通过调通你给出的爬虫，机器学习等的案例，掌握这一领域的知识，并能从事这方面的基本开发。这个目标，对初级开发而言，稍微用点心，费点时间，应该不难达到。&lt;/p>
&lt;p>而对于高级开发和架构师而言，除了写存粹案例书以外，还可以在书里给出你在大公司里总结出来的开发经验，也就是所谓踩过的坑，比如 Python 在用 matplotlib 会图例时，在设置坐标轴方面有哪些技巧，设置时会遇到哪些常见问题，如果在书里大量包含这种经验，你的书含金量更高。&lt;/p>
&lt;p>此外，高级开发和架构师还可以写一些技术含量更高的书，比如就讲高并发场景下的实践经验，或者 k8s+docker 应对高并发的经验，这种书里，可以给出代码，更可以给出实施方案和架构实施技巧，比如就讲高并发场景里，缓存该如何选型，如何避免击穿，雪崩等场景，如何排查线上 redis 问题，如何设计故障应对预案。除了这条路之外，还可以深入细节，比如通过讲 dubbo 底层代码，告诉大家如何高效配置 dubbo，出了问题该如何排查。如果架构师或高级开发有这类书作为背书，外带大厂工作经验，那么就更可以打出自己的知名度。&lt;/p>
&lt;h2 id="3可以直接找出版社也可以找出版公司">
 3.可以直接找出版社，也可以找出版公司
 &lt;a class="anchor" href="#3%e5%8f%af%e4%bb%a5%e7%9b%b4%e6%8e%a5%e6%89%be%e5%87%ba%e7%89%88%e7%a4%be%e4%b9%9f%e5%8f%af%e4%bb%a5%e6%89%be%e5%87%ba%e7%89%88%e5%85%ac%e5%8f%b8">#&lt;/a>
&lt;/h2>
&lt;p>在我的这篇博文里，
&lt;a href="https://www.cnblogs.com/JavaArchitect/p/11616906.html">程序员副业那些事：聊聊出书和录视频&lt;/a>，给出了通过出版社出书和图书公司出书的差别，供大家参考，大家看了以后可以自行决定出书方式。&lt;/p>
&lt;p>不过不管怎么选，在出书前你得搞明白一些事，或许个别图书出版公司的工作人员不会主动说，这需要你自己问清楚。&lt;/p>
&lt;ul>
&lt;li>你的合作方是谁？图书出版公司还是出版社？&lt;/li>
&lt;li>你的书将在哪个出版社出版？国内比较有名的是清华，人邮，电子和机械，同时其它出版社不能说不好，但业内比较认这四个。&lt;/li>
&lt;li>和你沟通的人，是最终有决定权的图书编辑吗？还是图书公司里的工作人员？再啰嗦下，最后能决定书能否出版，以及确定修改意见的，是出版社的编辑。&lt;/li>
&lt;/ul>
&lt;p>通过对比出版社和图书出版公司，在搞清楚诸多细节后，大家可以自己斟酌考虑合作的方式。而且，出版社和图书公司的联系方式，在官网上都有，大家可以自行通过邮件等方式联系。&lt;/p>
&lt;h2 id="4如果别人拿你做试错对象或有不尊重赶紧止损">
 4.如果别人拿你做试错对象，或有不尊重，赶紧止损
 &lt;a class="anchor" href="#4%e5%a6%82%e6%9e%9c%e5%88%ab%e4%ba%ba%e6%8b%bf%e4%bd%a0%e5%81%9a%e8%af%95%e9%94%99%e5%af%b9%e8%b1%a1%e6%88%96%e6%9c%89%e4%b8%8d%e5%b0%8a%e9%87%8d%e8%b5%b6%e7%b4%a7%e6%ad%a2%e6%8d%9f">#&lt;/a>
&lt;/h2>
&lt;p>我之前看到有图书出版公司招募面向 Java 初学者图书的作者，并且也主动联系过相关人员，得到的反馈大多是：“要重写”。&lt;/p>
&lt;p>比如我列了大纲发过去，反馈是“要重写”，原因是对方没学过 Java，但作为零基础的人看了我的大纲，发现学不会。至于要重写成什么样子 ，对方也说不上来，总之让我再给个大纲，再给一版后，同样没过，这次好些，给了我几本其它类似书的大纲，让我自行看别人有什么好的点。总之不提（或者说提不出）具体的改进点，要我自行尝试各种改进点，试到对方感觉可以为止。&lt;/p>
&lt;p>相比我和几位出版社专业的编辑沟通时，哪怕大纲或稿件有问题，对方会指明到点，并给出具体的修改意见。我不知道图书出版公司里的组织结构，但出版社里，计算机图书有专门的部门，专门的编辑，对方提出的意见都是比较专业，且修改起来很有操作性。&lt;/p>
&lt;p>另外，我在各种渠道，时不时看到有图书出版公司的人员，晒出别人交付的稿件，在众目睽睽之下，说其中有什么问题，意思让大家引以为戒。姑且不论这样做的动机，并且这位工作人员也涂掉了能表面作者身份的信息。但作者出于信任把稿件交到你手上，在不征得作者同意就公开稿件，说“不把作者当回事”，这并不为过。不然，完全可以用私信的方式和作者交流，而不是把作者无心之过公示于众。&lt;/p>
&lt;p>我在和出版社合作时，这类事绝没发生过，而且我认识的出版社编辑，都对各位作者保持着足够的尊重。而且我和我的朋友和多位图书出版公司的朋友交流时，也能得到尊重和礼遇。所以，如果大家在写书时，尤其在写第一本书时，如果遇到被试错，或者从言辞等方面感觉对方不把你当会事，那么可以当即止损。其实也没有什么“损失”，你把当前的大纲和稿件再和出版社编辑交流时，或许你的收益还能提升。&lt;/p></description></item><item><title>程序员最该拿的几种高含金量证书</title><link>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/programmer/high-value-certifications-for-programmers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Interview/high-quality-technical-articles/programmer/high-value-certifications-for-programmers/</guid><description>&lt;p>证书是能有效证明自己能力的好东西，它就是你实力的象征。在短短的面试时间内，证书可以为你加不少分。通过考证来提升自己，是一种性价比很高的办法。不过，相比金融、建筑、医疗等行业，IT 行业的职业资格证书并没有那么多。&lt;/p>
&lt;p>下面我总结了一下程序员可以考的一些常见证书。&lt;/p>
&lt;h2 id="软考">
 软考
 &lt;a class="anchor" href="#%e8%bd%af%e8%80%83">#&lt;/a>
&lt;/h2>
&lt;p>全国计算机技术与软件专业技术资格（水平）考试，简称“软考”，是国内认可度较高的一项计算机技术资格认证。尽管一些人吐槽其实际价值，但在特定领域和情况下，它还是非常有用的，例如软考证书在国企和事业单位中具有较高的认可度、在某些城市软考证书可以用于积分落户、可用于个税补贴。&lt;/p>
&lt;p>软考有初、中、高三个级别，建议直接考高级。相比于 PMP（项目管理专业人士认证），软考高项的难度更大，特别是论文部分，绝大部分人都挂在了论文部分。过了软考高项，在一些单位可以内部挂证，每个月多拿几百。&lt;/p>
&lt;p>&lt;img src="https://oss.javaguide.cn/github/javaguide/programmer-life/programmer-certification/ruankao-advanced-certification%20.jpg" alt="软考高级证书" />&lt;/p>
&lt;p>官网地址：
&lt;a href="https://www.ruankao.org.cn/">https://www.ruankao.org.cn/&lt;/a>。&lt;/p>
&lt;p>备考建议：
&lt;a href="https://mp.weixin.qq.com/s/9aUXHJ7dXgrHuT19jRhCnw">2024 年上半年，一次通过软考高级架构师考试的备考秘诀 - 阿里云开发者&lt;/a>&lt;/p>
&lt;h2 id="pat">
 PAT
 &lt;a class="anchor" href="#pat">#&lt;/a>
&lt;/h2>
&lt;p>攀拓计算机能力测评（PAT）是一个专注于考察算法能力的测评体系，由浙江大学主办。该测评分为四个级别：基础级、乙级、甲级和顶级。&lt;/p>
&lt;p>通过 PAT 测评并达到联盟企业规定的相应评级和分数，可以跳过学历门槛，免除筛选简历和笔试环节，直接获得面试机会。具体有哪些公司可以去官网看看：
&lt;a href="https://www.patest.cn/company">https://www.patest.cn/company&lt;/a> 。&lt;/p>
&lt;p>对于考研浙江大学的同学来说，PAT（甲级）成绩在一年内可以作为硕士研究生招生考试上机复试成绩。&lt;/p>
&lt;p>&lt;img src="https://oss.javaguide.cn/github/javaguide/programmer-life/programmer-certification/pat-enterprise-alliance.png" alt="PAT（甲级）成绩作用" />&lt;/p>
&lt;h2 id="pmp">
 PMP
 &lt;a class="anchor" href="#pmp">#&lt;/a>
&lt;/h2>
&lt;p>PMP（Project Management Professional）认证由美国项目管理协会（PMI）提供，是全球范围内认可度最高的项目管理专业人士资格认证。PMP 认证旨在提升项目管理专业人士的知识和技能，确保项目顺利完成。&lt;/p>
&lt;p>&lt;img src="https://oss.javaguide.cn/github/javaguide/programmer-life/programmer-certification/pmp-certification.png" alt="PMP 证书" />&lt;/p>
&lt;p>PMP 是“一证在手，全球通用”的资格认证，对项目管理人士来说，PMP 证书含金量还是比较高的。放眼全球，很多成功企业都会将 PMP 认证作为项目经理的入职标准。&lt;/p>
&lt;p>但是！真正有价值的不是 PMP 证书，而是《PMBOK》 那套项目管理体系，在《PMBOK》（PMP 考试指定用书）中也包含了非常多商业活动、实业项目、组织规划、建筑行业等各个领域的项目案例。&lt;/p>
&lt;p>另外，PMP 证书不是一个高大上的证书，而是一个基础的证书。&lt;/p>
&lt;h2 id="acp">
 ACP
 &lt;a class="anchor" href="#acp">#&lt;/a>
&lt;/h2>
&lt;p>ACP（Agile Certified Practitioner）认证同样由美国项目管理协会（PMI）提供，是项目管理领域的另一个重要认证。与 PMP（Project Management Professional）注重传统的瀑布方法论不同，ACP 专注于敏捷项目管理方法论，如 Scrum、Kanban、Lean、Extreme Programming（XP）等。&lt;/p>
&lt;h2 id="ocp">
 OCP
 &lt;a class="anchor" href="#ocp">#&lt;/a>
&lt;/h2>
&lt;p>Oracle Certified Professional（OCP）是 Oracle 公司提供的一项专业认证，专注于 Oracle 数据库及相关技术。这个认证旨在验证和认证个人在使用和管理 Oracle 数据库方面的专业知识和技能。&lt;/p></description></item></channel></rss>