<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>_MySQL是怎样运行的_ on 随记</title><link>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/</link><description>Recent content in _MySQL是怎样运行的_ on 随记</description><generator>Hugo</generator><language>zh</language><lastBuildDate>Mon, 24 Apr 2023 14:32:22 +0000</lastBuildDate><atom:link href="https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/index.xml" rel="self" type="application/rss+xml"/><item><title>07B+数索引的使用</title><link>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/07/</link><pubDate>Mon, 24 Apr 2023 14:32:22 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/07/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="innodb存储引擎的b树索引结论">
 InnoDB存储引擎的B+树索引：结论
 &lt;a class="anchor" href="#innodb%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e%e7%9a%84b%e6%a0%91%e7%b4%a2%e5%bc%95%e7%bb%93%e8%ae%ba">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>每个索引&lt;/strong>对应一颗B+树。B+树有好多层，&lt;strong>最下边一层&lt;/strong>是&lt;strong>叶子节点&lt;/strong>，其余是&lt;strong>内节点&lt;/strong>。所有&lt;strong>用户记录&lt;/strong>都存在B+树的&lt;strong>叶子节点&lt;/strong>，所有&lt;strong>目录项记录&lt;/strong>都存在内节点&lt;/li>
&lt;li>InnoDB 存储引擎会&lt;strong>自动为主键建立聚簇索引&lt;/strong>(如果&lt;strong>没有显式指定主键&lt;/strong>或者&lt;strong>没有声明不允许存储NULL的UNIQUE 键&lt;/strong>，它会自动添加主键) ， &lt;strong>聚簇索引&lt;/strong>的&lt;strong>叶子节点&lt;/strong>包含&lt;strong>完整的用户记录&lt;/strong>&lt;/li>
&lt;li>我们可以为感兴趣的列建立&lt;strong>二级索引&lt;/strong>，二级索引的叶子节点包含的用户记录由&lt;strong>索引列&lt;/strong>
&lt;strong>和主键&lt;/strong>组成。如果想通过二级索引查找完整的用户记录，需要执行&lt;strong>回表&lt;/strong>操作， 也就是在通过二级索引&lt;strong>找到主键值之后&lt;/strong>，再到&lt;strong>聚簇索引&lt;/strong>中查找完整的用户记录&lt;/li>
&lt;li>B+ 树中的&lt;strong>每层节点&lt;/strong>都按照&lt;strong>索引列的值从小到大的顺序排序&lt;/strong>组成了&lt;strong>双向链表&lt;/strong>，而且每个&lt;strong>页内的记录&lt;/strong>(无论是&lt;strong>用户记录&lt;/strong>还是&lt;strong>目录项记录&lt;/strong>)都按照索引列的值从小到大的顺序形成了一个单向链表。如果是联合索引， 则&lt;strong>页面&lt;/strong>和&lt;strong>记录&lt;/strong> &lt;strong>先&lt;/strong>按照索引列中前面的列的值排序：&lt;strong>如果该列的值相同&lt;/strong>，&lt;strong>再按照索引列中后面的列的值排序&lt;/strong>。比如， 我们对列c2 和c3建立了联合索引 &lt;strong>idx_c2_c3(c2， c3)&lt;/strong>，那么该索引中的页面和记录就&lt;strong>先按照c2 列&lt;/strong>的值进行排序；&lt;strong>如果c2 列的值相同&lt;/strong>， &lt;strong>再按照c3&lt;/strong> 列的值排序&lt;/li>
&lt;li>通过索引查找记录时，是&lt;strong>从B+ 树的根节点开始一层一层向下搜索的&lt;/strong>。由于每个页面(无论是&lt;strong>内节点页面&lt;/strong>还是&lt;strong>叶子节点页面&lt;/strong>〉中的记录都划分成了&lt;strong>若干个组&lt;/strong>， 每个组中&lt;strong>索引列值最大的记录&lt;/strong>在&lt;strong>页内的偏移量&lt;/strong>会被当作&lt;strong>槽&lt;/strong>依次存放在&lt;strong>页目录中&lt;/strong>(当然， 规定Supremum 记录比任何用户记录都大) ，因此可以在&lt;strong>页目录中通过二分法&lt;/strong>快速定位到&lt;strong>索引列等于某个值的记录&lt;/strong>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>如果大家在阅读上述结论时哪怕有点疑惑， 那么下面的内容就不适合你，请回过头去反复阅读前面的章节&lt;/p>
&lt;/blockquote>
&lt;h1 id="b树索引示意图的简化">
 B+树索引示意图的简化
 &lt;a class="anchor" href="#b%e6%a0%91%e7%b4%a2%e5%bc%95%e7%a4%ba%e6%84%8f%e5%9b%be%e7%9a%84%e7%ae%80%e5%8c%96">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#创建新表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; CREATE TABLE single_table&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id INT NOT NULL AUTO_INCREMENT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key1 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key2 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key3 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_part1 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_part2 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_part3 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> common_field VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PRIMARY KEY &lt;span style="color:#f92672">(&lt;/span>id&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KEY idx_key1&lt;span style="color:#f92672">(&lt;/span>key1&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UNIQUE KEY uk_key2&lt;span style="color:#f92672">(&lt;/span>key2&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KEY idx_key3&lt;span style="color:#f92672">(&lt;/span>key3&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KEY idx_key_part&lt;span style="color:#f92672">(&lt;/span>key_part1,key_part2,key_part3&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span> Engine&lt;span style="color:#f92672">=&lt;/span>InnoDB CHARSET &lt;span style="color:#f92672">=&lt;/span> utf8;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如上，建立了&lt;strong>1个聚簇索引&lt;/strong>，&lt;strong>4个二级索引&lt;/strong>&lt;/p></description></item><item><title>06B+树索引</title><link>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/06/</link><pubDate>Sat, 22 Apr 2023 15:04:46 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/06/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="概述">
 概述
 &lt;a class="anchor" href="#%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h1>
&lt;p>数据页由&lt;strong>7个&lt;/strong>组成部分，各个数据页可以组成一个&lt;strong>双向链表&lt;/strong>，每个数据页中的记录会按照&lt;strong>主键值从小到大的顺序&lt;/strong>组成一个&lt;strong>单向链表&lt;/strong>。每个数据页都会为&lt;strong>它里面的记录&lt;/strong>生成一个&lt;strong>页目录&lt;/strong>，在通过主键查找某条记录的时候可以在&lt;strong>页目录&lt;/strong>中使用二分法快速定位到&lt;strong>对应的槽&lt;/strong>，然后再&lt;strong>遍历该槽&lt;/strong>对应&lt;strong>分组中的记录&lt;/strong>即可快速找到&lt;strong>指定&lt;/strong>的记录。&lt;strong>页和记录&lt;/strong>的关系&lt;/p>
&lt;blockquote>
&lt;p>页a，页b 可以&lt;strong>不在物理结构上相连&lt;/strong>，只要通过&lt;strong>双向链表相关联&lt;/strong>即可&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142156258.png" alt="ly-20241212142156258" />&lt;/p>
&lt;h1 id="没有索引时进行查找">
 没有索引时进行查找
 &lt;a class="anchor" href="#%e6%b2%a1%e6%9c%89%e7%b4%a2%e5%bc%95%e6%97%b6%e8%bf%9b%e8%a1%8c%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h1>
&lt;p>假设我们要搜索&lt;strong>某个列&lt;/strong>等于&lt;strong>某个常数&lt;/strong>的情况：&lt;br>
&lt;code>SELECT [查询列表] FROM 表名 WHERE 列名 = xxx&lt;/code>&lt;/p>
&lt;h2 id="在一个页中查找">
 在一个页中查找
 &lt;a class="anchor" href="#%e5%9c%a8%e4%b8%80%e4%b8%aa%e9%a1%b5%e4%b8%ad%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h2>
&lt;p>假设记录极少，所有记录可以&lt;strong>存放到一个页中&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>以&lt;strong>主键&lt;/strong>位搜索条件：页目录中使用&lt;strong>二分法&lt;/strong>快速定位到对应的&lt;strong>槽&lt;/strong>，然后在&lt;strong>遍历槽对应分组中的记录&lt;/strong>，即可快速找到指定记录&lt;/li>
&lt;li>其他列作为搜索条件：对于&lt;strong>非主键&lt;/strong>，数据页没有为&lt;strong>非主键列&lt;/strong>建立所谓的&lt;strong>页目录&lt;/strong>，所以&lt;strong>无法通过二分法&lt;/strong>快速定位相应的槽。只能&lt;strong>从Infimum依次遍历&lt;/strong>单向链表中的每条记录，然后对比，效率极低&lt;/li>
&lt;/ul>
&lt;h2 id="在很多页中查找">
 在很多页中查找
 &lt;a class="anchor" href="#%e5%9c%a8%e5%be%88%e5%a4%9a%e9%a1%b5%e4%b8%ad%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h2>
&lt;p>两个步骤：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>定位到记录所在的页&lt;/strong>&lt;/li>
&lt;li>从&lt;strong>所在页内&lt;/strong>查找相应的记录&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>没有索引&lt;/strong>情况下，不能快速定位到所在页，只能从&lt;strong>第一页&lt;/strong>沿着&lt;strong>双向链表&lt;/strong>一直往下找，而如果是主键，每一页则可以在&lt;strong>页目录&lt;/strong>二分查找。&lt;br>
不过由于要&lt;strong>遍历所有页&lt;/strong>，所以超级&lt;strong>耗时&lt;/strong>&lt;/p>
&lt;h1 id="索引">
 索引
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#例子&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; CREATE TABLE index_demo&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c1 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c2 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c3 CHAR&lt;span style="color:#f92672">(&lt;/span>1&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PRIMARY KEY&lt;span style="color:#f92672">(&lt;/span>c1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span> ROW_FORMAT&lt;span style="color:#f92672">=&lt;/span>COMPACT;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>完整的行格式&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142156429.png" alt="ly-20241212142156429" />&lt;/p>
&lt;p>简化的行格式&lt;br>
&lt;img src="img/ly-20241212142156467.png" alt="ly-20241212142156467" />&lt;/p>
&lt;ul>
&lt;li>record_type：&lt;strong>记录头信息&lt;/strong>的一项属性，表示&lt;strong>记录的类型&lt;/strong>。0：普通记录，2：Infimum记录，3：Supremum记录，1还没用过等会再说&lt;/li>
&lt;li>next_record：&lt;strong>记录头信息&lt;/strong>的一项属性，表示从当前记录的&lt;strong>真实数据&lt;/strong>到&lt;strong>下一条记录真实数据&lt;/strong>的距离&lt;/li>
&lt;li>各个列的值：这里只展示在index_demo表中的&lt;strong>3个列&lt;/strong>，分别是c1、c2、c3&lt;/li>
&lt;li>其他信息：包括&lt;strong>隐藏列&lt;/strong>及&lt;strong>记录的额外信息&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>改为竖着查看：&lt;br>
&lt;img src="img/ly-20241212142156521.png" alt="ly-20241212142156521" />&lt;/p>
&lt;blockquote>
&lt;p>上面图6-4的箭头其实有一点点出入，应该是指向z真实数据第1列那个位置，如下
&lt;img src="img/ly-20241212142156561.png" alt="ly-20241212142156561" />&lt;/p></description></item><item><title>05InnoDB数据页结构</title><link>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/05/</link><pubDate>Fri, 21 Apr 2023 10:35:29 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/05/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="不同类型的页简介">
 不同类型的页简介
 &lt;a class="anchor" href="#%e4%b8%8d%e5%90%8c%e7%b1%bb%e5%9e%8b%e7%9a%84%e9%a1%b5%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>页是&lt;strong>InnoDB管理存储空间&lt;/strong>的基本单位，1个页的大小一般是16KB&lt;/p>
&lt;blockquote>
&lt;p>InnoDB为了不同目的设计多种不同类型的页，包括&lt;strong>存放表空间头部信息&lt;/strong>
的页、&lt;strong>存放Change Buffer 信息&lt;/strong>的页、&lt;strong>存放INODE信息&lt;/strong>的页、&lt;strong>存放undo 日志信息&lt;/strong>的页&lt;/p>
&lt;/blockquote>
&lt;p>这里说的是&lt;strong>存放表中记录&lt;/strong>的那种类型的页，这种&lt;strong>存放记录&lt;/strong>的页称为&lt;strong>索引页&lt;/strong>（INDEX页）&lt;/p>
&lt;blockquote>
&lt;p>暂时称之为&lt;strong>数据页&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h1 id="数据页结构快览">
 数据页结构快览
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e9%a1%b5%e7%bb%93%e6%9e%84%e5%bf%ab%e8%a7%88">#&lt;/a>
&lt;/h1>
&lt;p>1个页有16KB，这部分存储空间被划分为了多个部分（7部分），不同部分有不同的功能&lt;br>
&lt;img src="img/ly-20241212142155323.png" alt="ly-20241212142155323" />&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>名称&lt;/th>
 &lt;th>中文名&lt;/th>
 &lt;th>占用空间&lt;/th>
 &lt;th>大小&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>File Header&lt;/td>
 &lt;td>文件头部&lt;/td>
 &lt;td>38 字节&lt;/td>
 &lt;td>页的一些通用信息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Page Header&lt;/td>
 &lt;td>页面头部&lt;/td>
 &lt;td>56 字节&lt;/td>
 &lt;td>数据页专有的一些信息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Infimum + Supremum&lt;/td>
 &lt;td>页面中的最小记录和最大记录&lt;/td>
 &lt;td>26 字节&lt;/td>
 &lt;td>两个虚拟的记录&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>User Records&lt;/td>
 &lt;td>用户记录&lt;/td>
 &lt;td>不确定&lt;/td>
 &lt;td>用户存储的记录内容&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Free Space&lt;/td>
 &lt;td>空闲空间&lt;/td>
 &lt;td>不确定&lt;/td>
 &lt;td>页中尚未使用的空间&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Page Directory&lt;/td>
 &lt;td>页目录&lt;/td>
 &lt;td>不确定&lt;/td>
 &lt;td>某些记录的相对位置&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>File Trailer&lt;/td>
 &lt;td>文件尾部&lt;/td>
 &lt;td>8 字节&lt;/td>
 &lt;td>校验页是否完整&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h1 id="记录在页中的存储">
 记录在页中的存储
 &lt;a class="anchor" href="#%e8%ae%b0%e5%bd%95%e5%9c%a8%e9%a1%b5%e4%b8%ad%e7%9a%84%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h1>
&lt;p>每插入一条记录，从&lt;strong>Free Space&lt;/strong>申请一个记录大小的空间，并&lt;strong>将这个空间划分到UserRecords&lt;/strong>部分。当FreeSpace部分的空间全部被UserRecords部分替代掉后，意味着该页用完。如果再插入，就需要申请新的页&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142155485.png" alt="ly-20241212142155485" />&lt;/p>
&lt;h2 id="记录头信息的秘密">
 记录头信息的秘密
 &lt;a class="anchor" href="#%e8%ae%b0%e5%bd%95%e5%a4%b4%e4%bf%a1%e6%81%af%e7%9a%84%e7%a7%98%e5%af%86">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mysql&amp;gt; CREATE TABLE page_demo&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c1 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c2 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c3 VARCHAR&lt;span style="color:#f92672">(&lt;/span>10000&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PRIMARY KEY&lt;span style="color:#f92672">(&lt;/span>c1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span> CHARSET&lt;span style="color:#f92672">=&lt;/span>ascii ROW_FORMAT&lt;span style="color:#f92672">=&lt;/span>COMPACT;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Query OK, &lt;span style="color:#ae81ff">0&lt;/span> rows affected &lt;span style="color:#f92672">(&lt;/span>0.03 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212142155528.png" alt="ly-20241212142155528" />&lt;/p></description></item><item><title>04InnoDB记录存储结构</title><link>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/04/</link><pubDate>Tue, 18 Apr 2023 20:00:03 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/04/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="问题">
 问题
 &lt;a class="anchor" href="#%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h1>
&lt;p>表数据存在哪，以什么格式存放，MySQL以什么方式来访问&lt;br>
存储引擎：对表中数据进行&lt;strong>存储&lt;/strong>和&lt;strong>写入&lt;/strong>&lt;br>
InnoDB是MySQL默认的存储引擎，这章主要讲&lt;strong>InnoDB存储引擎的记录存储结构&lt;/strong>&lt;/p>
&lt;h1 id="innodb页简介">
 InnoDB页简介
 &lt;a class="anchor" href="#innodb%e9%a1%b5%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>&lt;strong>注意，是简介&lt;/strong>&lt;br>
InnoDB：将表中的数据&lt;strong>存储到磁盘上&lt;/strong>&lt;br>
真正处理数据的过程：内存中。所以需要&lt;strong>把磁盘中数据加载到内存中&lt;/strong>，如果是&lt;strong>写入&lt;/strong>或&lt;strong>修改&lt;/strong>请求，还需要把&lt;strong>内存&lt;/strong>中的内容&lt;strong>刷新到磁盘&lt;/strong>上&lt;br>
获取记录：不是一条条从磁盘读，InnoDB将数据划分为若干个页，以&lt;strong>页&lt;/strong>作为&lt;strong>磁盘&lt;/strong>和&lt;strong>内存&lt;/strong>之间交互的基本单位。页大小-&amp;gt; 一般是16KB&lt;br>
一般情况：一次最少从磁盘读取16KB的内容&lt;strong>到内存中&lt;/strong>，一次最少把内存中的16KB内容&lt;strong>刷新到磁盘&lt;/strong>中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mysql&amp;gt; SHOW VARIABLES LIKE &lt;span style="color:#e6db74">&amp;#39;innodb_page_size&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+------------------+-------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Variable_name | Value |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+------------------+-------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| innodb_page_size | &lt;span style="color:#ae81ff">16384&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+------------------+-------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> row in set &lt;span style="color:#f92672">(&lt;/span>0.00 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只能在第一次初始化MySQL数据目录时指定，之后&lt;strong>再也不能更改&lt;/strong>（通过mysqld &amp;ndash;initialize初始化数据目录[旧版本]）&lt;/p>
&lt;h1 id="innodb行格式">
 InnoDB行格式
 &lt;a class="anchor" href="#innodb%e8%a1%8c%e6%a0%bc%e5%bc%8f">#&lt;/a>
&lt;/h1>
&lt;p>以记录为单位向表中插入数据，而这些记录在&lt;strong>磁盘上的存放形式&lt;/strong>也被称为&lt;strong>行格式&lt;/strong>或者&lt;strong>记录格式&lt;/strong>&lt;br>
目前有4中&lt;strong>不同类型的行格式&lt;/strong>：COMPACT、REDUNDANT、DYNAMIC和COMPRESSED&lt;/p>
&lt;blockquote>
&lt;p>compact [kəmˈpækt]契约&lt;br>
redundant[rɪˈdʌndənt] 冗余的&lt;br>
dynamic[daɪˈnæmɪk]动态的&lt;br>
compressed [kəmˈprest] 压缩的&lt;/p>
&lt;/blockquote>
&lt;h2 id="指定行格式的语法">
 指定行格式的语法
 &lt;a class="anchor" href="#%e6%8c%87%e5%ae%9a%e8%a1%8c%e6%a0%bc%e5%bc%8f%e7%9a%84%e8%af%ad%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;p>CREATE TABLE 表名(列的信息) ROW_FORMAT=行格式名称&lt;br>
ALTER TABLE 表名 ROW_FORMATE=行格式名称&lt;br>
如下，在数据库xiaohaizi下创建一个表&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>CREATE TABLE record_format_demo&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c1 VARCHAR&lt;span style="color:#f92672">(&lt;/span>10&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c2 VARCHAR&lt;span style="color:#f92672">(&lt;/span>10&lt;span style="color:#f92672">)&lt;/span> NOT NULL,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c3 CHAR&lt;span style="color:#f92672">(&lt;/span>10&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c4 VARCHAR&lt;span style="color:#f92672">(&lt;/span>10&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span> CHARSET&lt;span style="color:#f92672">=&lt;/span>ascii ROW_FORMAT&lt;span style="color:#f92672">=&lt;/span>COMPACT; 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#回顾：ascii每个字符1字节即可表示，且只有空格标点数字字母不可见字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#插入两条数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INSERT INTO record_format_demo&lt;span style="color:#f92672">(&lt;/span>c1,c2,c3,c4&lt;span style="color:#f92672">)&lt;/span> VALUES&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;aaaa&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;bbb&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;cc&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;d&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>,&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;eeee&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;fff&amp;#39;&lt;/span>,NULL,NULL&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查询&lt;/p></description></item><item><title>03字符集和比较规则</title><link>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/03/</link><pubDate>Mon, 17 Apr 2023 22:15:01 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/03/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="字符集">
 字符集
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e9%9b%86">#&lt;/a>
&lt;/h1>
&lt;p>把哪些字符映射成二进制数据：&lt;strong>字符范围&lt;/strong>&lt;br>
怎么映射：字符-&amp;gt;二进制数据，编码；二进制-&amp;gt;字符，解码&lt;br>
字符集：&lt;strong>某个字符范围的编码规则&lt;/strong>&lt;br>
同一种字符集可以有多种比较规则&lt;/p>
&lt;h2 id="重要的字符集">
 重要的字符集
 &lt;a class="anchor" href="#%e9%87%8d%e8%a6%81%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86">#&lt;/a>
&lt;/h2>
&lt;p>ASCAII字符集：128个，包括空格标点数字大小写及不可见字符，使用一个字节编码&lt;br>
ISO 8859-1字符集：256个，ASCAII基础扩充128个西欧常用字符（包括德法），使用1个字节，别名Latin1&lt;br>
GB2312字符集：收录部分汉字，兼容ASCAII字符集，如果字符在ASCAII字符集中则采用1字节，否则两字节。即&lt;strong>变长编码方式&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>区分某个字节，&lt;strong>代表一个单独字符&lt;/strong>，还是&lt;strong>某个字符的一部分&lt;/strong>。&lt;br>
比如0xB0AE75，由于是16进制，所有两个代表1个字节。所以这里有三个字节，其中最后那个字节为7*16+5=117 &amp;lt; 127 所以代表一个单独字符。而AE=10 * 16 +15=175 &amp;gt;127 ，所以是某个字符的一部分&lt;/p>
&lt;/blockquote>
&lt;p>GBK字符集：对GB2312字符集扩充，编码方式兼容GB2312&lt;br>
UTF-8字符集：几乎收录所有字符，且不断扩充，兼容ASCAII字符集。变长：采用1&lt;del>4字节&lt;br>
L-&amp;gt;0x4C 1字节，啊-&amp;gt;0xE5958A，两字节&lt;br>
UTF-8是Unicode字符集的一种编码方案，Unicode字符集有三种方案：UTF-8(1&lt;/del>4字节编码一个字符)，UTF-16(2或4字节编码一个字符)，UTF-32(4字节编码一个字符)&lt;/p>
&lt;blockquote>
&lt;p>对于**“我”**，ASCLL中没有，UTF-8中采用3字节编码，GB22312采用2字节编码&lt;/p>
&lt;/blockquote>
&lt;h1 id="mysql中支持的字符集和比较规则">
 MySQL中支持的字符集和比较规则
 &lt;a class="anchor" href="#mysql%e4%b8%ad%e6%94%af%e6%8c%81%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86%e5%92%8c%e6%af%94%e8%be%83%e8%a7%84%e5%88%99">#&lt;/a>
&lt;/h1>
&lt;p>MySQL中，区分utf8mb3和utf8mb4，前者只是用1&lt;del>3字节表示字符；后者使用1&lt;/del>4字节表示字符。MySQL中，utf8代表utf8mb3。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#查看当前MySQL支持的字符集(注意，是字符集，名称都是小写)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Default collation 默认比较规则&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; SHOW CHARSET;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+----------+---------------------------------+---------------------+--------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Charset | Description | Default collation | Maxlen |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+----------+---------------------------------+---------------------+--------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| big5 | Big5 Traditional Chinese | big5_chinese_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| dec8 | DEC West European | dec8_swedish_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp850 | DOS West European | cp850_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| hp8 | HP West European | hp8_english_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| koi8r | KOI8-R Relcom Russian | koi8r_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| latin1 | cp1252 West European | latin1_swedish_ci | &lt;span style="color:#ae81ff">1&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| latin2 | ISO 8859-2 Central European | latin2_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| swe7 | 7bit Swedish | swe7_swedish_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ascii | US ASCII | ascii_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ujis | EUC-JP Japanese | ujis_japanese_ci | &lt;span style="color:#ae81ff">3&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| sjis | Shift-JIS Japanese | sjis_japanese_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| hebrew | ISO 8859-8 Hebrew | hebrew_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| tis620 | TIS620 Thai | tis620_thai_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| euckr | EUC-KR Korean | euckr_korean_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| koi8u | KOI8-U Ukrainian | koi8u_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| gb2312 | GB2312 Simplified Chinese | gb2312_chinese_ci | &lt;span style="color:#ae81ff">2&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| greek | ISO 8859-7 Greek | greek_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp1250 | Windows Central European | cp1250_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| gbk | GBK Simplified Chinese | gbk_chinese_ci | &lt;span style="color:#ae81ff">2&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| latin5 | ISO 8859-9 Turkish | latin5_turkish_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| armscii8 | ARMSCII-8 Armenian | armscii8_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf8 | UTF-8 Unicode | utf8_general_ci | &lt;span style="color:#ae81ff">3&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ucs2 | UCS-2 Unicode | ucs2_general_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp866 | DOS Russian | cp866_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| keybcs2 | DOS Kamenicky Czech-Slovak | keybcs2_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| macce | Mac Central European | macce_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| macroman | Mac West European | macroman_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp852 | DOS Central European | cp852_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| latin7 | ISO 8859-13 Baltic | latin7_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> | 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf8mb4 | UTF-8 Unicode | utf8mb4_general_ci | &lt;span style="color:#ae81ff">4&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp1251 | Windows Cyrillic | cp1251_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf16 | UTF-16 Unicode | utf16_general_ci | &lt;span style="color:#ae81ff">4&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf16le | UTF-16LE Unicode | utf16le_general_ci | &lt;span style="color:#ae81ff">4&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp1256 | Windows Arabic | cp1256_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp1257 | Windows Baltic | cp1257_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf32 | UTF-32 Unicode | utf32_general_ci | &lt;span style="color:#ae81ff">4&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| binary | Binary pseudo charset | binary | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| geostd8 | GEOSTD8 Georgian | geostd8_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp932 | SJIS &lt;span style="color:#66d9ef">for&lt;/span> Windows Japanese | cp932_japanese_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| eucjpms | UJIS &lt;span style="color:#66d9ef">for&lt;/span> Windows Japanese | eucjpms_japanese_ci | &lt;span style="color:#ae81ff">3&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| gb18030 | China National Standard GB18030 | gb18030_chinese_ci | &lt;span style="color:#ae81ff">4&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+----------+---------------------------------+---------------------+--------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">41&lt;/span> rows in set &lt;span style="color:#f92672">(&lt;/span>0.00 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>字符集的比较规则（这里先看utf8的）&lt;/p></description></item><item><title>02启动选项和系统变量</title><link>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/02/</link><pubDate>Mon, 17 Apr 2023 20:49:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/02/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="启动选项和配置文件">
 启动选项和配置文件
 &lt;a class="anchor" href="#%e5%90%af%e5%8a%a8%e9%80%89%e9%a1%b9%e5%92%8c%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h1>
&lt;p>在程序启动时指定的设置项，也称之为&lt;strong>启动选项startup option&lt;/strong>（可以在命令行中/配置文件中 指定）&lt;br>
&lt;strong>由于在centos7中使用systemctl start mysqld启动mysql，所以好像没法用命令行指定启动选项了&lt;/strong>&lt;/p>
&lt;p>程序(可能有些程序新版本已经没有了)的对应类别和能读取的组：&lt;br>
&lt;img src="img/ly-20241212142154302.png" alt="ly-20241212142154302" />&lt;/p>
&lt;p>这里讲配置文件的方式设置启动选项：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#添加配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /etc/my.cnf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>server&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>skip-networking &lt;span style="color:#75715e">#禁止tcp网络连接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>default-storage-engine&lt;span style="color:#f92672">=&lt;/span>MyISAM &lt;span style="color:#75715e">#建表默认使用M有ISAM存储引擎&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#效果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>▶ mysql -h127.0.0.1 -uroot -p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter password: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ERROR &lt;span style="color:#ae81ff">2003&lt;/span> &lt;span style="color:#f92672">(&lt;/span>HY000&lt;span style="color:#f92672">)&lt;/span>: Can&lt;span style="color:#e6db74">&amp;#39;t connect to MySQL server on &amp;#39;&lt;/span>127.0.0.1&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>111&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#去除tcp网络连接限制后新建一个表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>▶ mysql -h127.0.0.1 -uroot -p &lt;span style="color:#75715e">#可以连接上&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; create table default_storage_engine_demo&lt;span style="color:#f92672">(&lt;/span>i int&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Query OK, &lt;span style="color:#ae81ff">0&lt;/span> rows affected &lt;span style="color:#f92672">(&lt;/span>0.01 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; show create table default_storage_engine_demo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------------------+----------------------------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Table | Create Table |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------------------+----------------------------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| default_storage_engine_demo | CREATE TABLE &lt;span style="color:#e6db74">`&lt;/span>default_storage_engine_demo&lt;span style="color:#e6db74">`&lt;/span> &lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">`&lt;/span>i&lt;span style="color:#e6db74">`&lt;/span> int&lt;span style="color:#f92672">(&lt;/span>11&lt;span style="color:#f92672">)&lt;/span> DEFAULT NULL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">)&lt;/span> ENGINE&lt;span style="color:#f92672">=&lt;/span>MyISAM DEFAULT CHARSET&lt;span style="color:#f92672">=&lt;/span>latin1 |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果多个配置文件都配置了某个选项，如&lt;code>/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf&lt;/code>都配置了，则以最后一个配置的为主&lt;br>
如果同一个配置文件，比如[server]组和[mysqld]组都出现了default-storage-engine配置，则以后出现的组中的配置为准&lt;br>
如果一个启动选项既在命令行中出现，又在配置文件中配置，则以命令行中的为准&lt;/p></description></item><item><title>01初识MySQL</title><link>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/01/</link><pubDate>Mon, 17 Apr 2023 11:39:48 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/study/MySQL/how_mysql_run/01/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="原文">
 原文
 &lt;a class="anchor" href="#%e5%8e%9f%e6%96%87">#&lt;/a>
&lt;/h1>
&lt;h1 id="下载与安装">
 下载与安装
 &lt;a class="anchor" href="#%e4%b8%8b%e8%bd%bd%e4%b8%8e%e5%ae%89%e8%a3%85">#&lt;/a>
&lt;/h1>
&lt;p>环境Centos7&lt;/p>
&lt;p>添加MySQL5.7仓库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>解决证书问题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看是否添加成功&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo yum repolist all | grep mysql | grep 启用 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql-connectors-community/x86_64 MySQL Connectors Community 启用: &lt;span style="color:#ae81ff">213&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql-tools-community/x86_64 MySQL Tools Community 启用: &lt;span style="color:#ae81ff">96&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql57-community/x86_64 MySQL 5.7 Community Server 启用: &lt;span style="color:#ae81ff">642&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>MySQL安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo yum -y install mysql-community-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="运行与密码修改">
 运行与密码修改
 &lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c%e4%b8%8e%e5%af%86%e7%a0%81%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h1>
&lt;p>Centos7中安装目录查看，在/usr/bin中，与Max有所不同&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>whereis mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql: /usr/bin/mysql /usr/lib64/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls /usr/bin |grep mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqladmin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlbinlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlcheck
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_config_editor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqld_pre_systemd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqldump
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqldumpslow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlimport
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_install_db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_plugin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlpump
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_secure_installation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlshow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlslap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_ssl_rsa_setup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_tzinfo_to_sql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加mysqld目录到环境变量中（这里可省略，因为mysqld默认在/usr/bin中了&lt;/p></description></item></channel></rss>