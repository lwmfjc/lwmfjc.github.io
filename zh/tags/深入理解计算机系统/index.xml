<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>深入理解计算机系统 on 随记</title><link>https://lwmfjc.github.io/zh/tags/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/</link><description>Recent content in 深入理解计算机系统 on 随记</description><generator>Hugo</generator><language>zh</language><lastBuildDate>Sat, 24 May 2025 17:02:48 +0800</lastBuildDate><atom:link href="https://lwmfjc.github.io/zh/tags/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>06Machine-LevelProgramming02Control</title><link>https://lwmfjc.github.io/zh/docs/technology/System/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/06Machine-LevelProgramming02Control/</link><pubDate>Sat, 24 May 2025 17:02:48 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/System/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/06Machine-LevelProgramming02Control/</guid><description/></item><item><title>05MachineLevelProgramming01Basic</title><link>https://lwmfjc.github.io/zh/docs/technology/System/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/05MachineLevelProgramming01Basic/</link><pubDate>Sun, 19 Jan 2025 09:34:54 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/System/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/05MachineLevelProgramming01Basic/</guid><description>&lt;h1 id="概述">
 概述
 &lt;a class="anchor" href="#%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h1>
&lt;p>计算机为了运行程序，会执行一串独立的指令&lt;br>
两种形式的机器语言：&lt;/p>
&lt;ol>
&lt;li>在计算机上运行的实际目标代码（字节，二进制01）&lt;/li>
&lt;li>汇编代码（编译器的目标，文本格式）&lt;/li>
&lt;/ol>
&lt;p>不写汇编，但需要学习：&lt;/p>
&lt;ol>
&lt;li>编译器产生的结果（汇编及目标代码）与文本代码关联&lt;/li>
&lt;li>低级代码（汇编、二进制）如何实现高级别程序构造&lt;/li>
&lt;li>过程函数、结构体、数组在机器语言中的实现&lt;/li>
&lt;/ol>
&lt;p>课程选择64位版本的Intel指令集&lt;br>
为什么叫x86处理器&lt;del>16位微处理器&lt;/del>(也称CISC&lt;code>复杂&lt;/code>，与之对应的是RISC&lt;code>精简&lt;/code>)，因为一开始的处理器是8086，接着8286,8386&amp;hellip;&lt;br>
需要更加关注&amp;ndash;gcc编译生成的代码长什么样&lt;/p>
&lt;h1 id="x86进化">
 x86进化
 &lt;a class="anchor" href="#x86%e8%bf%9b%e5%8c%96">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20250524215533438.png" alt="" />&lt;/p>
&lt;h1 id="多核处理器">
 多核处理器
 &lt;a class="anchor" href="#%e5%a4%9a%e6%a0%b8%e5%a4%84%e7%90%86%e5%99%a8">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20250524215618621.png" alt="" />&lt;/p>
&lt;p>&lt;img src="img/ly-20250524215936110.png" alt="" />&lt;/p>
&lt;p>另一个公司：AMD&lt;br>
&lt;img src="img/ly-20250524221923709.png" alt="" />&lt;/p>
&lt;h1 id="教学范围">
 教学范围
 &lt;a class="anchor" href="#%e6%95%99%e5%ad%a6%e8%8c%83%e5%9b%b4">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20250524222101769.png" alt="" />&lt;/p>
&lt;h1 id="哪些处理器">
 哪些处理器
 &lt;a class="anchor" href="#%e5%93%aa%e4%ba%9b%e5%a4%84%e7%90%86%e5%99%a8">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>ARM(AcornRISCMachine)，比x86机器功耗更低&lt;/li>
&lt;li>x86&lt;/li>
&lt;/ul>
&lt;h1 id="定义">
 定义
 &lt;a class="anchor" href="#%e5%ae%9a%e4%b9%89">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>指令集&lt;/li>
&lt;li>寄存器：非常小的内存位置&lt;/li>
&lt;li>机器指令&lt;br>
&lt;img src="img/ly-20250524223748161.png" alt="" />&lt;/li>
&lt;/ul>
&lt;p>（无法直接操作缓存(没有这个概念），是机器级别的概念)&lt;/p>
&lt;h1 id="将c源代码转换成目标文件">
 将c源代码转换成目标文件
 &lt;a class="anchor" href="#%e5%b0%86c%e6%ba%90%e4%bb%a3%e7%a0%81%e8%bd%ac%e6%8d%a2%e6%88%90%e7%9b%ae%e6%a0%87%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20250524224747058.png" alt="" />&lt;/p>
&lt;h1 id="汇编简介">
 汇编简介
 &lt;a class="anchor" href="#%e6%b1%87%e7%bc%96%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20250524225343526.png" alt="" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>gcc -Og -S sum.c &lt;span style="color:#75715e">#-Og 调试级别的优化过的； -S 生成汇编&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>