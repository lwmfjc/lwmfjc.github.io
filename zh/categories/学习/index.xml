<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>学习 on 随记</title><link>https://lwmfjc.github.io/zh/categories/%E5%AD%A6%E4%B9%A0/</link><description>Recent content in 学习 on 随记</description><generator>Hugo</generator><language>zh</language><lastBuildDate>Fri, 21 Mar 2025 16:28:40 +0800</lastBuildDate><atom:link href="https://lwmfjc.github.io/zh/categories/%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>04事务</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/advanced_shilei/04/</link><pubDate>Fri, 21 Mar 2025 16:28:40 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/advanced_shilei/04/</guid><description>&lt;h1 id="关闭自动提交">
 关闭自动提交
 &lt;a class="anchor" href="#%e5%85%b3%e9%97%ad%e8%87%aa%e5%8a%a8%e6%8f%90%e4%ba%a4">#&lt;/a>
&lt;/h1>
&lt;blockquote>
&lt;p>在MySQL命令行的默认设置下，事务都是自动提交的，即执行SQL语句后就会马上执行COMMIT操作。因此开始一个事务，必须使用BEGIN、START TRANSACTION，(显示开启事务）或者执行SET AUTOCOMMIT=0，以禁用当前会话的自动提交。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>select语句一般用来输出用户变量，比如select @变量名，用于输出数据源不是表格的数据。&lt;/li>
&lt;li>系统变量在变量名前面有&lt;mark>两个@&lt;/mark>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">show&lt;/span> variables &lt;span style="color:#66d9ef">like&lt;/span> &lt;span style="color:#e6db74">&amp;#39;autocommit&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------------+-------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> Variable_name &lt;span style="color:#f92672">|&lt;/span> Value &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------------+-------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> autocommit &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#66d9ef">ON&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------------+-------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> row &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">@@&lt;/span>autocommit;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+--------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#f92672">@@&lt;/span>autocommit &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+--------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+--------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> row &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改变量
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">set&lt;/span> autocommit&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>本文中autocommit=0，开始事务需要使用&lt;code>begin&lt;/code>显式开启&lt;/p>
&lt;h1 id="事务并发存在的问题">
 事务并发存在的问题
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e5%b9%b6%e5%8f%91%e5%ad%98%e5%9c%a8%e7%9a%84%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h1>
&lt;p>&lt;del>没有脏读问题，如果两个事务同时修改一条数据，那么另一个事务的修改操作会被阻塞&lt;/del>&lt;br>
【隔离性】脏读（读到了还没有提交的数据）&lt;/p>
&lt;p>【隔离性】不可重复读（同一事务中，第1次读的数据和第2次读的数据不一样。读到了事务操作过程中其他事务提交的数据，也不应该，这个没法保证一致性。比如我第一次根据某个事务做了一个操作，第二次想同样的逻辑做一个判断操作，但是数据变了，导致同一个事务中对同一个(其实不是了）数据做的操作居然不一致&lt;/p>
&lt;p>【隔离性】虚读、幻读（同一事务中：我第一次读到某一条数据，但是第二次没读到；或者第一次没读到，第二次居然读到了。条数问题）&lt;/p>
&lt;h1 id="事务的隔离级别">
 事务的隔离级别
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e7%9a%84%e9%9a%94%e7%a6%bb%e7%ba%a7%e5%88%ab">#&lt;/a>
&lt;/h1>
&lt;p>READ_UNCOMMITTED 读未提交&lt;br>
READ_COMMITTED 读已提交&lt;br>
REPEATABLE_READ 重复读
SERIALIZABLE 串行化(行锁)
修改事务隔离级别：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">set&lt;/span> tx_isolation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;SERIALIZABLE&amp;#39;&lt;/span>; (&lt;span style="color:#960050;background-color:#1e0010">可以加&lt;/span>global&lt;span style="color:#960050;background-color:#1e0010">，让新开的&lt;/span>session也使用该事务隔离级别)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>经测试，如果有三个session（mysql客户端），其中一个(a)是SERIALIZABLE,而其他两个(b,c)是READ_UNCOMMITTED，那么客户端b,c之间不会因为锁挂起，而ab或ac会导致(行)锁挂起&lt;/p>
&lt;h2 id="repeatable_read重复读">
 REPEATABLE_READ重复读
 &lt;a class="anchor" href="#repeatable_read%e9%87%8d%e5%a4%8d%e8%af%bb">#&lt;/a>
&lt;/h2>
&lt;p>REPEATABLE_READ重复读的隔离级别只能在一定程度上防止幻读 &lt;del>如果事务a(插入一条新数据，或者删除一条数据)后提交。那么变动的数据不会在事务b被查出来。但是如果插入的这条数据(在事务b，注意 不是事务a)被修改了，那么之后它会在事务b被查出来&lt;/del>&lt;/p>
&lt;h3 id="新增后修改">
 新增后修改
 &lt;a class="anchor" href="#%e6%96%b0%e5%a2%9e%e5%90%8e%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h3>
&lt;p>事务a新增数据后提交，在事务b执行中修改了该数据，则该数据会显示出来（影响了）&lt;/p></description></item><item><title>03存储引擎</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/advanced_shilei/03/</link><pubDate>Wed, 19 Mar 2025 09:52:44 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/advanced_shilei/03/</guid><description>&lt;p>表结构、数据、索引&lt;/p>
&lt;h1 id="文件目录">
 文件目录
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e7%9b%ae%e5%bd%95">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span> root&lt;span style="color:#f92672">@&lt;/span>db211:&lt;span style="color:#f92672">/&lt;/span>var&lt;span style="color:#f92672">/&lt;/span>lib&lt;span style="color:#f92672">/&lt;/span>mysql&lt;span style="color:#f92672">/&lt;/span>mysql&lt;span style="color:#75715e"># ls | tail -16
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>tables_priv.frm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tables_priv.MYD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tables_priv.MYI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone.frm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone.ibd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone_leap_second.frm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone_leap_second.ibd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone_name.frm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone_name.ibd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone_transition.frm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone_transition.ibd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time_zone_transition_type.frm &lt;span style="color:#75715e">#INNODB存储引擎-表结构
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>time_zone_transition_type.ibd &lt;span style="color:#75715e">#INNODB存储引擎-表数据+表索引（包括所有索引）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">user&lt;/span>.frm &lt;span style="color:#75715e">#MyISAM存储引擎-表结构
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">user&lt;/span>.MYD &lt;span style="color:#75715e">#MyISAM存储引擎-表数据
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">user&lt;/span>.MYI &lt;span style="color:#75715e">#MyISAM存储引擎-表索引
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>INNODE存储引擎的表主键聚簇索引和数据在同一个文件（所以即使没有设置主键，innodb也会为每一行自动生成一个默认的隐藏主键列，用来形成B+树）&lt;/p>
&lt;h1 id="索引">
 索引
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95">#&lt;/a>
&lt;/h1>
&lt;h2 id="索引创建">
 索引创建
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95%e5%88%9b%e5%bb%ba">#&lt;/a>
&lt;/h2>
&lt;h3 id="建表时创建">
 建表时创建
 &lt;a class="anchor" href="#%e5%bb%ba%e8%a1%a8%e6%97%b6%e5%88%9b%e5%bb%ba">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#a6e22e">index1&lt;/span>( id &lt;span style="color:#66d9ef">int&lt;/span>, name &lt;span style="color:#66d9ef">varchar&lt;/span>(&lt;span style="color:#ae81ff">20&lt;/span>), &lt;span style="color:#66d9ef">index&lt;/span> &lt;span style="color:#a6e22e">idx_id_name&lt;/span> (id,name));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="后续添加">
 后续添加
 &lt;a class="anchor" href="#%e5%90%8e%e7%bb%ad%e6%b7%bb%e5%8a%a0">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">index&lt;/span> idx_name &lt;span style="color:#66d9ef">on&lt;/span> &lt;span style="color:#a6e22e">bank_bill&lt;/span> (name);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="b树">
 B树
 &lt;a class="anchor" href="#b%e6%a0%91">#&lt;/a>
&lt;/h2>
&lt;p>m阶B树 ,m个分支（或者说m个区间）&lt;br>
x个元素就会有x+1个区间
&lt;img src="img/ly-20250320162325136.png" alt="" />&lt;/p>
&lt;h2 id="b树和b树区别">
 B+树和B树区别
 &lt;a class="anchor" href="#b%e6%a0%91%e5%92%8cb%e6%a0%91%e5%8c%ba%e5%88%ab">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20250320164826221.png" alt="" />&lt;/p>
&lt;h3 id="从b树考虑">
 从B树考虑
 &lt;a class="anchor" href="#%e4%bb%8eb%e6%a0%91%e8%80%83%e8%99%91">#&lt;/a>
&lt;/h3>
&lt;p>log2 2000万≈24.3
log500 2000万≈3 (m阶平衡树)
如果是500阶B树，那么2000万个节点最多只需要3层&lt;/p>
&lt;h3 id="从b树考虑-1">
 从B+树考虑
 &lt;a class="anchor" href="#%e4%bb%8eb%e6%a0%91%e8%80%83%e8%99%91-1">#&lt;/a>
&lt;/h3>
&lt;p>MySQL中，一个节点1页，也就是16KB（可以改），而一个节点可以放（主键bigint(8字节)+页号地址 6字节)单元1170个，假设是1000，那两层可以放100 0000万个节点。由于1个节点16KB，如果一条数据用1KB的话，那么最底层每个叶子节点就是放16条数据。那就是3层可以放1600万条数据。这是估算，细算的话应该是2000万左右
&lt;img src="img/ly-20250320180127946.png" alt="" />&lt;/p></description></item><item><title>02增删改查</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/advanced_shilei/02/</link><pubDate>Sun, 16 Mar 2025 17:04:04 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/advanced_shilei/02/</guid><description>&lt;h1 id="分类">
 分类
 &lt;a class="anchor" href="#%e5%88%86%e7%b1%bb">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>DDL 数据定义语言(create,drop,alter)&lt;/li>
&lt;li>DML 数据操纵语言(insert,delete,update,select)&lt;/li>
&lt;li>DCL 数据控制语言(grant,revoke)&lt;/li>
&lt;/ul>
&lt;h1 id="删除">
 删除
 &lt;a class="anchor" href="#%e5%88%a0%e9%99%a4">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+----+----------+-----+-----+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> id &lt;span style="color:#f92672">|&lt;/span> name &lt;span style="color:#f92672">|&lt;/span> age &lt;span style="color:#f92672">|&lt;/span> sex &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+----+----------+-----+-----+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">|&lt;/span> zhangsan &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#f92672">|&lt;/span> M &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">|&lt;/span> wuqi &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">34&lt;/span> &lt;span style="color:#f92672">|&lt;/span> M &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">5&lt;/span> &lt;span style="color:#f92672">|&lt;/span> baobaoi &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span> &lt;span style="color:#f92672">|&lt;/span> W &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#f92672">|&lt;/span> lalal &lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">44&lt;/span> &lt;span style="color:#f92672">|&lt;/span> W &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+----+----------+-----+-----+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span> rows &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">delete&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span> &lt;span style="color:#66d9ef">where&lt;/span> id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#如果之后重启了mysql（且id最大为5，则再插入的数据id为6），（如果id最大为10，则插入的数据id为11）；如果没有重启，则再插入的数据id为7
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> nsert &lt;span style="color:#66d9ef">into&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span>(name,age,sex) &lt;span style="color:#66d9ef">values&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;hah&amp;#39;&lt;/span>,&lt;span style="color:#ae81ff">35&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;W&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="新增">
 新增
 &lt;a class="anchor" href="#%e6%96%b0%e5%a2%9e">#&lt;/a>
&lt;/h1>
&lt;p>一次新增多条数据和多次新增单条数据区别&lt;br>
&lt;img src="img/ly-20250316181803420.png" alt="" />&lt;/p>
&lt;h1 id="搜索">
 搜索
 &lt;a class="anchor" href="#%e6%90%9c%e7%b4%a2">#&lt;/a>
&lt;/h1>
&lt;p>limit可以优化sql语句，不过要看数据的位置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> t_user &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">1999999&lt;/span> ,&lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------+------------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> id &lt;span style="color:#f92672">|&lt;/span> email &lt;span style="color:#f92672">|&lt;/span> password &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------+------------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">2000000&lt;/span> &lt;span style="color:#f92672">|&lt;/span> cwng78&lt;span style="color:#f92672">@&lt;/span>yahoo.com &lt;span style="color:#f92672">|&lt;/span> h4HcxZKBNQ &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------+------------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> row &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">52&lt;/span> sec)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#这条数据在最后一条，所以优化效果不怎么样
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> t_user &lt;span style="color:#66d9ef">where&lt;/span> email&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;cwng78@yahoo.com&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------+------------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> id &lt;span style="color:#f92672">|&lt;/span> email &lt;span style="color:#f92672">|&lt;/span> password &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------+------------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">2000000&lt;/span> &lt;span style="color:#f92672">|&lt;/span> cwng78&lt;span style="color:#f92672">@&lt;/span>yahoo.com &lt;span style="color:#f92672">|&lt;/span> h4HcxZKBNQ &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+---------+------------------+------------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> row &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">47&lt;/span> sec)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在第一条或者前面，则优化效果显著&lt;/p></description></item><item><title>01基础知识</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/advanced_shilei/01/</link><pubDate>Sat, 15 Mar 2025 19:46:15 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/advanced_shilei/01/</guid><description>&lt;h1 id="本课程大纲">
 本课程大纲
 &lt;a class="anchor" href="#%e6%9c%ac%e8%af%be%e7%a8%8b%e5%a4%a7%e7%ba%b2">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20250315194748427.png" alt="" />&lt;/p>
&lt;h1 id="部分扩展知识">
 部分扩展知识
 &lt;a class="anchor" href="#%e9%83%a8%e5%88%86%e6%89%a9%e5%b1%95%e7%9f%a5%e8%af%86">#&lt;/a>
&lt;/h1>
&lt;p>MySQL分为服务端和客户端（两进程），SQLite是进程程序，客户端和服务端都在同一个进程操作数据&lt;/p>
&lt;h1 id="安装windows">
 安装(windows)
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85windows">#&lt;/a>
&lt;/h1>
&lt;p>安装目录下包括数据目录(Data/)和配置文件(my.ini)&lt;/p>
&lt;h1 id="安装debian">
 安装(debian)
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85debian">#&lt;/a>
&lt;/h1>
&lt;h2 id="数据目录">
 数据目录
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%9b%ae%e5%bd%95">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>root@db211:/etc/mysql# ls -l /var/lib/mysql | awk &lt;span style="color:#e6db74">&amp;#39;{print $1,$3,$4,$9}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r----- mysql mysql auto.cnf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw------- mysql mysql ca-key.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- mysql mysql ca.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- mysql mysql client-cert.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw------- mysql mysql client-key.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r----- mysql mysql ib_buffer_pool
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r----- mysql mysql ibdata1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r----- mysql mysql ib_logfile0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r----- mysql mysql ib_logfile1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r----- mysql mysql ibtmp1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-x--- mysql mysql mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-x--- mysql mysql performance_schema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw------- mysql mysql private_key.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- mysql mysql public_key.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- mysql mysql server-cert.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw------- mysql mysql server-key.pem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-x--- mysql mysql sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-x--- mysql mysql xx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="配置目录">
 配置目录
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e7%9b%ae%e5%bd%95">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>root@db211:/etc/mysql# ls -l | awk &lt;span style="color:#e6db74">&amp;#39;{print $1,$9,$10,$11}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x conf.d 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxrwxrwx my.cnf -&amp;gt; /etc/alternatives/my.cnf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- my.cnf.fallback 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- mysql.cnf 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x mysql.conf.d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>再进一步查看&lt;/p></description></item><item><title>05MachineLevelProgramming01Basic</title><link>https://lwmfjc.github.io/zh/docs/technology/System/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/05MachineLevelProgramming01Basic/</link><pubDate>Sun, 19 Jan 2025 09:34:54 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/System/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B0/05MachineLevelProgramming01Basic/</guid><description/></item><item><title>第26章_写作本书时用到的一些重要的参考资料</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC26%E7%AB%A0_%E5%86%99%E4%BD%9C%E6%9C%AC%E4%B9%A6%E6%97%B6%E7%94%A8%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%87%8D%E8%A6%81%E7%9A%84%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</link><pubDate>Sat, 18 Jan 2025 22:30:12 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC26%E7%AB%A0_%E5%86%99%E4%BD%9C%E6%9C%AC%E4%B9%A6%E6%97%B6%E7%94%A8%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%87%8D%E8%A6%81%E7%9A%84%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</guid><description>&lt;p>第26章 写作本书时用到的一些重要的参考资料&lt;/p>
&lt;h1 id="感谢">
 感谢
 &lt;a class="anchor" href="#%e6%84%9f%e8%b0%a2">#&lt;/a>
&lt;/h1>
&lt;p>我不生产知识，只是知识的搬运工。写作本小册的时间主要用在了两个方面：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>搞清楚事情的本质是什么。&lt;/p>
&lt;p>这个过程就是研究源码、书籍和资料。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>如何把我已经知道的知识表达出来。&lt;/p>
&lt;p>这个过程就是我不停的在地上走过来走过去，梳理知识结构，斟酌用词用句，不停的将已经写好的文章推倒重来，只是想给大家一个不错的用户体验。&lt;/p>
&lt;p>这两个方面用的时间基本上是一半一半吧，在搞清楚事情的本质是什么阶段，除了直接阅读&lt;code>MySQL&lt;/code>的源码之外，查看参考资料也是一种比较偷懒的学习方式。本书只是&lt;code>MySQL&lt;/code>进阶的一个入门，想了解更多关于&lt;code>MySQL&lt;/code>的知识，大家可以从下面这些资料里找点灵感。&lt;/p>
&lt;h1 id="一些链接">
 一些链接
 &lt;a class="anchor" href="#%e4%b8%80%e4%ba%9b%e9%93%be%e6%8e%a5">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>MySQL官方文档：
&lt;a target="_blank" href="https://dev.mysql.com/doc/refman/5.7/en/">https://dev.mysql.com/doc/refman/5.7/en/&lt;/a>&lt;/p>
&lt;p>&lt;code>MySQL&lt;/code>官方文档是写作本书时参考最多的一个资料。说实话，文档写的非常通俗易懂，唯一的缺点就是太长了，导致大家看的时候无从下手。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>MySQL Internals Manual：
&lt;a target="_blank" href="https://dev.mysql.com/doc/internals/en/">https://dev.mysql.com/doc/internals/en/&lt;/a>&lt;/p>
&lt;p>介绍MySQL如何实现各种功能的文档，写的比较好，但是太少了，有很多章节直接跳过了。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>何登成的github：
&lt;a target="_blank" href="https://github.com/hedengcheng/tech">https://github.com/hedengcheng/tech&lt;/a>&lt;/p>
&lt;p>登博的博客非常好，对事务、优化这讨论的细节也非常多，不过由于大多是PPT结构，字太少，对上下文不清楚的同学可能会一脸懵逼。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>orczhou的博客：
&lt;a target="_blank" href="http://www.orczhou.com/">http://www.orczhou.com/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>Jeremy Cole的博客：
&lt;a target="_blank" href="https://blog.jcole.us/innodb/">https://blog.jcole.us/innodb/&lt;/a>&lt;/p>
&lt;p>Jeremy Cole大神不仅写作了&lt;code>innodb_ruby&lt;/code>这个非常棒的解析&lt;code>InnoDB&lt;/code>存储结构的工具，还对这些存储结构写了一系列的博客，在我几乎要放弃深入研究表空间结构的时候，是他老人家的博客把我又从深渊里拉了回来。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>那海蓝蓝（李海翔）的博客：
&lt;a target="_blank" href="https://blog.csdn.net/fly2nn">https://blog.csdn.net/fly2nn&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>taobao月报：
&lt;a target="_blank" href="http://mysql.taobao.org/monthly/">http://mysql.taobao.org/monthly/&lt;/a>&lt;/p>
&lt;p>因为MySQL的源码非常多，经常让大家无从下手，而taobao月报就是一个非常好的源码阅读指南。&lt;/p>
&lt;p>&lt;code>吐槽一下，这个taobao月报也只能当作源码阅读指南看，如果真的不看源码光看月报，那只能当作天书看，十有八九被绕进去出不来了。&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>MySQL Server Blog：
&lt;a target="_blank" href="http://mysqlserverteam.com/">http://mysqlserverteam.com/&lt;/a>&lt;/p>
&lt;p>MySQL team的博客，一手资料，在我不知道看什么的时候给了很多启示。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>mysql_lover的博客：
&lt;a target="_blank" href="https://blog.csdn.net/mysql_lover/">https://blog.csdn.net/mysql_lover/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Jorgen&amp;rsquo;s point of view：
&lt;a target="_blank" href="https://jorgenloland.blogspot.com/">https://jorgenloland.blogspot.com/&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>mariadb的关于查询优化的文档：
&lt;a target="_blank" href="https://mariadb.com/kb/en/library/query-optimizations/">https://mariadb.com/kb/en/library/query-optimizations/&lt;/a>&lt;/p>
&lt;p>不得不说mariadb的文档相比MySQL的来说就非常有艺术性了（里边儿有很多漂亮的插图），我很怀疑MySQL文档是程序员直接写的，mariadb的文档是产品经理写的。当我们想研究某个功能的原理，在MySQL文档干巴巴的说明中找不到头脑时，可以参考一下mariadb娓娓道来的风格。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>Reconstructing Data Manipulation Queries from Redo Logs：
&lt;a target="_blank" href="https://www.sba-research.org/wp-content/uploads/publications/WSDF2012_InnoDB.pdf">https://www.sba-research.org/wp-content/uploads/publications/WSDF2012_InnoDB.pdf&lt;/a>&lt;/p>
&lt;ul>
&lt;li>关于InnoDB事务的一个PPT：
&lt;a target="_blank" href="https://mariadb.org/wp-content/uploads/2018/02/Deep-Dive_-InnoDB-Transactions-and-Write-Paths.pdf">https://mariadb.org/wp-content/uploads/2018/02/Deep-Dive_-InnoDB-Transactions-and-Write-Paths.pdf&lt;/a>&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>非官方优化文档：
&lt;a target="_blank" href="http://www.unofficialmysqlguide.com/optimizer-trace.html">http://www.unofficialmysqlguide.com/optimizer-trace.html&lt;/a>&lt;/p>
&lt;p>这个文档非常好，非常非常好～&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>MySQL8.0的源码文档：
&lt;a target="_blank" href="https://dev.mysql.com/doc/dev/mysql-server">https://dev.mysql.com/doc/dev/mysql-server&lt;/a>&lt;/p>
&lt;h1 id="一些书籍">
 一些书籍
 &lt;a class="anchor" href="#%e4%b8%80%e4%ba%9b%e4%b9%a6%e7%b1%8d">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>《数据库查询优化器的艺术》李海翔著&lt;/p></description></item><item><title>第25章_工作面试老大难-锁</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC25%E7%AB%A0_%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95%E8%80%81%E5%A4%A7%E9%9A%BE-%E9%94%81/</link><pubDate>Sat, 18 Jan 2025 22:30:10 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC25%E7%AB%A0_%E5%B7%A5%E4%BD%9C%E9%9D%A2%E8%AF%95%E8%80%81%E5%A4%A7%E9%9A%BE-%E9%94%81/</guid><description>&lt;p>第25章 工作面试老大难-锁&lt;/p>
&lt;h1 id="解决并发事务带来问题的两种基本方式">
 解决并发事务带来问题的两种基本方式
 &lt;a class="anchor" href="#%e8%a7%a3%e5%86%b3%e5%b9%b6%e5%8f%91%e4%ba%8b%e5%8a%a1%e5%b8%a6%e6%9d%a5%e9%97%ae%e9%a2%98%e7%9a%84%e4%b8%a4%e7%a7%8d%e5%9f%ba%e6%9c%ac%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h1>
&lt;p>上一章介绍了事务并发执行时可能带来的各种问题，并发事务访问相同记录的情况大致可以划分为3种：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>读-读&lt;/code>情况：即并发事务相继读取相同的记录。&lt;/p>
&lt;p>读取操作本身不会对记录有一毛钱影响，并不会引起什么问题，所以允许这种情况的发生。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>写-写&lt;/code>情况：即并发事务相继对相同的记录做出改动。&lt;/p>
&lt;p>我们前面说过，在这种情况下会发生&lt;code>脏写&lt;/code>的问题，任何一种隔离级别都不允许这种问题的发生。所以在多个未提交事务相继对一条记录做改动时，需要让它们排队执行，这个排队的过程其实是通过&lt;code>锁&lt;/code>来实现的。这个所谓的&lt;code>锁&lt;/code>其实是一个内存中的结构，在事务执行前本来是没有锁的，也就是说一开始是没有&lt;code>锁结构&lt;/code>和记录进行关联的，如图所示：&lt;/p>
&lt;p>&lt;img src="img/25-01.png" alt="" />&lt;/p>
&lt;p>当一个事务想对这条记录做改动时，首先会看看内存中有没有与这条记录关联的&lt;code>锁结构&lt;/code>，当没有的时候就会在内存中生成一个&lt;code>锁结构&lt;/code>与之关联。比方说事务&lt;code>T1&lt;/code>要对这条记录做改动，就需要生成一个&lt;code>锁结构&lt;/code>与之关联：&lt;/p>
&lt;p>&lt;img src="img/25-02.png" alt="" />&lt;/p>
&lt;p>其实在&lt;code>锁结构&lt;/code>里有很多信息，不过为了简化理解，我们现在只把两个比较重要的属性拿了出来： - &lt;code>trx信息&lt;/code>：代表这个锁结构是哪个事务生成的。 - &lt;code>is_waiting&lt;/code>：代表当前事务是否在等待。&lt;/p>
&lt;p>如图所示，当事务&lt;code>T1&lt;/code>改动了这条记录后，就生成了一个&lt;code>锁结构&lt;/code>与该记录关联，因为之前没有别的事务为这条记录加锁，所以&lt;code>is_waiting&lt;/code>属性就是&lt;code>false&lt;/code>，我们把这个场景就称之为&lt;strong>获取锁成功，或者加锁成功&lt;/strong>，然后就可以继续执行操作了。&lt;/p>
&lt;p>在事务&lt;code>T1&lt;/code>提交之前，另一个事务&lt;code>T2&lt;/code>也想对该记录做改动，那么先去看看有没有&lt;code>锁结构&lt;/code>与这条记录关联，发现有一个&lt;code>锁结构&lt;/code>与之关联后，然后也生成了一个&lt;code>锁结构&lt;/code>与这条记录关联，不过&lt;code>锁结构&lt;/code>的&lt;code>is_waiting&lt;/code>属性值为&lt;code>true&lt;/code>，表示当前事务需要等待，我们把这个场景就称之为&lt;strong>获取锁失败，或者加锁失败，或者没有成功的获取到锁&lt;/strong>，画个图表示就是这样：&lt;/p>
&lt;p>&lt;img src="img/25-03.png" alt="" />&lt;/p>
&lt;p>在事务&lt;code>T1&lt;/code>提交之后，就会把该事务生成的&lt;code>锁结构&lt;/code>释放掉，然后看看还有没有别的事务在等待获取锁，发现了事务&lt;code>T2&lt;/code>还在等待获取锁，所以把事务&lt;code>T2&lt;/code>对应的锁结构的&lt;code>is_waiting&lt;/code>属性设置为&lt;code>false&lt;/code>，然后把该事务对应的线程唤醒，让它继续执行，此时事务&lt;code>T2&lt;/code>就算获取到锁了。效果图就是这样：&lt;/p>
&lt;p>&lt;img src="img/25-04.png" alt="" />&lt;/p>
&lt;p>我们总结一下后续内容中可能用到的几种说法，以免大家混淆：&lt;/p>
&lt;pre>&lt;code>+ 
&lt;/code>&lt;/pre>
&lt;p>不加锁&lt;/p>
&lt;p>意思就是不需要在内存中生成对应的&lt;code>锁结构&lt;/code>，可以直接执行操作。&lt;/p>
&lt;pre>&lt;code>+ 
&lt;/code>&lt;/pre>
&lt;p>获取锁成功，或者加锁成功&lt;/p>
&lt;p>意思就是在内存中生成了对应的&lt;code>锁结构&lt;/code>，而且锁结构的&lt;code>is_waiting&lt;/code>属性为&lt;code>false&lt;/code>，也就是事务可以继续执行操作。&lt;/p>
&lt;pre>&lt;code>+ 
&lt;/code>&lt;/pre>
&lt;p>获取锁失败，或者加锁失败，或者没有获取到锁&lt;/p>
&lt;p>意思就是在内存中生成了对应的&lt;code>锁结构&lt;/code>，不过锁结构的&lt;code>is_waiting&lt;/code>属性为&lt;code>true&lt;/code>，也就是事务需要等待，不可以继续执行操作。&lt;/p>
&lt;p>&lt;code>小贴士：这里只是对锁结构做了一个非常简单的描述，我们后边会详细介绍介绍锁结构的，稍安勿躁。&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>读-写&lt;/code>或&lt;code>写-读&lt;/code>情况：也就是一个事务进行读取操作，另一个进行改动操作。&lt;/p>
&lt;p>我们前面说过，这种情况下可能发生&lt;code>脏读&lt;/code>、&lt;code>不可重复读&lt;/code>、&lt;code>幻读&lt;/code>的问题。&lt;/p>
&lt;p>&lt;code>小贴士：幻读问题的产生是因为某个事务读了一个范围的记录，之后别的事务在该范围内插入了新记录，该事务再次读取该范围的记录时，可以读到新插入的记录，所以幻读问题准确的说并不是因为读取和写入一条相同记录而产生的，这一点要注意一下。&lt;/code>&lt;/p>
&lt;p>&lt;code>SQL标准&lt;/code>规定不同隔离级别下可能发生的问题不一样： - 在&lt;code>READ UNCOMMITTED&lt;/code>隔离级别下，&lt;code>脏读&lt;/code>、&lt;code>不可重复读&lt;/code>、&lt;code>幻读&lt;/code>都可能发生。 - 在&lt;code>READ COMMITTED&lt;/code>隔离级别下，&lt;code>不可重复读&lt;/code>、&lt;code>幻读&lt;/code>可能发生，&lt;code>脏读&lt;/code>不可以发生。 - 在&lt;code>REPEATABLE READ&lt;/code>隔离级别下，&lt;code>幻读&lt;/code>可能发生，&lt;code>脏读&lt;/code>和&lt;code>不可重复读&lt;/code>不可以发生。 - 在&lt;code>SERIALIZABLE&lt;/code>隔离级别下，上述问题都不可以发生。&lt;/p>
&lt;p>不过各个数据库厂商对&lt;code>SQL标准&lt;/code>的支持都可能不一样，与&lt;code>SQL标准&lt;/code>不同的一点就是，&lt;code>MySQL&lt;/code>在&lt;code>REPEATABLE READ&lt;/code>隔离级别实际上就已经解决了&lt;code>幻读&lt;/code>问题。&lt;/p>
&lt;p>怎么解决&lt;code>脏读&lt;/code>、&lt;code>不可重复读&lt;/code>、&lt;code>幻读&lt;/code>这些问题呢？其实有两种可选的解决方案：&lt;/p>
&lt;pre>&lt;code>+ 
&lt;/code>&lt;/pre>
&lt;p>方案一：读操作利用多版本并发控制（&lt;code>MVCC&lt;/code>），写操作进行&lt;code>加锁&lt;/code>。&lt;/p>
&lt;p>所谓的&lt;code>MVCC&lt;/code>我们在前一章有过详细的描述，就是通过生成一个&lt;code>ReadView&lt;/code>，然后通过&lt;code>ReadView&lt;/code>找到符合条件的记录版本（历史版本是由&lt;code>undo日志&lt;/code>构建的），其实就像是在生成&lt;code>ReadView&lt;/code>的那个时刻做了一次时间静止（就像用相机拍了一个快照），查询语句只能读到在生成&lt;code>ReadView&lt;/code>之前已提交事务所做的更改，在生成&lt;code>ReadView&lt;/code>之前未提交的事务或者之后才开启的事务所做的更改是看不到的。而写操作肯定针对的是最新版本的记录，读记录的历史版本和改动记录的最新版本本身并不冲突，也就是采用&lt;code>MVCC&lt;/code>时，&lt;code>读-写&lt;/code>操作并不冲突。&lt;/p>
&lt;p>&lt;code>小贴士：我们说过普通的SELECT语句在READ COMMITTED和REPEATABLE READ隔离级别下会使用到MVCC读取记录。在READ COMMITTED隔离级别下，一个事务在执行过程中每次执行SELECT操作时都会生成一个ReadView，ReadView的存在本身就保证了事务不可以读取到未提交的事务所做的更改，也就是避免了脏读现象；REPEATABLE READ隔离级别下，一个事务在执行过程中只有第一次执行SELECT操作才会生成一个ReadView，之后的SELECT操作都复用这个ReadView，这样也就避免了不可重复读和幻读的问题。&lt;/code>&lt;/p></description></item><item><title>第24章_一条记录的多幅面孔-事务的隔离级别与MVCC</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC24%E7%AB%A0_%E4%B8%80%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%9A%84%E5%A4%9A%E5%B9%85%E9%9D%A2%E5%AD%94-%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E4%B8%8EMVCC/</link><pubDate>Sat, 18 Jan 2025 22:30:09 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC24%E7%AB%A0_%E4%B8%80%E6%9D%A1%E8%AE%B0%E5%BD%95%E7%9A%84%E5%A4%9A%E5%B9%85%E9%9D%A2%E5%AD%94-%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%E4%B8%8EMVCC/</guid><description>&lt;p>第24章 一条记录的多幅面孔-事务的隔离级别与MVCC&lt;/p>
&lt;h1 id="事前准备">
 事前准备
 &lt;a class="anchor" href="#%e4%ba%8b%e5%89%8d%e5%87%86%e5%a4%87">#&lt;/a>
&lt;/h1>
&lt;p>为了故事的顺利发展，我们需要创建一个表： &lt;code>CREATE TABLE hero ( number INT, name VARCHAR(100), country varchar(100), PRIMARY KEY (number) ) Engine=InnoDB CHARSET=utf8;&lt;/code> &lt;code>小贴士：注意我们把这个hero表的主键命名为number，而不是id，主要是想和后边要用到的事务id做区别，大家不用大惊小怪～&lt;/code> 然后向这个表里插入一条数据： &lt;code>INSERT INTO hero VALUES(1, '刘备', '蜀');&lt;/code> 现在表里的数据就是这样的： &lt;code>mysql&amp;gt; SELECT * FROM hero; +--------+--------+---------+ | number | name | country | +--------+--------+---------+ | 1 | 刘备 | 蜀 | +--------+--------+---------+ 1 row in set (0.00 sec)&lt;/code>&lt;/p>
&lt;h1 id="事务隔离级别">
 事务隔离级别
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e9%9a%94%e7%a6%bb%e7%ba%a7%e5%88%ab">#&lt;/a>
&lt;/h1>
&lt;p>我们知道&lt;code>MySQL&lt;/code>是一个&lt;code>客户端／服务器&lt;/code>架构的软件，对于同一个服务器来说，可以有若干个客户端与之连接，每个客户端与服务器连接上之后，就可以称之为一个会话（&lt;code>Session&lt;/code>）。每个客户端都可以在自己的会话中向服务器发出请求语句，一个请求语句可能是某个事务的一部分，也就是对于服务器来说可能同时处理多个事务。在事务简介的章节中我们说过事务有一个称之为&lt;code>隔离性&lt;/code>的特性，理论上在某个事务对某个数据进行访问时，其他事务应该进行排队，当该事务提交之后，其他事务才可以继续访问这个数据。但是这样子的话对性能影响太大，我们既想保持事务的&lt;code>隔离性&lt;/code>，又想让服务器在处理访问同一数据的多个事务时性能尽量高些，鱼和熊掌不可得兼，舍一部分&lt;code>隔离性&lt;/code>而取性能者也。&lt;/p>
&lt;h2 id="事务并发执行遇到的问题">
 事务并发执行遇到的问题
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e5%b9%b6%e5%8f%91%e6%89%a7%e8%a1%8c%e9%81%87%e5%88%b0%e7%9a%84%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;p>怎么个舍弃法呢？我们先得看一下访问相同数据的事务在不保证串行执行（也就是执行完一个再执行另一个）的情况下可能会出现哪些问题：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>脏写（&lt;code>Dirty Write&lt;/code>）&lt;/p></description></item><item><title>第23章_后悔了怎么办-undo日志(下)</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC23%E7%AB%A0_%E5%90%8E%E6%82%94%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E-undo%E6%97%A5%E5%BF%97%E4%B8%8B/</link><pubDate>Sat, 18 Jan 2025 22:30:08 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC23%E7%AB%A0_%E5%90%8E%E6%82%94%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E-undo%E6%97%A5%E5%BF%97%E4%B8%8B/</guid><description>&lt;p>第23章 后悔了怎么办-undo日志（下）&lt;/p>
&lt;p>上一章我们主要介绍了为什么需要&lt;code>undo日志&lt;/code>，以及&lt;code>INSERT&lt;/code>、&lt;code>DELETE&lt;/code>、&lt;code>UPDATE&lt;/code>这些会对数据做改动的语句都会产生什么类型的&lt;code>undo日志&lt;/code>，还有不同类型的&lt;code>undo日志&lt;/code>的具体格式是什么。本章会继续介绍这些&lt;code>undo日志&lt;/code>会被具体写到什么地方，以及在写入过程中需要注意的一些问题。&lt;/p>
&lt;h1 id="通用链表结构">
 通用链表结构
 &lt;a class="anchor" href="#%e9%80%9a%e7%94%a8%e9%93%be%e8%a1%a8%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h1>
&lt;p>在写入&lt;code>undo日志&lt;/code>的过程中会使用到多个链表，很多链表都有同样的节点结构，如图所示：&lt;/p>
&lt;p>&lt;img src="img/23-01.png" alt="" />&lt;/p>
&lt;p>在某个表空间内，我们可以通过一个页的页号和在页内的偏移量来唯一定位一个节点的位置，这两个信息也就相当于指向这个节点的一个指针。所以： - &lt;code>Pre Node Page Number&lt;/code>和&lt;code>Pre Node Offset&lt;/code>的组合就是指向前一个节点的指针 - &lt;code>Next Node Page Number&lt;/code>和&lt;code>Next Node Offset&lt;/code>的组合就是指向后一个节点的指针。&lt;/p>
&lt;p>整个&lt;code>List Node&lt;/code>占用&lt;code>12&lt;/code>个字节的存储空间。&lt;/p>
&lt;p>为了更好的管理链表，设计&lt;code>InnoDB&lt;/code>的大佬还提出了一个基节点的结构，里边存储了这个链表的&lt;code>头节点&lt;/code>、&lt;code>尾节点&lt;/code>以及链表长度信息，基节点的结构示意图如下：&lt;/p>
&lt;p>&lt;img src="img/23-02.png" alt="" />&lt;/p>
&lt;p>其中： - &lt;code>List Length&lt;/code>表明该链表一共有多少节点。 - &lt;code>First Node Page Number&lt;/code>和&lt;code>First Node Offset&lt;/code>的组合就是指向链表头节点的指针。 - &lt;code>Last Node Page Number&lt;/code>和&lt;code>Last Node Offset&lt;/code>的组合就是指向链表尾节点的指针。&lt;/p>
&lt;p>整个&lt;code>List Base Node&lt;/code>占用&lt;code>16&lt;/code>个字节的存储空间。&lt;/p>
&lt;p>所以使用&lt;code>List Base Node&lt;/code>和&lt;code>List Node&lt;/code>这两个结构组成的链表的示意图就是这样：&lt;/p>
&lt;p>&lt;img src="img/23-03.png" alt="" />&lt;/p>
&lt;p>&lt;code>小贴士：上述链表结构我们在前面的文章中频频提到，尤其是在表空间那一章重点描述过，不过我不敢奢求大家都记住了，所以在这里又强调一遍，希望大家不要嫌我烦，我只是怕大家忘了学习后续内容吃力而已～&lt;/code>&lt;/p>
&lt;h1 id="fil_page_undo_log页面">
 FIL_PAGE_UNDO_LOG页面
 &lt;a class="anchor" href="#fil_page_undo_log%e9%a1%b5%e9%9d%a2">#&lt;/a>
&lt;/h1>
&lt;p>我们前面介绍表空间的时候说过，表空间其实是由许许多多的页面构成的，页面默认大小为&lt;code>16KB&lt;/code>。这些页面有不同的类型，比如类型为&lt;code>FIL_PAGE_INDEX&lt;/code>的页面用于存储聚簇索引以及二级索引，类型为&lt;code>FIL_PAGE_TYPE_FSP_HDR&lt;/code>的页面用于存储表空间头部信息的，还有其他各种类型的页面，其中有一种称之为&lt;code>FIL_PAGE_UNDO_LOG&lt;/code>类型的页面是专门用来存储&lt;code>undo日志&lt;/code>的，这种类型的页面的通用结构如下图所示（以默认的&lt;code>16KB&lt;/code>大小为例）：&lt;/p>
&lt;p>&lt;img src="img/23-04.png" alt="" />&lt;/p>
&lt;p>“类型为&lt;code>FIL_PAGE_UNDO_LOG&lt;/code>的页”这种说法太绕口，以后我们就简称为&lt;code>Undo页面&lt;/code>了。上图中的&lt;code>File Header&lt;/code>和&lt;code>File Trailer&lt;/code>是各种页面都有的通用结构，我们前面介绍过很多遍了，这里就不赘述了（忘记了的可以到讲述数据页结构或者表空间的章节中查看）。&lt;code>Undo Page Header&lt;/code>是&lt;code>Undo页面&lt;/code>所特有的，我们来看一下它的结构：&lt;/p>
&lt;p>&lt;img src="img/23-05.png" alt="" />&lt;/p></description></item><item><title>第22章_后悔了怎么办-undo日志(上)</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC22%E7%AB%A0_%E5%90%8E%E6%82%94%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E-undo%E6%97%A5%E5%BF%97%E4%B8%8A/</link><pubDate>Sat, 18 Jan 2025 22:30:06 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC22%E7%AB%A0_%E5%90%8E%E6%82%94%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E-undo%E6%97%A5%E5%BF%97%E4%B8%8A/</guid><description>&lt;p>第22章 后悔了怎么办-undo日志（上）&lt;/p>
&lt;h1 id="事务回滚的需求">
 事务回滚的需求
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e5%9b%9e%e6%bb%9a%e7%9a%84%e9%9c%80%e6%b1%82">#&lt;/a>
&lt;/h1>
&lt;p>我们说过&lt;code>事务&lt;/code>需要保证&lt;code>原子性&lt;/code>，也就是事务中的操作要么全部完成，要么什么也不做。但是偏偏有时候事务执行到一半会出现一些情况，比如： - 情况一：事务执行过程中可能遇到各种错误，比如服务器本身的错误，操作系统错误，甚至是突然断电导致的错误。 - 情况二：程序员可以在事务执行过程中手动输入&lt;code>ROLLBACK&lt;/code>语句结束当前的事务的执行。&lt;/p>
&lt;p>这两种情况都会导致事务执行到一半就结束，但是事务执行过程中可能已经修改了很多东西，为了保证事务的原子性，我们需要把东西改回原先的样子，这个过程就称之为&lt;code>回滚&lt;/code>（英文名：&lt;code>rollback&lt;/code>），这样就可以造成一个假象：&lt;strong>这个事务看起来什么都没做&lt;/strong>，所以符合&lt;code>原子性&lt;/code>要求。&lt;/p>
&lt;p>小时候我非常痴迷于象棋，总是想找厉害的大人下棋，赢棋是不可能赢棋的，这辈子都不可能赢棋的，又不想认输，只能偷偷的悔棋才能勉强玩的下去。&lt;code>悔棋&lt;/code>就是一种非常典型的&lt;code>回滚&lt;/code>操作，比如棋子往前走两步，&lt;code>悔棋&lt;/code>对应的操作就是向后走两步；比如棋子往左走一步，&lt;code>悔棋&lt;/code>对应的操作就是向右走一步。数据库中的回滚跟&lt;code>悔棋&lt;/code>差不多，你插入了一条记录，&lt;code>回滚&lt;/code>操作对应的就是把这条记录删除掉；你更新了一条记录，&lt;code>回滚&lt;/code>操作对应的就是把该记录更新为旧值；你删除了一条记录，&lt;code>回滚&lt;/code>操作对应的自然就是把该记录再插进去。说的貌似很简单的样子[手动偷笑😏]。&lt;/p>
&lt;p>从上面的描述中我们已经能隐约感觉到，每当我们要对一条记录做改动时（这里的&lt;code>改动&lt;/code>可以指&lt;code>INSERT&lt;/code>、&lt;code>DELETE&lt;/code>、&lt;code>UPDATE&lt;/code>），都需要留一手 —— &lt;strong>把回滚时所需的东西都给记下来&lt;/strong>。比方说： - 你插入一条记录时，至少要把这条记录的主键值记下来，之后回滚的时候只需要把这个主键值对应的记录删掉就好了。 - 你删除了一条记录，至少要把这条记录中的内容都记下来，这样之后回滚时再把由这些内容组成的记录插入到表中就好了。 - 你修改了一条记录，至少要把修改这条记录前的旧值都记录下来，这样之后回滚时再把这条记录更新为旧值就好了。&lt;/p>
&lt;p>设计数据库的大佬把这些为了回滚而记录的这些东东称之为撤销日志，英文名为&lt;code>undo log&lt;/code>，我们也可以土洋结合，称之为&lt;code>undo日志&lt;/code>。这里需要注意的一点是，由于查询操作（&lt;code>SELECT&lt;/code>）并不会修改任何用户记录，所以在查询操作执行时，并不需要记录相应的&lt;code>undo日志&lt;/code>。在真实的&lt;code>InnoDB&lt;/code>中，&lt;code>undo日志&lt;/code>其实并不像我们上面所说的那么简单，不同类型的操作产生的&lt;code>undo日志&lt;/code>的格式也是不同的，不过先暂时把这些容易让人脑子糊的具体细节放一放，我们先回过头来看看&lt;code>事务id&lt;/code>是个神马玩意儿。&lt;/p>
&lt;h1 id="事务id">
 事务id
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1id">#&lt;/a>
&lt;/h1>
&lt;h2 id="给事务分配id的时机">
 给事务分配id的时机
 &lt;a class="anchor" href="#%e7%bb%99%e4%ba%8b%e5%8a%a1%e5%88%86%e9%85%8did%e7%9a%84%e6%97%b6%e6%9c%ba">#&lt;/a>
&lt;/h2>
&lt;p>我们前面在介绍&lt;code>事务简介&lt;/code>时说过，一个事务可以是一个只读事务，或者是一个读写事务：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>我们可以通过&lt;code>START TRANSACTION READ ONLY&lt;/code>语句开启一个只读事务。&lt;/p>
&lt;p>在只读事务中不可以对普通的表（其他事务也能访问到的表）进行增、删、改操作，但可以对临时表做增、删、改操作。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>我们可以通过&lt;code>START TRANSACTION READ WRITE&lt;/code>语句开启一个读写事务，或者使用&lt;code>BEGIN&lt;/code>、&lt;code>START TRANSACTION&lt;/code>语句开启的事务默认也算是读写事务。&lt;/p>
&lt;p>在读写事务中可以对表执行增删改查操作。&lt;/p>
&lt;p>如果某个事务执行过程中对某个表执行了增、删、改操作，那么&lt;code>InnoDB&lt;/code>存储引擎就会给它分配一个独一无二的&lt;code>事务id&lt;/code>，分配方式如下：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>对于只读事务来说，只有在它第一次对某个用户创建的临时表执行增、删、改操作时才会为这个事务分配一个&lt;code>事务id&lt;/code>，否则的话是不分配&lt;code>事务id&lt;/code>的。&lt;/p>
&lt;p>&lt;code>小贴士：我们前面说过对某个查询语句执行EXPLAIN分析它的查询计划时，有时候在Extra列会看到Using temporary的提示，这个表明在执行该查询语句时会用到内部临时表。这个所谓的内部临时表和我们手动用CREATE TEMPORARY TABLE创建的用户临时表并不一样，在事务回滚时并不需要把执行SELECT语句过程中用到的内部临时表也回滚，在执行SELECT语句用到内部临时表时并不会为它分配事务id。&lt;/code> - 对于读写事务来说，只有在它第一次对某个表（包括用户创建的临时表）执行增、删、改操作时才会为这个事务分配一个&lt;code>事务id&lt;/code>，否则的话也是不分配&lt;code>事务id&lt;/code>的。&lt;/p>
&lt;p>有的时候虽然我们开启了一个读写事务，但是在这个事务中全是查询语句，并没有执行增、删、改的语句，那也就意味着这个事务并不会被分配一个&lt;code>事务id&lt;/code>。&lt;/p>
&lt;p>说了半天，&lt;code>事务id&lt;/code>有什么子用？这个先保密，后边会一步步的详细介绍。现在只要知道只有在事务对表中的记录做改动时才会为这个事务分配一个唯一的&lt;code>事务id&lt;/code>。 &lt;code>小贴士：上面描述的事务id分配策略是针对MySQL 5.7来说的，前面的版本的分配方式可能不同～&lt;/code>&lt;/p>
&lt;h2 id="事务id是怎么生成的">
 事务id是怎么生成的
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1id%e6%98%af%e6%80%8e%e4%b9%88%e7%94%9f%e6%88%90%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;p>这个&lt;code>事务id&lt;/code>本质上就是一个数字，它的分配策略和我们前面提到的对隐藏列&lt;code>row_id&lt;/code>（当用户没有为表创建主键和&lt;code>UNIQUE&lt;/code>键时&lt;code>InnoDB&lt;/code>自动创建的列）的分配策略大抵相同，具体策略如下： - 服务器会在内存中维护一个全局变量，每当需要为某个事务分配一个&lt;code>事务id&lt;/code>时，就会把该变量的值当作&lt;code>事务id&lt;/code>分配给该事务，并且把该变量自增1。 - 每当这个变量的值为&lt;code>256&lt;/code>的倍数时，就会将该变量的值刷新到系统表空间的页号为&lt;code>5&lt;/code>的页面中一个称之为&lt;code>Max Trx ID&lt;/code>的属性处，这个属性占用&lt;code>8&lt;/code>个字节的存储空间。 - 当系统下一次重新启动时，会将上面提到的&lt;code>Max Trx ID&lt;/code>属性加载到内存中，将该值加上256之后赋值给我们前面提到的全局变量（因为在上次关机时该全局变量的值可能大于&lt;code>Max Trx ID&lt;/code>属性值）。&lt;/p></description></item><item><title>第21章_说过的话就一定要办到-redo日志(下)</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC21%E7%AB%A0_%E8%AF%B4%E8%BF%87%E7%9A%84%E8%AF%9D%E5%B0%B1%E4%B8%80%E5%AE%9A%E8%A6%81%E5%8A%9E%E5%88%B0-redo%E6%97%A5%E5%BF%97%E4%B8%8B/</link><pubDate>Sat, 18 Jan 2025 22:30:05 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC21%E7%AB%A0_%E8%AF%B4%E8%BF%87%E7%9A%84%E8%AF%9D%E5%B0%B1%E4%B8%80%E5%AE%9A%E8%A6%81%E5%8A%9E%E5%88%B0-redo%E6%97%A5%E5%BF%97%E4%B8%8B/</guid><description>&lt;p>第21章 说过的话就一定要办到-redo日志（下）&lt;/p>
&lt;h1 id="redo日志文件">
 redo日志文件
 &lt;a class="anchor" href="#redo%e6%97%a5%e5%bf%97%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h1>
&lt;h2 id="redo日志刷盘时机">
 redo日志刷盘时机
 &lt;a class="anchor" href="#redo%e6%97%a5%e5%bf%97%e5%88%b7%e7%9b%98%e6%97%b6%e6%9c%ba">#&lt;/a>
&lt;/h2>
&lt;p>我们前面说&lt;code>mtr&lt;/code>运行过程中产生的一组&lt;code>redo&lt;/code>日志在&lt;code>mtr&lt;/code>结束时会被复制到&lt;code>log buffer&lt;/code>中，可是这些日志总在内存里呆着也不是个办法，在一些情况下它们会被刷新到磁盘里，比如：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>log buffer&lt;/code>空间不足时&lt;/p>
&lt;p>&lt;code>log buffer&lt;/code>的大小是有限的（通过系统变量&lt;code>innodb_log_buffer_size&lt;/code>指定），如果不停的往这个有限大小的&lt;code>log buffer&lt;/code>里塞入日志，很快它就会被填满。设计&lt;code>InnoDB&lt;/code>的大佬认为如果当前写入&lt;code>log buffer&lt;/code>的&lt;code>redo&lt;/code>日志量已经占满了&lt;code>log buffer&lt;/code>总容量的大约一半左右，就需要把这些日志刷新到磁盘上。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>事务提交时&lt;/p>
&lt;p>我们前面说过之所以使用&lt;code>redo&lt;/code>日志主要是因为它占用的空间少，还是顺序写，在事务提交时可以不把修改过的&lt;code>Buffer Pool&lt;/code>页面刷新到磁盘，但是为了保证持久性，必须要把修改这些页面对应的&lt;code>redo&lt;/code>日志刷新到磁盘。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>后台线程不停的刷刷刷&lt;/p>
&lt;p>后台有一个线程，大约每秒都会刷新一次&lt;code>log buffer&lt;/code>中的&lt;code>redo&lt;/code>日志到磁盘。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>正常关闭服务器时&lt;/p>
&lt;ul>
&lt;li>做所谓的&lt;code>checkpoint&lt;/code>时（我们现在没介绍过&lt;code>checkpoint&lt;/code>的概念，稍后会仔细介绍，稍安勿躁）&lt;/li>
&lt;li>其他的一些情况&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="redo日志文件组">
 redo日志文件组
 &lt;a class="anchor" href="#redo%e6%97%a5%e5%bf%97%e6%96%87%e4%bb%b6%e7%bb%84">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>MySQL&lt;/code>的数据目录（使用&lt;code>SHOW VARIABLES LIKE 'datadir'&lt;/code>查看）下默认有两个名为&lt;code>ib_logfile0&lt;/code>和&lt;code>ib_logfile1&lt;/code>的文件，&lt;code>log buffer&lt;/code>中的日志默认情况下就是刷新到这两个磁盘文件中。如果我们对默认的&lt;code>redo&lt;/code>日志文件不满意，可以通过下面几个启动参数来调节：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>innodb_log_group_home_dir&lt;/code>&lt;/p>
&lt;p>该参数指定了&lt;code>redo&lt;/code>日志文件所在的目录，默认值就是当前的数据目录。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>innodb_log_file_size&lt;/code>&lt;/p>
&lt;p>该参数指定了每个&lt;code>redo&lt;/code>日志文件的大小，在&lt;code>MySQL 5.7.21&lt;/code>这个版本中的默认值为&lt;code>48MB&lt;/code>，&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>innodb_log_files_in_group&lt;/code>&lt;/p>
&lt;p>该参数指定&lt;code>redo&lt;/code>日志文件的个数，默认值为2，最大值为100。&lt;/p>
&lt;p>从上面的描述中可以看到，磁盘上的&lt;code>redo&lt;/code>日志文件不只一个，而是以一个&lt;code>日志文件组&lt;/code>的形式出现的。这些文件以&lt;code>ib_logfile[数字]&lt;/code>（&lt;code>数字&lt;/code>可以是&lt;code>0&lt;/code>、&lt;code>1&lt;/code>、&lt;code>2&lt;/code>&amp;hellip;）的形式进行命名。在将&lt;code>redo&lt;/code>日志写入&lt;code>日志文件组&lt;/code>时，是从&lt;code>ib_logfile0&lt;/code>开始写，如果&lt;code>ib_logfile0&lt;/code>写满了，就接着&lt;code>ib_logfile1&lt;/code>写，同理，&lt;code>ib_logfile1&lt;/code>写满了就去写&lt;code>ib_logfile2&lt;/code>，依此类推。如果写到最后一个文件该咋办？那就重新转到&lt;code>ib_logfile0&lt;/code>继续写，所以整个过程如下图所示：&lt;/p>
&lt;p>&lt;img src="img/21-01.png" alt="" />&lt;/p>
&lt;p>总共的&lt;code>redo&lt;/code>日志文件大小其实就是：&lt;code>innodb_log_file_size × innodb_log_files_in_group&lt;/code>。 &lt;code>小贴士：如果采用循环使用的方式向redo日志文件组里写数据的话，那岂不是要追尾，也就是后写入的redo日志覆盖掉前面写的redo日志？当然可能了！所以设计InnoDB的大佬提出了checkpoint的概念，稍后我们重点介绍～&lt;/code>&lt;/p>
&lt;h2 id="redo日志文件格式">
 redo日志文件格式
 &lt;a class="anchor" href="#redo%e6%97%a5%e5%bf%97%e6%96%87%e4%bb%b6%e6%a0%bc%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;p>我们前面说过&lt;code>log buffer&lt;/code>本质上是一片连续的内存空间，被划分成了若干个&lt;code>512&lt;/code>字节大小的&lt;code>block&lt;/code>。&lt;strong>将log buffer中的redo日志刷新到磁盘的本质就是把block的镜像写入日志文件中&lt;/strong>，所以&lt;code>redo&lt;/code>日志文件其实也是由若干个&lt;code>512&lt;/code>字节大小的block组成。&lt;/p>
&lt;p>&lt;code>redo&lt;/code>日志文件组中的每个文件大小都一样，格式也一样，都是由两部分组成：&lt;/p>
&lt;ul>
&lt;li>前2048个字节，也就是前4个block是用来存储一些管理信息的。&lt;/li>
&lt;li>从第2048字节往后是用来存储&lt;code>log buffer&lt;/code>中的block镜像的。&lt;/li>
&lt;/ul>
&lt;p>所以我们前面所说的&lt;code>循环&lt;/code>使用redo日志文件，其实是从每个日志文件的第2048个字节开始算，画个示意图就是这样：&lt;/p>
&lt;p>&lt;img src="img/21-02.png" alt="" />&lt;/p>
&lt;p>普通block的格式我们在介绍&lt;code>log buffer&lt;/code>的时候都说过了，就是&lt;code>log block header&lt;/code>、&lt;code>log block body&lt;/code>、&lt;code>log block trialer&lt;/code>这三个部分，就不重复介绍了。这里需要介绍一下每个&lt;code>redo&lt;/code>日志文件前2048个字节，也就是前4个特殊block的格式都是干嘛的，废话少说，先看图：&lt;/p></description></item><item><title>第20章_说过的话就一定要办到-redo日志(上)</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC20%E7%AB%A0_%E8%AF%B4%E8%BF%87%E7%9A%84%E8%AF%9D%E5%B0%B1%E4%B8%80%E5%AE%9A%E8%A6%81%E5%8A%9E%E5%88%B0-redo%E6%97%A5%E5%BF%97%E4%B8%8A/</link><pubDate>Sat, 18 Jan 2025 22:30:04 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC20%E7%AB%A0_%E8%AF%B4%E8%BF%87%E7%9A%84%E8%AF%9D%E5%B0%B1%E4%B8%80%E5%AE%9A%E8%A6%81%E5%8A%9E%E5%88%B0-redo%E6%97%A5%E5%BF%97%E4%B8%8A/</guid><description>&lt;p>第20章 说过的话就一定要办到-redo日志（上）&lt;/p>
&lt;h1 id="事先说明">
 事先说明
 &lt;a class="anchor" href="#%e4%ba%8b%e5%85%88%e8%af%b4%e6%98%8e">#&lt;/a>
&lt;/h1>
&lt;p>本文以及接下来的几篇文章将会频繁的使用到我们前面介绍的&lt;code>InnoDB&lt;/code>记录行格式、页面格式、索引原理、表空间的组成等各种基础知识，如果大家对这些东西理解的不透彻，那么阅读下面的文字可能会有些吃力，为保证您的阅读体验，请确保自己已经掌握了我前面介绍的这些知识。&lt;/p>
&lt;h1 id="redo日志是什么">
 redo日志是什么
 &lt;a class="anchor" href="#redo%e6%97%a5%e5%bf%97%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h1>
&lt;p>我们知道&lt;code>InnoDB&lt;/code>存储引擎是以页为单位来管理存储空间的，我们进行的增删改查操作其实本质上都是在访问页面（包括读页面、写页面、创建新页面等操作）。我们前面介绍&lt;code>Buffer Pool&lt;/code>的时候说过，在真正访问页面之前，需要把在磁盘上的页缓存到内存中的&lt;code>Buffer Pool&lt;/code>之后才可以访问。但是在介绍事务的时候又强调过一个称之为&lt;code>持久性&lt;/code>的特性，就是说对于一个已经提交的事务，在事务提交后即使系统发生了崩溃，这个事务对数据库中所做的更改也不能丢失。但是如果我们只在内存的&lt;code>Buffer Pool&lt;/code>中修改了页面，假设在事务提交后突然发生了某个故障，导致内存中的数据都失效了，那么这个已经提交了的事务对数据库中所做的更改也就跟着丢失了，这是我们所不能忍受的（想想ATM机已经提示狗哥转账成功，但之后由于服务器出现故障，重启之后猫爷发现自己没收到钱，猫爷就被砍死了）。那么如何保证这个&lt;code>持久性&lt;/code>呢？一个很简单的做法就是&lt;strong>在事务提交完成之前把该事务所修改的所有页面都刷新到磁盘&lt;/strong>，但是这个简单粗暴的做法有些问题：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>刷新一个完整的数据页太浪费了&lt;/p>
&lt;p>有时候我们仅仅修改了某个页面中的一个字节，但是我们知道在&lt;code>InnoDB&lt;/code>中是以页为单位来进行磁盘IO的，也就是说我们在该事务提交时不得不将一个完整的页面从内存中刷新到磁盘，我们又知道一个页面默认是16KB大小，只修改一个字节就要刷新16KB的数据到磁盘上显然是太浪费了。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>随机IO刷起来比较慢&lt;/p>
&lt;p>一个事务可能包含很多语句，即使是一条语句也可能修改许多页面，倒霉催的是该事务修改的这些页面可能并不相邻，这就意味着在将某个事务修改的&lt;code>Buffer Pool&lt;/code>中的页面刷新到磁盘时，需要进行很多的随机IO，随机IO比顺序IO要慢，尤其对于传统的机械硬盘来说。&lt;/p>
&lt;p>咋办呢？再次回到我们的初心：&lt;strong>我们只是想让已经提交了的事务对数据库中数据所做的修改永久生效，即使后来系统崩溃，在重启后也能把这种修改恢复出来&lt;/strong>。所以我们其实没有必要在每次事务提交时就把该事务在内存中修改过的全部页面刷新到磁盘，只需要&lt;strong>把修改了哪些东西记录一下就好&lt;/strong>，比方说某个事务将系统表空间中的第100号页面中偏移量为1000处的那个字节的值&lt;code>1&lt;/code>改成&lt;code>2&lt;/code>我们只需要记录一下：&lt;/p>
&lt;blockquote>
&lt;p>将第0号表空间的100号页面的偏移量为1000处的值更新为&lt;code>2&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;p>这样我们在事务提交时，把上述内容刷新到磁盘中，即使之后系统崩溃了，重启之后只要按照上述内容所记录的步骤重新更新一下数据页，那么该事务对数据库中所做的修改又可以被恢复出来，也就意味着满足&lt;code>持久性&lt;/code>的要求。因为在系统奔溃重启时需要按照上述内容所记录的步骤重新更新数据页，所以上述内容也被称之为&lt;code>重做日志&lt;/code>，英文名为&lt;code>redo log&lt;/code>，我们也可以土洋结合，称之为&lt;code>redo日志&lt;/code>。与在事务提交时将所有修改过的内存中的页面刷新到磁盘中相比，只将该事务执行过程中产生的&lt;code>redo&lt;/code>日志刷新到磁盘的好处如下：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>redo&lt;/code>日志占用的空间非常小&lt;/p>
&lt;p>存储表空间ID、页号、偏移量以及需要更新的值所需的存储空间是很小的，关于&lt;code>redo&lt;/code>日志的格式我们稍后会详细介绍，现在只要知道一条&lt;code>redo&lt;/code>日志占用的空间不是很大就好了。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>redo&lt;/code>日志是顺序写入磁盘的&lt;/p>
&lt;p>在执行事务的过程中，每执行一条语句，就可能产生若干条&lt;code>redo&lt;/code>日志，这些日志是按照产生的顺序写入磁盘的，也就是使用顺序IO。&lt;/p>
&lt;h1 id="redo日志格式">
 redo日志格式
 &lt;a class="anchor" href="#redo%e6%97%a5%e5%bf%97%e6%a0%bc%e5%bc%8f">#&lt;/a>
&lt;/h1>
&lt;p>通过上面的内容我们知道，&lt;code>redo&lt;/code>日志本质上只是&lt;strong>记录了一下事务对数据库做了哪些修改&lt;/strong>。 设计&lt;code>InnoDB&lt;/code>的大佬们针对事务对数据库的不同修改场景定义了多种类型的&lt;code>redo&lt;/code>日志，但是绝大部分类型的&lt;code>redo&lt;/code>日志都有下面这种通用的结构：&lt;/p>
&lt;p>&lt;img src="img/20-01.png" alt="" />&lt;/p>
&lt;p>各个部分的详细释义如下：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>type&lt;/code>：该条&lt;code>redo&lt;/code>日志的类型。&lt;/p>
&lt;p>在&lt;code>MySQL 5.7.21&lt;/code>这个版本中，设计&lt;code>InnoDB&lt;/code>的大佬一共为&lt;code>redo&lt;/code>日志设计了53种不同的类型，稍后会详细介绍不同类型的&lt;code>redo&lt;/code>日志。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>space ID&lt;/code>：表空间ID。&lt;/p>
&lt;ul>
&lt;li>&lt;code>page number&lt;/code>：页号。&lt;/li>
&lt;li>&lt;code>data&lt;/code>：该条&lt;code>redo&lt;/code>日志的具体内容。&lt;/li>
&lt;/ul>
&lt;h2 id="简单的redo日志类型">
 简单的redo日志类型
 &lt;a class="anchor" href="#%e7%ae%80%e5%8d%95%e7%9a%84redo%e6%97%a5%e5%bf%97%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>我们前面介绍&lt;code>InnoDB&lt;/code>的记录行格式的时候说过，如果我们没有为某个表显式的定义主键，并且表中也没有定义&lt;code>Unique&lt;/code>键，那么&lt;code>InnoDB&lt;/code>会自动的为表添加一个称之为&lt;code>row_id&lt;/code>的隐藏列作为主键。为这个&lt;code>row_id&lt;/code>隐藏列赋值的方式如下： - 服务器会在内存中维护一个全局变量，每当向某个包含隐藏的&lt;code>row_id&lt;/code>列的表中插入一条记录时，就会把该变量的值当作新记录的&lt;code>row_id&lt;/code>列的值，并且把该变量自增1。 - 每当这个变量的值为256的倍数时，就会将该变量的值刷新到系统表空间的页号为&lt;code>7&lt;/code>的页面中一个称之为&lt;code>Max Row ID&lt;/code>的属性处（我们前面介绍表空间结构时详细说过）。 - 当系统启动时，会将上面提到的&lt;code>Max Row ID&lt;/code>属性加载到内存中，将该值加上256之后赋值给我们前面提到的全局变量（因为在上次关机时该全局变量的值可能大于&lt;code>Max Row ID&lt;/code>属性值）。&lt;/p>
&lt;p>这个&lt;code>Max Row ID&lt;/code>属性占用的存储空间是8个字节，当某个事务向某个包含&lt;code>row_id&lt;/code>隐藏列的表插入一条记录，并且为该记录分配的&lt;code>row_id&lt;/code>值为256的倍数时，就会向系统表空间页号为7的页面的相应偏移量处写入8个字节的值。但是我们要知道，这个写入实际上是在&lt;code>Buffer Pool&lt;/code>中完成的，我们需要为这个页面的修改记录一条&lt;code>redo&lt;/code>日志，以便在系统奔溃后能将已经提交的该事务对该页面所做的修改恢复出来。这种情况下对页面的修改是极其简单的，&lt;code>redo&lt;/code>日志中只需要&lt;strong>记录一下在某个页面的某个偏移量处修改了几个字节的值，具体被修改的内容是什么就好了&lt;/strong>，设计&lt;code>InnoDB&lt;/code>的大佬把这种极其简单的&lt;code>redo&lt;/code>日志称之为&lt;code>物理日志&lt;/code>，并且根据在页面中写入数据的多少划分了几种不同的&lt;code>redo&lt;/code>日志类型： - &lt;code>MLOG_1BYTE&lt;/code>（&lt;code>type&lt;/code>字段对应的十进制数字为&lt;code>1&lt;/code>）：表示在页面的某个偏移量处写入1个字节的&lt;code>redo&lt;/code>日志类型。 - &lt;code>MLOG_2BYTE&lt;/code>（&lt;code>type&lt;/code>字段对应的十进制数字为&lt;code>2&lt;/code>）：表示在页面的某个偏移量处写入2个字节的&lt;code>redo&lt;/code>日志类型。 - &lt;code>MLOG_4BYTE&lt;/code>（&lt;code>type&lt;/code>字段对应的十进制数字为&lt;code>4&lt;/code>）：表示在页面的某个偏移量处写入4个字节的&lt;code>redo&lt;/code>日志类型。 - &lt;code>MLOG_8BYTE&lt;/code>（&lt;code>type&lt;/code>字段对应的十进制数字为&lt;code>8&lt;/code>）：表示在页面的某个偏移量处写入8个字节的&lt;code>redo&lt;/code>日志类型。 - &lt;code>MLOG_WRITE_STRING&lt;/code>（&lt;code>type&lt;/code>字段对应的十进制数字为&lt;code>30&lt;/code>）：表示在页面的某个偏移量处写入一串数据。&lt;/p></description></item><item><title>第19章_从猫爷被杀说起-事务简介</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC19%E7%AB%A0_%E4%BB%8E%E7%8C%AB%E7%88%B7%E8%A2%AB%E6%9D%80%E8%AF%B4%E8%B5%B7-%E4%BA%8B%E5%8A%A1%E7%AE%80%E4%BB%8B/</link><pubDate>Sat, 18 Jan 2025 22:30:02 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC19%E7%AB%A0_%E4%BB%8E%E7%8C%AB%E7%88%B7%E8%A2%AB%E6%9D%80%E8%AF%B4%E8%B5%B7-%E4%BA%8B%E5%8A%A1%E7%AE%80%E4%BB%8B/</guid><description>&lt;p>第19章 从猫爷被杀说起-事务简介&lt;/p>
&lt;h1 id="事务的起源">
 事务的起源
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e7%9a%84%e8%b5%b7%e6%ba%90">#&lt;/a>
&lt;/h1>
&lt;p>对于大部分程序员来说，他们的任务就是把现实世界的业务场景映射到数据库世界。比如银行为了存储人们的账户信息会建立一个&lt;code>account&lt;/code>表： &lt;code>CREATE TABLE account ( id INT NOT NULL AUTO_INCREMENT COMMENT '自增id', name VARCHAR(100) COMMENT '客户名称', balance INT COMMENT '余额', PRIMARY KEY (id) ) Engine=InnoDB CHARSET=utf8;&lt;/code> 狗哥和猫爷是一对好基友，他们都到银行开一个账户，他们在现实世界中拥有的资产就会体现在数据库世界的&lt;code>account&lt;/code>表中。比如现在狗哥有&lt;code>11&lt;/code>元，猫爷只有&lt;code>2&lt;/code>元，那么现实中的这个情况映射到数据库的&lt;code>account&lt;/code>表就是这样： &lt;code>+----+--------+---------+ | id | name | balance | +----+--------+---------+ | 1 | 狗哥 | 11 | | 2 | 猫爷 | 2 | +----+--------+---------+&lt;/code> 在某个特定的时刻，狗哥猫爷这些家伙在银行所拥有的资产是一个特定的值，这些特定的值也可以被描述为账户在这个特定的时刻现实世界的一个状态。随着时间的流逝，狗哥和猫爷可能陆续进行向账户中存钱、取钱或者向别人转账等操作，这样他们账户中的余额就可能发生变动，&lt;strong>每一个操作都相当于现实世界中账户的一次状态转换&lt;/strong>。数据库世界作为现实世界的一个映射，自然也要进行相应的变动。不变不知道，一变吓一跳，现实世界中一些看似很简单的状态转换，映射到数据库世界却不是那么容易的。比方说有一次猫爷在赌场赌博输了钱，急忙打电话给狗哥要借10块钱，不然那些看场子的就会把自己剁了。现实世界中的狗哥走向了ATM机，输入了猫爷的账号以及10元的转账金额，然后按下确认，狗哥就拔卡走人了。对于数据库世界来说，相当于执行了下面这两条语句：&lt;/p>
&lt;p>&lt;code>UPDATE account SET balance = balance - 10 WHERE id = 1; UPDATE account SET balance = balance + 10 WHERE id = 2;&lt;/code>&lt;/p></description></item><item><title>第18章_调节磁盘和CPU的矛盾-InnoDB的BufferPool</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC18%E7%AB%A0_%E8%B0%83%E8%8A%82%E7%A3%81%E7%9B%98%E5%92%8CCPU%E7%9A%84%E7%9F%9B%E7%9B%BE-InnoDB%E7%9A%84BufferPool/</link><pubDate>Sat, 18 Jan 2025 22:30:01 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC18%E7%AB%A0_%E8%B0%83%E8%8A%82%E7%A3%81%E7%9B%98%E5%92%8CCPU%E7%9A%84%E7%9F%9B%E7%9B%BE-InnoDB%E7%9A%84BufferPool/</guid><description>&lt;p>第18章 调节磁盘和CPU的矛盾-InnoDB的Buffer Pool&lt;/p>
&lt;h1 id="缓存的重要性">
 缓存的重要性
 &lt;a class="anchor" href="#%e7%bc%93%e5%ad%98%e7%9a%84%e9%87%8d%e8%a6%81%e6%80%a7">#&lt;/a>
&lt;/h1>
&lt;p>通过前面的介绍我们知道，对于使用&lt;code>InnoDB&lt;/code>作为存储引擎的表来说，不管是用于存储用户数据的索引（包括聚簇索引和二级索引），还是各种系统数据，都是以&lt;code>页&lt;/code>的形式存放在&lt;code>表空间&lt;/code>中的，而所谓的&lt;code>表空间&lt;/code>只不过是&lt;code>InnoDB&lt;/code>对文件系统上一个或几个实际文件的抽象，也就是说我们的数据说到底还是存储在磁盘上的。但是各位也都知道，磁盘的速度慢的跟乌龟一样，怎么能配得上“快如风，疾如电”的&lt;code>CPU&lt;/code>呢？所以&lt;code>InnoDB&lt;/code>存储引擎在处理客户端的请求时，当需要访问某个页的数据时，就会把完整的页的数据全部加载到内存中，也就是说&lt;strong>即使我们只需要访问一个页的一条记录，那也需要先把整个页的数据加载到内存中&lt;/strong>。将整个页加载到内存中后就可以进行读写访问了，在进行完读写访问之后并不着急把该页对应的内存空间释放掉，而是将其&lt;code>缓存&lt;/code>起来，这样将来有请求再次访问该页面时，就可以省去磁盘&lt;code>IO&lt;/code>的开销了。&lt;/p>
&lt;h1 id="innodb的buffer-pool">
 InnoDB的Buffer Pool
 &lt;a class="anchor" href="#innodb%e7%9a%84buffer-pool">#&lt;/a>
&lt;/h1>
&lt;h2 id="什么是个buffer-pool">
 什么是个Buffer Pool
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e4%b8%aabuffer-pool">#&lt;/a>
&lt;/h2>
&lt;p>设计&lt;code>InnoDB&lt;/code>的大佬为了缓存磁盘中的页，在&lt;code>MySQL&lt;/code>服务器启动的时候就向操作系统申请了一片连续的内存，他们给这片内存起了个名，叫做&lt;code>Buffer Pool&lt;/code>（中文名是&lt;code>缓冲池&lt;/code>）。那它有多大呢？这个其实看我们机器的配置，如果你是土豪，你有&lt;code>512G&lt;/code>内存，你分配个几百G作为&lt;code>Buffer Pool&lt;/code>也可以啊，当然你要是没那么有钱，设置小点也行呀～ 默认情况下&lt;code>Buffer Pool&lt;/code>只有&lt;code>128M&lt;/code>大小。当然如果你嫌弃这个&lt;code>128M&lt;/code>太大或者太小，可以在启动服务器的时候配置&lt;code>innodb_buffer_pool_size&lt;/code>参数的值，它表示&lt;code>Buffer Pool&lt;/code>的大小，就像这样： &lt;code>[server] innodb_buffer_pool_size = 268435456&lt;/code> 其中，&lt;code>268435456&lt;/code>的单位是字节，也就是我指定&lt;code>Buffer Pool&lt;/code>的大小为&lt;code>256M&lt;/code>。需要注意的是，&lt;code>Buffer Pool&lt;/code>也不能太小，最小值为&lt;code>5M&lt;/code>(当小于该值时会自动设置成&lt;code>5M&lt;/code>)。&lt;/p>
&lt;h2 id="buffer-pool内部组成">
 Buffer Pool内部组成
 &lt;a class="anchor" href="#buffer-pool%e5%86%85%e9%83%a8%e7%bb%84%e6%88%90">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>Buffer Pool&lt;/code>中默认的缓存页大小和在磁盘上默认的页大小是一样的，都是&lt;code>16KB&lt;/code>。为了更好的管理这些在&lt;code>Buffer Pool&lt;/code>中的缓存页，设计&lt;code>InnoDB&lt;/code>的大佬为每一个缓存页都创建了一些所谓的&lt;code>控制信息&lt;/code>，这些控制信息包括该页所属的表空间编号、页号、缓存页在&lt;code>Buffer Pool&lt;/code>中的地址、链表节点信息、一些锁信息以及&lt;code>LSN&lt;/code>信息（锁和&lt;code>LSN&lt;/code>我们之后会具体介绍，现在可以先忽略），当然还有一些别的控制信息，我们这就不全介绍一遍了，挑重要的说嘛～&lt;/p>
&lt;p>每个缓存页对应的控制信息占用的内存大小是相同的，我们就把每个页对应的控制信息占用的一块内存称为一个&lt;code>控制块&lt;/code>吧，&lt;strong>控制块和缓存页是一一对应的，它们都被存放到 Buffer Pool 中，其中控制块被存放到 Buffer Pool 的前面，缓存页被存放到 Buffer Pool 后边&lt;/strong>，所以整个&lt;code>Buffer Pool&lt;/code>对应的内存空间看起来就是这样的：&lt;/p>
&lt;p>&lt;img src="img/18-01.png" alt="" />&lt;/p>
&lt;p>咦？控制块和缓存页之间的那个&lt;code>碎片&lt;/code>是个什么玩意儿？你想想啊，每一个控制块都对应一个缓存页，那在分配足够多的控制块和缓存页后，可能剩余的那点儿空间不够一对控制块和缓存页的大小，自然就用不到喽，这个用不到的那点儿内存空间就被称为&lt;code>碎片&lt;/code>了。当然，如果你把&lt;code>Buffer Pool&lt;/code>的大小设置的刚刚好的话，也可能不会产生&lt;code>碎片&lt;/code>～ &lt;code>小贴士：每个控制块大约占用缓存页大小的5%，在MySQL5.7.21这个版本中，每个控制块占用的大小是808字节。而我们设置的innodb_buffer_pool_size并不包含这部分控制块占用的内存空间大小，也就是说InnoDB在为Buffer Pool向操作系统申请连续的内存空间时，这片连续的内存空间一般会比innodb_buffer_pool_size的值大5%左右。&lt;/code>&lt;/p>
&lt;h2 id="free链表的管理">
 free链表的管理
 &lt;a class="anchor" href="#free%e9%93%be%e8%a1%a8%e7%9a%84%e7%ae%a1%e7%90%86">#&lt;/a>
&lt;/h2>
&lt;p>当我们最初启动&lt;code>MySQL&lt;/code>服务器的时候，需要完成对&lt;code>Buffer Pool&lt;/code>的初始化过程，就是先向操作系统申请&lt;code>Buffer Pool&lt;/code>的内存空间，然后把它划分成若干对控制块和缓存页。但是此时并没有真实的磁盘页被缓存到&lt;code>Buffer Pool&lt;/code>中（因为还没有用到），之后随着程序的运行，会不断的有磁盘上的页被缓存到&lt;code>Buffer Pool&lt;/code>中。那么问题来了，从磁盘上读取一个页到&lt;code>Buffer Pool&lt;/code>中的时候该放到哪个缓存页的位置呢？或者说怎么区分&lt;code>Buffer Pool&lt;/code>中哪些缓存页是空闲的，哪些已经被使用了呢？&lt;strong>我们最好在某个地方记录一下Buffer Pool中哪些缓存页是可用的&lt;/strong>，这个时候缓存页对应的&lt;code>控制块&lt;/code>就派上大用场了，我们可以&lt;strong>把所有空闲的缓存页对应的控制块作为一个节点放到一个链表中&lt;/strong>，这个链表也可以被称作&lt;code>free链表&lt;/code>（或者说空闲链表）。刚刚完成初始化的&lt;code>Buffer Pool&lt;/code>中所有的缓存页都是空闲的，所以每一个缓存页对应的控制块都会被加入到&lt;code>free链表&lt;/code>中，假设该&lt;code>Buffer Pool&lt;/code>中可容纳的缓存页数量为&lt;code>n&lt;/code>，那增加了&lt;code>free链表&lt;/code>的效果图就是这样的：&lt;/p>
&lt;p>&lt;img src="img/18-02.png" alt="" />&lt;/p>
&lt;p>从图中可以看出，我们为了管理好这个&lt;code>free链表&lt;/code>，特意为这个链表定义了一个&lt;code>基节点&lt;/code>，里边儿包含着链表的头节点地址，尾节点地址，以及当前链表中节点的数量等信息。这里需要注意的是，链表的基节点占用的内存空间并不包含在为&lt;code>Buffer Pool&lt;/code>申请的一大片连续内存空间之内，而是单独申请的一块内存空间。 &lt;code>小贴士：链表基节点占用的内存空间并不大，在MySQL5.7.21这个版本里，每个基节点只占用40字节大小。后边我们即将介绍许多不同的链表，它们的基节点和free链表的基节点的内存分配方式是一样一样的，都是单独申请的一块40字节大小的内存空间，并不包含在为Buffer Pool申请的一大片连续内存空间之内。&lt;/code>&lt;/p></description></item><item><title>第17章_神兵利器-optimizer_trace表的神器功效</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC17%E7%AB%A0_%E7%A5%9E%E5%85%B5%E5%88%A9%E5%99%A8-optimizer_trace%E8%A1%A8%E7%9A%84%E7%A5%9E%E5%99%A8%E5%8A%9F%E6%95%88/</link><pubDate>Sat, 18 Jan 2025 22:30:00 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC17%E7%AB%A0_%E7%A5%9E%E5%85%B5%E5%88%A9%E5%99%A8-optimizer_trace%E8%A1%A8%E7%9A%84%E7%A5%9E%E5%99%A8%E5%8A%9F%E6%95%88/</guid><description>&lt;p>第17章 神兵利器-optimizer trace表的神器功效&lt;/p>
&lt;p>对于&lt;code>MySQL 5.6&lt;/code>以及之前的版本来说，查询优化器就像是一个黑盒子一样，你只能通过&lt;code>EXPLAIN&lt;/code>语句查看到最后优化器决定使用的执行计划，却无法知道它为什么做这个决策。这对于一部分喜欢刨根问底的小伙伴来说简直是灾难：“我就觉得使用其他的执行方案比&lt;code>EXPLAIN&lt;/code>输出的这种方案强，凭什么优化器做的决定和我想的不一样呢？”&lt;/p>
&lt;p>在&lt;code>MySQL 5.6&lt;/code>以及之后的版本中，设计&lt;code>MySQL&lt;/code>的大佬贴心的为这部分小伙伴提出了一个&lt;code>optimizer trace&lt;/code>的功能，这个功能可以让我们方便的查看优化器生成执行计划的整个过程，这个功能的开启与关闭由系统变量&lt;code>optimizer_trace&lt;/code>决定，我们看一下： &lt;code>mysql&amp;gt; SHOW VARIABLES LIKE 'optimizer_trace'; +-----------------+--------------------------+ | Variable_name | Value | +-----------------+--------------------------+ | optimizer_trace | enabled=off,one_line=off | +-----------------+--------------------------+ 1 row in set (0.02 sec)&lt;/code> 可以看到&lt;code>enabled&lt;/code>值为&lt;code>off&lt;/code>，表明这个功能默认是关闭的。 &lt;code>小贴士：one_line的值是控制输出格式的，如果为on那么所有输出都将在一行中展示，不适合人阅读，所以我们就保持其默认值为off吧。&lt;/code> 如果想打开这个功能，必须首先把&lt;code>enabled&lt;/code>的值改为&lt;code>on&lt;/code>，就像这样： &lt;code>mysql&amp;gt; SET optimizer_trace=&amp;quot;enabled=on&amp;quot;; Query OK, 0 rows affected (0.00 sec)&lt;/code> 然后我们就可以输入我们想要查看优化过程的查询语句，当该查询语句执行完成后，就可以到&lt;code>information_schema&lt;/code>数据库下的&lt;code>OPTIMIZER_TRACE&lt;/code>表中查看完整的优化过程。这个&lt;code>OPTIMIZER_TRACE&lt;/code>表有4个列，分别是： - &lt;code>QUERY&lt;/code>：表示我们的查询语句。 - &lt;code>TRACE&lt;/code>：表示优化过程的JSON格式文本。 - &lt;code>MISSING_BYTES_BEYOND_MAX_MEM_SIZE&lt;/code>：由于优化过程可能会输出很多，如果超过某个限制时，多余的文本将不会被显示，这个字段展示了被忽略的文本字节数。 - &lt;code>INSUFFICIENT_PRIVILEGES&lt;/code>：表示是否没有权限查看优化过程，默认值是0，只有某些特殊情况下才会是&lt;code>1&lt;/code>，我们暂时不关心这个字段的值。&lt;/p>
&lt;p>完整的使用&lt;code>optimizer trace&lt;/code>功能的步骤总结如下： ```&lt;/p>
&lt;ol>
&lt;li>打开optimizer trace功能 (默认情况下它是关闭的):&lt;/li>
&lt;/ol>
&lt;p>SET optimizer_trace=&amp;ldquo;enabled=on&amp;rdquo;;&lt;/p>
&lt;ol start="2">
&lt;li>这里输入你自己的查询语句&lt;/li>
&lt;/ol>
&lt;p>SELECT &amp;hellip;;&lt;/p>
&lt;ol start="3">
&lt;li>从OPTIMIZER_TRACE表中查看上一个查询的优化过程&lt;/li>
&lt;/ol>
&lt;p>SELECT * FROM information_schema.OPTIMIZER_TRACE;&lt;/p></description></item><item><title>第16章_查询优化的百科全书-Explain详解(下)</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC16%E7%AB%A0_%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%9A%84%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6-Explain%E8%AF%A6%E8%A7%A3%E4%B8%8B/</link><pubDate>Sat, 18 Jan 2025 22:29:59 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC16%E7%AB%A0_%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%9A%84%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6-Explain%E8%AF%A6%E8%A7%A3%E4%B8%8B/</guid><description>&lt;p>第16章 查询优化的百科全书-Explain详解（下）&lt;/p>
&lt;h1 id="执行计划输出中各列详解">
 执行计划输出中各列详解
 &lt;a class="anchor" href="#%e6%89%a7%e8%a1%8c%e8%ae%a1%e5%88%92%e8%be%93%e5%87%ba%e4%b8%ad%e5%90%84%e5%88%97%e8%af%a6%e8%a7%a3">#&lt;/a>
&lt;/h1>
&lt;p>本章紧接着上一节的内容，继续介绍&lt;code>EXPLAIN&lt;/code>语句输出的各个列的意思。&lt;/p>
&lt;h2 id="extra">
 Extra
 &lt;a class="anchor" href="#extra">#&lt;/a>
&lt;/h2>
&lt;p>顾名思义，&lt;code>Extra&lt;/code>列是用来说明一些额外信息的，我们可以通过这些额外信息来更准确的理解&lt;code>MySQL&lt;/code>到底将如何执行给定的查询语句。&lt;code>MySQL&lt;/code>提供的额外信息有好几十个，我们就不一个一个介绍了（都介绍了感觉我们的文章就跟文档差不多了～），所以我们只挑一些平时常见的或者比较重要的额外信息介绍给大家。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>No tables used&lt;/code>&lt;/p>
&lt;p>当查询语句的没有&lt;code>FROM&lt;/code>子句时将会提示该额外信息，比如： &lt;code>mysql&amp;gt; EXPLAIN SELECT 1; +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ | 1 | SIMPLE | NULL | NULL | NULL | NULL | NULL | NULL | NULL | NULL | NULL | No tables used | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ 1 row in set, 1 warning (0.00 sec)&lt;/code>&lt;/p></description></item><item><title>第15章_查询优化的百科全书-Explain详解(上)</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC15%E7%AB%A0_%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%9A%84%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6-Explain%E8%AF%A6%E8%A7%A3%E4%B8%8A/</link><pubDate>Sat, 18 Jan 2025 22:29:57 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC15%E7%AB%A0_%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%9A%84%E7%99%BE%E7%A7%91%E5%85%A8%E4%B9%A6-Explain%E8%AF%A6%E8%A7%A3%E4%B8%8A/</guid><description>&lt;p>第15章 查询优化的百科全书-Explain详解（上）&lt;/p>
&lt;p>一条查询语句在经过&lt;code>MySQL&lt;/code>查询优化器的各种基于成本和规则的优化会后生成一个所谓的&lt;code>执行计划&lt;/code>，这个执行计划展示了接下来具体执行查询的方式，比如多表连接的顺序是什么，对于每个表采用什么访问方法来具体执行查询等等。设计&lt;code>MySQL&lt;/code>的大佬贴心的为我们提供了&lt;code>EXPLAIN&lt;/code>语句来帮助我们查看某个查询语句的具体执行计划，本章的内容就是为了帮助大家看懂&lt;code>EXPLAIN&lt;/code>语句的各个输出项都是干嘛使的，从而可以有针对性的提升我们查询语句的性能。&lt;/p>
&lt;p>如果我们想看看某个查询的执行计划的话，可以在具体的查询语句前面加一个&lt;code>EXPLAIN&lt;/code>，就像这样：&lt;/p>
&lt;p>&lt;code>mysql&amp;gt; EXPLAIN SELECT 1; +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ | 1 | SIMPLE | NULL | NULL | NULL | NULL | NULL | NULL | NULL | NULL | NULL | No tables used | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+----------------+ 1 row in set, 1 warning (0.01 sec)&lt;/code> 然后这输出的一大坨东西就是所谓的&lt;code>执行计划&lt;/code>，我的任务就是带领大家看懂这一大坨东西里边的每个列都是干什么用的，以及在这个&lt;code>执行计划&lt;/code>的辅助下，我们应该怎样改进自己的查询语句以使查询执行起来更高效。其实除了以&lt;code>SELECT&lt;/code>开头的查询语句，其余的&lt;code>DELETE&lt;/code>、&lt;code>INSERT&lt;/code>、&lt;code>REPLACE&lt;/code>以及&lt;code>UPDATE&lt;/code>语句前面都可以加上&lt;code>EXPLAIN&lt;/code>这个词儿，用来查看这些语句的执行计划，不过我们这里对&lt;code>SELECT&lt;/code>语句更感兴趣，所以后边只会以&lt;code>SELECT&lt;/code>语句为例来描述&lt;code>EXPLAIN&lt;/code>语句的用法。为了让大家先有一个感性的认识，我们把&lt;code>EXPLAIN&lt;/code>语句输出的各个列的作用先大致罗列一下：
列名 描述 &lt;code>id&lt;/code> 在一个大的查询语句中每个&lt;code>SELECT&lt;/code>关键字都对应一个唯一的&lt;code>id&lt;/code> &lt;code>select_type&lt;/code> &lt;code>SELECT&lt;/code>关键字对应的那个查询的类型 &lt;code>table&lt;/code> 表名 &lt;code>partitions&lt;/code> 匹配的分区信息 &lt;code>type&lt;/code> 针对单表的访问方法 &lt;code>possible_keys&lt;/code> 可能用到的索引 &lt;code>key&lt;/code> 实际上使用的索引 &lt;code>key_len&lt;/code> 实际使用到的索引长度 &lt;code>ref&lt;/code> 当使用索引列等值查询时，与索引列进行等值匹配的对象信息 &lt;code>rows&lt;/code> 预估的需要读取的记录条数 &lt;code>filtered&lt;/code> 某个表经过搜索条件过滤后剩余记录条数的百分比 &lt;code>Extra&lt;/code> 一些额外的信息 &lt;br>
需要注意的是，&lt;strong>大家如果看不懂上面输出列含义，那是正常的，千万不要纠结～&lt;/strong>。我在这里把它们都列出来只是为了描述一个轮廓，让大家有一个大致的印象，下面会细细道来，等会儿说完了不信你不会～ 为了故事的顺利发展，我们还是要请出我们前面已经用了n遍的&lt;code>single_table&lt;/code>表，为了防止大家忘了，再把它的结构描述一遍： &lt;code>CREATE TABLE single_table ( id INT NOT NULL AUTO_INCREMENT, key1 VARCHAR(100), key2 INT, key3 VARCHAR(100), key_part1 VARCHAR(100), key_part2 VARCHAR(100), key_part3 VARCHAR(100), common_field VARCHAR(100), PRIMARY KEY (id), KEY idx_key1 (key1), UNIQUE KEY idx_key2 (key2), KEY idx_key3 (key3), KEY idx_key_part(key_part1, key_part2, key_part3) ) Engine=InnoDB CHARSET=utf8;&lt;/code> 我们仍然假设有两个和&lt;code>single_table&lt;/code>表构造一模一样的&lt;code>s1&lt;/code>、&lt;code>s2&lt;/code>表，而且这两个表里边儿有10000条记录，除id列外其余的列都插入随机值。为了让大家有比较好的阅读体验，我们下面并不准备严格按照&lt;code>EXPLAIN&lt;/code>输出列的顺序来介绍这些列分别是干嘛的，大家注意一下就好了。&lt;/p></description></item><item><title>第14章_不好看就要多整容-MySQL基于规则的优化(内含关于子查询优化二三事儿)</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC14%E7%AB%A0_%E4%B8%8D%E5%A5%BD%E7%9C%8B%E5%B0%B1%E8%A6%81%E5%A4%9A%E6%95%B4%E5%AE%B9-MySQL%E5%9F%BA%E4%BA%8E%E8%A7%84%E5%88%99%E7%9A%84%E4%BC%98%E5%8C%96%E5%86%85%E5%90%AB%E5%85%B3%E4%BA%8E%E5%AD%90%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E4%BA%8C%E4%B8%89%E4%BA%8B%E5%84%BF/</link><pubDate>Sat, 18 Jan 2025 22:29:56 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC14%E7%AB%A0_%E4%B8%8D%E5%A5%BD%E7%9C%8B%E5%B0%B1%E8%A6%81%E5%A4%9A%E6%95%B4%E5%AE%B9-MySQL%E5%9F%BA%E4%BA%8E%E8%A7%84%E5%88%99%E7%9A%84%E4%BC%98%E5%8C%96%E5%86%85%E5%90%AB%E5%85%B3%E4%BA%8E%E5%AD%90%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E4%BA%8C%E4%B8%89%E4%BA%8B%E5%84%BF/</guid><description>&lt;p>第14章 不好看就要多整容-MySQL基于规则的优化（内含关于子查询优化二三事儿）&lt;/p>
&lt;p>大家别忘了&lt;code>MySQL&lt;/code>本质上是一个软件，设计&lt;code>MySQL&lt;/code>的大佬并不能要求使用这个软件的人个个都是数据库高高手，就像我写这本书的时候并不能要求各位在学之前就会了里边儿的知识。 &lt;code>吐槽一下：都会了的人谁还看呢，难道是为了精神上受感化？&lt;/code> 也就是说我们无法避免某些同学写一些执行起来十分耗费性能的语句。即使是这样，设计&lt;code>MySQL&lt;/code>的大佬还是依据一些规则，竭尽全力的把这个很糟糕的语句转换成某种可以比较高效执行的形式，这个过程也可以被称作&lt;code>查询重写&lt;/code>（就是人家觉得你写的语句不好，自己再重写一遍）。本章详细介绍一下一些比较重要的重写规则。&lt;/p>
&lt;h1 id="条件化简">
 条件化简
 &lt;a class="anchor" href="#%e6%9d%a1%e4%bb%b6%e5%8c%96%e7%ae%80">#&lt;/a>
&lt;/h1>
&lt;p>我们编写的查询语句的搜索条件本质上是一个表达式，这些表达式可能比较繁杂，或者不能高效的执行，&lt;code>MySQL&lt;/code>的查询优化器会为我们简化这些表达式。为了方便大家理解，我们后边举例子的时候都使用诸如&lt;code>a&lt;/code>、&lt;code>b&lt;/code>、&lt;code>c&lt;/code>之类的简单字母代表某个表的列名。&lt;/p>
&lt;h2 id="移除不必要的括号">
 移除不必要的括号
 &lt;a class="anchor" href="#%e7%a7%bb%e9%99%a4%e4%b8%8d%e5%bf%85%e8%a6%81%e7%9a%84%e6%8b%ac%e5%8f%b7">#&lt;/a>
&lt;/h2>
&lt;p>有时候表达式里有许多无用的括号，比如这样： &lt;code>((a = 5 AND b = c) OR ((a &amp;gt; c) AND (c &amp;lt; 5)))&lt;/code> 看着就很烦，优化器会把那些用不到的括号给干掉，就是这样： &lt;code>(a = 5 and b = c) OR (a &amp;gt; c AND c &amp;lt; 5)&lt;/code>&lt;/p>
&lt;h2 id="常量传递constant_propagation">
 常量传递（constant_propagation）
 &lt;a class="anchor" href="#%e5%b8%b8%e9%87%8f%e4%bc%a0%e9%80%92constant_propagation">#&lt;/a>
&lt;/h2>
&lt;p>有时候某个表达式是某个列和某个常量做等值匹配，比如这样： &lt;code>a = 5&lt;/code> 当这个表达式和其他涉及列&lt;code>a&lt;/code>的表达式使用&lt;code>AND&lt;/code>连接起来时，可以将其他表达式中的&lt;code>a&lt;/code>的值替换为&lt;code>5&lt;/code>，比如这样： &lt;code>a = 5 AND b &amp;gt; a&lt;/code> 就可以被转换为： &lt;code>a = 5 AND b &amp;gt; 5&lt;/code> &lt;code>小贴士：为什么用OR连接起来的表达式就不能进行常量传递呢？自己想想～&lt;/code>&lt;/p>
&lt;h2 id="等值传递equality_propagation">
 等值传递（equality_propagation）
 &lt;a class="anchor" href="#%e7%ad%89%e5%80%bc%e4%bc%a0%e9%80%92equality_propagation">#&lt;/a>
&lt;/h2>
&lt;p>有时候多个列之间存在等值匹配的关系，比如这样： &lt;code>a = b and b = c and c = 5&lt;/code> 这个表达式可以被简化为： &lt;code>a = 5 and b = 5 and c = 5&lt;/code>&lt;/p></description></item><item><title>第13章_兵马未动粮草先行-InnoDB统计数据是如何收集的</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC13%E7%AB%A0_%E5%85%B5%E9%A9%AC%E6%9C%AA%E5%8A%A8%E7%B2%AE%E8%8D%89%E5%85%88%E8%A1%8C-InnoDB%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E6%98%AF%E5%A6%82%E4%BD%95%E6%94%B6%E9%9B%86%E7%9A%84/</link><pubDate>Sat, 18 Jan 2025 22:29:55 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC13%E7%AB%A0_%E5%85%B5%E9%A9%AC%E6%9C%AA%E5%8A%A8%E7%B2%AE%E8%8D%89%E5%85%88%E8%A1%8C-InnoDB%E7%BB%9F%E8%AE%A1%E6%95%B0%E6%8D%AE%E6%98%AF%E5%A6%82%E4%BD%95%E6%94%B6%E9%9B%86%E7%9A%84/</guid><description>&lt;p>第13章 兵马未动，粮草先行-InnoDB统计数据是如何收集的&lt;/p>
&lt;p>我们前面介绍查询成本的时候经常用到一些统计数据，比如通过&lt;code>SHOW TABLE STATUS&lt;/code>可以看到关于表的统计数据，通过&lt;code>SHOW INDEX&lt;/code>可以看到关于索引的统计数据，那么这些统计数据是怎么来的呢？它们是以什么方式收集的呢？本章将聚焦于&lt;code>InnoDB&lt;/code>存储引擎的统计数据收集策略，看完本章大家就会明白为什么前面老说&lt;code>InnoDB&lt;/code>的统计信息是不精确的估计值了（言下之意就是我们不打算介绍&lt;code>MyISAM&lt;/code>存储引擎统计数据的收集和存储方式，有想了解的同学自己个儿看看文档）。&lt;/p>
&lt;h1 id="两种不同的统计数据存储方式">
 两种不同的统计数据存储方式
 &lt;a class="anchor" href="#%e4%b8%a4%e7%a7%8d%e4%b8%8d%e5%90%8c%e7%9a%84%e7%bb%9f%e8%ae%a1%e6%95%b0%e6%8d%ae%e5%ad%98%e5%82%a8%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h1>
&lt;p>&lt;code>InnoDB&lt;/code>提供了两种存储统计数据的方式：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>永久性的统计数据&lt;/p>
&lt;p>这种统计数据存储在磁盘上，也就是服务器重启之后这些统计数据还在。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>非永久性的统计数据&lt;/p>
&lt;p>这种统计数据存储在内存中，当服务器关闭时这些这些统计数据就都被清除掉了，等到服务器重启之后，在某些适当的场景下才会重新收集这些统计数据。&lt;/p>
&lt;p>设计&lt;code>MySQL&lt;/code>的大佬们给我们提供了系统变量&lt;code>innodb_stats_persistent&lt;/code>来控制到底采用哪种方式去存储统计数据。在&lt;code>MySQL 5.6.6&lt;/code>之前，&lt;code>innodb_stats_persistent&lt;/code>的值默认是&lt;code>OFF&lt;/code>，也就是说&lt;code>InnoDB&lt;/code>的统计数据默认是存储到内存的，之后的版本中&lt;code>innodb_stats_persistent&lt;/code>的值默认是&lt;code>ON&lt;/code>，也就是统计数据默认被存储到磁盘中。&lt;/p>
&lt;p>不过&lt;code>InnoDB&lt;/code>默认是&lt;strong>以表为单位来收集和存储统计数据的&lt;/strong>，也就是说我们可以把某些表的统计数据（以及该表的索引统计数据）存储在磁盘上，把另一些表的统计数据存储在内存中。怎么做到的呢？我们可以在创建和修改表的时候通过指定&lt;code>STATS_PERSISTENT&lt;/code>属性来指明该表的统计数据存储方式： &lt;code>CREATE TABLE 表名 (...) Engine=InnoDB, STATS_PERSISTENT = (1|0); ALTER TABLE 表名 Engine=InnoDB, STATS_PERSISTENT = (1|0);&lt;/code> 当&lt;code>STATS_PERSISTENT=1&lt;/code>时，表明我们想把该表的统计数据永久的存储到磁盘上，当&lt;code>STATS_PERSISTENT=0&lt;/code>时，表明我们想把该表的统计数据临时的存储到内存中。如果我们在创建表时未指定&lt;code>STATS_PERSISTENT&lt;/code>属性，那默认采用系统变量&lt;code>innodb_stats_persistent&lt;/code>的值作为该属性的值。&lt;/p>
&lt;h1 id="基于磁盘的永久性统计数据">
 基于磁盘的永久性统计数据
 &lt;a class="anchor" href="#%e5%9f%ba%e4%ba%8e%e7%a3%81%e7%9b%98%e7%9a%84%e6%b0%b8%e4%b9%85%e6%80%a7%e7%bb%9f%e8%ae%a1%e6%95%b0%e6%8d%ae">#&lt;/a>
&lt;/h1>
&lt;p>当我们选择把某个表以及该表索引的统计数据存放到磁盘上时，实际上是把这些统计数据存储到了两个表里：&lt;/p>
&lt;p>&lt;code>mysql&amp;gt; SHOW TABLES FROM mysql LIKE 'innodb%'; +---------------------------+ | Tables_in_mysql (innodb%) | +---------------------------+ | innodb_index_stats | | innodb_table_stats | +---------------------------+ 2 rows in set (0.01 sec)&lt;/code> 可以看到，这两个表都位于&lt;code>mysql&lt;/code>系统数据库下面，其中： - &lt;code>innodb_table_stats&lt;/code>存储了关于表的统计数据，每一条记录对应着一个表的统计数据。 - &lt;code>innodb_index_stats&lt;/code>存储了关于索引的统计数据，每一条记录对应着一个索引的一个统计项的统计数据。&lt;/p></description></item><item><title>第12章_谁最便宜就选谁-MySQL基于成本的优化</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC12%E7%AB%A0_%E8%B0%81%E6%9C%80%E4%BE%BF%E5%AE%9C%E5%B0%B1%E9%80%89%E8%B0%81-MySQL%E5%9F%BA%E4%BA%8E%E6%88%90%E6%9C%AC%E7%9A%84%E4%BC%98%E5%8C%96/</link><pubDate>Sat, 18 Jan 2025 22:29:53 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC12%E7%AB%A0_%E8%B0%81%E6%9C%80%E4%BE%BF%E5%AE%9C%E5%B0%B1%E9%80%89%E8%B0%81-MySQL%E5%9F%BA%E4%BA%8E%E6%88%90%E6%9C%AC%E7%9A%84%E4%BC%98%E5%8C%96/</guid><description>&lt;p>第12章 谁最便宜就选谁-MySQL基于成本的优化&lt;/p>
&lt;h1 id="什么是成本">
 什么是成本
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%88%90%e6%9c%ac">#&lt;/a>
&lt;/h1>
&lt;p>我们之前老说&lt;code>MySQL&lt;/code>执行一个查询可以有不同的执行方案，它会选择其中成本最低，或者说代价最低的那种方案去真正的执行查询。不过我们之前对&lt;code>成本&lt;/code>的描述是非常模糊的，其实在&lt;code>MySQL&lt;/code>中一条查询语句的执行成本是由下面这两个方面组成的：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>I/O&lt;/code>成本&lt;/p>
&lt;p>我们的表经常使用的&lt;code>MyISAM&lt;/code>、&lt;code>InnoDB&lt;/code>存储引擎都是将数据和索引都存储到磁盘上的，当我们想查询表中的记录时，需要先把数据或者索引加载到内存中然后再操作。这个从磁盘到内存这个加载的过程损耗的时间称之为&lt;code>I/O&lt;/code>成本。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>CPU&lt;/code>成本&lt;/p>
&lt;p>读取以及检测记录是否满足对应的搜索条件、对结果集进行排序等这些操作损耗的时间称之为&lt;code>CPU&lt;/code>成本。&lt;/p>
&lt;p>对于&lt;code>InnoDB&lt;/code>存储引擎来说，页是磁盘和内存之间交互的基本单位，设计&lt;code>MySQL&lt;/code>的大佬规定读取一个页面花费的成本默认是&lt;code>1.0&lt;/code>，读取以及检测一条记录是否符合搜索条件的成本默认是&lt;code>0.2&lt;/code>。&lt;code>1.0&lt;/code>、&lt;code>0.2&lt;/code>这些数字称之为&lt;code>成本常数&lt;/code>，这两个成本常数我们最常用到，其余的成本常数我们后边再说。 &lt;code>小贴士：需要注意的是，不管读取记录时需不需要检测是否满足搜索条件，其成本都算是0.2。&lt;/code>&lt;/p>
&lt;h1 id="单表查询的成本">
 单表查询的成本
 &lt;a class="anchor" href="#%e5%8d%95%e8%a1%a8%e6%9f%a5%e8%af%a2%e7%9a%84%e6%88%90%e6%9c%ac">#&lt;/a>
&lt;/h1>
&lt;h2 id="准备工作">
 准备工作
 &lt;a class="anchor" href="#%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c">#&lt;/a>
&lt;/h2>
&lt;p>为了故事的顺利发展，我们还得把之前用到的&lt;code>single_table&lt;/code>表搬来，怕大家忘了这个表长什么样，再给大家抄一遍： &lt;code>CREATE TABLE single_table ( id INT NOT NULL AUTO_INCREMENT, key1 VARCHAR(100), key2 INT, key3 VARCHAR(100), key_part1 VARCHAR(100), key_part2 VARCHAR(100), key_part3 VARCHAR(100), common_field VARCHAR(100), PRIMARY KEY (id), KEY idx_key1 (key1), UNIQUE KEY idx_key2 (key2), KEY idx_key3 (key3), KEY idx_key_part(key_part1, key_part2, key_part3) ) Engine=InnoDB CHARSET=utf8;&lt;/code> 还是假设这个表里边儿有10000条记录，除&lt;code>id&lt;/code>列外其余的列都插入随机值。下面正式开始我们的表演。&lt;/p>
&lt;h2 id="基于成本的优化步骤">
 基于成本的优化步骤
 &lt;a class="anchor" href="#%e5%9f%ba%e4%ba%8e%e6%88%90%e6%9c%ac%e7%9a%84%e4%bc%98%e5%8c%96%e6%ad%a5%e9%aa%a4">#&lt;/a>
&lt;/h2>
&lt;p>在一条单表查询语句真正执行之前，&lt;code>MySQL&lt;/code>的查询优化器会找出执行该语句所有可能使用的方案，对比之后找出成本最低的方案，这个成本最低的方案就是所谓的&lt;code>执行计划&lt;/code>，之后才会调用存储引擎提供的接口真正的执行查询，这个过程总结一下就是这样： 1. 根据搜索条件，找出所有可能使用的索引 2. 计算全表扫描的代价 3. 计算使用不同索引执行查询的代价 4. 对比各种执行方案的代价，找出成本最低的那一个&lt;/p></description></item><item><title>第10章_条条大路通罗马-单表访问方法</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC10%E7%AB%A0_%E6%9D%A1%E6%9D%A1%E5%A4%A7%E8%B7%AF%E9%80%9A%E7%BD%97%E9%A9%AC-%E5%8D%95%E8%A1%A8%E8%AE%BF%E9%97%AE%E6%96%B9%E6%B3%95/</link><pubDate>Sat, 18 Jan 2025 22:29:51 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC10%E7%AB%A0_%E6%9D%A1%E6%9D%A1%E5%A4%A7%E8%B7%AF%E9%80%9A%E7%BD%97%E9%A9%AC-%E5%8D%95%E8%A1%A8%E8%AE%BF%E9%97%AE%E6%96%B9%E6%B3%95/</guid><description>&lt;p>第10章 条条大路通罗马-单表访问方法&lt;/p>
&lt;p>对于我们这些&lt;code>MySQL&lt;/code>的使用者来说，&lt;code>MySQL&lt;/code>其实就是一个软件，平时用的最多的就是查询功能。DBA时不时丢过来一些慢查询语句让优化，我们如果连查询是怎么执行的都不清楚还优化个毛线，所以是时候掌握真正的技术了。我们在第一章的时候就曾说过，&lt;code>MySQL Server&lt;/code>有一个称为&lt;code>查询优化器&lt;/code>的模块，一条查询语句进行语法解析之后就会被交给查询优化器来进行优化，优化的结果就是生成一个所谓的&lt;code>执行计划&lt;/code>，这个执行计划表明了应该使用哪些索引进行查询，表之间的连接顺序是什么样的，最后会按照执行计划中的步骤调用存储引擎提供的方法来真正的执行查询，并将查询结果返回给用户。不过查询优化这个主题有点儿大，在学会跑之前还得先学会走，所以本章先来看看&lt;code>MySQL&lt;/code>怎么执行单表查询（就是&lt;code>FROM&lt;/code>子句后边只有一个表，最简单的那种查询～）。不过需要强调的一点是，在学习本章前务必看过前面关于记录结构、数据页结构以及索引的部分，如果你不能保证这些东西已经完全掌握，那么本章不适合你。&lt;/p>
&lt;p>为了故事的顺利发展，我们先得有个表： &lt;code>CREATE TABLE single_table ( id INT NOT NULL AUTO_INCREMENT, key1 VARCHAR(100), key2 INT, key3 VARCHAR(100), key_part1 VARCHAR(100), key_part2 VARCHAR(100), key_part3 VARCHAR(100), common_field VARCHAR(100), PRIMARY KEY (id), KEY idx_key1 (key1), UNIQUE KEY idx_key2 (key2), KEY idx_key3 (key3), KEY idx_key_part(key_part1, key_part2, key_part3) ) Engine=InnoDB CHARSET=utf8;&lt;/code> 我们为这个&lt;code>single_table&lt;/code>表建立了1个聚簇索引和4个二级索引，分别是：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>为&lt;code>id&lt;/code>列建立的聚簇索引。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>为&lt;code>key1&lt;/code>列建立的&lt;code>idx_key1&lt;/code>二级索引。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>为&lt;code>key2&lt;/code>列建立的&lt;code>idx_key2&lt;/code>二级索引，而且该索引是唯一二级索引。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>为&lt;code>key3&lt;/code>列建立的&lt;code>idx_key3&lt;/code>二级索引。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>为&lt;code>key_part1&lt;/code>、&lt;code>key_part2&lt;/code>、&lt;code>key_part3&lt;/code>列建立的&lt;code>idx_key_part&lt;/code>二级索引，这也是一个联合索引。&lt;/p>
&lt;p>然后我们需要为这个表插入10000行记录，除&lt;code>id&lt;/code>列外其余的列都插入随机值就好了，具体的插入语句我就不写了，自己写个程序插入吧（id列是自增主键列，不需要我们手动插入）。&lt;/p>
&lt;h1 id="访问方法access-method的概念">
 访问方法（access method）的概念
 &lt;a class="anchor" href="#%e8%ae%bf%e9%97%ae%e6%96%b9%e6%b3%95access-method%e7%9a%84%e6%a6%82%e5%bf%b5">#&lt;/a>
&lt;/h1>
&lt;p>想必各位都用过高德地图来查找到某个地方的路线吧（此处没有为高德地图打广告的意思，他们没给我钱，大家用百度地图也可以啊），如果我们搜西安钟楼到大雁塔之间的路线的话，地图软件会给出n种路线供我们选择，如果我们实在闲的没事儿干并且足够有钱的话，还可以用南辕北辙的方式绕地球一圈到达目的地。也就是说，不论采用哪一种方式，我们最终的目标就是到达大雁塔这个地方。回到&lt;code>MySQL&lt;/code>中来，我们平时所写的那些查询语句本质上只是一种声明式的语法，只是告诉&lt;code>MySQL&lt;/code>我们要获取的数据符合哪些规则，至于&lt;code>MySQL&lt;/code>背地里是怎么把查询结果搞出来的那是&lt;code>MySQL&lt;/code>自己的事儿。对于单个表的查询来说，设计MySQL的大佬把查询的执行方式大致分为下面两种：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>使用全表扫描进行查询&lt;/p>
&lt;p>这种执行方式很好理解，就是把表的每一行记录都扫一遍嘛，把符合搜索条件的记录加入到结果集就完了。不管是什么查询都可以使用这种方式执行，当然，这种也是最笨的执行方式。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>使用索引进行查询&lt;/p></description></item><item><title>第9章_存放页的大池子-InnoDB的表空间</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC9%E7%AB%A0_%E5%AD%98%E6%94%BE%E9%A1%B5%E7%9A%84%E5%A4%A7%E6%B1%A0%E5%AD%90-InnoDB%E7%9A%84%E8%A1%A8%E7%A9%BA%E9%97%B4/</link><pubDate>Sat, 18 Jan 2025 22:29:49 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC9%E7%AB%A0_%E5%AD%98%E6%94%BE%E9%A1%B5%E7%9A%84%E5%A4%A7%E6%B1%A0%E5%AD%90-InnoDB%E7%9A%84%E8%A1%A8%E7%A9%BA%E9%97%B4/</guid><description>&lt;p>第9章 存放页的大池子-InnoDB的表空间&lt;/p>
&lt;p>通过前面儿的内容大家知道，&lt;code>表空间&lt;/code>是一个抽象的概念，对于系统表空间来说，对应着文件系统中一个或多个实际文件；对于每个独立表空间来说，对应着文件系统中一个名为&lt;code>表名.ibd&lt;/code>的实际文件。大家可以把表空间想象成被切分为许许多多个&lt;code>页&lt;/code>的池子，当我们想为某个表插入一条记录的时候，就从池子中捞出一个对应的页来把数据写进去。本章内容会深入到表空间的各个细节中，带领大家在&lt;code>InnoDB&lt;/code>存储结构的池子中畅游。由于本章中将会涉及比较多的概念，虽然这些概念都不难，但是却相互依赖，所以奉劝大家在看的时候：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>不要跳着看！&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>不要跳着看！&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>不要跳着看！&lt;/strong>&lt;/p>
&lt;h1 id="回忆一些旧知识">
 回忆一些旧知识
 &lt;a class="anchor" href="#%e5%9b%9e%e5%bf%86%e4%b8%80%e4%ba%9b%e6%97%a7%e7%9f%a5%e8%af%86">#&lt;/a>
&lt;/h1>
&lt;h2 id="页类型">
 页类型
 &lt;a class="anchor" href="#%e9%a1%b5%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>再一次强调，InnoDB是以页为单位管理存储空间的，我们的聚簇索引（也就是完整的表数据）和其他的二级索引都是以&lt;code>B+&lt;/code>树的形式保存到表空间的，而&lt;code>B+&lt;/code>树的节点就是数据页。我们前面说过，这个数据页的类型名其实是：&lt;code>FIL_PAGE_INDEX&lt;/code>，除了这种存放索引数据的页类型之外，InnoDB也为了不同的目的设计了若干种不同类型的页，为了唤醒大家的记忆，我们再一次把各种常用的页类型提出来：
类型名称 十六进制 描述 &lt;code>FIL_PAGE_TYPE_ALLOCATED&lt;/code> 0x0000 最新分配，还没使用 &lt;code>FIL_PAGE_UNDO_LOG&lt;/code> 0x0002 Undo日志页 &lt;code>FIL_PAGE_INODE&lt;/code> 0x0003 段信息节点 &lt;code>FIL_PAGE_IBUF_FREE_LIST&lt;/code> 0x0004 Insert Buffer空闲列表 &lt;code>FIL_PAGE_IBUF_BITMAP&lt;/code> 0x0005 Insert Buffer位图 &lt;code>FIL_PAGE_TYPE_SYS&lt;/code> 0x0006 系统页 &lt;code>FIL_PAGE_TYPE_TRX_SYS&lt;/code> 0x0007 事务系统数据 &lt;code>FIL_PAGE_TYPE_FSP_HDR&lt;/code> 0x0008 表空间头部信息 &lt;code>FIL_PAGE_TYPE_XDES&lt;/code> 0x0009 扩展描述页 &lt;code>FIL_PAGE_TYPE_BLOB&lt;/code> 0x000A BLOB页 &lt;code>FIL_PAGE_INDEX&lt;/code> 0x45BF 索引页，也就是我们所说的&lt;code>数据页&lt;/code> &lt;br>
因为页类型前面都有个&lt;code>FIL_PAGE&lt;/code>或者&lt;code>FIL_PAGE_TYPE&lt;/code>的前缀，为简便起见我们后边介绍页类型的时候就把这些前缀省略掉了，比方说&lt;code>FIL_PAGE_TYPE_ALLOCATED&lt;/code>类型称为&lt;code>ALLOCATED&lt;/code>类型，&lt;code>FIL_PAGE_INDEX&lt;/code>类型称为&lt;code>INDEX&lt;/code>类型。&lt;/p>
&lt;h2 id="页通用部分">
 页通用部分
 &lt;a class="anchor" href="#%e9%a1%b5%e9%80%9a%e7%94%a8%e9%83%a8%e5%88%86">#&lt;/a>
&lt;/h2>
&lt;p>我们前面说过数据页，也就是&lt;code>INDEX&lt;/code>类型的页由7个部分组成，其中的两个部分是所有类型的页都通用的。当然我不能寄希望于你把我说的话都记住，所以在这里重新强调一遍，任何类型的页都有下面这种通用的结构：&lt;/p>
&lt;p>&lt;img src="img/09-01.png" alt="" />&lt;/p>
&lt;p>从上图中可以看出，任何类型的页都会包含这两个部分：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>File Header&lt;/code>：记录页的一些通用信息&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>File Trailer&lt;/code>：校验页是否完整，保证从内存到磁盘刷新时内容的一致性。&lt;/p>
&lt;p>对于&lt;code>File Trailer&lt;/code>我们不再做过多强调，全部忘记了的话可以到将数据页的那一章回顾一下。我们这里再强调一遍&lt;code>File Header&lt;/code>的各个组成部分：
名称 占用空间大小 描述 &lt;code>FIL_PAGE_SPACE_OR_CHKSUM&lt;/code> &lt;code>4&lt;/code>字节 页的校验和（checksum值） &lt;code>FIL_PAGE_OFFSET&lt;/code> &lt;code>4&lt;/code>字节 页号 &lt;code>FIL_PAGE_PREV&lt;/code> &lt;code>4&lt;/code>字节 上一个页的页号 &lt;code>FIL_PAGE_NEXT&lt;/code> &lt;code>4&lt;/code>字节 下一个页的页号 &lt;code>FIL_PAGE_LSN&lt;/code> &lt;code>8&lt;/code>字节 页被最后修改时对应的日志序列位置（英文名是：Log Sequence Number） &lt;code>FIL_PAGE_TYPE&lt;/code> &lt;code>2&lt;/code>字节 该页的类型 &lt;code>FIL_PAGE_FILE_FLUSH_LSN&lt;/code> &lt;code>8&lt;/code>字节 仅在系统表空间的一个页中定义，代表文件至少被刷新到了对应的LSN值 &lt;code>FIL_PAGE_ARCH_LOG_NO_OR_SPACE_ID&lt;/code> &lt;code>4&lt;/code>字节 页属于哪个表空间 &lt;br>
现在除了名称里边儿带有&lt;code>LSN&lt;/code>的两个字段大家可能看不懂以外，其他的字段肯定都是倍儿熟了，不过我们仍要强调这么几点：&lt;/p></description></item><item><title>第8章_数据的家-MySQL的数据目录</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC8%E7%AB%A0_%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%B6-MySQL%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/</link><pubDate>Sat, 18 Jan 2025 22:29:48 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC8%E7%AB%A0_%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AE%B6-MySQL%E7%9A%84%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/</guid><description>&lt;p>第8章 数据的家-MySQL的数据目录&lt;/p>
&lt;h1 id="数据库和文件系统的关系">
 数据库和文件系统的关系
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e5%92%8c%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f%e7%9a%84%e5%85%b3%e7%b3%bb">#&lt;/a>
&lt;/h1>
&lt;p>我们知道像&lt;code>InnoDB&lt;/code>、&lt;code>MyISAM&lt;/code>这样的存储引擎都是把表存储在磁盘上的，而操作系统用来管理磁盘的那个东东又被称为&lt;code>文件系统&lt;/code>，所以用专业一点的话来表述就是：&lt;strong>像 &lt;em>&lt;strong>InnoDB&lt;/strong>&lt;/em> 、 &lt;em>&lt;strong>MyISAM&lt;/strong>&lt;/em> 这样的存储引擎都是把表存储在文件系统上的&lt;/strong>。当我们想读取数据的时候，这些存储引擎会从文件系统中把数据读出来返回给我们，当我们想写入数据的时候，这些存储引擎会把这些数据又写回文件系统。本章就是要介绍一下&lt;code>InnoDB&lt;/code>和&lt;code>MyISAM&lt;/code>这两个存储引擎的数据如何在文件系统中存储的。&lt;/p>
&lt;h1 id="mysql数据目录">
 MySQL数据目录
 &lt;a class="anchor" href="#mysql%e6%95%b0%e6%8d%ae%e7%9b%ae%e5%bd%95">#&lt;/a>
&lt;/h1>
&lt;p>MySQL服务器程序在启动时会到文件系统的某个目录下加载一些文件，之后在运行过程中产生的数据也都会存储到这个目录下的某些文件中，这个目录就称为&lt;code>数据目录&lt;/code>，我们下面就要详细唠唠这个目录下具体都有哪些重要的东西。&lt;/p>
&lt;h2 id="数据目录和安装目录的区别">
 数据目录和安装目录的区别
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%9b%ae%e5%bd%95%e5%92%8c%e5%ae%89%e8%a3%85%e7%9b%ae%e5%bd%95%e7%9a%84%e5%8c%ba%e5%88%ab">#&lt;/a>
&lt;/h2>
&lt;p>我们之前只接触过&lt;code>MySQL&lt;/code>的安装目录（在安装&lt;code>MySQL&lt;/code>的时候我们可以自己指定），我们重点强调过这个&lt;code>安装目录&lt;/code>下非常重要的&lt;code>bin&lt;/code>目录，它里边存储了许多关于控制客户端程序和服务器程序的命令（许多可执行文件，比如&lt;code>mysql&lt;/code>，&lt;code>mysqld&lt;/code>，&lt;code>mysqld_safe&lt;/code>等等等等好几十个）。而&lt;code>数据目录&lt;/code>是用来存储&lt;code>MySQL&lt;/code>在运行过程中产生的数据，一定要和本章要讨论的&lt;code>安装目录&lt;/code>区别开！&lt;strong>一定要区分开&lt;/strong>！&lt;strong>一定要区分开&lt;/strong>！&lt;strong>一定要区分开&lt;/strong>！&lt;/p>
&lt;h2 id="如何确定mysql中的数据目录">
 如何确定MySQL中的数据目录
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e7%a1%ae%e5%ae%9amysql%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae%e7%9b%ae%e5%bd%95">#&lt;/a>
&lt;/h2>
&lt;p>那说了半天，到底&lt;code>MySQL&lt;/code>把数据都存到哪个路径下呢？其实&lt;code>数据目录&lt;/code>对应着一个系统变量&lt;code>datadir&lt;/code>，我们在使用客户端与服务器建立连接之后查看这个系统变量的值就可以了： &lt;code>mysql&amp;gt; SHOW VARIABLES LIKE 'datadir'; +---------------+-----------------------+ | Variable_name | Value | +---------------+-----------------------+ | datadir | /usr/local/var/mysql/ | +---------------+-----------------------+ 1 row in set (0.00 sec)&lt;/code> 从结果中可以看出，&lt;strong>在我的计算机上&lt;/strong>&lt;code>MySQL&lt;/code>的数据目录就是&lt;code>/usr/local/var/mysql/&lt;/code>，你用你的计算机试试呗～&lt;/p>
&lt;h1 id="数据目录的结构">
 数据目录的结构
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%9b%ae%e5%bd%95%e7%9a%84%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h1>
&lt;p>&lt;code>MySQL&lt;/code>在运行过程中都会产生哪些数据呢？当然会包含我们创建的数据库、表、视图和触发器等等的用户数据，除了这些用户数据，为了程序更好的运行，&lt;code>MySQL&lt;/code>也会创建一些其他的额外数据，我们接下来细细的品味一下这个&lt;code>数据目录&lt;/code>下的内容。&lt;/p>
&lt;h2 id="数据库在文件系统中的表示">
 数据库在文件系统中的表示
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e5%9c%a8%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f%e4%b8%ad%e7%9a%84%e8%a1%a8%e7%a4%ba">#&lt;/a>
&lt;/h2>
&lt;p>每当我们使用&lt;code>CREATE DATABASE 数据库名&lt;/code>语句创建一个数据库的时候，在文件系统上实际发生了什么呢？其实很简单，&lt;strong>每个数据库都对应数据目录下的一个子目录，或者说对应一个文件夹&lt;/strong>，我们每当我们新建一个数据库时，&lt;code>MySQL&lt;/code>会帮我们做这两件事儿：&lt;/p>
&lt;ol>
&lt;li>&lt;/li>
&lt;/ol>
&lt;p>在&lt;code>数据目录&lt;/code>下创建一个和数据库名同名的子目录（或者说是文件夹）。&lt;/p>
&lt;ol start="2">
&lt;li>&lt;/li>
&lt;/ol>
&lt;p>在该与数据库名同名的子目录下创建一个名为&lt;code>db.opt&lt;/code>的文件，这个文件中包含了该数据库的各种属性，比方说该数据库的字符集和比较规则是什么。&lt;/p>
&lt;p>比方说我们查看一下&lt;strong>在我的计算机上&lt;/strong>当前有哪些数据库： &lt;code>mysql&amp;gt; SHOW DATABASES; +--------------------+ | Database | +--------------------+ | information_schema | | charset_demo_db | | dahaizi | | mysql | | performance_schema | | sys | | xiaohaizi | +--------------------+ 7 rows in set (0.00 sec)&lt;/code> 可以看到在我的计算机上当前有7个数据库，其中&lt;code>charset_demo_db&lt;/code>、&lt;code>dahaizi&lt;/code>和&lt;code>xiaohaizi&lt;/code>数据库是我们自定义的，其余4个数据库是属于MySQL自带的系统数据库。我们再看一下&lt;strong>我的计算机上&lt;/strong>的&lt;code>数据目录&lt;/code>下的内容： ``` . ├── auto.cnf ├── ca-key.pem ├── ca.pem ├── charset_demo_db ├── client-cert.pem ├── client-key.pem ├── dahaizi ├── ib_buffer_pool ├── ib_logfile0 ├── ib_logfile1 ├── ibdata1 ├── ibtmp1 ├── mysql ├── performance_schema ├── private_key.pem ├── public_key.pem ├── server-cert.pem ├── server-key.pem ├── sys ├── xiaohaizideMacBook-Pro.local.err ├── xiaohaizideMacBook-Pro.local.pid └── xiaohaizi&lt;/p></description></item><item><title>第7章_好东西也得先学会怎么用-B+树索引的使用</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC7%E7%AB%A0_%E5%A5%BD%E4%B8%9C%E8%A5%BF%E4%B9%9F%E5%BE%97%E5%85%88%E5%AD%A6%E4%BC%9A%E6%80%8E%E4%B9%88%E7%94%A8-B+%E6%A0%91%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 18 Jan 2025 22:29:46 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC7%E7%AB%A0_%E5%A5%BD%E4%B8%9C%E8%A5%BF%E4%B9%9F%E5%BE%97%E5%85%88%E5%AD%A6%E4%BC%9A%E6%80%8E%E4%B9%88%E7%94%A8-B+%E6%A0%91%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>&lt;p>第7章 好东西也得先学会怎么用-B+树索引的使用&lt;/p>
&lt;p>我们前面详细、详细又详细的介绍了&lt;code>InnoDB&lt;/code>存储引擎的&lt;code>B+&lt;/code>树索引，我们必须熟悉下面这些结论：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>每个索引都对应一棵&lt;code>B+&lt;/code>树，&lt;code>B+&lt;/code>树分为好多层，最下面一层是叶子节点，其余的是内节点。所有&lt;code>用户记录&lt;/code>都存储在&lt;code>B+&lt;/code>树的叶子节点，所有&lt;code>目录项记录&lt;/code>都存储在内节点。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>InnoDB&lt;/code>存储引擎会自动为主键（如果没有它会自动帮我们添加）建立&lt;code>聚簇索引&lt;/code>，聚簇索引的叶子节点包含完整的用户记录。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>我们可以为自己感兴趣的列建立&lt;code>二级索引&lt;/code>，&lt;code>二级索引&lt;/code>的叶子节点包含的用户记录由&lt;code>索引列 + 主键&lt;/code>组成，所以如果想通过&lt;code>二级索引&lt;/code>来查找完整的用户记录的话，需要通过&lt;code>回表&lt;/code>操作，也就是在通过&lt;code>二级索引&lt;/code>找到主键值之后再到&lt;code>聚簇索引&lt;/code>中查找完整的用户记录。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>B+&lt;/code>树中每层节点都是按照索引列值从小到大的顺序排序而组成了双向链表，而且每个页内的记录（不论是用户记录还是目录项记录）都是按照索引列的值从小到大的顺序而形成了一个单链表。如果是&lt;code>联合索引&lt;/code>的话，则页面和记录先按照&lt;code>联合索引&lt;/code>前面的列排序，如果该列值相同，再按照&lt;code>联合索引&lt;/code>后边的列排序。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>通过索引查找记录是从&lt;code>B+&lt;/code>树的根节点开始，一层一层向下搜索。由于每个页面都按照索引列的值建立了&lt;code>Page Directory&lt;/code>（页目录），所以在这些页面中的查找非常快。&lt;/p>
&lt;p>如果你读上面的几点结论有些任何一点点疑惑的话，那下面的内容不适合你，回过头先去看前面的内容去。&lt;/p>
&lt;h1 id="索引的代价">
 索引的代价
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95%e7%9a%84%e4%bb%a3%e4%bb%b7">#&lt;/a>
&lt;/h1>
&lt;p>在熟悉了&lt;code>B+&lt;/code>树索引原理之后，本篇文章的主题是介绍如何更好的使用索引，虽然索引是个好东西，可不能乱建，在介绍如何更好的使用索引之前先要了解一下使用这玩意儿的代价，它在空间和时间上都会拖后腿：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>空间上的代价&lt;/p>
&lt;p>这个是显而易见的，每建立一个索引都要为它建立一棵&lt;code>B+&lt;/code>树，每一棵&lt;code>B+&lt;/code>树的每一个节点都是一个数据页，一个页默认会占用&lt;code>16KB&lt;/code>的存储空间，一棵很大的&lt;code>B+&lt;/code>树由许多数据页组成，那可是很大的一片存储空间呢。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>时间上的代价&lt;/p>
&lt;p>每次对表中的数据进行增、删、改操作时，都需要去修改各个&lt;code>B+&lt;/code>树索引。而且我们讲过，&lt;code>B+&lt;/code>树每层节点都是按照索引列的值从小到大的顺序排序而组成了双向链表。不论是叶子节点中的记录，还是内节点中的记录（也就是不论是用户记录还是目录项记录）都是按照索引列的值从小到大的顺序而形成了一个单向链表。而增、删、改操作可能会对节点和记录的排序造成破坏，所以存储引擎需要额外的时间进行一些记录移位，页面分裂、页面回收什么的操作来维护好节点和记录的排序。如果我们建了许多索引，每个索引对应的&lt;code>B+&lt;/code>树都要进行相关的维护操作，这还能不给性能拖后腿么？&lt;/p>
&lt;p>所以说，一个表上索引建的越多，就会占用越多的存储空间，在增删改记录的时候性能就越差。为了能建立又好又少的索引，我们先得学学这些索引在哪些条件下起作用的。&lt;/p>
&lt;h1 id="b树索引适用的条件">
 B+树索引适用的条件
 &lt;a class="anchor" href="#b%e6%a0%91%e7%b4%a2%e5%bc%95%e9%80%82%e7%94%a8%e7%9a%84%e6%9d%a1%e4%bb%b6">#&lt;/a>
&lt;/h1>
&lt;p>下面我们将介绍许多种让&lt;code>B+&lt;/code>树索引发挥最大效能的技巧和注意事项，不过大家要清楚，所有的技巧都是源自你对&lt;code>B+&lt;/code>树索引本质的理解，所以如果你还不能保证对&lt;code>B+&lt;/code>树索引充分的理解，那么再次建议回过头把前面的内容看完了再来，要不然读文章对你来说是一种折磨。首先，&lt;code>B+&lt;/code>树索引并不是万能的，并不是所有的查询语句都能用到我们建立的索引。下面介绍几个我们可能使用&lt;code>B+&lt;/code>树索引来进行查询的情况。为了故事的顺利发展，我们需要先创建一个表，这个表是用来存储人的一些基本信息的： &lt;code>CREATE TABLE person_info( id INT NOT NULL auto_increment, name VARCHAR(100) NOT NULL, birthday DATE NOT NULL, phone_number CHAR(11) NOT NULL, country varchar(100) NOT NULL, PRIMARY KEY (id), KEY idx_name_birthday_phone_number (name, birthday, phone_number) );&lt;/code> 对于这个&lt;code>person_info&lt;/code>表我们需要注意两点：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>表中的主键是&lt;code>id&lt;/code>列，它存储一个自动递增的整数。所以&lt;code>InnoDB&lt;/code>存储引擎会自动为&lt;code>id&lt;/code>列建立聚簇索引。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>我们额外定义了一个二级索引&lt;code>idx_name_birthday_phone_number&lt;/code>，它是由3个列组成的联合索引。所以在这个索引对应的&lt;code>B+&lt;/code>树的叶子节点处存储的用户记录只保留&lt;code>name&lt;/code>、&lt;code>birthday&lt;/code>、&lt;code>phone_number&lt;/code>这三个列的值以及主键&lt;code>id&lt;/code>的值，并不会保存&lt;code>country&lt;/code>列的值。&lt;/p></description></item><item><title>第6章_快速查询的秘籍-B+树索引</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC6%E7%AB%A0_%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E7%9A%84%E7%A7%98%E7%B1%8D-B+%E6%A0%91%E7%B4%A2%E5%BC%95/</link><pubDate>Sat, 18 Jan 2025 22:29:45 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC6%E7%AB%A0_%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E7%9A%84%E7%A7%98%E7%B1%8D-B+%E6%A0%91%E7%B4%A2%E5%BC%95/</guid><description>&lt;p>第6章 快速查询的秘籍-B+树索引&lt;/p>
&lt;p>前面我们详细介绍了&lt;code>InnoDB&lt;/code>数据页的7个组成部分，知道了各个数据页可以组成一个&lt;code>双向链表&lt;/code>，而每个数据页中的记录会按照主键值从小到大的顺序组成一个&lt;code>单向链表&lt;/code>，每个数据页都会为存储在它里边儿的记录生成一个&lt;code>页目录&lt;/code>，在通过主键查找某条记录的时候可以在&lt;code>页目录&lt;/code>中使用二分法快速定位到对应的槽，然后再遍历该槽对应分组中的记录即可快速找到指定的记录（如果你对这段话有一丁点儿疑惑，那么接下来的部分不适合你，返回去看一下数据页结构吧）。页和记录的关系示意图如下：&lt;/p>
&lt;p>&lt;img src="img/06-01.png" alt="" />&lt;/p>
&lt;p>其中页a、页b、页c &amp;hellip; 页n 这些页可以不在物理结构上相连，只要通过双向链表相关联即可。&lt;/p>
&lt;h1 id="没有索引的查找">
 没有索引的查找
 &lt;a class="anchor" href="#%e6%b2%a1%e6%9c%89%e7%b4%a2%e5%bc%95%e7%9a%84%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h1>
&lt;p>本集的主题是&lt;code>索引&lt;/code>，在正式介绍&lt;code>索引&lt;/code>之前，我们需要了解一下没有索引的时候是怎么查找记录的。为了方便大家理解，我们下面先只介绍搜索条件为对某个列精确匹配的情况，所谓精确匹配，就是搜索条件中用等于&lt;code>=&lt;/code>连接起的表达式，比如这样： &lt;code>SELECT [列名列表] FROM 表名 WHERE 列名 = xxx;&lt;/code>&lt;/p>
&lt;h2 id="在一个页中的查找">
 在一个页中的查找
 &lt;a class="anchor" href="#%e5%9c%a8%e4%b8%80%e4%b8%aa%e9%a1%b5%e4%b8%ad%e7%9a%84%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h2>
&lt;p>假设目前表中的记录比较少，所有的记录都可以被存放到一个页中，在查找记录的时候可以根据搜索条件的不同分为两种情况：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>以主键为搜索条件&lt;/p>
&lt;p>这个查找过程我们已经很熟悉了，可以在&lt;code>页目录&lt;/code>中使用二分法快速定位到对应的槽，然后再遍历该槽对应分组中的记录即可快速找到指定的记录。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>以其他列作为搜索条件&lt;/p>
&lt;p>对非主键列的查找的过程可就不这么幸运了，因为在数据页中并没有对非主键列建立所谓的&lt;code>页目录&lt;/code>，所以我们无法通过二分法快速定位相应的&lt;code>槽&lt;/code>。这种情况下只能从&lt;code>最小记录&lt;/code>开始依次遍历单链表中的每条记录，然后对比每条记录是不是符合搜索条件。很显然，这种查找的效率是非常低的。&lt;/p>
&lt;h2 id="在很多页中查找">
 在很多页中查找
 &lt;a class="anchor" href="#%e5%9c%a8%e5%be%88%e5%a4%9a%e9%a1%b5%e4%b8%ad%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h2>
&lt;p>大部分情况下我们表中存放的记录都是非常多的，需要好多的数据页来存储这些记录。在很多页中查找记录的话可以分为两个步骤：&lt;/p>
&lt;ol>
&lt;li>定位到记录所在的页。&lt;/li>
&lt;li>从所在的页内中查找相应的记录。&lt;/li>
&lt;/ol>
&lt;p>在没有索引的情况下，不论是根据主键列或者其他列的值进行查找，&lt;strong>由于我们并不能快速的定位到记录所在的页，所以只能从第一个页沿着双向链表一直往下找，在每一个页中根据我们刚刚介绍过的查找方式去查找指定的记录&lt;/strong>。因为要遍历所有的数据页，所以这种方式显然是超级耗时的，如果一个表有一亿条记录，使用这种方式去查找记录那要等到猴年马月才能等到查找结果。所以祖国和人民都在期盼一种能高效完成搜索的方法，&lt;code>索引&lt;/code>同志就要亮相登台了。&lt;/p>
&lt;h1 id="索引">
 索引
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95">#&lt;/a>
&lt;/h1>
&lt;p>为了故事的顺利发展，我们先建一个表： &lt;code>mysql&amp;gt; CREATE TABLE index_demo( -&amp;gt; c1 INT, -&amp;gt; c2 INT, -&amp;gt; c3 CHAR(1), -&amp;gt; PRIMARY KEY(c1) -&amp;gt; ) ROW_FORMAT = Compact; Query OK, 0 rows affected (0.03 sec)&lt;/code> 这个新建的&lt;code>index_demo&lt;/code>表中有2个&lt;code>INT&lt;/code>类型的列，1个&lt;code>CHAR(1)&lt;/code>类型的列，而且我们规定了&lt;code>c1&lt;/code>列为主键，这个表使用&lt;code>Compact&lt;/code>行格式来实际存储记录的。为了我们理解上的方便，我们简化了一下&lt;code>index_demo&lt;/code>表的行格式示意图：&lt;/p></description></item><item><title>第5章 盛放记录的大盒子-InnoDB数据页结构</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC5%E7%AB%A0-%E7%9B%9B%E6%94%BE%E8%AE%B0%E5%BD%95%E7%9A%84%E5%A4%A7%E7%9B%92%E5%AD%90-InnoDB%E6%95%B0%E6%8D%AE%E9%A1%B5%E7%BB%93%E6%9E%84/</link><pubDate>Sat, 18 Jan 2025 22:29:43 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC5%E7%AB%A0-%E7%9B%9B%E6%94%BE%E8%AE%B0%E5%BD%95%E7%9A%84%E5%A4%A7%E7%9B%92%E5%AD%90-InnoDB%E6%95%B0%E6%8D%AE%E9%A1%B5%E7%BB%93%E6%9E%84/</guid><description>&lt;p>第5章 盛放记录的大盒子-InnoDB数据页结构&lt;/p>
&lt;h1 id="不同类型的页简介">
 不同类型的页简介
 &lt;a class="anchor" href="#%e4%b8%8d%e5%90%8c%e7%b1%bb%e5%9e%8b%e7%9a%84%e9%a1%b5%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>前面我们简单提了一下&lt;code>页&lt;/code>的概念，它是&lt;code>InnoDB&lt;/code>管理存储空间的基本单位，一个页的大小一般是&lt;code>16KB&lt;/code>。&lt;code>InnoDB&lt;/code>为了不同的目的而设计了许多种不同类型的&lt;code>页&lt;/code>，比如存放表空间头部信息的页，存放&lt;code>Insert Buffer&lt;/code>信息的页，存放&lt;code>INODE&lt;/code>信息的页，存放&lt;code>undo&lt;/code>日志信息的页等等等等。当然了，如果我说的这些名词你一个都没有听过，就当我放了个屁吧～ 不过这没有一毛钱关系，我们今儿个也不准备说这些类型的页，我们聚焦的是那些存放我们表中记录的那种类型的页，官方称这种存放记录的页为索引（&lt;code>INDEX&lt;/code>）页，鉴于我们还没有了解过索引是个什么东西，而这些表中的记录就是我们日常口中所称的&lt;code>数据&lt;/code>，所以目前还是叫这种存放记录的页为&lt;code>数据页&lt;/code>吧。&lt;/p>
&lt;h1 id="数据页结构的快速浏览">
 数据页结构的快速浏览
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e9%a1%b5%e7%bb%93%e6%9e%84%e7%9a%84%e5%bf%ab%e9%80%9f%e6%b5%8f%e8%a7%88">#&lt;/a>
&lt;/h1>
&lt;p>数据页代表的这块&lt;code>16KB&lt;/code>大小的存储空间可以被划分为多个部分，不同部分有不同的功能，各个部分如图所示：&lt;/p>
&lt;p>&lt;img src="img/05-01.png" alt="" />&lt;/p>
&lt;p>从图中可以看出，一个&lt;code>InnoDB&lt;/code>数据页的存储空间大致被划分成了&lt;code>7&lt;/code>个部分，有的部分占用的字节数是确定的，有的部分占用的字节数是不确定的。下面我们用表格的方式来大致描述一下这7个部分都存储一些什么内容（快速的瞅一眼就行了，后边会详细介绍的）：
名称 中文名 占用空间大小 简单描述 &lt;code>File Header&lt;/code> 文件头部 &lt;code>38&lt;/code>字节 页的一些通用信息 &lt;code>Page Header&lt;/code> 页面头部 &lt;code>56&lt;/code>字节 数据页专有的一些信息 &lt;code>Infimum + Supremum&lt;/code> 最小记录和最大记录 &lt;code>26&lt;/code>字节 两个虚拟的行记录 &lt;code>User Records&lt;/code> 用户记录 不确定 实际存储的行记录内容 &lt;code>Free Space&lt;/code> 空闲空间 不确定 页中尚未使用的空间 &lt;code>Page Directory&lt;/code> 页面目录 不确定 页中的某些记录的相对位置 &lt;code>File Trailer&lt;/code> 文件尾部 &lt;code>8&lt;/code>字节 校验页是否完整 &lt;br>
&lt;code>小贴士：我们接下来并不打算按照页中各个部分的出现顺序来依次介绍它们，因为各个部分中会出现很多大家目前不理解的概念，这会打击各位读文章的信心与兴趣，希望各位能接受这种拍摄手法～&lt;/code>&lt;/p>
&lt;h1 id="记录在页中的存储">
 记录在页中的存储
 &lt;a class="anchor" href="#%e8%ae%b0%e5%bd%95%e5%9c%a8%e9%a1%b5%e4%b8%ad%e7%9a%84%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h1>
&lt;p>在页的7个组成部分中，我们自己存储的记录会按照我们指定的&lt;code>行格式&lt;/code>存储到&lt;code>User Records&lt;/code>部分。但是在一开始生成页的时候，其实并没有&lt;code>User Records&lt;/code>这个部分，每当我们插入一条记录，都会从&lt;code>Free Space&lt;/code>部分，也就是尚未使用的存储空间中申请一个记录大小的空间划分到&lt;code>User Records&lt;/code>部分，当&lt;code>Free Space&lt;/code>部分的空间全部被&lt;code>User Records&lt;/code>部分替代掉之后，也就意味着这个页使用完了，如果还有新的记录插入的话，就需要去申请新的页了，这个过程的图示如下：&lt;/p>
&lt;p>&lt;img src="img/05-02.png" alt="" />&lt;/p>
&lt;p>为了更好的管理在&lt;code>User Records&lt;/code>中的这些记录，&lt;code>InnoDB&lt;/code>可费了一番力气呢，在哪费力气了呢？不就是把记录按照指定的行格式一条一条摆在&lt;code>User Records&lt;/code>部分么？其实这话还得从记录行格式的&lt;code>记录头信息&lt;/code>中说起。&lt;/p></description></item><item><title>第4章_从一条记录说起-InnoDB记录结构</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC4%E7%AB%A0_%E4%BB%8E%E4%B8%80%E6%9D%A1%E8%AE%B0%E5%BD%95%E8%AF%B4%E8%B5%B7-InnoDB%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%84/</link><pubDate>Sat, 18 Jan 2025 22:29:42 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC4%E7%AB%A0_%E4%BB%8E%E4%B8%80%E6%9D%A1%E8%AE%B0%E5%BD%95%E8%AF%B4%E8%B5%B7-InnoDB%E8%AE%B0%E5%BD%95%E7%BB%93%E6%9E%84/</guid><description>&lt;p>第4章 从一条记录说起-InnoDB记录结构&lt;/p>
&lt;h1 id="准备工作">
 准备工作
 &lt;a class="anchor" href="#%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;p>到现在为止，&lt;code>MySQL&lt;/code>对于我们来说还是一个黑盒，我们只负责使用客户端发送请求并等待服务器返回结果，表中的数据到底存到了哪里？以什么格式存放的？&lt;code>MySQL&lt;/code>是以什么方式来访问的这些数据？这些问题我们统统不知道，对于未知领域的探索向来就是社会主义核心价值观中的一部分，作为新一代社会主义接班人，不把它们搞懂怎么支援祖国建设呢？&lt;/p>
&lt;p>我们前面介绍请求处理过程的时候提到过，&lt;code>MySQL&lt;/code>服务器上负责对表中数据的读取和写入工作的部分是&lt;code>存储引擎&lt;/code>，而服务器又支持不同类型的存储引擎，比如&lt;code>InnoDB&lt;/code>、&lt;code>MyISAM&lt;/code>、&lt;code>Memory&lt;/code>什么的，不同的存储引擎一般是由不同的人为实现不同的特性而开发的，&lt;strong>真实数据在不同存储引擎中存放的格式一般是不同的&lt;/strong>，甚至有的存储引擎比如&lt;code>Memory&lt;/code>都不用磁盘来存储数据，也就是说关闭服务器后表中的数据就消失了。由于&lt;code>InnoDB&lt;/code>是&lt;code>MySQL&lt;/code>默认的存储引擎，也是我们最常用到的存储引擎，我们也没有那么多时间去把各个存储引擎的内部实现都看一遍，所以本集要介绍的是使用&lt;code>InnoDB&lt;/code>作为存储引擎的数据存储结构，了解了一个存储引擎的数据存储结构之后，其他的存储引擎都是依葫芦画瓢，等我们用到了再说。&lt;/p>
&lt;h1 id="innodb页简介">
 InnoDB页简介
 &lt;a class="anchor" href="#innodb%e9%a1%b5%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>&lt;code>InnoDB&lt;/code>是一个将表中的数据存储到磁盘上的存储引擎，所以即使关机后重启我们的数据还是存在的。而真正处理数据的过程是发生在内存中的，所以需要把磁盘中的数据加载到内存中，如果是处理写入或修改请求的话，还需要把内存中的内容刷新到磁盘上。而我们知道读写磁盘的速度非常慢，和内存读写差了几个数量级，所以当我们想从表中获取某些记录时，&lt;code>InnoDB&lt;/code>存储引擎需要一条一条的把记录从磁盘上读出来么？不，那样会慢死，&lt;code>InnoDB&lt;/code>采取的方式是：&lt;strong>将数据划分为若干个页，以页作为磁盘和内存之间交互的基本单位，InnoDB中页的大小一般为 &lt;em>&lt;strong>16&lt;/strong>&lt;/em> KB&lt;/strong>。也就是在一般情况下，一次最少从磁盘中读取16KB的内容到内存中，一次最少把内存中的16KB内容刷新到磁盘中。&lt;/p>
&lt;h1 id="innodb行格式">
 InnoDB行格式
 &lt;a class="anchor" href="#innodb%e8%a1%8c%e6%a0%bc%e5%bc%8f">#&lt;/a>
&lt;/h1>
&lt;p>我们平时是以记录为单位来向表中插入数据的，这些记录在磁盘上的存放方式也被称为&lt;code>行格式&lt;/code>或者&lt;code>记录格式&lt;/code>。设计&lt;code>InnoDB&lt;/code>存储引擎的大佬们到现在为止设计了4种不同类型的&lt;code>行格式&lt;/code>，分别是&lt;code>Compact&lt;/code>、&lt;code>Redundant&lt;/code>、&lt;code>Dynamic&lt;/code>和&lt;code>Compressed&lt;/code>行格式，随着时间的推移，他们可能会设计出更多的行格式，但是不管怎么变，在原理上大体都是相同的。&lt;/p>
&lt;h2 id="指定行格式的语法">
 指定行格式的语法
 &lt;a class="anchor" href="#%e6%8c%87%e5%ae%9a%e8%a1%8c%e6%a0%bc%e5%bc%8f%e7%9a%84%e8%af%ad%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;p>我们可以在创建或修改表的语句中指定&lt;code>行格式&lt;/code>： ``` CREATE TABLE 表名 (列的信息) ROW_FORMAT=行格式名称&lt;/p>
&lt;p>ALTER TABLE 表名 ROW_FORMAT=行格式名称 &lt;code>比如我们在&lt;/code>xiaohaizi&lt;code>数据库里创建一个演示用的表&lt;/code>record_format_demo&lt;code>，可以这样指定它的&lt;/code>行格式&lt;code>：&lt;/code> mysql&amp;gt; USE xiaohaizi; Database changed&lt;/p>
&lt;p>mysql&amp;gt; CREATE TABLE record_format_demo ( -&amp;gt; c1 VARCHAR
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>10&lt;/mn>&lt;mo stretchy="false">)&lt;/mo>&lt;mo separator="true">,&lt;/mo>&lt;mo>−&lt;/mo>&lt;mo>&amp;gt;&lt;/mo>&lt;mi>c&lt;/mi>&lt;mn>2&lt;/mn>&lt;mi>V&lt;/mi>&lt;mi>A&lt;/mi>&lt;mi>R&lt;/mi>&lt;mi>C&lt;/mi>&lt;mi>H&lt;/mi>&lt;mi>A&lt;/mi>&lt;mi>R&lt;/mi>&lt;mo stretchy="false">(&lt;/mo>&lt;mn>10&lt;/mn>&lt;mo stretchy="false">)&lt;/mo>&lt;mi>N&lt;/mi>&lt;mi>O&lt;/mi>&lt;mi>T&lt;/mi>&lt;mi>N&lt;/mi>&lt;mi>U&lt;/mi>&lt;mi>L&lt;/mi>&lt;mi>L&lt;/mi>&lt;mo separator="true">,&lt;/mo>&lt;mo>−&lt;/mo>&lt;mo>&amp;gt;&lt;/mo>&lt;mi>c&lt;/mi>&lt;mn>3&lt;/mn>&lt;mi>C&lt;/mi>&lt;mi>H&lt;/mi>&lt;mi>A&lt;/mi>&lt;mi>R&lt;/mi>&lt;mo stretchy="false">(&lt;/mo>&lt;mn>10&lt;/mn>&lt;mo stretchy="false">)&lt;/mo>&lt;mo separator="true">,&lt;/mo>&lt;mo>−&lt;/mo>&lt;mo>&amp;gt;&lt;/mo>&lt;mi>c&lt;/mi>&lt;mn>4&lt;/mn>&lt;mi>V&lt;/mi>&lt;mi>A&lt;/mi>&lt;mi>R&lt;/mi>&lt;mi>C&lt;/mi>&lt;mi>H&lt;/mi>&lt;mi>A&lt;/mi>&lt;mi>R&lt;/mi>&lt;mo stretchy="false">(&lt;/mo>&lt;mn>10&lt;/mn>&lt;mo stretchy="false">)&lt;/mo>&lt;mo>−&lt;/mo>&lt;mo>&amp;gt;&lt;/mo>&lt;/mrow>&lt;annotation encoding="application/x-tex">10), -&amp;gt; c2 VARCHAR(10) NOT NULL, -&amp;gt; c3 CHAR(10), -&amp;gt; c4 VARCHAR(10) -&amp;gt; &lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 CHARSET=ascii ROW_FORMAT=COMPACT; Query OK, 0 rows affected (0.03 sec) &lt;code>可以看到我们刚刚创建的这个表的&lt;/code>行格式&lt;code>就是&lt;/code>Compact&lt;code>，另外，我们还显式指定了这个表的字符集为&lt;/code>ascii&lt;code>，因为&lt;/code>ascii&lt;code>字符集只包括空格、标点符号、数字、大小写字母和一些不可见字符，所以我们的汉字是不能存到这个表里的。我们现在向这个表中插入两条记录：&lt;/code> mysql&amp;gt; INSERT INTO record_format_demo(c1, c2, c3, c4) VALUES(&amp;lsquo;aaaa&amp;rsquo;, &amp;lsquo;bbb&amp;rsquo;, &amp;lsquo;cc&amp;rsquo;, &amp;rsquo;d&amp;rsquo;), (&amp;rsquo;eeee&amp;rsquo;, &amp;lsquo;fff&amp;rsquo;, NULL, NULL); Query OK, 2 rows affected (0.02 sec) Records: 2 Duplicates: 0 Warnings: 0 &lt;code>现在表中的记录就是这个样子的：&lt;/code> mysql&amp;gt; SELECT * FROM record_format_demo; +&amp;mdash;&amp;mdash;+&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;+ | c1 | c2 | c3 | c4 | +&amp;mdash;&amp;mdash;+&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;+ | aaaa | bbb | cc | d | | eeee | fff | NULL | NULL | +&amp;mdash;&amp;mdash;+&amp;mdash;&amp;ndash;+&amp;mdash;&amp;mdash;+&amp;mdash;&amp;mdash;+ 2 rows in set (0.00 sec)&lt;/p></description></item><item><title>第3章_乱码的前世今生-字符集和比较规则</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC3%E7%AB%A0_%E4%B9%B1%E7%A0%81%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F-%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E6%AF%94%E8%BE%83%E8%A7%84%E5%88%99/</link><pubDate>Sat, 18 Jan 2025 22:29:41 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC3%E7%AB%A0_%E4%B9%B1%E7%A0%81%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F-%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E6%AF%94%E8%BE%83%E8%A7%84%E5%88%99/</guid><description>&lt;p>第3章 乱码的前世今生-字符集和比较规则&lt;/p>
&lt;h1 id="字符集和比较规则简介">
 字符集和比较规则简介
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e9%9b%86%e5%92%8c%e6%af%94%e8%be%83%e8%a7%84%e5%88%99%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;h2 id="字符集简介">
 字符集简介
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e9%9b%86%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;p>我们知道在计算机中只能存储二进制数据，那该怎么存储字符串呢？当然是建立字符与二进制数据的映射关系了，建立这个关系最起码要搞清楚两件事儿：&lt;/p>
&lt;ol>
&lt;li>你要把哪些字符映射成二进制数据？ 也就是界定清楚字符范围。&lt;/li>
&lt;li>怎么映射？ 将一个字符映射成一个二进制数据的过程也叫做&lt;code>编码&lt;/code>，将一个二进制数据映射到一个字符的过程叫做&lt;code>解码&lt;/code>。&lt;/li>
&lt;/ol>
&lt;p>人们抽象出一个&lt;code>字符集&lt;/code>的概念来描述某个字符范围的编码规则。比方说我们来自定义一个名称为&lt;code>xiaohaizi&lt;/code>的字符集，它包含的字符范围和编码规则如下：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>包含字符&lt;code>'a'&lt;/code>、&lt;code>'b'&lt;/code>、&lt;code>'A'&lt;/code>、&lt;code>'B'&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>编码规则如下：&lt;/p>
&lt;p>采用1个字节编码一个字符的形式，字符和字节的映射关系如下： &lt;code>'a' -&amp;gt; 00000001 (十六进制：0x01) 'b' -&amp;gt; 00000010 (十六进制：0x02) 'A' -&amp;gt; 00000011 (十六进制：0x03) 'B' -&amp;gt; 00000100 (十六进制：0x04)&lt;/code>&lt;/p>
&lt;p>有了&lt;code>xiaohaizi&lt;/code>字符集，我们就可以用二进制形式表示一些字符串了，下面是一些字符串用&lt;code>xiaohaizi&lt;/code>字符集编码后的二进制表示： &lt;code>'bA' -&amp;gt; 0000001000000011 (十六进制：0x0203) 'baB' -&amp;gt; 000000100000000100000100 (十六进制：0x020104) 'cd' -&amp;gt; 无法表示，字符集xiaohaizi不包含字符'c'和'd'&lt;/code>&lt;/p>
&lt;h2 id="比较规则简介">
 比较规则简介
 &lt;a class="anchor" href="#%e6%af%94%e8%be%83%e8%a7%84%e5%88%99%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;p>在我们确定了&lt;code>xiaohaizi&lt;/code>字符集表示字符的范围以及编码规则后，怎么比较两个字符的大小呢？最容易想到的就是直接比较这两个字符对应的二进制编码的大小，比方说字符&lt;code>'a'&lt;/code>的编码为&lt;code>0x01&lt;/code>，字符&lt;code>'b'&lt;/code>的编码为&lt;code>0x02&lt;/code>，所以&lt;code>'a'&lt;/code>小于&lt;code>'b'&lt;/code>，这种简单的比较规则也可以被称为二进制比较规则，英文名为&lt;code>binary collation&lt;/code>。&lt;/p>
&lt;p>二进制比较规则是简单，但有时候并不符合现实需求，比如在很多场合对于英文字符我们都是不区分大小写的，也就是说&lt;code>'a'&lt;/code>和&lt;code>'A'&lt;/code>是相等的，在这种场合下就不能简单粗暴的使用二进制比较规则了，这时候我们可以这样指定比较规则：&lt;/p>
&lt;ol>
&lt;li>将两个大小写不同的字符全都转为大写或者小写。&lt;/li>
&lt;li>再比较这两个字符对应的二进制数据。&lt;/li>
&lt;/ol>
&lt;p>这是一种稍微复杂一点点的比较规则，但是实际生活中的字符不止英文字符一种，比如我们的汉字有几万之多，对于某一种字符集来说，比较两个字符大小的规则可以制定出很多种，也就是说&lt;strong>同一种字符集可以有多种比较规则&lt;/strong>，我们稍后就要介绍各种现实生活中用的字符集以及它们的一些比较规则。&lt;/p>
&lt;h2 id="一些重要的字符集">
 一些重要的字符集
 &lt;a class="anchor" href="#%e4%b8%80%e4%ba%9b%e9%87%8d%e8%a6%81%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86">#&lt;/a>
&lt;/h2>
&lt;p>不幸的是，这个世界太大了，不同的人制定出了好多种&lt;code>字符集&lt;/code>，它们表示的字符范围和用到的编码规则可能都不一样。我们看一下一些常用字符集的情况：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ASCII&lt;/code>字符集&lt;/p>
&lt;p>共收录128个字符，包括空格、标点符号、数字、大小写字母和一些不可见字符。由于总共才128个字符，所以可以使用1个字节来进行编码，我们看一些字符的编码方式： &lt;code>'L' -&amp;gt; 01001100（十六进制：0x4C，十进制：76） 'M' -&amp;gt; 01001101（十六进制：0x4D，十进制：77）&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>ISO 8859-1&lt;/code>字符集&lt;/p></description></item><item><title>第2章_MySQL的调控按钮-启动选项和系统变量</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC2%E7%AB%A0_MySQL%E7%9A%84%E8%B0%83%E6%8E%A7%E6%8C%89%E9%92%AE-%E5%90%AF%E5%8A%A8%E9%80%89%E9%A1%B9%E5%92%8C%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F/</link><pubDate>Sat, 18 Jan 2025 22:29:39 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC2%E7%AB%A0_MySQL%E7%9A%84%E8%B0%83%E6%8E%A7%E6%8C%89%E9%92%AE-%E5%90%AF%E5%8A%A8%E9%80%89%E9%A1%B9%E5%92%8C%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F/</guid><description>&lt;p>第2章 MySQL的调控按钮-启动选项和系统变量&lt;/p>
&lt;p>如果你用过手机，你的手机上一定有一个设置的功能，你可以选择设置手机的来电铃声、设置音量大小、设置解锁密码等等。假如没有这些设置功能，我们的生活将置于尴尬的境地，比如在图书馆里无法把手机设置为静音，无法把流量开关关掉以节省流量，在别人得知解锁密码后无法更改密码～ &lt;code>MySQL&lt;/code>的服务器程序和客户端程序也有很多设置项，比如对于&lt;code>MySQL&lt;/code>服务器程序，我们可以指定诸如允许同时连入的客户端数量、客户端和服务器通信方式、表的默认存储引擎、查询缓存的大小等设置项。对于&lt;code>MySQL&lt;/code>客户端程序，我们之前已经见识过了，可以指定需要连接的服务器程序所在主机的主机名或IP地址、用户名及密码等信息。&lt;/p>
&lt;p>这些设置项一般都有各自的默认值，比方说服务器允许同时连入的客户端的默认数量是&lt;code>151&lt;/code>，表的默认存储引擎是&lt;code>InnoDB&lt;/code>，我们可以在程序启动的时候去修改这些默认值，对于这种在程序启动时指定的设置项也称之为启动选项（startup options），这些选项控制着程序启动后的行为。在&lt;code>MySQL&lt;/code>安装目录下的&lt;code>bin&lt;/code>目录中的各种可执行文件，不论是服务器相关的程序（比如&lt;code>mysqld&lt;/code>、&lt;code>mysqld_safe&lt;/code>）还是客户端相关的程序（比如&lt;code>mysql&lt;/code>、&lt;code>mysqladmin&lt;/code>），在启动的时候基本都可以指定启动参数。这些启动参数可以放在命令行中指定，也可以把它们放在配置文件中指定。下面我们以&lt;code>mysqld&lt;/code>为例，来详细介绍指定启动选项的格式。需要注意的一点是，我们现在要介绍的是设置启动选项的方式，下面出现的启动选项不论大家认不认识，先不用去纠结每个选项具体的作用是什么，之后我们会对一些重要的启动选项详细介绍。&lt;/p>
&lt;h1 id="在命令行上使用选项">
 在命令行上使用选项
 &lt;a class="anchor" href="#%e5%9c%a8%e5%91%bd%e4%bb%a4%e8%a1%8c%e4%b8%8a%e4%bd%bf%e7%94%a8%e9%80%89%e9%a1%b9">#&lt;/a>
&lt;/h1>
&lt;p>如果我们在启动客户端程序时在&lt;code>-h&lt;/code>参数后边紧跟服务器的IP地址，这就意味着客户端和服务器之间需要通过&lt;code>TCP/IP&lt;/code>网络进行通信。因为我的客户端程序和服务器程序都装在一台计算机上，所以在使用客户端程序连接服务器程序时指定的主机名是&lt;code>127.0.0.1&lt;/code>的情况下，客户端进程和服务器进程之间会使用&lt;code>TCP/IP&lt;/code>网络进行通信。如果我们在启动服务器程序的时候就禁止各客户端使用&lt;code>TCP/IP&lt;/code>网络进行通信，可以在启动服务器程序的命令行里添加&lt;code>skip-networking&lt;/code>启动选项，就像这样： &lt;code>mysqld --skip-networking&lt;/code> 可以看到，我们在命令行中指定启动选项时需要在选项名前加上&lt;code>--&lt;/code>前缀。另外，如果选项名是由多个单词构成的，它们之间可以由短划线&lt;code>-&lt;/code>连接起来，也可以使用下划线&lt;code>_&lt;/code>连接起来，也就是说&lt;code>skip-networking&lt;/code>和&lt;code>skip_networking&lt;/code>表示的含义是相同的。所以上面的写法与下面的写法是等价的： &lt;code>mysqld --skip_networking&lt;/code> 在按照上述命令启动服务器程序后，如果我们再使用&lt;code>mysql&lt;/code>来启动客户端程序时，再把服务器主机名指定为&lt;code>127.0.0.1&lt;/code>（IP地址的形式）的话会显示连接失败： ``` mysql -h127.0.0.1 -uroot -p Enter password:&lt;/p>
&lt;p>ERROR 2003 (HY000): Can&amp;rsquo;t connect to MySQL server on &amp;lsquo;127.0.0.1&amp;rsquo; (61) ``` 这就意味着我们指定的启动选项&lt;code>skip-networking&lt;/code>生效了！&lt;/p>
&lt;p>再举一个例子，我们前面说过如果在创建表的语句中没有显式指定表的存储引擎的话，那就会默认使用&lt;code>InnoDB&lt;/code>作为表的存储引擎。如果我们想改变表的默认存储引擎的话，可以这样写启动服务器的命令行： &lt;code>mysqld --default-storage-engine=MyISAM&lt;/code> 我们现在就已经把表的默认存储引擎改为&lt;code>MyISAM&lt;/code>了，在客户端程序连接到服务器程序后试着创建一个表： &lt;code>mysql&amp;gt; CREATE TABLE sys_var_demo( -&amp;gt; i INT -&amp;gt; ); Query OK, 0 rows affected (0.02 sec)&lt;/code> 这个定义语句中我们并没有明确指定表的存储引擎，创建成功后再看一下这个表的结构： &lt;code>mysql&amp;gt; SHOW CREATE TABLE sys_var_demo\G *************************** 1. row *************************** Table: sys_var_demo Create Table: CREATE TABLE &lt;/code>sys_var_demo&lt;code>(&lt;/code>i&lt;code> int(11) DEFAULT NULL ) ENGINE=MyISAM DEFAULT CHARSET=utf8 1 row in set (0.01 sec)&lt;/code> 可以看到该表的存储引擎已经是&lt;code>MyISAM&lt;/code>了，说明启动选项&lt;code>default-storage-engine&lt;/code>生效了。&lt;/p></description></item><item><title>第1章_装作自己是个小白-重新认识MySQL</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC1%E7%AB%A0_%E8%A3%85%E4%BD%9C%E8%87%AA%E5%B7%B1%E6%98%AF%E4%B8%AA%E5%B0%8F%E7%99%BD-%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86MySQL/</link><pubDate>Sat, 18 Jan 2025 22:29:38 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC1%E7%AB%A0_%E8%A3%85%E4%BD%9C%E8%87%AA%E5%B7%B1%E6%98%AF%E4%B8%AA%E5%B0%8F%E7%99%BD-%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86MySQL/</guid><description>&lt;p>&lt;em>第1章 装作自己是个小白-重新认识MySQL&lt;/em>&lt;/p>
&lt;h1 id="mysql的客户端服务器架构">
 MySQL的客户端／服务器架构
 &lt;a class="anchor" href="#mysql%e7%9a%84%e5%ae%a2%e6%88%b7%e7%ab%af%e6%9c%8d%e5%8a%a1%e5%99%a8%e6%9e%b6%e6%9e%84">#&lt;/a>
&lt;/h1>
&lt;p>以我们平时使用的微信为例，它其实是由两部分组成的，一部分是&lt;mark>客户端&lt;/mark>程序，一部分是&lt;mark>服务器&lt;/mark>程序。客户端可能有很多种形式，比如手机APP，电脑软件或者是网页版微信，每个客户端都有一个唯一的用户名，就是你的微信号，另一方面，腾讯公司在他们的机房里运行着一个服务器软件，我们平时操作微信其实都是用客户端来和这个服务器来打交道。比如狗哥用微信给猫爷发了一条消息的过程其实是这样的：&lt;/p>
&lt;ol>
&lt;li>消息被客户端包装了一下，添加了发送者和接收者信息，然后从狗哥的微信客户端传送给微信服务器；&lt;/li>
&lt;li>微信服务器从消息里获取到它的发送者和接收者，根据消息的接收者信息把这条消息送达到猫爷的微信客户端，猫爷的微信客户端里就显示出狗哥给他发了一条消息。&lt;/li>
&lt;/ol>
&lt;p>&lt;code>MySQL&lt;/code>的使用过程跟这个是一样的，它的服务器程序&lt;strong>直接和我们存储的数据打交道&lt;/strong>，然后可以有好多客户端程序连接到这个服务器程序，发送增删改查的请求，然后服务器就响应这些请求，从而操作它维护的数据。和微信一样，&lt;code>MySQL&lt;/code>的每个客户端都需要提供用户名密码才能登录，登录之后才能给服务器发请求来操作某些数据。我们日常使用&lt;code>MySQL&lt;/code>的情景一般是这样的：&lt;/p>
&lt;ol>
&lt;li>启动&lt;code>MySQL&lt;/code>服务器程序。&lt;/li>
&lt;li>启动&lt;code>MySQL&lt;/code>客户端程序并连接到服务器程序。&lt;/li>
&lt;li>在客户端程序中输入一些命令语句作为请求发送到服务器程序，服务器程序收到这些请求后，会根据请求的内容来操作具体的数据并向客户端返回操作结果。&lt;/li>
&lt;/ol>
&lt;p>我们知道计算机很牛逼，在一台计算机上可以同时运行多个程序，比如微信、QQ、音乐播放器、文本编辑器等，每一个运行着的程序也被称为一个&lt;code>进程&lt;/code>。我们的&lt;code>MySQL&lt;/code>服务器程序和客户端程序本质上都算是计算机上的一个&lt;code>进程&lt;/code>，这个代表着&lt;code>MySQL&lt;/code>服务器程序的进程也被称为&lt;code>MySQL数据库实例&lt;/code>，简称&lt;code>数据库实例&lt;/code>。&lt;/p>
&lt;p>每个进程都有一个唯一的编号，称为&lt;code>进程ID&lt;/code>，英文名叫&lt;code>PID&lt;/code>，这个编号是在我们启动程序的时候由操作系统随机分配的，操作系统会保证在某一时刻同一台机器上的进程号不重复。比如你打开了计算机中的QQ程序，那么操作系统会为它分配一个唯一的进程号，如果你把这个程序关掉了，那操作系统就会把这个进程号回收，之后可能会重新分配给别的进程。当我们下一次再启动 QQ程序的时候分配的就可能是另一个编号。每个进程都有一个名称，这个名称是编写程序的人自己定义的，比如我们启动的&lt;code>MySQL&lt;/code>服务器进程的默认名称为&lt;code>mysqld&lt;/code>， 而我们常用的&lt;code>MySQL&lt;/code>客户端进程的默认名称为&lt;code>mysql&lt;/code>。&lt;/p>
&lt;h1 id="mysql的安装">
 MySQL的安装
 &lt;a class="anchor" href="#mysql%e7%9a%84%e5%ae%89%e8%a3%85">#&lt;/a>
&lt;/h1>
&lt;p>不论我们通过下载源代码自行编译安装的方式，还是直接使用官方提供的安装包进行安装之后，&lt;code>MySQL&lt;/code>的服务器程序和客户端程序都会被安装到我们的机器上。不论使用上述两者的哪种安装方式，一定一定一定（重要的话说三遍）要记住你把&lt;code>MySQL&lt;/code>安装到哪了，换句话说，一定要记住&lt;code>MySQL&lt;/code>的安装目录。 &lt;code>小贴士：&lt;/code>MySQL&lt;code>的大部分安装包都包含了服务器程序和客户端程序，不过在Linux下使用RPM包时会有单独的服务器RPM包和客户端RPM包，需要分别安装。&lt;/code>&lt;/p>
&lt;p>另外，&lt;code>MySQL&lt;/code>可以运行在各种各样的操作系统上，我们后边会讨论在类&lt;code>UNIX&lt;/code>操作系统和&lt;code>Windows&lt;/code>操作系统上使用的一些差别。为了方便大家理解，我在&lt;code>macOS&lt;/code> 操作系统（苹果电脑使用的操作系统）和&lt;code>Windows&lt;/code>操作系统上都安装了&lt;code>MySQL&lt;/code>，它们的安装目录分别是：&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>macOS&lt;/code>操作系统上的安装目录： &lt;code>/usr/local/mysql/&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Windows&lt;/code>操作系统上的安装目录： &lt;code>C:\Program Files\MySQL\MySQL Server 5.7&lt;/code>&lt;/p>
&lt;p>下面我会以这两个安装目录为例来进一步扯出更多的概念，不过一定要注意，&lt;strong>这两个安装目录是我的运行不同操作系统的机器上的安装目录，一定要记着把下面示例中用到安装目录的地方替换为你自己机器上的安装目录&lt;/strong>。 &lt;code>小贴士：类UNIX操作系统非常多，比如FreeBSD、Linux、macOS、Solaris等都属于UNIX操作系统的范畴，我们这里使用macOS操作系统代表类UNIX操作系统来运行MySQL。&lt;/code>&lt;/p>
&lt;h2 id="bin目录下的可执行文件">
 bin目录下的可执行文件
 &lt;a class="anchor" href="#bin%e7%9b%ae%e5%bd%95%e4%b8%8b%e7%9a%84%e5%8f%af%e6%89%a7%e8%a1%8c%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h2>
&lt;p>在&lt;code>MySQL&lt;/code>的安装目录下有一个特别特别重要的&lt;code>bin&lt;/code>目录，这个目录下存放着许多可执行文件，以&lt;code>macOS&lt;/code>系统为例，这个&lt;code>bin&lt;/code>目录的绝对路径就是（在我的机器上）： &lt;code>/usr/local/mysql/bin&lt;/code> 我们列出一些在&lt;code>macOS&lt;/code>中这个&lt;code>bin&lt;/code>目录下的一部分可执行文件来看一下（文件太多，全列出来会刷屏的）： &lt;code>. ├── mysql ├── mysql.server -&amp;gt; ../support-files/mysql.server ├── mysqladmin ├── mysqlbinlog ├── mysqlcheck ├── mysqld ├── mysqld_multi ├── mysqld_safe ├── mysqldump ├── mysqlimport ├── mysqlpump ... (省略其他文件) 0 directories, 40 files&lt;/code> &lt;code>Windows&lt;/code>中的可执行文件与&lt;code>macOS&lt;/code>中的类似，不过都是以&lt;code>.exe&lt;/code>为扩展名的。这些可执行文件都是与服务器程序和客户端程序相关的，后边我们会详细介绍一些比较重要的可执行文件，现在先看看执行这些文件的方式。&lt;/p></description></item><item><title>第0章_万里长征第一步(非常重要)-如何愉快的阅读本小册</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC0%E7%AB%A0_%E4%B8%87%E9%87%8C%E9%95%BF%E5%BE%81%E7%AC%AC%E4%B8%80%E6%AD%A5%E9%9D%9E%E5%B8%B8%E9%87%8D%E8%A6%81-%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%98%85%E8%AF%BB%E6%9C%AC%E5%B0%8F%E5%86%8C/</link><pubDate>Sat, 18 Jan 2025 22:29:37 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC0%E7%AB%A0_%E4%B8%87%E9%87%8C%E9%95%BF%E5%BE%81%E7%AC%AC%E4%B8%80%E6%AD%A5%E9%9D%9E%E5%B8%B8%E9%87%8D%E8%A6%81-%E5%A6%82%E4%BD%95%E6%84%89%E5%BF%AB%E7%9A%84%E9%98%85%E8%AF%BB%E6%9C%AC%E5%B0%8F%E5%86%8C/</guid><description>&lt;p>第0章 万里长征第一步（非常重要）-如何愉快的阅读本小册&lt;/p>
&lt;h1 id="购买前警告">
 购买前警告⚠️
 &lt;a class="anchor" href="#%e8%b4%ad%e4%b9%b0%e5%89%8d%e8%ad%a6%e5%91%8a">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>此小册并非数据库入门书籍，需要各位知道增删改查是什么意思，并且能用 SQL 语言写出来，当然并不要求各位知道的太多，你甚至可以不知道连接的语法都可以。不过如果你连&lt;code>SELECT&lt;/code>、&lt;code>INSERT&lt;/code>这些单词都没听说过那本小册并不适合你。&lt;/li>
&lt;li>此小册非正经科学专著，亦非十二五国家级规划教材，也没有大段代码和详细论证，有的全是图，喜欢正经论述的同学请避免购买本小册。&lt;/li>
&lt;li>此小册作者乃一无业游民，非专业大佬，没有任何职称，只是单单喜欢把复杂问题讲清楚的那种快感，所以喜欢作者有 Google、Facebook 高级开发工程师，二百年工作经验等 Title 的同学请谨慎购买。&lt;/li>
&lt;li>此小册是用于介绍 MySQL 的工作原理以及对我们程序猿的影响，并不是介绍概念设计、逻辑设计、物理设计、范式化之类的数据库设计方面的知识，希望了解上述这些知识的同学来错地方了。&lt;/li>
&lt;li>文章标题中的“从根儿上理解MySQL”**其实是专门雇了 UC 震惊部小编起的，纯属为了吸引大家眼球。严格意义上说，本书只是介绍&lt;code>MySQL&lt;/code>内核的一些核心概念的小白进阶书籍。大家读完本小册也不会一下子晋升业界大佬，当上 CTO，迎娶白富美，走上人生巅峰。希望本小册能够帮助大家解决一些工作、面试过程中的问题，逐渐成为一个更好的工程师，有兴趣的小伙伴可以再深入研究一下 MySQL，说不定你就是下一个数据库泰斗啦。&lt;/li>
&lt;/ul>
&lt;h1 id="购买并阅读本小册的建议">
 购买并阅读本小册的建议
 &lt;a class="anchor" href="#%e8%b4%ad%e4%b9%b0%e5%b9%b6%e9%98%85%e8%af%bb%e6%9c%ac%e5%b0%8f%e5%86%8c%e7%9a%84%e5%bb%ba%e8%ae%ae">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/00-01.png" alt="" />&lt;/p>
&lt;ul>
&lt;li>本小册是一本待出版的纸质书籍，并非一些杂碎文章的集合，是非常有结构和套路的，所以大家阅读时千万不能当作厕所蹲坑、吃饭看手机时的所谓&lt;code>碎片化读物&lt;/code>。碎片化阅读只适合听听矮大紧、罗胖子他们扯扯犊子，开阔一下视野用的。对于专业的技术知识来说，大家必须付出一个完整的时间段进行体系化学习，这样尊重知识，工资才能尊重你。 &lt;code>顺便说一句，我已经好久都不听罗胖子扯犊子了，刚开始办罗辑思维的时候觉得他扯的还可以，越往后越觉得都钻钱眼儿里了，天天在鼓吹焦虑，让大家去买他们的鸡汤课。不过听听矮大紧就挺好啊，不累～&lt;/code>&lt;/li>
&lt;li>本小册是由 Markdown 写成，在电脑端阅读体验十分舒服，当然你非要用小手机看我也不拦着你，但是效果打了折扣是你的损失。&lt;/li>
&lt;li>为了保证最好的阅读体验，不用一个没学过的概念去介绍另一个新概念，本小册的章节有严重的依赖性，比如你在没读&lt;code>InnoDB&lt;/code>数据页结构前千万不要就去读&lt;code>B+&lt;/code>树索引，所以大家最好从前看到尾，&lt;strong>不要跳着看！不要跳着看！不要跳着看！&lt;/strong>，当然，不听劝告我也不能说什么，祝你好运。&lt;/li>
&lt;li>大家可能买过别的小册，有的小册一篇文章可能用5分钟、10分钟读完，不过我的小册子每一篇文章都比较长，因为我把高耦合的部分都集中在一篇文章中了。文章中埋着各种伏笔，所以大家看的时候可能不会觉察出来很突兀的转变，所以在阅读一篇文章的时候千万&lt;strong>不要跳着看！不要跳着看！不要跳着看！&lt;/strong>&lt;/li>
&lt;li>大家在看本小册之前应该断断续续看过一些与本小册内容相关的知识，只是不成体系，细节学习的不够。对于这部分读者来说，希望大家像倚天屠龙记里的张无忌一样，在学张三丰的太极剑法时先忘记之前的武功，忘的越干净，学的越得真传。这样才能跟着我的套路走下去。&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>如果你真的是个小白的话，那这里头的数字都是假的： &lt;img src="img/00-02.png" alt="" />&lt;/p>
&lt;p>一篇文章能用2个小时左右的时间掌握就很不错了。说句扫大家兴的话，虽然我已经很努力的想让大家的学习效率提升n倍，但是不幸的是想掌握一门核心技术仍然需要大家多看几遍（不然工资那么好涨啊～）。&lt;/p>
&lt;h1 id="关于工具">
 关于工具
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h1>
&lt;p>本小册中会涉及很多 InnoDB 的存储结构的知识，比如记录结构、页结构、索引结构、表空间结构等等，这些知识是所有后续知识的基础，所以是重中之重，需要大家认真对待。Jeremy Cole 已经使用 Ruby 开发了一个简易的解析这些基础结构的工具，github地址是：
&lt;a target="_blank" href="https://github.com/jeremycole/innodb_ruby">innodb_ruby的github地址&lt;/a>，大家可以按照说明安装上这个工具，可以更好的理解 InnoDB 中的一些存储结构（此工具虽然是针对&lt;code>MySQL 5.6&lt;/code>的，但是幸好&lt;code>MySQL&lt;/code>的基础存储结构基本没多大变化，所以大部分场景下这个&lt;code>innodb_ruby&lt;/code>工具还是可以使用的）。&lt;/p>
&lt;h1 id="关于盗版">
 关于盗版
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e%e7%9b%97%e7%89%88">#&lt;/a>
&lt;/h1>
&lt;p>在写这本小册之前，我天真的以为只需要找几本参考书，看看 MySQL 的官方文档，遇到不会的地方百度谷歌一下就可以在 3 个月内解决这本书，后来的现实证明我真的想的太美了。不仅花了大量的时间阅读各种书籍和源码，而且有的时候知识耦合太厉害，为了更加模块化的把知识表述清楚，我又花了大量的时间来思考如何写作才能符合用户认知习惯，还花了非常多的时间来画各种图表，总之就是心累啊～ 我希望的是：&lt;strong>各位同学可以用很低的成本来更快速学会一些看起来生涩难懂的知识&lt;/strong>，但是毕竟我不是马云，不能一心一意做公益，希望各位通过正规渠道获得小册，尊重一下版权。 还有各位写博客的同学，引用的少了叫借鉴，引用的多了就，就有点那个了。希望各位不要大段大段的复制粘贴，用自己的话写出来的知识才是自己的东西。 我知道不论我们怎样强调版权意识，总是有一部分小伙伴喜欢不劳而获，总是喜欢想尽各种渠道来弄一份盗版的看，希望这部分同学看完别忘了关注公众号【我们都是小青蛙】，给我填个粉儿也算是赞助一下我（下面是二维码，觉得有帮助的话希望可以打赏一下，毕竟本人很穷。另外，公众号中有若干篇小册的补充文章，包括三篇极其重要的语句加锁分析）：&lt;/p>
&lt;p>&lt;code>小贴士：我一直有个想法，就是如何降低教育成本。现在教育的盈利收费模式都太单一，就是直接跟学生收上课费，导致课程成为一种2C的商品，价格高低其实和内容质量并不是很相关，所以课程提供商会投入更大的精力做他们的渠道营销。所以现在的在线教育市场就是渠道为王，招生为王。我们其实可以换一种思路，在线教育的优势其实是传播费用更低，一个人上课和一千万人上课的费用区别其实就是服务器使用的多少罢了，所以我们可能并不需要那么多语文老师、数学老师，我们用专业的导演、专业的声优、专业的动画制作、专业的后期、专业的剪辑、专业的编剧组成的团队为某个科目制作一个专业的课程就好了嘛（顺便说一句，我就可以转行做课程编剧了）！把课程当作电影、电视剧来卖，只要在课程中植入广告，或者在播放平台上加广告就好了嘛，我们也可以在课程里培养偶像，来做一波粉丝经济。这样课程生产方也赚钱，学生们也省钱，最主要的是可以更大层度上促进教育公平，多好。&lt;/code>&lt;/p>
&lt;h1 id="关于错误">
 关于错误
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8e%e9%94%99%e8%af%af">#&lt;/a>
&lt;/h1>
&lt;h2 id="准确性问题">
 准确性问题
 &lt;a class="anchor" href="#%e5%87%86%e7%a1%ae%e6%80%a7%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;p>我不是神，并不是书中的所有内容我都一一对照源码来验证准确性（阅读的大部分源码是关于查询优化和事务处理的），如果各位发现了文中有准确性问题请直接联系我，我会加入 Bug 列表中修正的。&lt;/p></description></item><item><title>01走进汉字世界</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%B1%89%E5%AD%97%E5%B0%B1%E6%98%AF%E8%BF%99%E4%B9%88%E6%9D%A5%E7%9A%84/01%E8%B5%B0%E8%BF%9B%E6%B1%89%E5%AD%97%E4%B8%96%E7%95%8C/</link><pubDate>Wed, 15 Jan 2025 10:23:11 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%B1%89%E5%AD%97%E5%B0%B1%E6%98%AF%E8%BF%99%E4%B9%88%E6%9D%A5%E7%9A%84/01%E8%B5%B0%E8%BF%9B%E6%B1%89%E5%AD%97%E4%B8%96%E7%95%8C/</guid><description>&lt;p>01走进汉字世界&lt;/p>
&lt;h2 id="封面">
 封面
 &lt;a class="anchor" href="#%e5%b0%81%e9%9d%a2">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/000001.jpeg" alt="" />&lt;/p>
&lt;h2 id="版权">
 版权
 &lt;a class="anchor" href="#%e7%89%88%e6%9d%83">#&lt;/a>
&lt;/h2>
&lt;p>版权信息&lt;/p>
&lt;p>书名：汉字就是这么来的·走进汉字世界&lt;/p>
&lt;p>作者：孟琢&lt;/p>
&lt;p>出版社：湖南少年儿童出版社&lt;/p>
&lt;p>出版时间：2020-08-01&lt;/p>
&lt;p>ISBN：9787556251919&lt;/p>
&lt;p>本书由天津博集新媒科技有限公司授权亚马逊发行&lt;/p>
&lt;p>版权所有 侵权必究&lt;/p>
&lt;p>&lt;img src="img/000000.jpeg" alt="logo" />&lt;/p>
&lt;h1 id="汉字的起源">
 汉字的起源
 &lt;a class="anchor" href="#%e6%b1%89%e5%ad%97%e7%9a%84%e8%b5%b7%e6%ba%90">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000002.jpeg" alt="" />&lt;/p>
&lt;p>&lt;img src="img/000003.jpeg" alt="" />&lt;/p>
&lt;p>汉字是中国文化的根源，蕴含着中华文明悠久古老的基因。当我们走进汉字世界的时候，先要思考一个重要的问题：汉字的源头是什么？&lt;/p>
&lt;p>对这个问题的回答，真是众说纷纭。在历史上，有三种比较重要的说法：八卦造字、结绳造字和仓颉造字。&lt;/p>
&lt;h2 id="汉字与八卦">
 汉字与八卦
 &lt;a class="anchor" href="#%e6%b1%89%e5%ad%97%e4%b8%8e%e5%85%ab%e5%8d%a6">#&lt;/a>
&lt;/h2>
&lt;p>八卦，听起来蛮神奇的！中华民族的始祖伏羲氏[1]创造了八卦。他在大自然中看到了天空、大地、沼泽、大湖，还有清澈的水流、熊熊的烈火和浩浩荡荡的长风，听到了响彻苍穹的雷鸣。在伏羲看来，万事万物都分为阴阳，他用一个长横（&lt;img src="img/000004.jpeg" alt="i-" />）表示阳爻，用两个短横（&lt;img src="img/000005.jpeg" alt="i-" />）表示阴爻，再用阴阳进行组合，就拼出了八卦，分别代表天、地、山、泽、水、火、风、雷。&lt;/p>
&lt;p>&lt;img src="img/000006.jpeg" alt="" />&lt;/p>
&lt;p>在中国文化中，八卦相当重要。有一部听起来有些神秘的古老经典——《周易》，就是以八卦的道理为根本的。于是，有人认为汉字也起源于八卦。他们举了一个很有意思的例子：在八卦中，有一个坎卦，表示水的意思。你看，坎卦是这个样子的：&lt;img src="img/000007.jpeg" alt="i-" />。主张汉字起源于八卦的人们说，把坎卦旋转九十度竖起来&lt;img src="img/000008.jpeg" alt="i-" />，和古文字中的&lt;img src="img/000009.jpeg" alt="i-" />（水）非常像。&lt;/p>
&lt;p>你别说，对比一下还真像！那汉字真的起源于八卦吗？不是的，八卦中的另外七个卦和汉字一点儿关系也没有，样子也不相似。坎卦和水的相似，应该只是一种偶然。&lt;/p>
&lt;h2 id="结绳造字">
 结绳造字
 &lt;a class="anchor" href="#%e7%bb%93%e7%bb%b3%e9%80%a0%e5%ad%97">#&lt;/a>
&lt;/h2>
&lt;p>还有一种说法，认为汉字起源于结绳。&lt;/p>
&lt;p>什么叫作结绳呢？这是古人提醒自己别忘事的一种办法。他们随身携带一根绳子，有大事，就系一个大疙瘩，有小事，就系一个小疙瘩。这种风俗见于世界各地，有些比较原始的部落，现在还在使用结绳记事。&lt;/p>
&lt;p>&lt;img src="img/000010.jpeg" alt="" />&lt;/p>
&lt;p>结绳能够帮助我们记事，汉字有同样的功能，于是有人认为，汉字起源于结绳。我们仔细想一想，就会发现这种说法并不靠谱——绳子上的疙瘩能提醒我们有一件重要的事，但它无法告诉我们，到底是什么事。你是要去上学呢？还是要去吃火锅呢？还是去游乐场玩耍呢？但汉字就不一样了，汉字能够传达准确而具体的信息。&lt;/p>
&lt;h2 id="仓颉汉字的始祖">
 仓颉：汉字的始祖
 &lt;a class="anchor" href="#%e4%bb%93%e9%a2%89%e6%b1%89%e5%ad%97%e7%9a%84%e5%a7%8b%e7%a5%96">#&lt;/a>
&lt;/h2>
&lt;p>在造字的传说中，仓颉造字的说法流传最广。&lt;/p>
&lt;p>仓颉是谁？相传他生活在公元前2500多年，距今有4500多年。仓颉是黄帝时期的史官，掌管着历史、文化与文献，这个身份和汉字的关系最为密切，古人认为是他发明了汉字。这个时间和我们今天发现的早期文字符号的时期，也是相当接近的。&lt;/p>
&lt;p>根据一些古书中的记载，仓颉的样子很奇怪，“龙颜侈侈，四目灵光，实有睿德，生而能书”。这句话说的是，仓颉的额头很大，像龙一样，他有四个眼睛，绽放出闪闪的灵光，这个人非常聪明，生下来就能写字——哇，仓颉好厉害！&lt;/p>
&lt;p>仓颉真长这个样子吗？不见得。古人习惯于将一些厉害的人物神化，来凸显他们的与众不同。他们往往出生时伴有奇怪的天象，长相也异于常人。伏羲是人的脑袋蛇的身子；蚩尤和兄弟们都是铜头铁额，真是够酷。没这么夸张，稍微低调一点儿的也有。三国时期的刘备双耳垂肩，双手过膝，耳垂和手的长度远非常人能比；明朝开国皇帝朱元璋脚上有七颗痣，有个厉害的说法叫作“脚踏七星”。所以，仓颉的长相也是经过了艺术的夸张。&lt;/p>
&lt;p>仓颉是如何造字的呢？古代有一位大思想家叫韩非子，他记载了仓颉造字的一个思路，他说：“仓颉之作书也，自环者谓之私，背私者谓之公。”仓颉要给公开的“公”和自私的“私”造字。&lt;/p>
&lt;p>先造“私”字，这个字的意思有点儿抽象，用什么样的字形来表达呢？想来想去，他找到了一个造字的好办法：画一个封闭的圆圈&lt;img src="img/000011.jpeg" alt="i-" />，圈里的东西都是我的，也就是“厶”。这个字是今天“私”字的右半边。在古人心中，什么东西最能表示私有呢？莫过于粮食！于是，聪明的古人在“厶”旁边再添加一个“禾”，创造出“私”，强调这是我私有的财物。&lt;/p>
&lt;p>“私”造出来了，“公”又该如何造字呢？这个问题难不住聪明的仓颉！他说，“公”和“私”的意思是相反的，把私有的财物分给大家，不就是“公”嘛。因此，他在“厶”的上面加上了一个“八”字。在数字中，一分为二，二分为四，四分为八，都是一个不断分离的过程。因此“八”表示分的意思，把“私”用“八”不断分开，这就是“公”！&lt;/p>
&lt;p>&lt;img src="img/000012.jpeg" alt="" />&lt;/p>
&lt;p>仓颉造字，体现出高超的智慧！事实上，汉字不可能是某一个人造出来的，中华民族宝贵的文化遗产，是人民大众的智慧结晶。战国的大思想家荀子点明了仓颉造字的实质。《荀子》中说：“好书者众矣，而仓颉独传者，壹也。”喜欢写字、善于造字的人很多，但只有仓颉造字的名声千古流传，这是为什么呢？因为仓颉“专壹”！&lt;/p>
&lt;p>请注意，大写的“壹”字，既表示专一，仓颉一心一意地创造汉字；也表示规范、整理与统一的意思。仓颉是汉字的整理者、规范者与统一者，他是古人发明汉字的伟大的历史运动中的代表。&lt;/p>
&lt;p>正因如此，仓颉被后人尊称为“字圣”——发明汉字的圣人。&lt;/p>
&lt;p>随着汉字的发明，我们的历史文化大大地向前迈了一步。相传汉字发明之后，“天雨粟，鬼夜哭”——天上落下粮食雨，晚上有鬼在哭泣，听上去是不是有点儿恐怖呢？事实上，“天雨粟，鬼夜哭”是个吉兆呢！上天降下粮食雨，奖励人们发明了汉字；鬼也不是可怕的妖怪，所谓“鬼者，归也”，他们是“回归”故乡的祖先灵魂。那些去世的祖先觉得，有了汉字，他们的生平事迹就会被记录在文字里，再也不会被后人遗忘了，因此纷纷喜极而泣。&lt;/p>
&lt;h2 id="汉字源自图画">
 汉字源自图画
 &lt;a class="anchor" href="#%e6%b1%89%e5%ad%97%e6%ba%90%e8%87%aa%e5%9b%be%e7%94%bb">#&lt;/a>
&lt;/h2>
&lt;p>传说听起来很热闹，但如果根据考古来看，汉字应当起源于早期的原始图画。大家跟我看大汶口文化的图画型陶符，以及半坡文化中的彩陶符号。在这些刻画在陶器上的符号中，有圆圆的太阳，有巍峨的高山，有抽象的小草……和汉字中的象形文字，真是如出一辙。&lt;/p></description></item><item><title>序</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/0%E5%BA%8F/</link><pubDate>Tue, 14 Jan 2025 09:39:43 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/0%E5%BA%8F/</guid><description>&lt;p>人間道&lt;/p>
&lt;p>&lt;img src="img/000001.png" alt="" />&lt;/p>
&lt;h1 id="校-堪-序">
 校 堪 序
 &lt;a class="anchor" href="#%e6%a0%a1-%e5%a0%aa-%e5%ba%8f">#&lt;/a>
&lt;/h1>
&lt;p>本《人间道》乃由民间的中医爱好者整理与校对。中华民族文化博大精深、渊远流长，中医更是中华民族的瑰宝，几千年来一直守护着炎黄子孙的健康。继承和发扬中医,本是我们爱好中医人士与生俱来的使命。可是由于种种原因,使得中医的许多典籍在流传上产生问题；或已出版而校对欠佳,或印量稀少而极难购得，甚或已经绝版而失传。使得这份本应属于整个中华民族所共有共享的珍贵智慧，无法让更多需要的人学习它,大非往圣之本意！&lt;/p>
&lt;p>我们在校正的过程中，仅对明显的错别字给予了修改,对于无法确定者则保留原样。我们力图提供正确无误的电子书,但限于能力,自知错误在所难免。&lt;/p>
&lt;p>本书的原始材料来自于网络,为网络中善心人士传播之电子版本。本书的校正, 由民间中医爱好朋友们自发组织，属于无偿的自发行为，在此首先对他们表示感谢! 本电子版不收取任何费用，亦不得将本书内容用于商业行为。&lt;/p>
&lt;p>根据相关法律,本电子书仅供网络测试,不收取任何费用。请您下载后 24 小时内删除,如果您喜欢本书,请购买原版。任何人不得将本书用于商业行为,否则由此直接或间接引发的任何法律问题,我们不承担责任。&lt;/p>
&lt;p>民间中医爱好者 敬校&lt;/p>
&lt;p>2010-10-22&lt;/p>
&lt;p>自 序&lt;/p>
&lt;p>本書之著作，是為了發揚我國千年來，易經的神髓而作的，目的是希望後代子孫能以中國文化為榮，以身為炎黃子孫為傲，切不可數典忘袓，唯有真正的發揚固有文化，才可以讓中國人領導二十一世紀，獨領風騷。&lt;/p>
&lt;p>本書之書名，是由我父親倪志凌先生親手寫的，我父親飽讀詩書，現旅居美國， 一手好字，為同仁所公認，他一直以中國人為榮，時時教诲他的孫子，不可忘本， 從小我就受他影響很大，萬般皆下品，惟有讀書高的觀念，三日不讀書，面目可憎， 真是如此。現在社會形態一直轉變，我從事算命有十幾年，看盡人間百態有感而發， 希望藉由此著作，能寓教於人，不可再茫然度日，只知吃喝玩樂，不知長進。做長輩的要求子女多讀書，而不以身作則，人言：言教不如身教。我愛讀書，喜歡研究， 實身受我父親影響至大，故特別請我父親為我的書名立文，以茲感念。&lt;/p>
&lt;p>梵宇龍八十三年九月十日&lt;/p>
&lt;p>自 序&lt;/p>
&lt;p>易，變易也，隨時變易以從道也。&lt;/p>
&lt;p>不易也，事物之外象皆變，而其理不變也。簡易也，萬法皆不同，然其神只有一也。&lt;/p>
&lt;p>故易廣大皆備，順性命之理，通陰符，盡事物之情，而示吾人開物成務之道。得此易道之神，則天下萬事皆能化繁為簡矣。&lt;/p>
&lt;p>前賢失其義而只能傳其言，後學者誦言而忘其味。自秦以後，無傳矣。前有天官，姜太公、范蠡、鬼谷子、張良、諸葛亮、李淳風、程頤、邵康節、劉伯温之用易，其用易之神，後學者瞠乎其後，而實無來者再傳其神矣。&lt;/p>
&lt;p>易中聖人之道有四：以言者，尚其辭。以動者，尚其變。制器者，尚其象。卜筮者，尚其占。其間藴含吉凶消長之理，進退存亡之道。&lt;/p>
&lt;p>君子靜則觀象以悟其辭，動則觀變以玩其占。&lt;/p>
&lt;p>今世之人，大都得其辭，而未達其意，此著作以悟象之角度申其義，此其目的也。&lt;/p>
&lt;p>祈與同道共勉之！&lt;/p>
&lt;p>作者倪海廈甲戍年正月廿四日&lt;/p>
&lt;p>郭 序&lt;/p>
&lt;p>易經一書，相傳始於伏羲，成於文王。爲古人仰觀天象，俯察地理，累積日常生活資料所得之經驗。稱之為易，蓋取其〔簡易、變易、不易〕。因其簡易，當為常人所了解；因其變易，當可用於事事，復因不易，當能垂教萬世。唯以書成年代久遠，用語艱澀隱晦，不易暸解，師徒口語相傳，又失其微言大義，加以今人多不識此書，或竟視爲算命工具，或直斥爲迷信，殊為可惜。&lt;/p>
&lt;p>畏友 海廈兄，自幼隨明師習醫，於吾國固有之〔山、醫、命、相、卜〕諸術， 無不精通，尤擅於易經，除熟讀探究易經精義，更已將易經融入日常生活中，經由具體之實驗，驗證先哲思想之正確性。而余生也駑鈍，自倖入法界服務以來，對案件之偵査，雖期能究明實情，勿枉勿縱，但驗諸實際，每感實質正義追求之不易與人道之難爲，挫折感屢生，適因緣際會得識 海廈兄，每以易經象術相教，既解迷惑於一時，復啟對問題思考之另一模式，助益可謂大矣。&lt;/p>
&lt;p>今兄將研習易經多年之心得與課堂講授之經驗，集數月之力，爲十餘萬言，著成此書，以簡淺文字，發前人之所未言，闡明易經之微言大義；又博採史例，廣爲佐引，論證古今，詳實可信。於書成之際，邀余爲序，爰不揣淺陋做之序，以示慶賀之意，更盼巨著隨出，以享讀者。&lt;/p>
&lt;p>中 華 民 國 八十三年十一月九日&lt;/p>
&lt;p>郭學廉 序於台灣板橋地方法院檢察署&lt;/p>
&lt;p>徐 序&lt;/p>
&lt;p>人生於天地之間，秉天地之氣而有形，受天地之養以爲生。未有能離於天地之&lt;/p>
&lt;p>間而生者。是倪師海廈畢數十年之心力，上窮天道，下探地脈，中明人事，終底於成，而作「天紀」。&lt;/p>
&lt;p>余不敏，早歲亦嘗涉獵易理，惟不得法鬥。自從倪師游，方知易者「易」也， 何「難」之有？亦知吾國先人之智慧至倪師而能昭顯。「天紀」一書，以易經爲軸， 以天文、地理及人間道爲輔；發前人之所未發，言前人之所未言。復道盡天、人、地三才之關係，良以三才能分，能合；名異而實爲一體也。又豈天人合一之境所能比擬？&lt;/p>
&lt;p>吾國易經博大精深，漢、唐以前，重象、數而輕辭，自宋以降，則重辭而輕象、 數。倪師則並重之。使「天紀」一書不僅成爲集古代易經之大成，更有所發明。例如，，倪師之陽宅學，以九宮八卦圖爲内卦，居於其位之人爲外卦；卦既成，則觀該卦之象以斷其人之吉凶禍福。此實深合易之道也。&lt;/p>
&lt;p>君子静以觀象，退而演易，動則問卜，以果決行。「天紀」一書實爲倪師智慧之結晶，若以卜筮之流者視之，吾不與焉！&lt;/p>
&lt;p>徐光佑甲戍年孟冬 序於 台北景美&lt;/p>
&lt;p>前 言&lt;/p>
&lt;p>本書的內容，共分二部份。〔一〕從圖來談易經，即古人所謂「無字天書」，占卜、問卦，也可以應用於易經推命來批流年行運，也可以運用於陽宅來推易，這是學如何演易。〔二 〕從易辭部份來研究「人間道」。從第一卦「乾為天」開始，天地定位後，人的一生即進入此一輪迴，舉凡天地間所有的任何事物，全部包羅在內， 不但是醒世哲言，更可將世間所有的學問理論簡化之。今人讀易越讀越複雜，或是講易經講半天，而無人懂，這都是未得易之道，所謂易者，易也，不然何名「易經」？&lt;/p>
&lt;p>讀易的心理準備&lt;/p>
&lt;p>易經本身並不難，故讀者先要有一概念，在讀易之前，平心静氣，捨去一切雜念，千萬不可在讀易之前，先對易經有所認定，那尚未開始，您已經錯了 ， 一步錯，步歩錯，一旦離開了易經的神，運氣好的要「十年乃字」〔十年乃數之終，有倦怠的象〕，運氣不好，又自以為是的話，可能終其一世，仍未窺得易之全貌。&lt;/p></description></item><item><title>64火水未濟</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/64%E7%81%AB%E6%B0%B4%E6%9C%AA%E6%BF%9F/</link><pubDate>Tue, 14 Jan 2025 09:39:42 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/64%E7%81%AB%E6%B0%B4%E6%9C%AA%E6%BF%9F/</guid><description>&lt;h1 id="64火水未濟">
 64火水未濟
 &lt;a class="anchor" href="#64%e7%81%ab%e6%b0%b4%e6%9c%aa%e6%bf%9f">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦孔子穿九曲明珠未徹，卜得之，乃遇二女方始得穿也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>一人提刀斧，一虎坐，一旗卓在山上， 一人取旗，梯子有到字。&lt;/strong>&lt;/p>
&lt;p>碣火求珠之課 憂中望喜之象&lt;/p>
&lt;p>物必不會終盡，故以未濟為易卦之終。既濟為物之終，易為變易而不盡，有生生之意，故未濟為其序。未濟為未窮盡也，此卦，上離下坎，火在水上，互不為用，為未濟之時義。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、一人提刀斧：劉姓，武官，手有生殺之權。二、 一虎坐：肖虎人，王姓，虎坐乃無威之象。三、一旗卓在山上：揭竿而起，正義之師。&lt;/p>
&lt;p>四、一人取旗：代替也，高姓，宋姓，其人取代之象。&lt;/p>
&lt;p>五、梯子有至字：無刀日至，桎梏受困象，六、（附註：峪：谷姓。旗揚：楊姓。)有谷、楊合乃招凶象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>未濟：亨。小狐汔濟，濡其尾，无攸利。&lt;/p>
&lt;p>未濟之時，亦有亨通之道。假如小狐不知慎，逞其壯勇，渡河不知慎，其終必不能濟，故無所利矣。&lt;/p>
&lt;h2 id="彖曰未濟亨柔得中也小狐汔濟未出中也">
 彖曰：未濟亨，柔得中也。小狐汔濟，未出中也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%9c%aa%e6%bf%9f%e4%ba%a8%e6%9f%94%e5%be%97%e4%b8%ad%e4%b9%9f%e5%b0%8f%e7%8b%90%e6%b1%94%e6%bf%9f%e6%9c%aa%e5%87%ba%e4%b8%ad%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>未濟之時，能亨通，乃因其柔居中得其時，慎處之於未濟時，可以亨通也。如小狐之果敢於渡河，如不憂其尾濕，必不可脱險也。&lt;/p>
&lt;h2 id="濡其尾无攸利不續終也雖不當位剛柔應也">
 濡其尾，无攸利，不續終也。雖不當位，剛柔應也。
 &lt;a class="anchor" href="#%e6%bf%a1%e5%85%b6%e5%b0%be%e6%97%a0%e6%94%b8%e5%88%a9%e4%b8%8d%e7%ba%8c%e7%b5%82%e4%b9%9f%e9%9b%96%e4%b8%8d%e7%95%b6%e4%bd%8d%e5%89%9b%e6%9f%94%e6%87%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>其進雖勇，因尾濡而不能進，故不利往也。若能慎重處之，剛柔並濟則雖不當位，亦有可濟之理處。&lt;/p>
&lt;h2 id="象曰火在水上未濟君子以愼辨物居方">
 象曰：火在水上，未濟，君子以愼辨物居方。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e7%81%ab%e5%9c%a8%e6%b0%b4%e4%b8%8a%e6%9c%aa%e6%bf%9f%e5%90%9b%e5%ad%90%e4%bb%a5%e6%84%bc%e8%be%a8%e7%89%a9%e5%b1%85%e6%96%b9">#&lt;/a>
&lt;/h2>
&lt;p>火在水上，互不相交，此為未濟，君子觀象知，乃處不當之象，應慎處事物，辨其所當， 各居其位，止於其所。&lt;/p>
&lt;h2 id="初六濡其尾吝">
 初六：濡其尾，吝。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e6%bf%a1%e5%85%b6%e5%b0%be%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>陰柔居下位，居未濟之時，求力進猶獸之渡河，必揭其尾，方可渡，此言人不度量其才而進，終必不濟，終招吝鄙也。&lt;/p>
&lt;h2 id="九二-曳其輪貞吉">
 九二 ：曳其輪，貞吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c-%e6%9b%b3%e5%85%b6%e8%bc%aa%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>陽剛居將位，有欲動之象，今居未濟之時， 有以剛凌柔水來勝火之象，故須知止，如曳車之輪使其止進，如此可吉。戒之在剛過，如此則犯上，其終必凶。&lt;/p>
&lt;h2 id="六三未濟征凶利涉大川">
 六三：未濟，征凶，利涉大川。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e6%9c%aa%e6%bf%9f%e5%be%81%e5%87%b6%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d">#&lt;/a>
&lt;/h2>
&lt;p>居未濟之時，柔居相位，在下卦之上，有領導之象，但才不足濟，居險而無才足以出險， 如此而行，其必招凶致。惟俟時至，俟上位之才相應，再涉險而出，乃可出險。&lt;/p>
&lt;h2 id="九四貞吉-悔亡震用伐鬼方-三年有賞于大國">
 九四：貞吉 ，悔亡，震用伐鬼方， 三年有賞于大國。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e8%b2%9e%e5%90%89-%e6%82%94%e4%ba%a1%e9%9c%87%e7%94%a8%e4%bc%90%e9%ac%bc%e6%96%b9-%e4%b8%89%e5%b9%b4%e6%9c%89%e8%b3%9e%e4%ba%8e%e5%a4%a7%e5%9c%8b">#&lt;/a>
&lt;/h2>
&lt;p>陽剛之賢才，居於君側，上為中虛明順之君，故能濟天下之艱困，能伐鬼方示其力之大， 三年後乃有大功受國封賞。&lt;/p>
&lt;h2 id="六五貞吉-无悔君子之光-有孚吉">
 六五：貞吉 ，无悔，君子之光， 有孚，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e8%b2%9e%e5%90%89-%e6%97%a0%e6%82%94%e5%90%9b%e5%ad%90%e4%b9%8b%e5%85%89-%e6%9c%89%e5%ad%9a%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>中虛而明之才居君之尊位，能虛其心任剛賢之相為輔佐，且信任之而不悔，此處之至善， 即令己才不足，但亦由中心孚誠，終必大吉。&lt;/p>
&lt;h2 id="象曰君子之光其暉吉也">
 象曰：君子之光，其暉吉也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%90%9b%e5%ad%90%e4%b9%8b%e5%85%89%e5%85%b6%e6%9a%89%e5%90%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>上九：有孚于飲酒，无咎，濡其首， 有孚失是。&lt;/p>
&lt;p>陽剛居極，在中虛卦之上，乃示其剛且明， 能如此，則必不生燥，決之以明，明能洞察事理，剛能行事，然居未濟之時，因無可濟之理， 故成樂天順命而已，可以無災。如過於禮法， 濡其首，亂如是，其必不知反省，則示不安於所居也。&lt;/p></description></item><item><title>63水火既濟</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/63%E6%B0%B4%E7%81%AB%E6%97%A2%E6%BF%9F/</link><pubDate>Tue, 14 Jan 2025 09:39:41 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/63%E6%B0%B4%E7%81%AB%E6%97%A2%E6%BF%9F/</guid><description>&lt;h1 id="63水火既濟">
 63水火既濟
 &lt;a class="anchor" href="#63%e6%b0%b4%e7%81%ab%e6%97%a2%e6%bf%9f">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦季布在周家潛藏，卜得之，遂遇高皇&lt;/p>
&lt;p>帝&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>人在岸上一船來，一堆錢，雲中雨下， 二小兒在雨中行，文書一策。&lt;/strong>&lt;/p>
&lt;p>舟楫濟川之課 陰陽配合之象&lt;/p>
&lt;p>小過乃過於物，能過於物，必能相濟，故受之以既濟。此卦，水在上，火在下，火水相交， 則能為用，能互為用，即為既濟，此卦言，天下萬事，己互濟之時也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、人在岸上：泣也，等待也，無目的也。二、 一船來：接引至也。&lt;/p>
&lt;p>三、一堆錢：財祿無用也，憂心忡忡也，有竊象，抄家之象。四、雲中雨下：陰中有果也，夜間至凌晨時。&lt;/p>
&lt;p>五、二小兒：主喜也，二人也，二人雨中行也。六、文書一策：證件，命令也，資料也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>既濟：亨小，利貞，初吉，終亂。&lt;/p>
&lt;p>既濟之時大事必能亨通，然須知小事亦须亨通，方可為吉，必須所有事皆吉，否則濟至極時，終亂。&lt;/p>
&lt;h2 id="彖曰既濟亨小者亨也利貞剛柔正而位當也">
 彖曰：既濟亨，小者亨也。利貞，剛柔正而位當也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%97%a2%e6%bf%9f%e4%ba%a8%e5%b0%8f%e8%80%85%e4%ba%a8%e4%b9%9f%e5%88%a9%e8%b2%9e%e5%89%9b%e6%9f%94%e6%ad%a3%e8%80%8c%e4%bd%8d%e7%95%b6%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陰陽能皆得位，故為既濟，但須無所不亨，乃可也，且貞固守之。&lt;/p>
&lt;h2 id="初吉柔得中也終止則亂其道窮也">
 初吉，柔得中也。終止則亂，其道窮也。
 &lt;a class="anchor" href="#%e5%88%9d%e5%90%89%e6%9f%94%e5%be%97%e4%b8%ad%e4%b9%9f%e7%b5%82%e6%ad%a2%e5%89%87%e4%ba%82%e5%85%b6%e9%81%93%e7%aa%ae%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>其以柔順文明之中道，故可成既濟之功，至既濟之極，若不知變通，必生亂，其亂之生乃因道至盡窮。&lt;/p>
&lt;h2 id="象曰水在火上既濟君子以思患而豫防之">
 象曰：水在火上，既濟，君子以思患而豫防之。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%b0%b4%e5%9c%a8%e7%81%ab%e4%b8%8a%e6%97%a2%e6%bf%9f%e5%90%9b%e5%ad%90%e4%bb%a5%e6%80%9d%e6%82%a3%e8%80%8c%e8%b1%ab%e9%98%b2%e4%b9%8b">#&lt;/a>
&lt;/h2>
&lt;p>水火即交，各有其用，為互濟，時當既濟，君子觀象知於既濟之時，必先思慮患害之生， 使不至成禍患也。自古以來，天下由治而亂，乃皆因居治不思亂時之戒。&lt;/p>
&lt;h2 id="初九曳其輪濡其尾无咎">
 初九：曳其輪，濡其尾，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%9b%b3%e5%85%b6%e8%bc%aa%e6%bf%a1%e5%85%b6%e5%b0%be%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>倒曳輪，使不再進。獸之涉水，必舉高其尾，使尾不濕方可進，無災至。&lt;/p>
&lt;h2 id="象曰曳其輪義无咎也">
 象曰：曳其輪，義无咎也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%9b%b3%e5%85%b6%e8%bc%aa%e7%be%a9%e6%97%a0%e5%92%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>於既濟大吉之時，能知止進，則必不至極時，故必無咎也。&lt;/p>
&lt;h2 id="六二婦喪其茀勿逐七日得">
 六二：婦喪其茀，勿逐，七日得。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%a9%a6%e5%96%aa%e5%85%b6%e8%8c%80%e5%8b%bf%e9%80%90%e4%b8%83%e6%97%a5%e5%be%97">#&lt;/a>
&lt;/h2>
&lt;p>陰居正位，得五君位應，其志必得遂行， 但中正之道，不可廢也，猶婦人出門用茀遮己今喪其茀，則不行，能自守不失，道必復也。待時之至。&lt;/p>
&lt;h2 id="九三高宗伐鬼方三年克之小人勿用">
 九三：高宗伐鬼方，三年克之，小人勿用。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e9%ab%98%e5%ae%97%e4%bc%90%e9%ac%bc%e6%96%b9%e4%b8%89%e5%b9%b4%e5%85%8b%e4%b9%8b%e5%b0%8f%e4%ba%ba%e5%8b%bf%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;p>以剛居剛位，居既濟時，其君主威武必令民心服。但若專肆威武，必令民心忿而不服， 殘害人民，貪人民之富，故有小人勿用之戒， 因惟小人其威武必為滿足其私欲，君子戒之。&lt;/p>
&lt;h2 id="六四繻有衣袽終日戒">
 六四：&lt;strong>繻&lt;/strong>有衣&lt;strong>袽&lt;/strong>，終日戒。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e7%b9%bb%e6%9c%89%e8%a1%a3%e8%a2%bd%e7%b5%82%e6%97%a5%e6%88%92">#&lt;/a>
&lt;/h2>
&lt;p>四近君位，陰柔居之，乃適其任，當既濟之時，須如行舟，戒之滲漏，始漏則塞以衣物， 且終日戒懼不怠，則必可免患。&lt;/p>
&lt;h2 id="九五柬鄰殺牛不如西鄰之禴祭實受其福">
 九五：柬鄰殺牛，不如西鄰之&lt;strong>禴&lt;/strong>祭，實受其福。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e6%9f%ac%e9%84%b0%e6%ae%ba%e7%89%9b%e4%b8%8d%e5%a6%82%e8%a5%bf%e9%84%b0%e4%b9%8b%e7%a6%b4%e7%a5%ad%e5%af%a6%e5%8f%97%e5%85%b6%e7%a6%8f">#&lt;/a>
&lt;/h2>
&lt;p>九五至尊君位，陽剛人居此，當既濟之時， 必以至誠信孚如祭祀之誠，則即令薄禮之祭， 也可勝於豐厚之祭，由其至誠之心使然也。易之不重形，而重神，此明而顯矣，故論易須知&lt;/p>
&lt;h2 id="上六濡其首厲">
 上六：濡其首，厲。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e6%bf%a1%e5%85%b6%e9%a6%96%e5%8e%b2">#&lt;/a>
&lt;/h2>
&lt;p>既濟至極時，必不安而危，今陰柔居之， 居坎險之上，即既濟之終，小人居之，其敗壞必立可見矣。&lt;/p>
&lt;h2 id="象曰七日得以中道也">
 象曰：七日得，以中道也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b8%83%e6%97%a5%e5%be%97%e4%bb%a5%e4%b8%ad%e9%81%93%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>因中正之道非不可用，乃時之未至，於此時自守其中，俟時至必能行矣。&lt;/p></description></item><item><title>62雷山小過</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/62%E9%9B%B7%E5%B1%B1%E5%B0%8F%E9%81%8E/</link><pubDate>Tue, 14 Jan 2025 09:39:40 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/62%E9%9B%B7%E5%B1%B1%E5%B0%8F%E9%81%8E/</guid><description>&lt;h1 id="62雷山小過">
 62雷山小過
 &lt;a class="anchor" href="#62%e9%9b%b7%e5%b1%b1%e5%b0%8f%e9%81%8e">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦漢君有難，卜得之，後果脱險也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>明月當空，林下一人彈冠，人在網中。一人割網，猴子在山頭出。&lt;/strong>&lt;/p>
&lt;p>飛鳥遺音之課 上逆下順之象&lt;/p>
&lt;p>人之有信後必行，行則生過，故小過所以為中孚序也。此卦山上有雷，雷震於高處，其聲必過，故為小過。小過者，可說為小事過，亦可説為過之小也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、明月當空：政清狀，入法庭，刑堂。二、林下一人：林姓人。&lt;/p>
&lt;p>三、人陷網中：不得脱身，受束縛。&lt;/p>
&lt;p>四、一人彈冠：求去之象，但求去為形，束縛為神，合則有表裡不一狀。五、一人割網：貴人解救，脱困狀。&lt;/p>
&lt;p>六、猴子在山頭：從新開始之課(候再出山)。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>小過：亨，利，貞。&lt;/p>
&lt;p>過之意在過其正常也。如矯枉過正，此過為就正意。時不正，用過之道使正，此過之吉處， 吾人須知過之道，知用過之時機方如是。&lt;/p>
&lt;h2 id="可小事不可大事飛鳥遺之音不宜上宜下大吉">
 可小事，不可大事，飛鳥遺之音，不宜上，宜下，大吉。
 &lt;a class="anchor" href="#%e5%8f%af%e5%b0%8f%e4%ba%8b%e4%b8%8d%e5%8f%af%e5%a4%a7%e4%ba%8b%e9%a3%9b%e9%b3%a5%e9%81%ba%e4%b9%8b%e9%9f%b3%e4%b8%8d%e5%ae%9c%e4%b8%8a%e5%ae%9c%e4%b8%8b%e5%a4%a7%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>用過之道，乃為求中正。其過之限，可用小事，於大事不可用過。故曰不宜上，宜下，順之則吉，乃過能順理，吉反更大也。&lt;/p>
&lt;h2 id="彖曰小過小者過而亨也過以利貞與時行也">
 彖曰：小過，小者過而亨也。過以利貞，與時行也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%b0%8f%e9%81%8e%e5%b0%8f%e8%80%85%e9%81%8e%e8%80%8c%e4%ba%a8%e4%b9%9f%e9%81%8e%e4%bb%a5%e5%88%a9%e8%b2%9e%e8%88%87%e6%99%82%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>小過之道，在過之小，有時當過，過而能致亨，過之能吉矣。但用過之道，須配合時機， 乃意當過則過，此非真過矣，此為以過養正也。&lt;/p>
&lt;h2 id="柔得中是以小事吉也剛失位而不中是以不可大事也有飛鳥之象焉">
 柔得中，是以小事吉也，剛失位而不中，是以不可大事也，有飛鳥之象焉。
 &lt;a class="anchor" href="#%e6%9f%94%e5%be%97%e4%b8%ad%e6%98%af%e4%bb%a5%e5%b0%8f%e4%ba%8b%e5%90%89%e4%b9%9f%e5%89%9b%e5%a4%b1%e4%bd%8d%e8%80%8c%e4%b8%8d%e4%b8%ad%e6%98%af%e4%bb%a5%e4%b8%8d%e5%8f%af%e5%a4%a7%e4%ba%8b%e4%b9%9f%e6%9c%89%e9%a3%9b%e9%b3%a5%e4%b9%8b%e8%b1%a1%e7%84%89">#&lt;/a>
&lt;/h2>
&lt;p>小過之道，處小事之過，可得吉。但不可做大事，因剛失位又不得中，故不可以用在大事上，故有飛鳥之象，鳥飛之事小，過而餘音，但無災也。&lt;/p>
&lt;h2 id="飛鳥遺之音不宜上宜下大吉上逆而下順也">
 飛鳥遺之音，不宜上宜下，大吉，上逆而下順也。
 &lt;a class="anchor" href="#%e9%a3%9b%e9%b3%a5%e9%81%ba%e4%b9%8b%e9%9f%b3%e4%b8%8d%e5%ae%9c%e4%b8%8a%e5%ae%9c%e4%b8%8b%e5%a4%a7%e5%90%89%e4%b8%8a%e9%80%86%e8%80%8c%e4%b8%8b%e9%a0%86%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>事之有過，當從其宜。如人之過恭，過哀，過儉，其太過，則不可。其過當如飛鳥之遺音，&lt;/p>
&lt;p>其聲出，而身己過，事之過當如是，則吉宜。此順道之過，故也。&lt;/p>
&lt;h2 id="象曰山上有雷小過君子以行過乎恭喪過乎哀用過乎儉">
 象曰：山上有雷，小過。君子以行過乎恭，喪過乎哀，用過乎儉。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8a%e6%9c%89%e9%9b%b7%e5%b0%8f%e9%81%8e%e5%90%9b%e5%ad%90%e4%bb%a5%e8%a1%8c%e9%81%8e%e4%b9%8e%e6%81%ad%e5%96%aa%e9%81%8e%e4%b9%8e%e5%93%80%e7%94%a8%e9%81%8e%e4%b9%8e%e5%84%89">#&lt;/a>
&lt;/h2>
&lt;p>雷震於山上，其聲至，而雷已過，故為小過，君子觀象，知天下事，有時當過，但不可過甚。故為小過，當過而過，乃其宜也。&lt;/p>
&lt;h2 id="初六飛鳥以凶">
 初六：飛鳥以凶。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e9%a3%9b%e9%b3%a5%e4%bb%a5%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>陰柔居下位，為小人之象，小人本躁易動， 今逢小過時，乃得理不饒人，其行為之過。必速且遠，救之莫及也，故凶。&lt;/p>
&lt;h2 id="六二過其祖遇其妣不及其君-遇其臣无咎">
 六二：過其祖，遇其妣，不及其君， 遇其臣，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e9%81%8e%e5%85%b6%e7%a5%96%e9%81%87%e5%85%b6%e5%a6%a3%e4%b8%8d%e5%8f%8a%e5%85%b6%e5%90%9b-%e9%81%87%e5%85%b6%e8%87%a3%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>二與五爻位，其猶祖之象，今陰柔居其位， 越過三，四位，直與五相應，有越位之戒，今逢該過之時，如過越位，仍不失臣道，亦可無咎。於其他之卦，越過本位凶，但今於小過， 乃意當過之時，可過，無災，切忌失君臣之道，&lt;/p>
&lt;h2 id="九三弗過防之從或戕之凶">
 九三：弗過防之，從或戕之，凶。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%bc%97%e9%81%8e%e9%98%b2%e4%b9%8b%e5%be%9e%e6%88%96%e6%88%95%e4%b9%8b%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>陽居正位，於小過之時，意味手下無能， 又為陰之小人蒙蔽。此時須過防之。如不加強防範，必招害。君子防小人之道，以正己為先， 堅守正道也。&lt;/p>
&lt;h2 id="九四无咎弗過遇之往厲必戒-勿用永貞">
 九四：无咎，弗過遇之，往厲必戒， 勿用永貞。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e6%97%a0%e5%92%8e%e5%bc%97%e9%81%8e%e9%81%87%e4%b9%8b%e5%be%80%e5%8e%b2%e5%bf%85%e6%88%92-%e5%8b%bf%e7%94%a8%e6%b0%b8%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>剛居柔位，以剛而用柔，其剛必不過也。故無災咎。剛陽之道居小過時，須戒之隨宜， 不可固守不變，故君子隨時順處，不固守其常也。&lt;/p>
&lt;h2 id="六五密雲不雨自我西郊公弋取彼在穴">
 六五：密雲不雨，自我西郊，公弋取彼在穴。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%af%86%e9%9b%b2%e4%b8%8d%e9%9b%a8%e8%87%aa%e6%88%91%e8%a5%bf%e9%83%8a%e5%85%ac%e5%bc%8b%e5%8f%96%e5%bd%bc%e5%9c%a8%e7%a9%b4">#&lt;/a>
&lt;/h2>
&lt;p>此陰柔居君位，居當過之時，乃不夠陽剛， 故雖欲過，但不能成功。故猶如密雲而不成雨， 其不成功，即令越過其位向二爻相應，三、四爻位不應，亦如同密雲集中，而無法成雨&lt;/p></description></item><item><title>61風澤中孚</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/61%E9%A2%A8%E6%BE%A4%E4%B8%AD%E5%AD%9A/</link><pubDate>Tue, 14 Jan 2025 09:39:39 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/61%E9%A2%A8%E6%BE%A4%E4%B8%AD%E5%AD%9A/</guid><description>&lt;h1 id="61風澤中孚">
 61風澤中孚
 &lt;a class="anchor" href="#61%e9%a2%a8%e6%be%a4%e4%b8%ad%e5%ad%9a">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦辛君屯邊，卜得之，遂果得梅妃之信也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>望子上文書，人擊柝，貴人用繩牽鹿雁啣書。&lt;/strong>&lt;/p>
&lt;p>鶴鳴子和之課 事有定期之象&lt;/p>
&lt;p>人有節，而後有信，故中孚次之。節本有節制，不可過越之意，人能信而後行之，上位知信守，下位知信從。此卦澤上有風，風行于澤上能感於水為中孚之象，此因一 、二爻位，五六爻位，皆實陽，而三、四爻位，為中虛之象，全卦有外實中虛之義，此中孚之象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、望子上文書：科甲高中，刑法更吉。二 、人擊柝：預警也。&lt;/p>
&lt;p>三、貴人用繩牽鹿：守成，不可攻也。四、雁啣書：喜事將至，有南徙之象。&lt;/p>
&lt;p>五、人立庭中：蒞庭也，防官司或打官司保身也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>中孚：豚魚吉，利涉大川，利貞。&lt;/p>
&lt;p>中孚之道，其中心之誠信，能使豚魚都有感，則無所不至矣。故利涉大川，週行無限也&lt;/p>
&lt;h2 id="彖曰中孚柔在内而剛得中">
 彖曰：中孚，柔在内而剛得中。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e4%b8%ad%e5%ad%9a%e6%9f%94%e5%9c%a8%e5%86%85%e8%80%8c%e5%89%9b%e5%be%97%e4%b8%ad">#&lt;/a>
&lt;/h2>
&lt;p>中孚之中虛乃至誠之象。此示意剛之道能得中正，故吉。&lt;/p>
&lt;h2 id="説而巽孚乃化邦也豚魚吉信及豚魚也">
 説而巽，孚乃化邦也。豚魚吉，信及豚魚也。
 &lt;a class="anchor" href="#%e8%aa%ac%e8%80%8c%e5%b7%bd%e5%ad%9a%e4%b9%83%e5%8c%96%e9%82%a6%e4%b9%9f%e8%b1%9a%e9%ad%9a%e5%90%89%e4%bf%a1%e5%8f%8a%e8%b1%9a%e9%ad%9a%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>上位以至誠而順從於下，下位以至誠以求上悦，由其中孚之至誠，必教化邦國，此信能令豚魚皆感，此道之至善也。&lt;/p>
&lt;h2 id="利涉大川乘木舟虛也中孚以利貞乃應乎天也">
 利涉大川，乘木舟虛也。中孚以利貞，乃應乎天也。
 &lt;a class="anchor" href="#%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d%e4%b9%98%e6%9c%a8%e8%88%9f%e8%99%9b%e4%b9%9f%e4%b8%ad%e5%ad%9a%e4%bb%a5%e5%88%a9%e8%b2%9e%e4%b9%83%e6%87%89%e4%b9%8e%e5%a4%a9%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>中孚道之吉，猶乘舟渡川，內無實物，不虞覆船，即處艱困，能以中孚則必可亨通，能堅守中孚之道，此天道之極至也。&lt;/p>
&lt;h2 id="象曰澤上有風中孚君子以議獄緩死">
 象曰：澤上有風，中孚，君子以議獄緩死。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e4%b8%8a%e6%9c%89%e9%a2%a8%e4%b8%ad%e5%ad%9a%e5%90%9b%e5%ad%90%e4%bb%a5%e8%ad%b0%e7%8d%84%e7%b7%a9%e6%ad%bb">#&lt;/a>
&lt;/h2>
&lt;p>風在澤上，澤有感于風，因水體本虛，故風能入。君子觀之，知人心虛，則物必感之，此中孚之象，君子于議獄，本為盡忠而已。於決死之際，但求緩之，寬之。&lt;/p>
&lt;h2 id="初九虞吉有它不燕">
 初九：虞吉。有它，不燕。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e8%99%9e%e5%90%89%e6%9c%89%e5%ae%83%e4%b8%8d%e7%87%95">#&lt;/a>
&lt;/h2>
&lt;p>陽剛居始進，於中孚之道並非了解，人初志必不定，故如能以愚誠信之，且專一之志， 若生異志，必不得安矣。&lt;/p>
&lt;h2 id="九二鳴鶴在陰其子和之我有好爵吾與爾靡之">
 九二：鳴鶴在陰，其子和之，我有好爵，吾與爾靡之。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e9%b3%b4%e9%b6%b4%e5%9c%a8%e9%99%b0%e5%85%b6%e5%ad%90%e5%92%8c%e4%b9%8b%e6%88%91%e6%9c%89%e5%a5%bd%e7%88%b5%e5%90%be%e8%88%87%e7%88%be%e9%9d%a1%e4%b9%8b">#&lt;/a>
&lt;/h2>
&lt;p>內剛外柔，陽居陰位，中孚之感，因外柔必能感通，猶鶴鳴於幽谷，人不聞也，而其子必應和，乃心感通也。故能中心孚誠，千里能&lt;/p>
&lt;h2 id="六三得敵或鼓或罷或泣或歌">
 六三：得敵，或鼓或罷，或泣或歌。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e5%be%97%e6%95%b5%e6%88%96%e9%bc%93%e6%88%96%e7%bd%b7%e6%88%96%e6%b3%a3%e6%88%96%e6%ad%8c">#&lt;/a>
&lt;/h2>
&lt;p>柔居陽剛之位，居位高但才不能濟，故勢必唯所信而從，其外在之鼓張，罷廢悲泣，歡歌皆因導於內心之所信，因才不足，故只有信，&lt;/p>
&lt;h2 id="六四月幾望馬匹亡无咎">
 六四：月幾望，馬匹亡，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e6%9c%88%e5%b9%be%e6%9c%9b%e9%a6%ac%e5%8c%b9%e4%ba%a1%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>近君之位，以柔順得信，其盛必如月之滿盈。即同類同屬亡失，亦可無咎。&lt;/p>
&lt;h2 id="九五有孚孿如无咎">
 九五：有孚孿如，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e6%9c%89%e5%ad%9a%e5%ad%bf%e5%a6%82%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>君位之人，以中孚至誠之道，感通天下， 民心之信服，固結如抽掣也。&lt;/p>
&lt;h2 id="上九翰音登于天貞凶">
 上九：翰音登于天，貞凶。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e7%bf%b0%e9%9f%b3%e7%99%bb%e4%ba%8e%e5%a4%a9%e8%b2%9e%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>中誠孚信致於極，有信終則衰，華美其外， 內無忠篤，猶翰音登天，不知止之，貞固如此， 不知變，乃自招凶。孔子曰：好信不好學，此敝也贼。意即固守而不通也。&lt;/p>
&lt;h2 id="象曰初九虞吉志未變也">
 象曰：初九虞吉，志未變也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%88%9d%e4%b9%9d%e8%99%9e%e5%90%89%e5%bf%97%e6%9c%aa%e8%ae%8a%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>始信之時，志未能從，但能愚誠專一至信， 則吉矣，故吾人初始，必求能為己所信之道， 方以愚誠，如此方不致迷。&lt;/p></description></item><item><title>60水澤節</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/60%E6%B0%B4%E6%BE%A4%E7%AF%80/</link><pubDate>Tue, 14 Jan 2025 09:39:38 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/60%E6%B0%B4%E6%BE%A4%E7%AF%80/</guid><description>&lt;h1 id="60水澤節">
 60水澤節
 &lt;a class="anchor" href="#60%e6%b0%b4%e6%be%a4%e7%af%80">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦是孟姜女送寒衣，卜得之，知夫落亡不吉之兆。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>大雨下，火中魚躍出，雞在屋上，犬在井中，屋門開著。&lt;/strong>&lt;/p>
&lt;p>船行風黃之課 寒暑有節之象&lt;/p>
&lt;p>渙者散也，物不可以終散，必當節止，故渙之後以節卦為序。此卦「澤」上有「水」，澤為有限之水地，如再置水，當滿不容，故有節制之象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、大雨下：陰暗不明，凶象。&lt;/p>
&lt;p>二、火中魚躍：飛騰而徒勞無功，又餐飲業。三、雞在屋上：酉年肖雞人，解救之時與人。&lt;/p>
&lt;p>四、犬在井中：招陷，動彈不得，不知節制而招如此。五、屋門開著：仍可開張，须雞人來助大吉。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>節：亨，苦節，不可貞。&lt;/p>
&lt;p>節之道，在有制，萬事如知節，必可亨。節之貴在中庸，如限制太過則苦，如節至於苦， 必不可常久也，人事如此。&lt;/p>
&lt;h2 id="彖曰節亨剛柔分而剛得中">
 彖曰：節亨，剛柔分，而剛得中。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e7%af%80%e4%ba%a8%e5%89%9b%e6%9f%94%e5%88%86%e8%80%8c%e5%89%9b%e5%be%97%e4%b8%ad">#&lt;/a>
&lt;/h2>
&lt;p>節之道能致亨通，乃因知剛柔並濟，能剛又且能適中，此節之能亨。&lt;/p>
&lt;h2 id="苦節不可貞其道窮也">
 苦節不可貞，其道窮也。
 &lt;a class="anchor" href="#%e8%8b%a6%e7%af%80%e4%b8%8d%e5%8f%af%e8%b2%9e%e5%85%b6%e9%81%93%e7%aa%ae%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>如節之致於苦極，必無法堅固守志，則節道必招困窮也。&lt;/p>
&lt;h2 id="説以行險當位以節中正以通">
 説以行險，當位以節，中正以通。
 &lt;a class="anchor" href="#%e8%aa%ac%e4%bb%a5%e8%a1%8c%e9%9a%aa%e7%95%b6%e4%bd%8d%e4%bb%a5%e7%af%80%e4%b8%ad%e6%ad%a3%e4%bb%a5%e9%80%9a">#&lt;/a>
&lt;/h2>
&lt;p>此以卦才言，外險內悦，以能悦且又知止，此為節之大義，常人於悦時不知止，遇艱險方思止。當位居尊之人如明節之道，必能中正且亨通矣。今人之權力欲望無盡，居尊不思止，悦而無限，終必至凶，乃不知節之道，明矣。&lt;/p>
&lt;h2 id="天地節而四時成節以制度不傷財不害民">
 天地節而四時成，節以制度，不傷財，不害民。
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e7%af%80%e8%80%8c%e5%9b%9b%e6%99%82%e6%88%90%e7%af%80%e4%bb%a5%e5%88%b6%e5%ba%a6%e4%b8%8d%e5%82%b7%e8%b2%a1%e4%b8%8d%e5%ae%b3%e6%b0%91">#&lt;/a>
&lt;/h2>
&lt;p>天地之間有節道故四季分明，聖人觀之知立制度，以為節道，所以必不傷財害民，此法治觀念之始，聖人立此道，即因知人之欲望無限，故以節制之，免流於人治，必因私欲，而終致勞民傷財。&lt;/p>
&lt;h2 id="象曰澤上有水節君子以制數度議德行">
 象曰：澤上有水，節，君子以制數度，議德行。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e4%b8%8a%e6%9c%89%e6%b0%b4%e7%af%80%e5%90%9b%e5%ad%90%e4%bb%a5%e5%88%b6%e6%95%b8%e5%ba%a6%e8%ad%b0%e5%be%b7%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>澤之容水有限，故節。君子觀之，知節以制度來限制，下定義來區分君子小人之行為。&lt;/p>
&lt;h2 id="初九不出户庭无咎">
 初九：不出户庭，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e4%b8%8d%e5%87%ba%e6%88%b7%e5%ba%ad%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>陽剛之性居節之初，必不能節，如居門庭之內，則可無咎。&lt;/p>
&lt;h2 id="九二不出門庭凶">
 九二：不出門庭，凶。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e4%b8%8d%e5%87%ba%e9%96%80%e5%ba%ad%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>剛陽之性，居陰柔之位，爻義為，處陰且不正之人居當節之時，不知節必合於中道，過與不及皆非節，如此即令不出門庭，亦會招凶。&lt;/p>
&lt;h2 id="六三不節若則嗟若无咎">
 六三：不節若，則嗟若，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e4%b8%8d%e7%af%80%e8%8b%a5%e5%89%87%e5%97%9f%e8%8b%a5%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>三爻本剛，今陰柔居之，須剛斷而柔性之人居其位，因其柔順，且知自節乃可順於義行， 亦可以無過。&lt;/p>
&lt;h2 id="六四安節亨">
 六四：安節，亨。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e5%ae%89%e7%af%80%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>陰居陰位，其正位，於節時，即居高位且有節之象，能安於此，則亨通。&lt;/p>
&lt;h2 id="九五節吉往有尚">
 九五：節，吉，往有尚。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e7%af%80%e5%90%89%e5%be%80%e6%9c%89%e5%b0%9a">#&lt;/a>
&lt;/h2>
&lt;p>九五尊位，乃居節時之主位，能甘之如飴， 盡節之道，必吉，功大矣。&lt;/p>
&lt;h2 id="上六苦節貞凶悔亡">
 上六：苦節，貞凶，悔亡。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e8%8b%a6%e7%af%80%e8%b2%9e%e5%87%b6%e6%82%94%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>上六乃居節之極，其必因節致苦，如堅守不改則必凶，終致亡而悔，易之節卦悔亡，與他卦之悔亡，辭同但意不同也。&lt;/p>
&lt;h2 id="象曰不出户庭知通塞也">
 象曰：不出户庭，知通塞也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b8%8d%e5%87%ba%e6%88%b7%e5%ba%ad%e7%9f%a5%e9%80%9a%e5%a1%9e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>不出户庭可以無咎，但須知外之言與行， 必以時來定進退之機。&lt;/p></description></item><item><title>59風水渙</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/59%E9%A2%A8%E6%B0%B4%E6%B8%99/</link><pubDate>Tue, 14 Jan 2025 09:39:37 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/59%E9%A2%A8%E6%B0%B4%E6%B8%99/</guid><description>&lt;h1 id="59風水渙">
 59風水渙
 &lt;a class="anchor" href="#59%e9%a2%a8%e6%b0%b4%e6%b8%99">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦漢武帝，卜得之，乃知李夫還魂也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>山上有寺，一僧，一人隨後，一鬼在後，金甲人。&lt;/strong>&lt;/p>
&lt;p>順水行舟之課 大風吹物之象&lt;/p>
&lt;p>兌，悦也，人悦時，則必舒散，渙、散也，故渙為兌之序。人之性憂則結聚，悦則舒散。此卦上巽下水，乃風行水上，水遇風則渙散，故渙為散也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、山上有寺：出家狀，對峙狀，寸土寸金象。二、僧：化外之人，光頭人，曾姓人。&lt;/p>
&lt;p>三、一人隨後：逃避，求助化外之人。&lt;/p>
&lt;p>四、一鬼在後：為禍追緝之象，內心有鬼，處事不明象。五、金甲人：正義之師，得民心也。&lt;/p>
&lt;p>六、寺，土頭人作對。等待時機也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>渙：亨。王假有廟，利涉大川，利貞。&lt;/p>
&lt;p>渙，散也。人會離散，本於中心一念，心離則散矣。故能治散，必從中入手，有能收拾人心，散可聚矣，故散之道論如何用散，故可以亨。君王能知立宗廟收人心，則必可前進無阻， 故須堅心到底。&lt;/p>
&lt;h2 id="彖曰渙亨剛來而不窮柔得位乎外而上同">
 彖曰：渙，亨。剛來而不窮，柔得位乎外而上同。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%b8%99%e4%ba%a8%e5%89%9b%e4%be%86%e8%80%8c%e4%b8%8d%e7%aa%ae%e6%9f%94%e5%be%97%e4%bd%8d%e4%b9%8e%e5%a4%96%e8%80%8c%e4%b8%8a%e5%90%8c">#&lt;/a>
&lt;/h2>
&lt;p>渙之道所以可致亨，以卦來言，用陽剛之法，不可致極剛，以居下位，又得中道，柔位而得五君位之相應，故居渙時，能守其中，必不至於離散，所以能亨。&lt;/p>
&lt;h2 id="王假有廟王乃在中也利涉大川乘木有功也">
 王假有廟，王乃在中也。利涉大川，乘木有功也。
 &lt;a class="anchor" href="#%e7%8e%8b%e5%81%87%e6%9c%89%e5%bb%9f%e7%8e%8b%e4%b9%83%e5%9c%a8%e4%b8%ad%e4%b9%9f%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d%e4%b9%98%e6%9c%a8%e6%9c%89%e5%8a%9f%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>君王能利用宗廟收拾人心，乃知用中道之妙，能如此可往天下，無處不阻也，自古以來， 能得民者，必得其心，方可謂得民矣。&lt;/p>
&lt;h2 id="象曰風行水上渙先王以享于帝立廟">
 象曰：風行水上，渙。先王以享于帝立廟。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%a2%a8%e8%a1%8c%e6%b0%b4%e4%b8%8a%e6%b8%99%e5%85%88%e7%8e%8b%e4%bb%a5%e4%ba%ab%e4%ba%8e%e5%b8%9d%e7%ab%8b%e5%bb%9f">#&lt;/a>
&lt;/h2>
&lt;p>風行水上，渙散之象。先王觀渙之象知，救天下之散，惟有祭祀宗廟，收合人心，合心之道，莫大於此。&lt;/p>
&lt;h2 id="初六用拯馬壯吉">
 初六：用拯馬壯，吉。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e7%94%a8%e6%8b%af%e9%a6%ac%e5%a3%af%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>初爻，為渙之始，陰柔居不正，又處卑下， 故於始時即察知而拯，只須託於陽剛之人，即可整渙，故吉。&lt;/p>
&lt;h2 id="九二渙奔其機悔亡">
 九二：渙奔其機，悔亡。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e6%b8%99%e5%a5%94%e5%85%b6%e6%a9%9f%e6%82%94%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>外飾順，內實險憂，心已散。九二居坎險中位，乃意於渙散時，又居險中，其險可知， 如能知機而奔往不猶豫，方可不慮亡也。&lt;/p>
&lt;h2 id="六三渙其躬无悔">
 六三：渙其躬，无悔。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e6%b8%99%e5%85%b6%e8%ba%ac%e6%97%a0%e6%82%94">#&lt;/a>
&lt;/h2>
&lt;p>六三相位，今才為陰質，不適居位，於渙散之時，必無法拯救他人，只能止於其身，可以無悔矣。&lt;/p>
&lt;h2 id="六四渙其群元吉渙有丘匪夷所思">
 六四：渙其群，元吉。渙有丘，匪夷所思。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e6%b8%99%e5%85%b6%e7%be%a4%e5%85%83%e5%90%89%e6%b8%99%e6%9c%89%e4%b8%98%e5%8c%aa%e5%a4%b7%e6%89%80%e6%80%9d">#&lt;/a>
&lt;/h2>
&lt;p>六四乃大臣之位，今有九五君來同應，有君臣合力，以濟天下之渙散，能如此則有大功。方渙散之時，用剛則必不能使之懷附，用柔又不足使其依歸，故如能使大聚，此事必難，用必非常法，能成此大功，非聖賢何能如是乎？&lt;/p>
&lt;h2 id="九五渙汗其大號渙王居无咎">
 九五：渙汗其大號，渙王居，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e6%b8%99%e6%b1%97%e5%85%b6%e5%a4%a7%e8%99%9f%e6%b8%99%e7%8e%8b%e5%b1%85%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九五君位，居渙之時，以陽剛正德又得巽之外順，此深得處渙之道，必能號令人民，民心信服而從矣，如汗之於體外，息息相關，民與君之關係能如此，則必能居王位而無咎。&lt;/p>
&lt;h2 id="上九渙其血去逖出无咎">
 上九：渙其血，去逖出，无咎。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e6%b8%99%e5%85%b6%e8%a1%80%e5%8e%bb%e9%80%96%e5%87%ba%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>渙至極時，仍能守巽順之道，即令有傷， 亦仍可出險，遠離災害而無災矣。&lt;/p>
&lt;h2 id="象曰初六之吉順也">
 象曰：初六之吉，順也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%88%9d%e5%85%ad%e4%b9%8b%e5%90%89%e9%a0%86%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>初六之能吉，乃因於渙始即察知，始而拯， 此得時也故吉。&lt;/p>
&lt;h2 id="象曰渙本汁其機得願也">
 象曰：渙本汁其機，得願也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%b8%99%e6%9c%ac%e6%b1%81%e5%85%b6%e6%a9%9f%e5%be%97%e9%a1%98%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>渙之時居險，必以知機而親近之，乃可得願矣。&lt;/p>
&lt;h2 id="象曰渙其躬志在外也">
 象曰：渙其躬，志在外也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%b8%99%e5%85%b6%e8%ba%ac%e5%bf%97%e5%9c%a8%e5%a4%96%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>渙時，以躬順求上同。可免己之災。&lt;/p></description></item><item><title>58兌爲澤</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/58%E5%85%8C%E7%88%B2%E6%BE%A4/</link><pubDate>Tue, 14 Jan 2025 09:39:36 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/58%E5%85%8C%E7%88%B2%E6%BE%A4/</guid><description>&lt;h1 id="58兌爲澤">
 58兌爲澤
 &lt;a class="anchor" href="#58%e5%85%8c%e7%88%b2%e6%be%a4">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦唐三藏去西天取經，卜得之，乃知必歸唐國。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>人坐看一堆擔，月在天邊，秀才登梯， 一女在合邊立，文字上箭。&lt;/strong>&lt;/p>
&lt;p>江湖養物之課 天峰雨澤之象&lt;/p>
&lt;p>巽者，入也，物能相入，必有相悦方成，故兌為巽之序。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、人坐看一擔：任務完成狀，有人相助象，助人為樂之貴人。二、月在天邊：清明之治。&lt;/p>
&lt;p>三、秀才登梯：金榜登科象。&lt;/p>
&lt;p>四、一女在合邊立：女人介入，先成後破。五、文字上箭：得機而發，射：發象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>兌：亨，利、貞。&lt;/p>
&lt;p>兌之道，可以致亨。人能悦於物，物亦相悦，必足以亨。然兌之道在貞正，求悦不以正道， 必成邪吝，終致悔咎。&lt;/p>
&lt;h2 id="彖曰兌説也剛中而柔外説以利貞是以順乎天而應乎人説以先民民忘其勞説以犯難民忘其死説之大民勸矣哉">
 彖曰：兌，説也，剛中而柔外，説以利貞，是以順乎天而應乎人，説以先民，民忘其勞，説以犯難，民忘其死，説之大，民勸矣哉。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%85%8c%e8%aa%ac%e4%b9%9f%e5%89%9b%e4%b8%ad%e8%80%8c%e6%9f%94%e5%a4%96%e8%aa%ac%e4%bb%a5%e5%88%a9%e8%b2%9e%e6%98%af%e4%bb%a5%e9%a0%86%e4%b9%8e%e5%a4%a9%e8%80%8c%e6%87%89%e4%b9%8e%e4%ba%ba%e8%aa%ac%e4%bb%a5%e5%85%88%e6%b0%91%e6%b0%91%e5%bf%98%e5%85%b6%e5%8b%9e%e8%aa%ac%e4%bb%a5%e7%8a%af%e9%9b%a3%e6%b0%91%e5%bf%98%e5%85%b6%e6%ad%bb%e8%aa%ac%e4%b9%8b%e5%a4%a7%e6%b0%91%e5%8b%b8%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>兑，悦也。外柔內剛，中心誠實之象，悦之道可亨，乃因其能貞正。上順天理，下應人心， 能使民以悦，則民忘勞苦，且欣然為國犯難。忘其生死，此悦之道至極矣，民莫不信之。&lt;/p>
&lt;h2 id="象曰麗澤兌君子以朋友講習">
 象曰：麗澤，兌，君子以朋友講習。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%ba%97%e6%be%a4%e5%85%8c%e5%90%9b%e5%ad%90%e4%bb%a5%e6%9c%8b%e5%8f%8b%e8%ac%9b%e7%bf%92">#&lt;/a>
&lt;/h2>
&lt;p>兩兌相重，即兩澤互麗，交相浸潤，互有滋益之象，君子觀之乃知朋友講習，互相增益， 為天下之大悦，有互相明益之象。&lt;/p>
&lt;h2 id="初九和兌吉">
 初九：和兌，吉。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%92%8c%e5%85%8c%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>初雖陽剛，但因居卑下，乃知卑下和順， 此悦必無所偏私，此兌之正道，故吉。&lt;/p>
&lt;h2 id="九二孚兌吉悔亡">
 九二：孚兌，吉，悔亡。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%ad%9a%e5%85%8c%e5%90%89%e6%82%94%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>二位有剛中之德，內實孚信，雖近小人， 但不失君子之道，悦而不失剛中之德，所以能吉而不慮亡矣。&lt;/p>
&lt;h2 id="象曰和兌之吉行未疑也">
 象曰：和兌之吉，行未疑也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%92%8c%e5%85%8c%e4%b9%8b%e5%90%89%e8%a1%8c%e6%9c%aa%e7%96%91%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>初位必隨時順處，心無所欲，惟求能和而已，是以吉也。其行必未有可疑。&lt;/p>
&lt;h2 id="象曰孚兌之吉信志也">
 象曰：孚兌之吉，信志也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%ad%9a%e5%85%8c%e4%b9%8b%e5%90%89%e4%bf%a1%e5%bf%97%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>君子之悦，自心中之至誠，故必不失道， 小人之悦，必忘形而自失不知。&lt;/p>
&lt;h2 id="六三來兌凶">
 六三：來兌，凶。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e4%be%86%e5%85%8c%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>陰棄居陽剛之位，不適也，比得兌之道不以中正，為悦而求悦，人之有求必因私欲，己離正道，故凶。&lt;/p>
&lt;h2 id="九四商兌未寧介疾有喜">
 九四：商兌未寧，介疾有喜。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e5%95%86%e5%85%8c%e6%9c%aa%e5%af%a7%e4%bb%8b%e7%96%be%e6%9c%89%e5%96%9c">#&lt;/a>
&lt;/h2>
&lt;p>陽剛處陰位，居不中正，故有未決，未能定也。居兑之時，不為悦所惑，能知命守剛正， 疾惡去仇，必能得君之信，而有喜也。&lt;/p>
&lt;h2 id="九五孚于剝有厲">
 九五：孚于剝，有厲。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%ad%9a%e4%ba%8e%e5%89%9d%e6%9c%89%e5%8e%b2">#&lt;/a>
&lt;/h2>
&lt;p>九五君位得中正之道，居悦時，乃可盡善， 但聖人復設戒於有厲，即雖中正聖賢在上，天下仍有小人，為免惑於悦，小人之入而不自知，&lt;/p>
&lt;h2 id="上六引兌">
 上六：引兌
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%bc%95%e5%85%8c">#&lt;/a>
&lt;/h2>
&lt;p>悦之至極則愈悦，故言引兌。天下萬事過之皆不宜,有凶至。&lt;/p>
&lt;h2 id="象曰來兌之凶位不當也">
 象曰：來兌之凶，位不當也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%be%86%e5%85%8c%e4%b9%8b%e5%87%b6%e4%bd%8d%e4%b8%8d%e7%95%b6%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>柔居陽剛，自處必不中正，和欲而求悦， 必招凶。&lt;/p></description></item><item><title>57巽為風</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/57%E5%B7%BD%E7%82%BA%E9%A2%A8/</link><pubDate>Tue, 14 Jan 2025 09:39:35 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/57%E5%B7%BD%E7%82%BA%E9%A2%A8/</guid><description>&lt;h1 id="57巽為風">
 57巽為風
 &lt;a class="anchor" href="#57%e5%b7%bd%e7%82%ba%e9%a2%a8">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦范蠡辭官入湖，卜得之，乃知越國不久也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>貴人賜衣，一人跪受，雲中雁傳書， 人在虎下坐。一人射虎中箭，虎走。&lt;/strong>&lt;/p>
&lt;p>風行草偃之課 上行下放之象&lt;/p>
&lt;p>巽者，入也。處旅時，親人不在，惟能巽順，方可平安，無所不入。故巽次旅也。此卦一陰居二陽之下，乃有陰順於陽象。&lt;/p>
&lt;p>一、貴人賜衣：先破後成象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>二、 一人跪受：貴綬也。如占疾病，則主壽衣，凶象。三、雲中雁傳書：意外喜訊。&lt;/p>
&lt;p>四、人在虎下坐：身處險而不知。五、一人射虎中箭：貴人相救。 六、虎走：脱險，寅年也。&lt;/p>
&lt;p>又虎乃有威望之人，利武官，主人在虎邊進退不得之時。亦言虎將須知功成身退，否則暗箭難防，以明哲保身為吉。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>巽：小亨。利有攸往，利見大人。&lt;/p>
&lt;p>巽順之道，得之可以小亨。故論柔之順性，能如此，利往進，可見貴人，必助。&lt;/p>
&lt;p>彖曰：重巽以申命。剛巽乎中正而志行，柔皆順乎剛，是以小亨。利有攸往，利見大人。&lt;/p>
&lt;p>巽之重卦，有上順下亦順象，苟能上順中道以出命，下順命而服從，則必吉。故君子申復命令，乃知巽也。能知順乎剛且中正，即令才不足亦可以小亨。能得巽順之道，必無往不入可出世見大人也。&lt;/p>
&lt;h2 id="象曰隨風巽君子以申命行事">
 象曰：隨風，巽。君子以申命行事。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9a%a8%e9%a2%a8%e5%b7%bd%e5%90%9b%e5%ad%90%e4%bb%a5%e7%94%b3%e5%91%bd%e8%a1%8c%e4%ba%8b">#&lt;/a>
&lt;/h2>
&lt;p>物之隨風而動，巽之道也，君子觀巽象，乃知重復申令之重要，能有政令，上隨下以順服， 上下皆順，即重巽之象，為始切實，故重申命令。&lt;/p>
&lt;h2 id="初六進退利武人之貞">
 初六：進退，利武人之貞。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e9%80%b2%e9%80%80%e5%88%a9%e6%ad%a6%e4%ba%ba%e4%b9%8b%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>居巽順之時，又處卑下，以陰柔之質，必畏而不安，無所適從，故此時惟利於武官，從武職之人，其巽赈必吉也。&lt;/p>
&lt;h2 id="九二巽在床下用史巫紛若吉-无咎">
 九二：巽在床下，用史巫紛若，吉， 无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%b7%bd%e5%9c%a8%e5%ba%8a%e4%b8%8b%e7%94%a8%e5%8f%b2%e5%b7%ab%e7%b4%9b%e8%8b%a5%e5%90%89-%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九二乃示剛居陰位，外又有巽順之象，意即人有過於卑順之時，不是恐懼就是諂媚，皆非正也。但其雖非正禮，亦可遠恥辱，去&lt;/p>
&lt;p>怨隙，亦可為吉，就如同用誠意來通於神明之史巫，其誠意能通，亦可無過。&lt;/p>
&lt;h2 id="九三頻巽吝">
 九三：頻巽，吝。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e9%a0%bb%e5%b7%bd%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>九三為下卦之上極，剛居之，有剛亢之質， 居巽順之時，非真能順，乃出於勉強為之，必有所失，失後又頻順，頻順又再失，亦可卑吝也。&lt;/p>
&lt;h2 id="六四悔亡田獲三品">
 六四：悔亡，田獲三品。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e6%82%94%e4%ba%a1%e7%94%b0%e7%8d%b2%e4%b8%89%e5%93%81">#&lt;/a>
&lt;/h2>
&lt;p>六四僅乃陰柔居陰，此位居下之上，乃居上位而知順下，人能如此善處，必可不慮亡。猶田之收獲能遍及上下，能如此，何慮悔亡更且有功。&lt;/p>
&lt;h2 id="九五貞吉悔亡无不利无初有終先庚三日後庚三日吉">
 九五：貞吉，悔亡无不利，无初有終，先庚三日，後庚三日，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e8%b2%9e%e5%90%89%e6%82%94%e4%ba%a1%e6%97%a0%e4%b8%8d%e5%88%a9%e6%97%a0%e5%88%9d%e6%9c%89%e7%b5%82%e5%85%88%e5%ba%9a%e4%b8%89%e6%97%a5%e5%be%8c%e5%ba%9a%e4%b8%89%e6%97%a5%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>陽居陽位又處君位，此為巽之主，其命令， 必合於中正之道，天下黎民莫不順從。能始終如此，必無往不利，如命令之出，有須變更時， 改始之不善，成終之善，則可變更，其中道，&lt;/p>
&lt;h2 id="上九巽在床下喪其資斧貞凶">
 上九：巽在床下，喪其資斧，貞凶。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e5%b7%bd%e5%9c%a8%e5%ba%8a%e4%b8%8b%e5%96%aa%e5%85%b6%e8%b3%87%e6%96%a7%e8%b2%9e%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>床，人之所安處也。今在床下，有過於安之義，九為巽極，乃過於柔順，乃喪失剛斷， 必失居所，乃自失也，對正道而言為凶。&lt;/p>
&lt;h2 id="象曰進退志疑也利武人之貞-志治也">
 象曰：進退志疑也，利武人之貞， 志治也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%80%b2%e9%80%80%e5%bf%97%e7%96%91%e4%b9%9f%e5%88%a9%e6%ad%a6%e4%ba%ba%e4%b9%8b%e8%b2%9e-%e5%bf%97%e6%b2%bb%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>進退不知所安，其志必疑且懼，故堅心服從，利於武職之人，不生貳心。&lt;/p>
&lt;h2 id="象曰紛若之吉得中也">
 象曰：紛若之吉，得中也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e7%b4%9b%e8%8b%a5%e4%b9%8b%e5%90%89%e5%be%97%e4%b8%ad%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人能得中道，亦以至誠，則人必信之，吉而無咎。&lt;/p>
&lt;h2 id="象曰頻巽之吝志窮也">
 象曰：頻巽之吝，志窮也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%a0%bb%e5%b7%bd%e4%b9%8b%e5%90%9d%e5%bf%97%e7%aa%ae%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陽剛之才，本非能順巽，今處重巽之時， 因勢不能遂志，又必須以順，故必有所失，其志必困窮。&lt;/p></description></item><item><title>56火山旅</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/56%E7%81%AB%E5%B1%B1%E6%97%85/</link><pubDate>Tue, 14 Jan 2025 09:39:34 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/56%E7%81%AB%E5%B1%B1%E6%97%85/</guid><description>&lt;h1 id="56火山旅">
 56火山旅
 &lt;a class="anchor" href="#56%e7%81%ab%e5%b1%b1%e6%97%85">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦陳後主得張麗華，卜得之，乃知先喜後悲。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>三星者，貴人台上垂釣牽水畔人，一猴一羊，大溪者。&lt;/strong>&lt;/p>
&lt;p>始鳥焚巢之課 歡極哀生之象&lt;/p>
&lt;p>豐至極時，不知戒盛，乃失其居，故序卦為旅。此卦「離」上「艮」下乃外明內止之象， 山為止而不動，火行而不居，有不與同流之意。故為旅象，又人之旅，必外麗，亦旅象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、三星者：三台貴人，相位之人。&lt;/p>
&lt;p>二、貴人台上垂釣：君主相求，老闆相求人才。&lt;/p>
&lt;p>三、牽水畔人：賢能之人，離野入朝封候。或慕權勢而變志。四、一猴一羊：肖猴，肖羊，候、楊姓人，未申年應之。&lt;/p>
&lt;p>五、大溪：脱險也，港口也，水側也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>旅：小亨、旅貞吉。&lt;/p>
&lt;p>旅之時，此因不同流而旅，故有小亨，且得之堅心，必吉。切不可假旅之道而有私欲其中。&lt;/p>
&lt;h2 id="彖曰旅小亨柔得中乎外而順乎剛止而麗乎明是以小亨旅貞吉也旅之時義大矣哉">
 彖曰：旅，小亨，柔得中乎外而順乎剛，止而麗乎明，是以小亨，旅貞吉也。旅之時義大矣哉！
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%97%85%e5%b0%8f%e4%ba%a8%e6%9f%94%e5%be%97%e4%b8%ad%e4%b9%8e%e5%a4%96%e8%80%8c%e9%a0%86%e4%b9%8e%e5%89%9b%e6%ad%a2%e8%80%8c%e9%ba%97%e4%b9%8e%e6%98%8e%e6%98%af%e4%bb%a5%e5%b0%8f%e4%ba%a8%e6%97%85%e8%b2%9e%e5%90%89%e4%b9%9f%e6%97%85%e4%b9%8b%e6%99%82%e7%be%a9%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>旅之時至而旅，乃有亨，人能知所進退，內有中道外又知順於剛，止之在能外麗而內明， 是故有小亨，旅而堅貞其志，是故吉也。當旅不旅乃自求咎。故天下之事，當有時宜，因時而動，其義大也。&lt;/p>
&lt;h2 id="象曰山上有火旅君子以明慎用刑而不留獄">
 象曰：山上有火，旅。君子以明慎用刑，而不留獄。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8a%e6%9c%89%e7%81%ab%e6%97%85%e5%90%9b%e5%ad%90%e4%bb%a5%e6%98%8e%e6%85%8e%e7%94%a8%e5%88%91%e8%80%8c%e4%b8%8d%e7%95%99%e7%8d%84">#&lt;/a>
&lt;/h2>
&lt;p>火在山高處，其明及遠，旅之道也。君子觀此明照之象，知明慎以用刑，絶不依持己之明， 必有戒慎恐懼之心而施於用刑。因火行不留，故有不留獄之志，獄乃不得已而設，故不求留獄， 此觀火之行而體悟之。&lt;/p>
&lt;h2 id="初六旅瑣瑣斯其所取災">
 初六：旅瑣瑣，斯其所取災。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e6%97%85%e7%91%a3%e7%91%a3%e6%96%af%e5%85%b6%e6%89%80%e5%8f%96%e7%81%bd">#&lt;/a>
&lt;/h2>
&lt;p>陰柔無才之人，居卑下，居旅之時，因才質如此，故必畏畏瑣瑣，其必終自取其辱。&lt;/p>
&lt;h2 id="象曰旅瑣瑣志窮災也">
 象曰：旅瑣瑣，志窮災也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%97%85%e7%91%a3%e7%91%a3%e5%bf%97%e7%aa%ae%e7%81%bd%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>意志因困窮時，而生變，乃自取其災也。&lt;/p>
&lt;h2 id="六二旅即次懷其資得童僕貞">
 六二：旅即次，懷其資，得童僕貞。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e6%97%85%e5%8d%b3%e6%ac%a1%e6%87%b7%e5%85%b6%e8%b3%87%e5%be%97%e7%ab%a5%e5%83%95%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>六二乃得適位之將才居旅時，因知中正處不失當，必能懷蓄財資，又能得僕人之忠心， 故吉。&lt;/p>
&lt;h2 id="九三旅焚其次喪其童僕貞厲">
 九三：旅焚其次，喪其童僕，貞厲。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e6%97%85%e7%84%9a%e5%85%b6%e6%ac%a1%e5%96%aa%e5%85%b6%e7%ab%a5%e5%83%95%e8%b2%9e%e5%8e%b2">#&lt;/a>
&lt;/h2>
&lt;p>旅之時，必以柔順謙下為吉，如今自處過剛，又居高，乃招致災困。必失僕人之忠，終有危厲來臨。&lt;/p>
&lt;h2 id="九四旅于處得其資斧我心不快">
 九四：旅于處，得其資斧，我心不快。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e6%97%85%e4%ba%8e%e8%99%95%e5%be%97%e5%85%b6%e8%b3%87%e6%96%a7%e6%88%91%e5%bf%83%e4%b8%8d%e5%bf%ab">#&lt;/a>
&lt;/h2>
&lt;p>陽剛又居柔位，有用柔之象。人居旅時， 能柔，得旅之道，必吉。此法居旅時可得財货之資助，但不能伸其大志，其心必不快。&lt;/p>
&lt;h2 id="六五射雉一矢亡終以譽命">
 六五：射雉，一矢亡，終以譽命。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%b0%84%e9%9b%89%e4%b8%80%e7%9f%a2%e4%ba%a1%e7%b5%82%e4%bb%a5%e8%ad%bd%e5%91%bd">#&lt;/a>
&lt;/h2>
&lt;p>人於旅時，不可有錯，一但犯之，災禍立至。就如射雉，能一箭而中，不虛發即無過失， 能如此，則於旅時，必可立名揚譽。&lt;/p>
&lt;h2 id="上九鳥焚其巢旅人先笑後號">
 上九：鳥焚其巢，旅人先笑後號
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e9%b3%a5%e7%84%9a%e5%85%b6%e5%b7%a2%e6%97%85%e4%ba%ba%e5%85%88%e7%ac%91%e5%be%8c%e8%99%9f">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>咷&lt;/strong>，喪牛于易，凶。&lt;/p>
&lt;p>旅時以過陽剛自處以高，不知謙卑，就如鳥高飛而自焚其巢，故終居無所安處，自負過剛，居旅時，始則可快意盡情，故生笑。繼而失安無居所，故後號咷。牛為順性之物，但也&lt;/p>
&lt;h2 id="象曰得童僕貞終无尤也">
 象曰：得童僕貞，終无尤也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%be%97%e7%ab%a5%e5%83%95%e8%b2%9e%e7%b5%82%e6%97%a0%e5%b0%a4%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>旅行之人，所賴者為童僕，能得其忠心， 必可無災。&lt;/p>
&lt;h2 id="象曰旅焚其次亦以傷矣以旅與下其義喪也">
 象曰：旅焚其次，亦以傷矣，以旅與下，其義喪也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%97%85%e7%84%9a%e5%85%b6%e6%ac%a1%e4%ba%a6%e4%bb%a5%e5%82%b7%e7%9f%a3%e4%bb%a5%e6%97%85%e8%88%87%e4%b8%8b%e5%85%b6%e7%be%a9%e5%96%aa%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>居旅時以過剛自高，手下必喪失忠心，危之至矣。&lt;/p></description></item><item><title>55雷火豐</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/55%E9%9B%B7%E7%81%AB%E8%B1%90/</link><pubDate>Tue, 14 Jan 2025 09:39:33 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/55%E9%9B%B7%E7%81%AB%E8%B1%90/</guid><description>&lt;h1 id="55雷火豐">
 55雷火豐
 &lt;a class="anchor" href="#55%e9%9b%b7%e7%81%ab%e8%b1%90">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦莊周説劍，臨行卜得之，果得劍也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>竹简灰起，龍蛇交錯者，官人著衣裳立，一合子，人吹笙竿，腳踏虎。&lt;/strong>&lt;/p>
&lt;p>日麗中天之課 藏暗向明之象&lt;/p>
&lt;p>萬物與人能適得所歸，必能成大，故歸妹之後，受之以豐，豐有盛大之義，此卦上震下離， 有內明外動之象，能以明而動，動而能明，此為致豐之道，是故明而能照，動而能亨，可以致豐大也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、竹简灰起：簡姓，竹有順象，堅節不變之象，灰起，中空之象。二、龍蛇交錯：辰巳之年，正邪相爭，蛇虺乃毒謀暗算也。&lt;/p>
&lt;p>三、官人著衣裳立：官人、倌人、丈夫也，藏於內也。四、一合子：先成後破。&lt;/p>
&lt;p>五、人吹笙竿：閒情逸志，主喜事臨門。六、腳踏虎：臨危不亂也，險在下也。 七、旱沼之旁：心力交瘁也。&lt;/p>
&lt;p>八、池中無水：旱象，破財也。九、珠落盤中：先聚後散也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>豐：亨，王假之，勿憂，宣日中。&lt;/p>
&lt;p>豐之道，在能致亨通，能令天下百姓致豐，唯王者能。豐之道在令人民繁盛，事物豐發， 有如日中之明，無所不照，則可以無憂。&lt;/p>
&lt;h2 id="彖曰豐大也明以動故豐王假之尚大也">
 彖曰：豐，大也，明以動，故豐。王假之，尚大也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%b1%90%e5%a4%a7%e4%b9%9f%e6%98%8e%e4%bb%a5%e5%8b%95%e6%95%85%e8%b1%90%e7%8e%8b%e5%81%87%e4%b9%8b%e5%b0%9a%e5%a4%a7%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>豐之道，在論如何盛大，能明而動，必能成豐盛且大也。王者所追求之，為能及天下之大， 致人民以豐，必可永保其治世之道。&lt;/p>
&lt;h2 id="勿憂宜日中宜照天下也">
 勿憂宜日中，宜照天下也。
 &lt;a class="anchor" href="#%e5%8b%bf%e6%86%82%e5%ae%9c%e6%97%a5%e4%b8%ad%e5%ae%9c%e7%85%a7%e5%a4%a9%e4%b8%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>致豐之道，能如日中之盛明，普照天下，無所不及，如此則可無憂，而能保其豐大及永久也。&lt;/p>
&lt;h2 id="日中則昃月盈則食天地盈虛與時消息而況於人乎況於鬼神乎">
 日中則昃，月盈則食，天地盈虛，與時消息，而況於人乎？況於鬼神乎？
 &lt;a class="anchor" href="#%e6%97%a5%e4%b8%ad%e5%89%87%e6%98%83%e6%9c%88%e7%9b%88%e5%89%87%e9%a3%9f%e5%a4%a9%e5%9c%b0%e7%9b%88%e8%99%9b%e8%88%87%e6%99%82%e6%b6%88%e6%81%af%e8%80%8c%e6%b3%81%e6%96%bc%e4%ba%ba%e4%b9%8e%e6%b3%81%e6%96%bc%e9%ac%bc%e7%a5%9e%e4%b9%8e">#&lt;/a>
&lt;/h2>
&lt;p>日正當中，也有暗時，月滿之後亦有缺虧，天地之盈虛，靠時為消息，更何况乎人？何沉&lt;/p>
&lt;p>乎鬼神？此君子戒之在盛，知盛時须戒，方可長久。&lt;/p>
&lt;h2 id="象曰雷電皆至豐君子以折獄致刑">
 象曰：雷電皆至，豐，君子以折獄致刑。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b7%e9%9b%bb%e7%9a%86%e8%87%b3%e8%b1%90%e5%90%9b%e5%ad%90%e4%bb%a5%e6%8a%98%e7%8d%84%e8%87%b4%e5%88%91">#&lt;/a>
&lt;/h2>
&lt;p>電雷並行，乃明動相濟，成豐之象，君子觀明動之象，知用刑制法，在求明與威並行，君子能明則無折獄，慎於用刑。能立威則民服無怨。&lt;/p>
&lt;h2 id="初九遇其配主雖旬无咎往有尚">
 初九：遇其配主，雖旬无咎，往有尚。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e9%81%87%e5%85%b6%e9%85%8d%e4%b8%bb%e9%9b%96%e6%97%ac%e6%97%a0%e5%92%8e%e5%be%80%e6%9c%89%e5%b0%9a">#&lt;/a>
&lt;/h2>
&lt;p>初進之陽剛，居豐之時，知往有豐，雖非有君之對應，但有其左右高位之人能與同志， 此往可吉也，所謂「同舟能共濟也」，此於豐之時，可得無咎也。&lt;/p>
&lt;h2 id="六二豐其蘚日中見斗往得疑疾有孚發若吉-">
 六二：豐其蘚，日中見斗，往得疑疾，有孚發若，吉 。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e8%b1%90%e5%85%b6%e8%98%9a%e6%97%a5%e4%b8%ad%e8%a6%8b%e6%96%97%e5%be%80%e5%be%97%e7%96%91%e7%96%be%e6%9c%89%e5%ad%9a%e7%99%bc%e8%8b%a5%e5%90%89-">#&lt;/a>
&lt;/h2>
&lt;p>六二乃柔將其位，又居明卦之中，為至明之才，但因所遇之君不明，而無法下求於己， 若居豐時，意往而求其君能明己才，必招致猜妒疑惑。惟有盡己之至誠，以求其感而能發，&lt;/p>
&lt;h2 id="九三豐其沛日中見沫折其右肱无咎">
 九三：豐其沛，日中見沫，折其右肱，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e8%b1%90%e5%85%b6%e6%b2%9b%e6%97%a5%e4%b8%ad%e8%a6%8b%e6%b2%ab%e6%8a%98%e5%85%b6%e5%8f%b3%e8%82%b1%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九三乃居相位有賢才之人，於豐時，卻不見明主之相應，其日之晦更甚於六二將位，故有如人之折肱無法於行，賢能之人有才，但無法發揮乃因君之不明，故無可歸咎也。&lt;/p>
&lt;h2 id="九四豐其薜日中見斗遇其夷主吉">
 九四：豐其薜，日中見斗，遇其夷主，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e8%b1%90%e5%85%b6%e8%96%9c%e6%97%a5%e4%b8%ad%e8%a6%8b%e6%96%97%e9%81%87%e5%85%b6%e5%a4%b7%e4%b8%bb%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>九四為陽剛之人居君側大臣之位，遇君不明，其賢能陽剛受圍，如日中有缺晦，不得其用，亦無用也，故君子之才須得遇明主，方可有用能成濟世之功。&lt;/p>
&lt;h2 id="六五來章有慶譽吉">
 六五：來章，有慶譽，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e4%be%86%e7%ab%a0%e6%9c%89%e6%85%b6%e8%ad%bd%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>陰柔居君之尊位，己之才不足，但知用下位章美之才，必有福慶，且有美譽故吉。&lt;/p>
&lt;h2 id="上六豐其屋蔀其家窺其户-闋其無人三歲不覿凶">
 上六：豐其屋，蔀其家，窺其户， 闋其無人，三歲不覿，凶。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e8%b1%90%e5%85%b6%e5%b1%8b%e8%94%80%e5%85%b6%e5%ae%b6%e7%aa%ba%e5%85%b6%e6%88%b7-%e9%97%8b%e5%85%b6%e7%84%a1%e4%ba%ba%e4%b8%89%e6%ad%b2%e4%b8%8d%e8%a6%bf%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>上六居丰極之時，因處動之終，必燥動， 人於丰盛之時，必假謙虛方吉。如不知戒盛， 外丰其居，內不明，暗藏其家，又目中無人， 三年又不知變，一意孤行，终自招凶。&lt;/p></description></item><item><title>54雷澤歸妹</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/54%E9%9B%B7%E6%BE%A4%E6%AD%B8%E5%A6%B9/</link><pubDate>Tue, 14 Jan 2025 09:39:32 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/54%E9%9B%B7%E6%BE%A4%E6%AD%B8%E5%A6%B9/</guid><description>&lt;h1 id="54雷澤歸妹">
 54雷澤歸妹
 &lt;a class="anchor" href="#54%e9%9b%b7%e6%be%a4%e6%ad%b8%e5%a6%b9">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦舜娶堯二女，卜得之，乃知卑幼不寧也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>官人騎鹿指雲，小鹿子在後，望竿上有文字，人落刺中，一人拔出。&lt;/strong>&lt;/p>
&lt;p>浮雲蔽日之課 陰陽不交之象&lt;/p>
&lt;p>渐乃進也，人進必有所歸，所以歸妹次渐也，少女，人所悦也，雷為動，今如人之動以悦， 此因悦而動，必有所不正，此卦澤上有雷，雷震而澤動，相從之象，男動在外而女從之在內， 有女嫁歸男之象。人之動须以明，明而後動，方不失正。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、官人騎鹿指雲：浮雲蔽日，乘亂而欲進。二、小鹿子在後：生意人，隨從狀。&lt;/p>
&lt;p>三、望竿上有文字：旦夕而亡，揭竿而起，正名也。四、人落刺中：如鲠在喉，去之不得。&lt;/p>
&lt;p>五、一人拔出：一人相救示寵狀。六、此卦問病凶，問財吉，問政凶。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>歸妹，征凶，无攸利。&lt;/p>
&lt;p>此動之以悦，必有不當，如動反招凶，所往必不利。&lt;/p>
&lt;h2 id="彖曰歸妹天地之大義也">
 彖曰：歸妹，天地之大義也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%ad%b8%e5%a6%b9%e5%a4%a9%e5%9c%b0%e4%b9%8b%e5%a4%a7%e7%be%a9%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此言陰陽之道，男女之配，乃天地間之常理也。有男居上女在下，陰從陽動。&lt;/p>
&lt;h2 id="天地不交而萬物不興歸妹人之終始也">
 天地不交而萬物不興，歸妹，人之終始也。
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e4%b8%8d%e4%ba%a4%e8%80%8c%e8%90%ac%e7%89%a9%e4%b8%8d%e8%88%88%e6%ad%b8%e5%a6%b9%e4%ba%ba%e4%b9%8b%e7%b5%82%e5%a7%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>天地如不交則萬物必不生，女之從男，為生生之道，人類從男女之交而生，其終必不窮&lt;/p>
&lt;h2 id="説以動所歸妹也征凶位不當也无攸利柔乘剛也">
 説以動，所歸妹也，征凶，位不當也。无攸利，柔乘剛也。
 &lt;a class="anchor" href="#%e8%aa%ac%e4%bb%a5%e5%8b%95%e6%89%80%e6%ad%b8%e5%a6%b9%e4%b9%9f%e5%be%81%e5%87%b6%e4%bd%8d%e4%b8%8d%e7%95%b6%e4%b9%9f%e6%97%a0%e6%94%b8%e5%88%a9%e6%9f%94%e4%b9%98%e5%89%9b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此動之因喜悦對方為少女，人如只因悦而動，必失明之道，動必凶至。此不以正道，而以悦道，故位不當也。男女尊卑，夫唱婦隨，人之常理，如不以常道，惟私欲作與，柔勝於剛， 所以凶也，往必不利矣。&lt;/p>
&lt;h2 id="象曰澤上有雷歸妹君子以永終知敝">
 象曰：澤上有雷，歸妹，君子以永終知敝。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e4%b8%8a%e6%9c%89%e9%9b%b7%e6%ad%b8%e5%a6%b9%e5%90%9b%e5%ad%90%e4%bb%a5%e6%b0%b8%e7%b5%82%e7%9f%a5%e6%95%9d">#&lt;/a>
&lt;/h2>
&lt;p>君子觀雷震於澤上，澤隨雷而動，猶男女相配，生生不息之象，其有永終之戒，因物久後必生敝壞，君子於始初乃知戒敝壞之理，故凡事之長久而吉，必於初始即生戒故謂永終之戒。&lt;/p>
&lt;h2 id="初九歸妹以娣跛能履征吉">
 初九：歸妹以娣，跛能履，征吉。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%ad%b8%e5%a6%b9%e4%bb%a5%e5%a8%a3%e8%b7%9b%e8%83%bd%e5%b1%a5%e5%be%81%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>娣，有賢良正德之義，女之嫁歸能如此， 又知處卑順，然因其位卑，即令有賢才亦只能助夫而已，獨善其身，猶跛之能行，必無法及遠，但往乃得吉。&lt;/p>
&lt;h2 id="九二眇能視利幽人之貞">
 九二：眇能視，利幽人之貞。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e7%9c%87%e8%83%bd%e8%a6%96%e5%88%a9%e5%b9%bd%e4%ba%ba%e4%b9%8b%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>九二乃陽剛之賢居正位，於歸妹之時，乃意女之賢能所配不良之人，猶如目眇之人，其視必不能及遠，此時惟隱藏其賢，且堅心以正禮，可利也。&lt;/p>
&lt;h2 id="六三歸妹以須反歸以娣">
 六三：歸妹以須，反歸以娣。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e6%ad%b8%e5%a6%b9%e4%bb%a5%e9%a0%88%e5%8f%8d%e6%ad%b8%e4%bb%a5%e5%a8%a3">#&lt;/a>
&lt;/h2>
&lt;p>六三乃相位居陰柔之人，於歸妹時，以悦而求上應，不以正道，故必不得其歸，無所適從。必當反歸求處卑下，則可吉矣。&lt;/p>
&lt;h2 id="九四歸妹愆期遲歸有時">
 九四：歸妹愆期，遲歸有時。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e6%ad%b8%e5%a6%b9%e6%84%86%e6%9c%9f%e9%81%b2%e6%ad%b8%e6%9c%89%e6%99%82">#&lt;/a>
&lt;/h2>
&lt;p>四柔陽剛居之，即意處柔乃婦人之常道， 但內有剛明之賢，處歸妹之時，因賢明又居高位，人所願娶，但卻有遲嫁之象，非不嫁也， 乃待時而動，有佳配而後行也，此遲歸有時。&lt;/p>
&lt;h2 id="六五帝乙歸妹其君之袂不如其娣之袂良月幾望吉-">
 六五：帝乙歸妹，其君之袂，不如其娣之袂良，月幾望，吉 。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%b8%9d%e4%b9%99%e6%ad%b8%e5%a6%b9%e5%85%b6%e5%90%9b%e4%b9%8b%e8%a2%82%e4%b8%8d%e5%a6%82%e5%85%b6%e5%a8%a3%e4%b9%8b%e8%a2%82%e8%89%af%e6%9c%88%e5%b9%be%e6%9c%9b%e5%90%89-">#&lt;/a>
&lt;/h2>
&lt;p>六五居尊位之人，柔性象女，示女之高貴者，今居歸妹之期，雖為帝女，於歸時，乃得屈而謙降，故女之歸以能謙降為美德，但求於禮，不求於外飾，故猶月陰之盛，而不至於盈滿，此乃能為吉。女子尊貴之道即此。&lt;/p>
&lt;h2 id="上六女承筐无實士刲羊无血-无攸利">
 上六：女承筐无實，士刲羊无血， 无攸利。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%a5%b3%e6%89%bf%e7%ad%90%e6%97%a0%e5%af%a6%e5%a3%ab%e5%88%b2%e7%be%8a%e6%97%a0%e8%a1%80-%e6%97%a0%e6%94%b8%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>女歸之終至極時，乃承繼祖先祭祀之職， 但至極則無實可祭，猶士人之割取羊血以祭禮，如割羊無血無以祭，必不利繼往也。&lt;/p>
&lt;h2 id="象曰歸妹以娣以恆也跛能履吉相承也">
 象曰：歸妹以娣，以恆也。跛能履吉，相承也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%ad%b8%e5%a6%b9%e4%bb%a5%e5%a8%a3%e4%bb%a5%e6%81%86%e4%b9%9f%e8%b7%9b%e8%83%bd%e5%b1%a5%e5%90%89%e7%9b%b8%e6%89%bf%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>女嫁歸男，能自處卑順，且悦於內，持之以恆，即令跛者行路，亦可以有吉，其因乃其能相承相助也。&lt;/p></description></item><item><title>53風山漸</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/53%E9%A2%A8%E5%B1%B1%E6%BC%B8/</link><pubDate>Tue, 14 Jan 2025 09:39:31 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/53%E9%A2%A8%E5%B1%B1%E6%BC%B8/</guid><description>&lt;h1 id="53風山漸">
 53風山漸
 &lt;a class="anchor" href="#53%e9%a2%a8%e5%b1%b1%e6%bc%b8">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦齊晏子應舉，卜得之，後果為丞相也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>一望竽在爽高處，一藥爐在地，一官人登梯，一枝花在地上。&lt;/strong>&lt;/p>
&lt;p>高山植木之課 積小成大之象&lt;/p>
&lt;p>艮止之後，必有所生，其生乃因前之有止，故此生必渐進，故渐為艮之序。渐，有渐進緩進之意，其進能緩，必有序，而不踰越。此卦上「巽」下「艮」，巽為木，而生於山上，此木之高乃因在山之上，故渐之道在知高之因，在知進退消息之理據。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、一望竿在爽高處：家人望歸象。二、 一藥爐在地：平安，無災也。&lt;/p>
&lt;p>三、一官人登梯：升官之象，衣錦還鄉也，棺也。四、一枝花在地：落第象，不久之象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>漸：女歸吉，利貞。&lt;/p>
&lt;p>渐之道，其有序，且緩進，吾人可於女之出嫁而見之，女歸時，以渐進有序，必吉，且始終如一，更吉。猶臣之入朝侍奉天子亦同，必當有序，如失序則為欺陵主上，必生禍害。&lt;/p>
&lt;h2 id="彖曰漸之進也女歸吉也進得位往有功也">
 彖曰：漸之進也，女歸吉也。進得位，往有功也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%bc%b8%e4%b9%8b%e9%80%b2%e4%b9%9f%e5%a5%b3%e6%ad%b8%e5%90%89%e4%b9%9f%e9%80%b2%e5%be%97%e4%bd%8d%e5%be%80%e6%9c%89%e5%8a%9f%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>渐乃論進之道，知進必有序，猶如女之歸夫，必吉。進時能剛柔並濟，適得其位，此進必有功也。進以正，可以正邦也。其位，剛得中也。止而巽，動不窮也。以正道而進，可以興邦正德也。故凡進皆須稟持以正道則吉。正得其位之定義，必以剛中而得，方可謂得位。內止外順，其人之進如此，方可得吉，如進之以欲，乃生燥，必失渐道，阻力乃生，故能做到內無欲， 而外和順，此進方可無窮無盡矣。&lt;/p>
&lt;h2 id="象曰山上有木漸君子以居賢德善俗">
 象曰：山上有木，漸.，君子以居賢德善俗。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8a%e6%9c%89%e6%9c%a8%e6%bc%b8%e5%90%9b%e5%ad%90%e4%bb%a5%e5%b1%85%e8%b3%a2%e5%be%b7%e5%96%84%e4%bf%97">#&lt;/a>
&lt;/h2>
&lt;p>木在山上，其高有自，故君子觀渐象，乃知居賢能正德，美化風俗，其能成功，皆歸之在渐，人之錯習，遽改生反，教化之於人，勢必以渐進方可入於人心，此渐之道也。&lt;/p>
&lt;p>初六：鴻漸于干，小子厲，有言，无咎。&lt;/p>
&lt;p>鴻鳥之以時而遷動，又群聚而生且有序， 此渐也。初陰居卑下，上又無援助，君子知時， 故處之不疑。但小人及無知之人只能見眼前之事，不知患於未來，洞察事理，唯以剛而求進， 失渐矣，進則生咎，不進無災。&lt;/p>
&lt;h2 id="象曰小子之厲義无咎也">
 象曰：小子之厲，義无咎也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b0%8f%e5%ad%90%e4%b9%8b%e5%8e%b2%e7%be%a9%e6%97%a0%e5%92%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>初始時，雖有小人之危懼不安之心，但因於義理仍合，故有無咎。&lt;/p>
&lt;h2 id="六二鴻漸于磐飲食衎衎吉">
 六二：鴻漸于磐，飲食衎衎，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e9%b4%bb%e6%bc%b8%e4%ba%8e%e7%a3%90%e9%a3%b2%e9%a3%9f%e8%a1%8e%e8%a1%8e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>柔居柔位，得中位得當，居渐之時，進必不速，穩若磐石狀，其能安居如此，故可飲食和樂，其吉必然。&lt;/p>
&lt;h2 id="九三鴻漸于陸夫征不復婦孕不育凶利禦寇">
 九三：鴻漸于陸，夫征不復，婦孕不育，凶，利禦寇。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e9%b4%bb%e6%bc%b8%e4%ba%8e%e9%99%b8%e5%a4%ab%e5%be%81%e4%b8%8d%e5%be%a9%e5%a9%a6%e5%ad%95%e4%b8%8d%e8%82%b2%e5%87%b6%e5%88%a9%e7%a6%a6%e5%af%87">#&lt;/a>
&lt;/h2>
&lt;p>九三陽剛居下卦之上，即將進入上卦，意言，人之將上進之時，理應守正道以得時至， 萬不可以欲而進，以遂私志，此己失渐道，猶為求進而不顧於道之夫，婦人受孕不以正，亦不可育同義，此凶即致矣。惟可堅守正道，摒除邪念，可得吉。&lt;/p>
&lt;h2 id="六四鴻漸于木或得其桷无咎">
 六四：鴻漸于木，或得其桷，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e9%b4%bb%e6%bc%b8%e4%ba%8e%e6%9c%a8%e6%88%96%e5%be%97%e5%85%b6%e6%a1%b7%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>此陰柔在高位，下有陽剛欲進之人，必不得安處，猶鴻鳥近於木，立木高處，必不安也， 如能立在横枝上，自處安寧，則可無災。&lt;/p>
&lt;h2 id="九五鴻漸于陵婦三婦不孕終莫之勝吉">
 九五：鴻漸于陵，婦三婦不孕，終莫之勝，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e9%b4%bb%e6%bc%b8%e4%ba%8e%e9%99%b5%e5%a9%a6%e4%b8%89%e5%a9%a6%e4%b8%8d%e5%ad%95%e7%b5%82%e8%8e%ab%e4%b9%8b%e5%8b%9d%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>鴻鳥所止於至高之地，象君之尊位，此渐之時至，乃知惟下二爻位，可與同心同德，居中之三，四位相隔，猶即令婦人三年不孕，亦無用於事，相隔正道之不正，其終必消，正道必合，惟時較久而已。終吉。&lt;/p>
&lt;h2 id="上九鴻漸于陸其羽可用爲儀-吉">
 上九：鴻漸于陸，其羽可用爲儀， 吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e9%b4%bb%e6%bc%b8%e4%ba%8e%e9%99%b8%e5%85%b6%e7%be%bd%e5%8f%af%e7%94%a8%e7%88%b2%e5%84%80-%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>鴻能飛於天上，毫無阻礙，人之賢能如此， 進至終極，又不失渐之道，其賢能通達之能可以為表率，猶鴻之羽，可以用禮儀一樣，必吉。&lt;/p>
&lt;p>象曰：飲食&lt;strong>衎衎&lt;/strong>，不素飽也。&lt;/p>
&lt;p>中正之人，得正位，適居之狀，能飲食安樂，心志愉快，不光是飽食而已。&lt;/p>
&lt;h2 id="象曰夫征不復離群醜也婦孕不育失其道也利用禦寇順相保也">
 象曰：夫征不復，離群醜也，婦孕不育，失其道也，利用禦寇，順相保也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%ab%e5%be%81%e4%b8%8d%e5%be%a9%e9%9b%a2%e7%be%a4%e9%86%9c%e4%b9%9f%e5%a9%a6%e5%ad%95%e4%b8%8d%e8%82%b2%e5%a4%b1%e5%85%b6%e9%81%93%e4%b9%9f%e5%88%a9%e7%94%a8%e7%a6%a6%e5%af%87%e9%a0%86%e7%9b%b8%e4%bf%9d%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>夫但知征而不知復，乃因欲而失正道，叛離群類，可醜也。婦人之孕乃不正，故不可育也。皆因失其正道，唯利在堅守正道，棄絶邪惡，可因順正道而保平安也。&lt;/p>
&lt;h2 id="象曰或得其桷順以巽也">
 象曰：或得其桷，順以巽也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%88%96%e5%be%97%e5%85%b6%e6%a1%b7%e9%a0%86%e4%bb%a5%e5%b7%bd%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此意求平安自寧之道，惟有順於義，行乎正，能如此者，何處會不安呢？&lt;/p></description></item><item><title>52艮為山</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/52%E8%89%AE%E7%82%BA%E5%B1%B1/</link><pubDate>Tue, 14 Jan 2025 09:39:30 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/52%E8%89%AE%E7%82%BA%E5%B1%B1/</guid><description>&lt;h1 id="52艮為山">
 52艮為山
 &lt;a class="anchor" href="#52%e8%89%ae%e7%82%ba%e5%b1%b1">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦是漢高祖困榮陽時，卜得知，只宜守舊。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>猴上東北字，猴執文書，官吏執鏡，三人繩相繫縛&lt;/strong>&lt;/p>
&lt;p>游魚避網之課 積小成高之象&lt;/p>
&lt;p>震乃動也，物之動其終必止，艮，止也，故為震之序卦。此卦上下皆艮，艮為山，故有安重堅實之象，外內皆止，皆靜，此止於其所也。人能知安於止，則得艮之道也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、堠上東北字：候也，停滯等候也，陳姓。二、猴執文書：候其時，待公文命令至也。三、官吏執鏡：清明之法官，政治清明。&lt;/p>
&lt;p>四、三人繩相繫縛：三人相牽連招訟事也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>艮其背，不獲其身，行其庭，不見其人，无咎。&lt;/p>
&lt;p>艮為止之道，人之不知止，乃私欲作為，背為不見之處，如不能見，則無欲以亂其心志人能忘我，則止矣，今人見利則欲據為己有，失止之道。知止之道，則可無咎也。&lt;/p>
&lt;h2 id="彖曰艮止也時止則止時行則行動靜不失其時其道光明">
 彖曰：艮，止也，時止則止，時行則行，動靜不失其時，其道光明。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%89%ae%e6%ad%a2%e4%b9%9f%e6%99%82%e6%ad%a2%e5%89%87%e6%ad%a2%e6%99%82%e8%a1%8c%e5%89%87%e8%a1%8c%e5%8b%95%e9%9d%9c%e4%b8%8d%e5%a4%b1%e5%85%b6%e6%99%82%e5%85%b6%e9%81%93%e5%85%89%e6%98%8e">#&lt;/a>
&lt;/h2>
&lt;p>艮之道，言止也，動靜之間不以時，失止之義也，君子貴乎時，時可行則行，時之義於君子，則重視之，人能不失時，知所進退，道乃光明。&lt;/p>
&lt;h2 id="艮其止止其所也上下敵應不相與也">
 艮其止，止其所也。上下敵應，不相與也。
 &lt;a class="anchor" href="#%e8%89%ae%e5%85%b6%e6%ad%a2%e6%ad%a2%e5%85%b6%e6%89%80%e4%b9%9f%e4%b8%8a%e4%b8%8b%e6%95%b5%e6%87%89%e4%b8%8d%e7%9b%b8%e8%88%87%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>艮止之道，其功在能止於適止之所，此唯聖人能成之。此卦上下二體皆為山，有因同而相敵應也，互相背而不相與也。&lt;/p>
&lt;h2 id="是以不獲其身行其庭不見其人无咎也">
 是以不獲其身，行其庭不見其人，无咎也。
 &lt;a class="anchor" href="#%e6%98%af%e4%bb%a5%e4%b8%8d%e7%8d%b2%e5%85%b6%e8%ba%ab%e8%a1%8c%e5%85%b6%e5%ba%ad%e4%b8%8d%e8%a6%8b%e5%85%b6%e4%ba%ba%e6%97%a0%e5%92%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>相背而不見，行不見其人，則欲無處生則能止，能止則無咎也。&lt;/p>
&lt;h2 id="象曰兼山艮君子以思不出其位">
 象曰：兼山，艮，君子以思不出其位。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%bc%e5%b1%b1%e8%89%ae%e5%90%9b%e5%ad%90%e4%bb%a5%e6%80%9d%e4%b8%8d%e5%87%ba%e5%85%b6%e4%bd%8d">#&lt;/a>
&lt;/h2>
&lt;p>上下皆山，故為兼山，乃重艮之象，君子觀艮止之道，知思安於所止，不越其本位。&lt;/p>
&lt;h2 id="初六艮其趾无咎利永貞">
 初六：艮其趾，无咎，利永貞。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e8%89%ae%e5%85%b6%e8%b6%be%e6%97%a0%e5%92%8e%e5%88%a9%e6%b0%b8%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>初六居最下，乃足趾之象，趾乃人動之最先，於始動即知止，必可無咎，且須患己之性陰柔，故戒之在堅心守道。&lt;/p>
&lt;h2 id="象曰艮其趾-未失正也">
 象曰：艮其趾 ，未失正也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e8%89%ae%e5%85%b6%e8%b6%be-%e6%9c%aa%e5%a4%b1%e6%ad%a3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>能止於始初，必易，乃不失正也。&lt;/p>
&lt;h2 id="六二艮其腓不拯其隨其心不快">
 六二：艮其腓，不拯其隨，其心不快。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e8%89%ae%e5%85%b6%e8%85%93%e4%b8%8d%e6%8b%af%e5%85%b6%e9%9a%a8%e5%85%b6%e5%bf%83%e4%b8%8d%e5%bf%ab">#&lt;/a>
&lt;/h2>
&lt;p>陰居陰位，得止之正道，然居二位為猶人之腿肌位，股動則肌動，二雖正道，然受三爻之影響，即中正之道，無法救助於上位時，唯勉而隨之，因言不聽道不隨，故其心不快。&lt;/p>
&lt;h2 id="九三艮其限列其夤厲薰心">
 九三：艮其限，列其夤，厲薰心。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e8%89%ae%e5%85%b6%e9%99%90%e5%88%97%e5%85%b6%e5%a4%a4%e5%8e%b2%e8%96%b0%e5%bf%83">#&lt;/a>
&lt;/h2>
&lt;p>九三陽剛居陽位，乃意其剛極而使上下分隔，不復進退，其堅強如此，則必造成獨限一隅，而世人不相與，故無法安定其心。故止之道，貴在時宜，行止之間必以時，則吉。&lt;/p>
&lt;h2 id="六四艮其身无咎">
 六四：艮其身，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e8%89%ae%e5%85%b6%e8%ba%ab%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>居君側之人，位高權重，然於艮止之時， 當止而不能止，乃因君位過陽剛，不能信孚於臣位之人，居此際，惟自止其身，可無咎，但如臨施政，則生咎矣。意即在上位之人只能獨&lt;/p>
&lt;h2 id="六五艮其輔言有序悔亡">
 六五：艮其輔，言有序，悔亡。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e8%89%ae%e5%85%b6%e8%bc%94%e8%a8%80%e6%9c%89%e5%ba%8f%e6%82%94%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>人之所當止者，唯言與行，今陰柔居君位， 於止之時，其才不足任此位，如此則須言行一致，不可脱序，古言：君無戲言，即此，故雖己之才不足任此位，但謹言慎行，亦可無慮於敗亡。&lt;/p>
&lt;h2 id="上九敦艮吉">
 上九：敦艮，吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e6%95%a6%e8%89%ae%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>以剛陽之性居艮之終極，可見其止之道， 性之堅實如此。常人於止之時，難於持久，晚節不保等事常見，人能敦厚知止，如此堅心， 此所以吉也。&lt;/p>
&lt;h2 id="象曰不拯其隨未退聽也">
 象曰：不拯其隨，未退聽也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b8%8d%e6%8b%af%e5%85%b6%e9%9a%a8%e6%9c%aa%e9%80%80%e8%81%bd%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>上位之人，未能從下意，不須救助之，唯隨之可也。&lt;/p></description></item><item><title>51震爲雷</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/51%E9%9C%87%E7%88%B2%E9%9B%B7/</link><pubDate>Tue, 14 Jan 2025 09:39:29 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/51%E9%9C%87%E7%88%B2%E9%9B%B7/</guid><description>&lt;h1 id="51震爲雷">
 51震爲雷
 &lt;a class="anchor" href="#51%e9%9c%87%e7%88%b2%e9%9b%b7">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦是李靜天師遇龍母借宿，替龍行雨， 卜得之，官至僕射。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>人在岩上立，一樹開花，一文書，一人推車上有文字，一堆錢財者。&lt;/strong>&lt;/p>
&lt;p>震驚百里之課 有聲無形之象&lt;/p>
&lt;p>鼎，器也，能主器者，必賴長子，震為長男，取其主器之義，故次鼎為震也，此卦二震相重，有奮發震驚之象，二雷相繼，重雷也。長子繼位為君也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、人立岩上：特立獨行，摇摇欲墜也。危險也。&lt;/p>
&lt;p>二、一樹開花：有果也，惜乎過於短暫，少部份之人。三、一文書：消息至，公文至。&lt;/p>
&lt;p>四、一人推車：轉變之象，執行命令象。五、上有文字：得官令也。&lt;/p>
&lt;p>六、一堆錢財者：錢財散於地狀，憂心也，喪事也，求財不利，占疾病凶。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>震：亨。震來&lt;strong>虩虩&lt;/strong>，笑言啞啞。震驚百里，不喪匕鬯。&lt;/p>
&lt;p>震之道，能奮發，動而進，知懼而進修，皆足以亨。當震動之來，恐懼不寧不安狀，知所戒懼，則可保安，故笑言和適貌。震聲遠及百里，人無不懼而喪失，唯執宗廟祭祀之器者，不喪失不懼也。人間之至誠，莫如於祭祀時之堅心守正。&lt;/p>
&lt;h2 id="彖曰震亨震來虩虩恐致福也笑言啞啞後有則也">
 彖曰：震亨，震來&lt;strong>虩虩&lt;/strong>，恐致福也。笑言啞啞，後有則也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%9c%87%e4%ba%a8%e9%9c%87%e4%be%86%e8%99%a9%e8%99%a9%e6%81%90%e8%87%b4%e7%a6%8f%e4%b9%9f%e7%ac%91%e8%a8%80%e5%95%9e%e5%95%9e%e5%be%8c%e6%9c%89%e5%89%87%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>震來時能知恐懼，則無患而能亨矣。此因能有戒懼反為福也，必恐而知自修，不敢違於常理法規，因震而生法度，必能致福安，故可笑言無憂。&lt;/p>
&lt;h2 id="震驚百里驚遠而懼邇也出可以守宗廟社稷以爲祭主也">
 震驚百里，驚遠而懼邇也。出可以守宗廟社稷，以爲祭主也。
 &lt;a class="anchor" href="#%e9%9c%87%e9%a9%9a%e7%99%be%e9%87%8c%e9%a9%9a%e9%81%a0%e8%80%8c%e6%87%bc%e9%82%87%e4%b9%9f%e5%87%ba%e5%8f%af%e4%bb%a5%e5%ae%88%e5%ae%97%e5%bb%9f%e7%a4%be%e7%a8%b7%e4%bb%a5%e7%88%b2%e7%a5%ad%e4%b8%bb%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>雷之嚮震百里，遠受驚而近受懼，人能知戒懼不妄為，則出可以長守宗廟社稷，能如是， 則必可守承國家。&lt;/p>
&lt;h2 id="象曰洊雷震君子以恐懼修省">
 象曰：&lt;strong>洊&lt;/strong>雷，震。君子以恐懼修省。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%b4%8a%e9%9b%b7%e9%9c%87%e5%90%9b%e5%ad%90%e4%bb%a5%e6%81%90%e6%87%bc%e4%bf%ae%e7%9c%81">#&lt;/a>
&lt;/h2>
&lt;p>洊為重意，上下同卦故為洊雷，形容威震之大也，君子觀之乃知恐懼自修，畏天威省思已過而改之，唯君子能如是。&lt;/p>
&lt;h2 id="初九震來虩虩後笑言啞啞吉">
 初九：震來&lt;strong>虩虩&lt;/strong>，後笑言啞啞，吉。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e9%9c%87%e4%be%86%e8%99%a9%e8%99%a9%e5%be%8c%e7%ac%91%e8%a8%80%e5%95%9e%e5%95%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>初九：居震之始，知震之來，能於始即知戒懼恐慎，不敢掉以輕心，終必安吉。&lt;/p>
&lt;h2 id="六二震來厲億喪貝躋于九陵-勿逐七日得">
 六二：震來厲，億喪貝，躋于九陵， 勿逐，七日得。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e9%9c%87%e4%be%86%e5%8e%b2%e5%84%84%e5%96%aa%e8%b2%9d%e8%ba%8b%e4%ba%8e%e4%b9%9d%e9%99%b5-%e5%8b%bf%e9%80%90%e4%b8%83%e6%97%a5%e5%be%97">#&lt;/a>
&lt;/h2>
&lt;p>六ニ乃柔居正位，善處震時之道也，雷震乃剛動而上，無人能禦其威猛，度量知其必喪全數之資，故能遠避以自守其中正，以不追隨而得，雖不能立，即防禦，但時過後，必可得&lt;/p>
&lt;h2 id="六三震蘇蘇震行无眚">
 六三：震蘇蘇，震行无眚。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e9%9c%87%e8%98%87%e8%98%87%e9%9c%87%e8%a1%8c%e6%97%a0%e7%9c%9a">#&lt;/a>
&lt;/h2>
&lt;p>三位為陽位，陰居之，乃不正位也。不正位之人於平日，尚且不安，更何況處於震時居&lt;/p>
&lt;h2 id="九四震遂泥">
 九四：震遂泥。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e9%9c%87%e9%81%82%e6%b3%a5">#&lt;/a>
&lt;/h2>
&lt;p>以剛居柔，不適位而失去剛健之道，無法震奮也，如泥之滯也。&lt;/p>
&lt;h2 id="六五震往來厲億无喪有事">
 六五：震往來厲，億无喪有事。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e9%9c%87%e5%be%80%e4%be%86%e5%8e%b2%e5%84%84%e6%97%a0%e5%96%aa%e6%9c%89%e4%ba%8b">#&lt;/a>
&lt;/h2>
&lt;p>君位之人居震動之時，必不失中道，即令危亦不為凶矣。中道勝於正道，有中道之人必不違於正道，正道卻不必一定為中道。此其差異所在也。&lt;/p>
&lt;h2 id="象曰震來虩虩恐致福也笑言啞啞後有則也">
 象曰：震來&lt;strong>虩虩&lt;/strong>，恐致福也，笑言啞啞，後有則也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9c%87%e4%be%86%e8%99%a9%e8%99%a9%e6%81%90%e8%87%b4%e7%a6%8f%e4%b9%9f%e7%ac%91%e8%a8%80%e5%95%9e%e5%95%9e%e5%be%8c%e6%9c%89%e5%89%87%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>雷震之來知懼進修，此因知恐而終有福吉。不違於常法，則可保平安也。&lt;/p>
&lt;h2 id="象曰震來厲乘剛也">
 象曰：震來厲，乘剛也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9c%87%e4%be%86%e5%8e%b2%e4%b9%98%e5%89%9b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>震之至剛而來，如欲駕乘，乃自招危厄。&lt;/p>
&lt;p>此如能知己力之不足而求去，亦可無咎。&lt;/p>
&lt;h2 id="象曰震蘇蘇位不當也">
 象曰：震蘇蘇，位不當也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9c%87%e8%98%87%e8%98%87%e4%bd%8d%e4%b8%8d%e7%95%b6%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>處不當位，即震來而不知戒，不知恐懼也。&lt;/p>
&lt;h2 id="象曰震遂泥未光也">
 象曰：震遂泥，未光也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9c%87%e9%81%82%e6%b3%a5%e6%9c%aa%e5%85%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>震之動必以剛為本，今動如滯泥，已失剛道，震之義，必無法光大也。&lt;/p></description></item><item><title>50火風鼎</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/50%E7%81%AB%E9%A2%A8%E9%BC%8E/</link><pubDate>Tue, 14 Jan 2025 09:39:28 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/50%E7%81%AB%E9%A2%A8%E9%BC%8E/</guid><description>&lt;h1 id="50火風鼎">
 50火風鼎
 &lt;a class="anchor" href="#50%e7%81%ab%e9%a2%a8%e9%bc%8e">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦秦君卜得之，乃知得九鼎以象九州也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>雲中月現，鵲南飛，一子裹席帽，一人執刀，貴人端坐無畏，一鼠。&lt;/strong>&lt;/p>
&lt;p>調和鼎鼐之課 去故取新之象&lt;/p>
&lt;p>能使物分隔，為鼎，故鼎之用在能革物，能使水火不同之物相合，易生為熟，易堅為柔， 使相合而不相害，此革物之功也，故鼎為革之序卦。此卦上火下風，乃木入火中，烹飪之象， 鼎之象即此。為器之大用。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、雲中月現：顯象，撥雲見月之象，清明也。二、鵲南飛：冬至來臨，北人執政。&lt;/p>
&lt;p>三九一&lt;/p>
&lt;p>三、一子裹席帽，不明之人，無知之人。果喜也。四、一人執刀：武官也，護衛將軍。&lt;/p>
&lt;p>五、貴人端坐無畏：君王，老闆等人，至公無私。 六、一鼠：子年，暗謀之人，內有陰謀，肖鼠人也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>鼎：元吉、亨。&lt;/p>
&lt;p>鼎之道，能使不合之物相合，故必吉亨。&lt;/p>
&lt;h2 id="彖曰鼎象也">
 彖曰：鼎，象也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%bc%8e%e8%b1%a1%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>鼎之為器，法自象也。古人以方代表實且正之象。兩耳對峙在上，三足分峙於下，周圓內外，皆有法而正，成安重之象。&lt;/p>
&lt;h2 id="以木巽火烹飪也聖人亨以享上帝而大亨以養聖賢">
 以木巽火，烹飪也。聖人亨以享上帝，而大亨以養聖賢。
 &lt;a class="anchor" href="#%e4%bb%a5%e6%9c%a8%e5%b7%bd%e7%81%ab%e7%83%b9%e9%a3%aa%e4%b9%9f%e8%81%96%e4%ba%ba%e4%ba%a8%e4%bb%a5%e4%ba%ab%e4%b8%8a%e5%b8%9d%e8%80%8c%e5%a4%a7%e4%ba%a8%e4%bb%a5%e9%a4%8a%e8%81%96%e8%b3%a2">#&lt;/a>
&lt;/h2>
&lt;p>用木就火，烹飪之象，鼎器人賴以生，故聖人以鼎享上帝，用大亨以享聖人。&lt;/p>
&lt;h2 id="巽而耳目聰明柔進而上行得中而應乎剛是以元亨">
 巽而耳目聰明，柔進而上行，得中而應乎剛，是以元亨。
 &lt;a class="anchor" href="#%e5%b7%bd%e8%80%8c%e8%80%b3%e7%9b%ae%e8%81%b0%e6%98%8e%e6%9f%94%e9%80%b2%e8%80%8c%e4%b8%8a%e8%a1%8c%e5%be%97%e4%b8%ad%e8%80%8c%e6%87%89%e4%b9%8e%e5%89%9b%e6%98%af%e4%bb%a5%e5%85%83%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>人能如卦才，外明內順，上之頭面能中虛為明，乃耳聰目明之象，柔乃在下之物，能進上位，以明居尊，得乎中道，而陽剛之道相應，此乃元亨之因也。&lt;/p>
&lt;h2 id="象曰木上有火鼎君子以正位凝命">
 象曰：木上有火，鼎，君子以正位凝命。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%9c%a8%e4%b8%8a%e6%9c%89%e7%81%ab%e9%bc%8e%e5%90%9b%e5%ad%90%e4%bb%a5%e6%ad%a3%e4%bd%8d%e5%87%9d%e5%91%bd">#&lt;/a>
&lt;/h2>
&lt;p>木之上有火，生火烹飪之象為鼎，君子觀象，知法象器，形體端正且安重，以正其位也&lt;/p>
&lt;h2 id="初六鼎顚趾利出否得妾以其子无咎">
 初六：鼎顚趾，利出否。得妾以其子，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e9%bc%8e%e9%a1%9a%e8%b6%be%e5%88%a9%e5%87%ba%e5%90%a6%e5%be%97%e5%a6%be%e4%bb%a5%e5%85%b6%e5%ad%90%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>初六乃最下之位，與四爻相應，今居鼎時， 有如趾之向上，顛也。鼎覆則趾顛，此非順道， 反道而行之理，利於天下敗壞之時，乃可為也。居卑下而從陽如妾，妾之從夫，則可無咎。&lt;/p>
&lt;h2 id="九二鼎有實我仇有疾不我能即吉">
 九二：鼎有實，我仇有疾，不我能即，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e9%bc%8e%e6%9c%89%e5%af%a6%e6%88%91%e4%bb%87%e6%9c%89%e7%96%be%e4%b8%8d%e6%88%91%e8%83%bd%e5%8d%b3%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>二位為中位，以剛居中，乃鼎中有物之實象，但於陰位，有能才而密比於陰之意，居此當求己之守正，不求於人，使之能求於我，則不正亦终就之，此吉也。&lt;/p>
&lt;h2 id="九三鼎耳革其行塞雉膏不食-方雨虧悔終吉">
 九三：鼎耳革，其行塞，雉膏不食， 方雨虧悔，終吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e9%bc%8e%e8%80%b3%e9%9d%a9%e5%85%b6%e8%a1%8c%e5%a1%9e%e9%9b%89%e8%86%8f%e4%b8%8d%e9%a3%9f-%e6%96%b9%e9%9b%a8%e8%99%a7%e6%82%94%e7%b5%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>九三相位，陽剛居之，乃正位，然五位之柔君不能與合，不信用之，其行必阻塞，道必不行。有才而不能得君祿命任用之時，君子必內其德，守其正道，終必吉。&lt;/p>
&lt;h2 id="九四鼎折足覆公餗其形渥-凶">
 九四：鼎折足，覆公&lt;strong>餗&lt;/strong>，其形渥， 凶。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e9%bc%8e%e6%8a%98%e8%b6%b3%e8%a6%86%e5%85%ac%e9%a4%97%e5%85%b6%e5%bd%a2%e6%b8%a5-%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>四為君側之位，與初下爻相應，乃示初陰柔之小人不可用；其不勝任而敗事，猶鼎足折也。居大臣之位，所用非人，至於覆敗，此不勝任，其凶可知。成因在於任不適之才，必來&lt;/p>
&lt;h2 id="六五鼎黃耳金鉉利貞">
 六五：鼎黃耳，金鉉，利貞。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e9%bc%8e%e9%bb%83%e8%80%b3%e9%87%91%e9%89%89%e5%88%a9%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>鼎之主在耳，執耳之意，有陽剛之體，又得其位，才必充實，乃能為大用，至善矣。&lt;/p>
&lt;h2 id="上九鼎玉鉉大吉无不利">
 上九：鼎玉鉉，大吉，无不利。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e9%bc%8e%e7%8e%89%e9%89%89%e5%a4%a7%e5%90%89%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>鼎之終，功成也，玉為剛而温，居成功之項，唯小心善處，剛柔適用，動靜不可過，乃生大吉。無所不利也。&lt;/p>
&lt;h2 id="象曰鼎顚趾未悖也利出否-以從貴也">
 象曰：鼎顚趾，未悖也。利出否， 以從貴也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%bc%8e%e9%a1%9a%e8%b6%be%e6%9c%aa%e6%82%96%e4%b9%9f%e5%88%a9%e5%87%ba%e5%90%a6-%e4%bb%a5%e5%be%9e%e8%b2%b4%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>鼎顛覆趾在上時，背道而行，只利天下敗壞之際，棄惡而從貴也。&lt;/p></description></item><item><title>49澤火革</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/49%E6%BE%A4%E7%81%AB%E9%9D%A9/</link><pubDate>Tue, 14 Jan 2025 09:39:26 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/49%E6%BE%A4%E7%81%AB%E9%9D%A9/</guid><description>&lt;h1 id="49澤火革">
 49澤火革
 &lt;a class="anchor" href="#49%e6%be%a4%e7%81%ab%e9%9d%a9">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦彭越戰項王絶糧時，卜得之，遂能承恩改革也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>一人把柿全，一人把柿不全，一兔虎， 官人推車，車上一印，在大路上。&lt;/strong>&lt;/p>
&lt;p>豹變爲虎之課 改舊從新之象&lt;/p>
&lt;p>井之為用，在甘潔寒洌，如中有穢物，任其存之必敗，清之則必潔，此乃革之義，故井後， 革為其序。此卦澤在上，火在下，乃水能滅火，火亦能涸水之象，人能外悦而內明，乃革之真義。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、一人把柿全，乃人肺腑之言。二、一人把柿不全，一人半真言也。三、一兔：躍進之象。&lt;/p>
&lt;p>四、一虎：威權之象，大人之象，肖虎也。&lt;/p>
&lt;p>五、官人推車有一印：如為武官，則訟至。今為文官帶印，主得掛印封帥，須力求變革， 果必成。丈夫推車，乃求婚也，帶印必成。&lt;/p>
&lt;p>六、虎兔向山行：賢良大人退，後繼有人躍進同行。七、山頭四點：上位之人，黑暗不明之象。&lt;/p>
&lt;p>八、大路：轉變為新且順之象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>革：巳日乃孚，元亨利貞，悔亡。&lt;/p>
&lt;p>革之道，在變其故舊，始初人必未能遽信，必俟至巳日乃人心信從。革之道在求變故後能亨通，但須誠正利於天下，乃能去故從新，不因有大變而生悔。&lt;/p>
&lt;h2 id="彖曰革水火相息二女同居其志不相得曰革">
 彖曰：革，水火相息，二女同居，其志不相得，曰革。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%9d%a9%e6%b0%b4%e7%81%ab%e7%9b%b8%e6%81%af%e4%ba%8c%e5%a5%b3%e5%90%8c%e5%b1%85%e5%85%b6%e5%bf%97%e4%b8%8d%e7%9b%b8%e5%be%97%e6%9b%b0%e9%9d%a9">#&lt;/a>
&lt;/h2>
&lt;p>水火互息互滅，次女少女同居一室，其志不同，其所歸各異，如革也，有生變異之象。&lt;/p>
&lt;h2 id="巳日乃孚革而信之文明以説大亨以正革而當其悔乃亡">
 巳日乃孚，革而信之。文明以説，大亨以正，革而當，其悔乃亡。
 &lt;a class="anchor" href="#%e5%b7%b3%e6%97%a5%e4%b9%83%e5%ad%9a%e9%9d%a9%e8%80%8c%e4%bf%a1%e4%b9%8b%e6%96%87%e6%98%8e%e4%bb%a5%e8%aa%ac%e5%a4%a7%e4%ba%a8%e4%bb%a5%e6%ad%a3%e9%9d%a9%e8%80%8c%e7%95%b6%e5%85%b6%e6%82%94%e4%b9%83%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>革之雖變，始初不令人信，但如以正道，日久乃信。能明且悦，則能盡事之理，無事不察， 人心和順，必致大亨，此革之至當，必不生悔。&lt;/p>
&lt;h2 id="天地革而四時成湯武革命順乎天而應乎人革之時大矣哉">
 天地革而四時成，湯武革命，順乎天而應乎人，革之時大矣哉！
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e9%9d%a9%e8%80%8c%e5%9b%9b%e6%99%82%e6%88%90%e6%b9%af%e6%ad%a6%e9%9d%a9%e5%91%bd%e9%a0%86%e4%b9%8e%e5%a4%a9%e8%80%8c%e6%87%89%e4%b9%8e%e4%ba%ba%e9%9d%a9%e4%b9%8b%e6%99%82%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>天地有變革後，乃能生成四時寒暑，萬物因其時節而生。王者之與，能上順天命，下應人心，改舊去新，得易之神，此革之時義大也。&lt;/p>
&lt;h2 id="象曰澤中有火革君子以治歷明時">
 象曰：澤中有火。革，君子以治歷明時。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e4%b8%ad%e6%9c%89%e7%81%ab%e9%9d%a9%e5%90%9b%e5%ad%90%e4%bb%a5%e6%b2%bb%e6%ad%b7%e6%98%8e%e6%99%82">#&lt;/a>
&lt;/h2>
&lt;p>水火相消滅，為革道，除舊佈新，君子觀革之象，乃知推演歷數，知日月星辰之變，以明四時之序，則終能合於天地。&lt;/p>
&lt;h2 id="初九鞏用黃牛之革">
 初九：鞏用黃牛之革。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e9%9e%8f%e7%94%a8%e9%bb%83%e7%89%9b%e4%b9%8b%e9%9d%a9">#&lt;/a>
&lt;/h2>
&lt;p>變革之事為大事，必有時機，有人才，有其地位，謀慮而後動，則可無侮矣。猶如用黃牛之皮來侷束，但求自固而守，不求任意妄動之義。&lt;/p>
&lt;h2 id="六二巳日乃革之征吉-无咎">
 六二：巳日乃革之，征吉 ，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%b7%b3%e6%97%a5%e4%b9%83%e9%9d%a9%e4%b9%8b%e5%be%81%e5%90%89-%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>陰居陰位，乃得才適用之時，此際足以去天下之弊乃上輔於君，行其正道而革之，吉而無災也。&lt;/p>
&lt;h2 id="九三征凶貞厲革言三就有孚">
 九三：征凶，貞厲。革言三就，有孚。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%be%81%e5%87%b6%e8%b2%9e%e5%8e%b2%e9%9d%a9%e8%a8%80%e4%b8%89%e5%b0%b1%e6%9c%89%e5%ad%9a">#&lt;/a>
&lt;/h2>
&lt;p>九三相位，居下卦之上，上有君，於此以陽剛之勢而力革時，乃過於燥動，行之必有凶。但如慎戒敬懼，守貞正之道，知順從公論，行革不為人疑出於私利，則吉，因眾必孚服而順。&lt;/p>
&lt;h2 id="九四悔亡有孚改命吉">
 九四：悔亡，有孚，改命，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e6%82%94%e4%ba%a1%e6%9c%89%e5%ad%9a%e6%94%b9%e5%91%bd%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此即以剛處柔位，近君側之人，剛柔互濟， 於革之時，行以至誠，致令上信下順，其吉必矣。&lt;/p>
&lt;h2 id="九五大人虎變未占有孚">
 九五：大人虎變，未占有孚。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%a4%a7%e4%ba%ba%e8%99%8e%e8%ae%8a%e6%9c%aa%e5%8d%a0%e6%9c%89%e5%ad%9a">#&lt;/a>
&lt;/h2>
&lt;p>九五至尊之君，能以中正之道，居革之時， 乃能力革之，其必昭著天下，不須占決，知其行為之至當，天下必信。&lt;/p>
&lt;h2 id="上六君子豹變小人革面征凶-居貞吉">
 上六：君子豹變，小人革面，征凶， 居貞吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%90%9b%e5%ad%90%e8%b1%b9%e8%ae%8a%e5%b0%8f%e4%ba%ba%e9%9d%a9%e9%9d%a2%e5%be%81%e5%87%b6-%e5%b1%85%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>革之終時，君子必從革後而大變，於至善， 小人昏愚難變，即令心智未化，但其面已改， 從上之教導。天下之事於始革必艱難，至革成， 則患無法自守，故於此須戒之守貞堅志，則果必 吉 。&lt;/p></description></item><item><title>48水風井</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/48%E6%B0%B4%E9%A2%A8%E4%BA%95/</link><pubDate>Tue, 14 Jan 2025 09:39:25 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/48%E6%B0%B4%E9%A2%A8%E4%BA%95/</guid><description>&lt;h1 id="48水風井">
 48水風井
 &lt;a class="anchor" href="#48%e6%b0%b4%e9%a2%a8%e4%ba%95">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦楊貴妃，私與安祿山為事，卜得之，反受其害也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>金甲神執符，女子抱合，錢寶有光起， 人落井中，官人用繩引出。&lt;/strong>&lt;/p>
&lt;p>珠藏深淵之課 守靜安常之象&lt;/p>
&lt;p>困之後，如至極，則纏身動彈不得，猶陷井中，故困之後為井。物之居下者，莫如井，此卦坎上巽下，坎為水，巽為木，木在水下，必上乎水，故有汲井之象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、金甲神執符：貴人在空中，祥瑞之兆也。二、女子抱合：好也，但先成後破。&lt;/p>
&lt;p>三、錢寶有光起：財不失，不露之象，不久有喪也。四、人落井中：病重象，官司沈陷象，招陷害也。 五、官人用繩引出：貴人為官人，欲相救也。&lt;/p>
&lt;p>六、符：符乃策略有傍人作對。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>井：改邑不改井，无喪无得，往來井井。&lt;/p>
&lt;p>井，為不常改之處，常見都巿已改，但井無法遷動，井之性，汲之不竭，存之不盈，故曰無喪無得，凡人至井側，皆受其用，此不變之常德也，此為井之道。&lt;/p>
&lt;h2 id="汔至亦未繘井贏其瓶凶">
 汔至，亦未&lt;strong>繘&lt;/strong>井，贏其瓶，凶。
 &lt;a class="anchor" href="#%e6%b1%94%e8%87%b3%e4%ba%a6%e6%9c%aa%e7%b9%98%e4%ba%95%e8%b4%8f%e5%85%b6%e7%93%b6%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>井之道在乎供人用為善，如人至而未用井，仍飲泉，則有亦若無。君子之道，以有成為貴， 如道即令正，但不為所用，亦等於無也。徒自招凶。&lt;/p>
&lt;h2 id="彖曰巽乎水而上水井井養而不窮也改邑不改井乃以剛中也">
 彖曰：巽乎水而上水，井，井養而不窮也，改邑不改井，乃以剛中也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%b7%bd%e4%b9%8e%e6%b0%b4%e8%80%8c%e4%b8%8a%e6%b0%b4%e4%ba%95%e4%ba%95%e9%a4%8a%e8%80%8c%e4%b8%8d%e7%aa%ae%e4%b9%9f%e6%94%b9%e9%82%91%e4%b8%8d%e6%94%b9%e4%ba%95%e4%b9%83%e4%bb%a5%e5%89%9b%e4%b8%ad%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>木入水中，而又上於水，此井也，井能養物，不盡不竭，此井德之常也。城巿可改，而井不能遷，猶君子剛中之德，即令再艱險，卻永不改變其志。&lt;/p>
&lt;h2 id="汔至亦未繘井未有功也羸其瓶是以凶也">
 汔至亦未&lt;strong>繘&lt;/strong>井，未有功也，羸其瓶，是以凶也。
 &lt;a class="anchor" href="#%e6%b1%94%e8%87%b3%e4%ba%a6%e6%9c%aa%e7%b9%98%e4%ba%95%e6%9c%aa%e6%9c%89%e5%8a%9f%e4%b9%9f%e7%be%b8%e5%85%b6%e7%93%b6%e6%98%af%e4%bb%a5%e5%87%b6%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>井以供人使用為功，今人至井側，而不用井，則有井亦同於無井，無法發揮井之功用。瓶須盛水，今破壞，是以無用而致凶也。&lt;/p>
&lt;h2 id="象曰木上有水井君子以勞民勸相">
 象曰：木上有水，井，君子以勞民勸相。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%9c%a8%e4%b8%8a%e6%9c%89%e6%b0%b4%e4%ba%95%e5%90%9b%e5%ad%90%e4%bb%a5%e5%8b%9e%e6%b0%91%e5%8b%b8%e7%9b%b8">#&lt;/a>
&lt;/h2>
&lt;p>君子觀井象，效法井之性，為助民而任勞，且教其互助之功，此效法井之佈施無私也。&lt;/p>
&lt;h2 id="初六井泥不食舊井无禽">
 初六：井泥不食，舊井无禽。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e4%ba%95%e6%b3%a5%e4%b8%8d%e9%a3%9f%e8%88%8a%e4%ba%95%e6%97%a0%e7%a6%bd">#&lt;/a>
&lt;/h2>
&lt;p>井之道，始為井之時，仍不適用也，井內初無水，其底為泥，不可食，井之德能養人， 乃其有水也。今若為廢棄之舊井，其無水，故必無禽至，猶人之無才無法濟物，必為時代淘汰。今之師即須有舊井之戒，故孟子曰：人之&lt;/p>
&lt;h2 id="九二井谷射鮒甕敝漏">
 九二：井谷射鮒，甕敝漏。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e4%ba%95%e8%b0%b7%e5%b0%84%e9%ae%92%e7%94%95%e6%95%9d%e6%bc%8f">#&lt;/a>
&lt;/h2>
&lt;p>陽剛居將位，居井之時，上不對應，因而趨下，失井之道，降下而趨泥，而成微不足道之物，如破漏之甕也，終必無功。&lt;/p>
&lt;h2 id="九三井渫不食爲我心惻可用汲王明並受其福">
 九三：井渫不食，爲我心惻，可用汲，王明並受其福。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e4%ba%95%e6%b8%ab%e4%b8%8d%e9%a3%9f%e7%88%b2%e6%88%91%e5%bf%83%e6%83%bb%e5%8f%af%e7%94%a8%e6%b1%b2%e7%8e%8b%e6%98%8e%e4%b8%a6%e5%8f%97%e5%85%b6%e7%a6%8f">#&lt;/a>
&lt;/h2>
&lt;p>九三之才居相位，陽剛又居高位，才必能濟世，如井之清水升而上，可助人之力大也， 今不見人食，乃謂君明其賢不用其才，賢才之心必憂，如君能用其才，使其才能濟民，乃上下之共福也。&lt;/p>
&lt;h2 id="六四井甃无咎">
 六四：井甃，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e4%ba%95%e7%94%83%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>陰柔之人居君王身側，才不足而任其位， 若但求修治井口之磚砌，自守之，亦可無咎。&lt;/p>
&lt;h2 id="九五井洌寒泉食">
 九五：井洌，寒泉食。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e4%ba%95%e6%b4%8c%e5%af%92%e6%b3%89%e9%a3%9f">#&lt;/a>
&lt;/h2>
&lt;p>九五君位之人，能如井中之泉，甘寒潔淨， 為民所喜用，此井道之至善也。&lt;/p>
&lt;h2 id="上六井收勿幕有孚元吉">
 上六：井收勿幕，有孚元吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e4%ba%95%e6%94%b6%e5%8b%bf%e5%b9%95%e6%9c%89%e5%ad%9a%e5%85%83%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>井以水能上出為人所用為居功，使人汲取而不竭，其利必無窮無盡，其間之性為常此不變，始終如一，廣施其德於萬民，此乃井道之成也。&lt;/p>
&lt;p>患，莫過於為師，即有舊井之戒。&lt;/p>
&lt;h2 id="象曰井泥不食下也舊井无禽-時舍也">
 象曰：井泥不食，下也，舊井无禽， 時舍也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%ba%95%e6%b3%a5%e4%b8%8d%e9%a3%9f%e4%b8%8b%e4%b9%9f%e8%88%8a%e4%ba%95%e6%97%a0%e7%a6%bd-%e6%99%82%e8%88%8d%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>初為陰柔，而居井之底，乃泥象，無水之泥，人必不食，無水之井亦無禽聚，此必為時所捨之也。&lt;/p></description></item><item><title>47澤水困</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/47%E6%BE%A4%E6%B0%B4%E5%9B%B0/</link><pubDate>Tue, 14 Jan 2025 09:39:24 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/47%E6%BE%A4%E6%B0%B4%E5%9B%B0/</guid><description>&lt;h1 id="47澤水困">
 47澤水困
 &lt;a class="anchor" href="#47%e6%be%a4%e6%b0%b4%e5%9b%b0">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦李德裕罷相時，卜得之，乃知身命無氣也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>一輪獨在地上，一人臥病，葯爐， 貴人倾水救旱池魚，池中青草。&lt;/strong>&lt;/p>
&lt;p>河中無水之課 守己待時之象&lt;/p>
&lt;p>升至極，不知進退，私欲使然，終必至困，故困次升也。此卦「兌」上「坎」下，水在澤上乃有水也，今水在澤下乃枯涸無水之象，此示人之困乏象，本卦論人紀中，君子受小人掩蔽， 居窮困之時也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、一輪獨在地下：獨行也無依也，方向不明也。二、一人臥病，招危難也。&lt;/p>
&lt;p>三、藥爐：有人來救，待時緩進也。&lt;/p>
&lt;p>四、貴人傾水救旱池魚：旱池，無財也，有貴人資援。五、池中青草：仍有生氣狀。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>困：亨，貞，大人士口，无咎，有言口不信。&lt;/p>
&lt;p>困之時，如何用困之道，乃易之精神，大人居困時，以樂天安命，隨時善處，自得其樂， 必吉。有愚頑之人，居困而力求言，人必不信也。&lt;/p>
&lt;h2 id="彖曰困剛揜也險以説困而不失其所亨其唯君子乎">
 彖曰：困，剛&lt;strong>揜&lt;/strong>也。險以説，困而不失其所亨，其唯君子乎？
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%9b%b0%e5%89%9b%e6%8f%9c%e4%b9%9f%e9%9a%aa%e4%bb%a5%e8%aa%ac%e5%9b%b0%e8%80%8c%e4%b8%8d%e5%a4%b1%e5%85%b6%e6%89%80%e4%ba%a8%e5%85%b6%e5%94%af%e5%90%9b%e5%ad%90%e4%b9%8e">#&lt;/a>
&lt;/h2>
&lt;p>困之生乃因剛為柔所掩蔽，專言君子之道為小人所掩蔽，而困窮之時君子知困之道，外悦內險，處困而能以悦之度量居之，不失正道，則其道必自然亨通，能如此之人，必為君子貞， 大人吉，以剛中也。有言不信，尚口乃窮也。&lt;/p>
&lt;p>處困時，君子能吉，乃因堅守剛中之道，不變節。於困之時，所言人必不信，如反求己之口才以脱困，必更致困，此即為尚口之戒。&lt;/p>
&lt;h2 id="象曰澤无水困君子以致命遂志">
 象曰：澤无水，困。君子以致命遂志。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e6%97%a0%e6%b0%b4%e5%9b%b0%e5%90%9b%e5%ad%90%e4%bb%a5%e8%87%b4%e5%91%bd%e9%81%82%e5%bf%97">#&lt;/a>
&lt;/h2>
&lt;p>澤中無水，困之象。居此時君子以力盡防患之法，如仍難免，則歸之於命，泰然處之，絶不因困窮而變其志節。小人遇困，志節必變，但求附於他人，以求脱困，其終必凶。&lt;/p>
&lt;h2 id="初六臀困于株木入于幽谷三歲不覿">
 初六：臀困于株木，入于幽谷，三歲不覿。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e8%87%80%e5%9b%b0%e4%ba%8e%e6%a0%aa%e6%9c%a8%e5%85%a5%e4%ba%8e%e5%b9%bd%e8%b0%b7%e4%b8%89%e6%ad%b2%e4%b8%8d%e8%a6%bf">#&lt;/a>
&lt;/h2>
&lt;p>陰柔之人位居卑下，又無上位救助，猶如無葉之木，無法蔭庇下物，因無庇蔭，故不能安居於此，如進入幽暗之谷，無法自出，有三年的時間無法入亨。&lt;/p>
&lt;h2 id="九二困于酒食朱紱方來利用享祀征凶无咎">
 九二：困于酒食，朱紱方來，利用享祀：征凶，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%9b%b0%e4%ba%8e%e9%85%92%e9%a3%9f%e6%9c%b1%e7%b4%b1%e6%96%b9%e4%be%86%e5%88%a9%e7%94%a8%e4%ba%ab%e7%a5%80%e5%be%81%e5%87%b6%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>常人無不為酒食所困，不知酒食之施，乃生於人有所欲，常言：宴無好宴。君子之飲與小人不同，能困君子的，必是其剛正之道不足以濟天下之困，此其困擾也。居此時君子必求至誠以守，等待時機，可利用祭祀以示至誠， 俟貴人至，求之方吉。若不安居困，自往求之，&lt;/p>
&lt;h2 id="六三困于石據于蒺藜入于其宮不見其妻凶">
 六三：困于石，據于蒺藜，入于其宮，不見其妻，凶。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e5%9b%b0%e4%ba%8e%e7%9f%b3%e6%93%9a%e4%ba%8e%e8%92%ba%e8%97%9c%e5%85%a5%e4%ba%8e%e5%85%b6%e5%ae%ae%e4%b8%8d%e8%a6%8b%e5%85%b6%e5%a6%bb%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>處困可羞之時，卻用外剛來飾內險，益增自困，必堅重如石，而不安之情如手握蒺藜之物，因刺多而不能握，進退不得狀，必失所居， 凶。&lt;/p>
&lt;h2 id="九四來徐徐困于金車吝有終">
 九四：來徐徐，困于金車，吝，有終。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e4%be%86%e5%be%90%e5%be%90%e5%9b%b0%e4%ba%8e%e9%87%91%e8%bb%8a%e5%90%9d%e6%9c%89%e7%b5%82">#&lt;/a>
&lt;/h2>
&lt;p>居君側之人，不以中正之道處困時，而才能又不足濟困，其來動必遲遲，困於金車之內， 必不見容於世，可羞也，如知濟困得中正之道， 乃有歸也。&lt;/p>
&lt;h2 id="九五劓刖困于赤紱乃徐有説-利用祭祀">
 九五：劓刖，困于赤紱，乃徐有説， 利用祭祀。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%8a%93%e5%88%96%e5%9b%b0%e4%ba%8e%e8%b5%a4%e7%b4%b1%e4%b9%83%e5%be%90%e6%9c%89%e8%aa%ac-%e5%88%a9%e7%94%a8%e7%a5%ad%e7%a5%80">#&lt;/a>
&lt;/h2>
&lt;p>劓，乃上有傷，刖，乃下有傷，人君之困， 乃上下無應，天下之民不來也，必起用剛正之賢才，以至誠待之，並利用祭祀，示道之至誠於天，則民必徐來。&lt;/p>
&lt;h2 id="上六困于葛藟于臲卼曰動悔有悔征吉">
 上六：困于葛&lt;strong>藟&lt;/strong>，于&lt;strong>臲卼&lt;/strong>，曰動悔。有悔，征吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%9b%b0%e4%ba%8e%e8%91%9b%e8%97%9f%e4%ba%8e%e8%87%b2%e5%8d%bc%e6%9b%b0%e5%8b%95%e6%82%94%e6%9c%89%e6%82%94%e5%be%81%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>困至極，必生變，如物之纏束於身，動則有悔，無所不困，即動靜皆困，必求進，方有吉處。&lt;/p>
&lt;h2 id="象曰入于幽谷幽不明也">
 象曰：入于幽谷，幽不明也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%a5%e4%ba%8e%e5%b9%bd%e8%b0%b7%e5%b9%bd%e4%b8%8d%e6%98%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>自陷於深谷，乃出自己之不明也。&lt;/p>
&lt;p>其招凶皆自取也。&lt;/p>
&lt;h2 id="象曰困于酒食中有慶也">
 象曰：困于酒食，中有慶也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%9b%b0%e4%ba%8e%e9%85%92%e9%a3%9f%e4%b8%ad%e6%9c%89%e6%85%b6%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>居困時，雖未能施惠於人，如能守其剛中之德，必能亨。而有吉慶也。&lt;/p></description></item><item><title>46地風升</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/46%E5%9C%B0%E9%A2%A8%E5%8D%87/</link><pubDate>Tue, 14 Jan 2025 09:39:23 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/46%E5%9C%B0%E9%A2%A8%E5%8D%87/</guid><description>&lt;h1 id="46地風升">
 46地風升
 &lt;a class="anchor" href="#46%e5%9c%b0%e9%a2%a8%e5%8d%87">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦房玄齡去蓬萊採葯未回，卜得知，主不在也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>雲中雨點下，木匠下墨解木，一人磨鏡，一架子有鏡&lt;/strong>&lt;/p>
&lt;p>高山植木之課 積小成大之象&lt;/p>
&lt;p>萃者聚也，聚之後能上，即升也，萬物咸因能聚方可升高，故升次萃也。此卦坤上巽下， 乃木在地下生於地中，長而愈高此升之象也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、雲中雨點下：沾衣恩澤之象，昏暗之時將過也。&lt;/p>
&lt;p>二、木匠下墨解木：有尺度法則，有依據之象。匠—將也。以武力去災也有改朝換代之象也。&lt;/p>
&lt;p>三、一人磨鏡：可成始得之象。&lt;/p>
&lt;p>四、一架子負大木：有不小之財也。&lt;/p>
&lt;p>五、有鏡：指明鏡高懸，於商事指有競爭也。六、藍：難也，百廢待與之象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>升：元亨，用見大人，勿恤，南征吉。&lt;/p>
&lt;p>升之道，在於亨通，用此道来見大人，不靠体恤而能進，必吉。&lt;/p>
&lt;h2 id="彖曰柔以時升巽而順剛中而應是以大亨">
 彖曰：柔以時升，巽而順，剛中而應，是以大亨。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%9f%94%e4%bb%a5%e6%99%82%e5%8d%87%e5%b7%bd%e8%80%8c%e9%a0%86%e5%89%9b%e4%b8%ad%e8%80%8c%e6%87%89%e6%98%af%e4%bb%a5%e5%a4%a7%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>柔即順也，順時而升，以柔而進，此升之得時矣，二剛陽之位，得五柔順之君應則能大亨也。&lt;/p>
&lt;h2 id="用見大人勿恤有慶也南征吉志行也">
 用見大人，勿恤，有慶也。南征吉，志行也。
 &lt;a class="anchor" href="#%e7%94%a8%e8%a6%8b%e5%a4%a7%e4%ba%ba%e5%8b%bf%e6%81%a4%e6%9c%89%e6%85%b6%e4%b9%9f%e5%8d%97%e5%be%81%e5%90%89%e5%bf%97%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>用巽順剛陽中正之道來見大人，必遂心志得升，從不去憂升之不遂，此吉慶也，前進則必升，必能遂行其志也。&lt;/p>
&lt;h2 id="象曰地中生木升君子以順德積小以高大">
 象曰：地中生木，升；君子以順德，積小以高大。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%9c%b0%e4%b8%ad%e7%94%9f%e6%9c%a8%e5%8d%87%e5%90%9b%e5%ad%90%e4%bb%a5%e9%a0%86%e5%be%b7%e7%a9%8d%e5%b0%8f%e4%bb%a5%e9%ab%98%e5%a4%a7">#&lt;/a>
&lt;/h2>
&lt;p>地中生木，木長而高，此升也。君子觀升象，乃知修身之德，由積累微小，乃至高大，故積不善，則不足以成名，凡學問道德之高，皆由累積而成，升之義也。&lt;/p>
&lt;h2 id="初六允升大吉">
 初六：允升，大吉。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e5%85%81%e5%8d%87%e5%a4%a7%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>初進時柔順於九二之剛，因得信而升，此升吉也。&lt;/p>
&lt;h2 id="象曰允升大吉上合志也">
 象曰：允升大吉，上合志也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%81%e5%8d%87%e5%a4%a7%e5%90%89%e4%b8%8a%e5%90%88%e5%bf%97%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>與上位之志合，得信而升，此因信於剛中之賢而能大吉也。&lt;/p>
&lt;h2 id="九二孚乃利用禴无咎">
 九二：孚乃利用&lt;strong>禴&lt;/strong>，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%ad%9a%e4%b9%83%e5%88%a9%e7%94%a8%e7%a6%b4%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九二陽剛之臣，處升之時，因上位君柔， 絶不可矯求外飾，必求以中心之至誠來感通於上，如此則可無咎。&lt;/p>
&lt;h2 id="九三升虛邑">
 九三：升虛邑。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%8d%87%e8%99%9b%e9%82%91">#&lt;/a>
&lt;/h2>
&lt;p>九三陽剛之相，能正而順上，如此而升， 就如入無人之巿，無人抵禦。&lt;/p>
&lt;h2 id="六四王用享于岐山吉-无咎">
 六四：王用享于岐山，吉 ，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e7%8e%8b%e7%94%a8%e4%ba%ab%e4%ba%8e%e5%b2%90%e5%b1%b1%e5%90%89-%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>居諸候之位，能上柔順於君王，下又順天下之賢，舉之升進，於已則柔順謙恭，不求離本位，有德如是，必吉，且無災矣。人之戒， 切記在不可無事而升，升又必量力而進，方合君子之道。今人已不復如此，無功而升，比比&lt;/p>
&lt;h2 id="六五貞吉升階">
 六五：貞，吉，升階。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e8%b2%9e%e5%90%89%e5%8d%87%e9%9a%8e">#&lt;/a>
&lt;/h2>
&lt;p>君位之人性柔，必得貞正且固守之德，則人皆信而賢至，能知人善用，必因用賢而能再升，澤及天下也。&lt;/p>
&lt;h2 id="上六冥升利于不息之貞">
 上六：冥升，利于不息之貞。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%86%a5%e5%8d%87%e5%88%a9%e4%ba%8e%e4%b8%8d%e6%81%af%e4%b9%8b%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>升之極乃致昏昧於升，只知進不知止，此為不明，君子之人終日乾乾，無時不警惕自己， 知所進退。小人貪求私慾之心盛，乃生不知進退之行為，凶也。&lt;/p>
&lt;h2 id="象曰九二之孚有喜也">
 象曰：九二之孚，有喜也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b9%9d%e4%ba%8c%e4%b9%8b%e5%ad%9a%e6%9c%89%e5%96%9c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>君臣之道，臣之事君能中心至誠，不但為臣無禍，又可遂行其大志，此可喜也。&lt;/p></description></item><item><title>45澤地萃</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/45%E6%BE%A4%E5%9C%B0%E8%90%83/</link><pubDate>Tue, 14 Jan 2025 09:39:22 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/45%E6%BE%A4%E5%9C%B0%E8%90%83/</guid><description>&lt;h1 id="45澤地萃">
 45澤地萃
 &lt;a class="anchor" href="#45%e6%be%a4%e5%9c%b0%e8%90%83">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦韓信被呂后疑惑，卜得知，果被其戮也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>貴人磨玉，一僧指小兒山路，一人救火，一魚在火上，一鳳啣書。&lt;/strong>&lt;/p>
&lt;p>魚龍會聚之課 如水就下之象&lt;/p>
&lt;p>物相遇而後，同氣相求，則生聚象，萃，聚也。物相聚成群，為萃，故次姤卦之後也此卦， 澤上地下，水之聚象，水之在地上，乃方聚之時也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、貴人磨玉：進修也，專心一致也，免破損也。&lt;/p>
&lt;p>二、一僧指：指引也，局外人也，光頭人也，曾姓人也。 三、小兒山路：退引山林，以退為進象，示上坡也。倪姓。四、一人救火：救災禍也；猶行醫濟世救人之道也。&lt;/p>
&lt;p>五、一魚在火上：得救狀，或餐飲業。六、一鳳啣書：喜訊至也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;h2 id="萃亨王假有廟利見大人亨利貞用大牲吉利有攸往">
 萃：亨，王假有廟。利見大人，亨，利貞。用大牲吉，利有攸往。
 &lt;a class="anchor" href="#%e8%90%83%e4%ba%a8%e7%8e%8b%e5%81%87%e6%9c%89%e5%bb%9f%e5%88%a9%e8%a6%8b%e5%a4%a7%e4%ba%ba%e4%ba%a8%e5%88%a9%e8%b2%9e%e7%94%a8%e5%a4%a7%e7%89%b2%e5%90%89%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80">#&lt;/a>
&lt;/h2>
&lt;p>人之至誠專一莫過於宗廟祭祀之時，王者能令天下之人其心專一，莫過於利用宗廟，故聖人制祭祀之禮以養民之德。此聚之義大也。民聚之時，能得賢才，則必聚而正，如不正，治之不以正理，則亂之生亦由人之聚，故聚必以道，非正之道，即令有聚，亦不能安處也。於聚時祭禮用大牲厚禮，乃示慎重且富是天下必同之，今人聚而人不能亨其豐盛，則必散也。是故古今皆然，凡能與大功立大業之人，第一必得其時，第二必聚而後能用，此動必吉，天理莫及此也。&lt;/p>
&lt;h2 id="彖曰萃聚也順以説剛中而應故聚也">
 彖曰：萃，聚也，順以説，剛中而應，故聚也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%90%83%e8%81%9a%e4%b9%9f%e9%a0%86%e4%bb%a5%e8%aa%ac%e5%89%9b%e4%b8%ad%e8%80%8c%e6%87%89%e6%95%85%e8%81%9a%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>萃卦，乃上悦下順之象，上位以中道用民，合於民心，下又能順從於上之政令且又剛陽相應，堅心赤誠如此，必能聚天下之人才。&lt;/p>
&lt;h2 id="王假有廟致孝享也">
 王假有廟，致孝享也。
 &lt;a class="anchor" href="#%e7%8e%8b%e5%81%87%e6%9c%89%e5%bb%9f%e8%87%b4%e5%ad%9d%e4%ba%ab%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>王者要有聚民心之道，必立宗廟以示孝順之至誠，能順天下之人心，必以孝方成。&lt;/p>
&lt;h2 id="利見大人亨聚以正也">
 利見大人亨，聚以正也。
 &lt;a class="anchor" href="#%e5%88%a9%e8%a6%8b%e5%a4%a7%e4%ba%ba%e4%ba%a8%e8%81%9a%e4%bb%a5%e6%ad%a3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>聚之以正道，必能得人才治之，乃因其正也。&lt;/p>
&lt;h2 id="用大牲吉利有攸往順天命也">
 用大牲吉，利有攸往，順天命也。
 &lt;a class="anchor" href="#%e7%94%a8%e5%a4%a7%e7%89%b2%e5%90%89%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e9%a0%86%e5%a4%a9%e5%91%bd%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>祭祀時用厚禮祭天，必可有為，此順天命也。&lt;/p>
&lt;h2 id="視其所聚而天地萬物之情可見矣">
 視其所聚，而天地萬物之情可見矣。
 &lt;a class="anchor" href="#%e8%a6%96%e5%85%b6%e6%89%80%e8%81%9a%e8%80%8c%e5%a4%a9%e5%9c%b0%e8%90%ac%e7%89%a9%e4%b9%8b%e6%83%85%e5%8f%af%e8%a6%8b%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>天地萬物間皆有聚，有動，有散等，聖人觀象，可見萬物之情性也。&lt;/p>
&lt;h2 id="象曰澤上於地萃君子以除戎器戒不虞">
 象曰：澤上於地，萃，君子以除戎器，戒不虞。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e4%b8%8a%e6%96%bc%e5%9c%b0%e8%90%83%e5%90%9b%e5%ad%90%e4%bb%a5%e9%99%a4%e6%88%8e%e5%99%a8%e6%88%92%e4%b8%8d%e8%99%9e">#&lt;/a>
&lt;/h2>
&lt;p>澤上於地，為集聚之象，君子知始戒之慎，故眾民相聚之初，就也生戒，因眾聚必有爭， 私心所成，故先除兵械，乃能戒而無虞。&lt;/p>
&lt;h2 id="初六有孚不終乃亂乃萃若號-一握爲笑勿恤往无咎">
 初六：有孚不終，乃亂乃萃，若號， 一握爲笑，勿恤，往无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e6%9c%89%e5%ad%9a%e4%b8%8d%e7%b5%82%e4%b9%83%e4%ba%82%e4%b9%83%e8%90%83%e8%8b%a5%e8%99%9f-%e4%b8%80%e6%8f%a1%e7%88%b2%e7%ac%91%e5%8b%bf%e6%81%a4%e5%be%80%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>聚之始，柔居之，陰柔之人，必無法堅守正節，為求與人同而捨其正道，但為求同，此不終之戒。人心必亂，同氣相求而生聚，或哀號作苦以求相應，其果必為眾人之笑柄，若能堅心往從陽剛正道，必無過咎，否則成小人矣。&lt;/p>
&lt;h2 id="六二引吉无咎孚乃利用禴">
 六二：引吉，无咎，孚乃利用&lt;strong>禴&lt;/strong>。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%bc%95%e5%90%89%e6%97%a0%e5%92%8e%e5%ad%9a%e4%b9%83%e5%88%a9%e7%94%a8%e7%a6%b4">#&lt;/a>
&lt;/h2>
&lt;p>二之位與五相對應，位雖有差距，此時乃當聚而未及合之時，如能相引聚則可無咎，此因其中正之德未變，如德變，則必不相吸引。故於群小人聚時能獨立其間，且與上位之德同，必能合，此其意也。即令不重外飾，專以至誠，則終必合矣。&lt;/p>
&lt;h2 id="六三萃如磋如无攸利往无咎-小吝">
 六三：萃如磋如，无攸利，往无咎， 小吝。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e8%90%83%e5%a6%82%e7%a3%8b%e5%a6%82%e6%97%a0%e6%94%b8%e5%88%a9%e5%be%80%e6%97%a0%e5%92%8e-%e5%b0%8f%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>不正之人，求能與人聚合，但人皆不應， 為人棄絶，上下皆不應，唯退求事外之賢與之相應，如此則可無咎。人之動有求，即令得之， 亦可羞也。&lt;/p>
&lt;h2 id="九四大吉无咎">
 九四：大吉无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e5%a4%a7%e5%90%89%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九四之位，能以陽剛，與君位對應，得君臣之萃，下又得群陰之聚，此上下能因其陽剛而聚，此至善也。&lt;/p>
&lt;h2 id="九五萃有位无咎匪孚元永貞悔亡">
 九五：萃有位，无咎。匪孚，元永貞，悔亡。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e8%90%83%e6%9c%89%e4%bd%8d%e6%97%a0%e5%92%8e%e5%8c%aa%e5%ad%9a%e5%85%83%e6%b0%b8%e8%b2%9e%e6%82%94%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>九五居天下之尊，有萃聚天下之力，則無災，此時必自修其德，正其位，處不以私，為得其位也。如有人不信而未能歸從，當自省是否不正，堅固中正不變之德性，則無不歸矣。&lt;/p></description></item><item><title>44天風姤</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/44%E5%A4%A9%E9%A2%A8%E5%A7%A4/</link><pubDate>Tue, 14 Jan 2025 09:39:21 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/44%E5%A4%A9%E9%A2%A8%E5%A7%A4/</guid><description>&lt;h1 id="44天風姤">
 44天風姤
 &lt;a class="anchor" href="#44%e5%a4%a9%e9%a2%a8%e5%a7%a4">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦漢呂后擬立呂氏謀漢社稷，卜得之果不利也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>官人射鹿，文書有喜字，二人執索， 綠衣人指路。&lt;/strong>&lt;/p>
&lt;p>風雲相濟之課 或聚或散之象&lt;/p>
&lt;p>夬，決也，潰決之後，必有遇，姤，遇也，故次夬卦。此卦，乾上巽下，即風行天下，風行時必觸及萬物，故為遇之象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、官人射鹿：丈夫也，取祿狀，野外之財，射，發也。二、文書上有喜字：摇摇欲墜，根只一線，夫妻凶。&lt;/p>
&lt;p>三、二人執索：互相牽累。&lt;/p>
&lt;p>四、綠衣人指路：掌生死簿之人，信差（今日）。五、二重山：重阻也。出也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>&lt;strong>姤&lt;/strong>：女壯，勿用取女。&lt;/p>
&lt;p>姤之道在戒陰壯之始，娶女本欲其柔且順從，但初進為陰，而渐進長盛，且有壯於陽者， 古来女壯必失男女之道，家道必敗。戒之在初始。&lt;/p>
&lt;h2 id="彖曰姤遇也柔遇剛也勿用取女不可與長也">
 彖曰：&lt;strong>姤&lt;/strong>，遇也，柔遇剛也。勿用取女，不可與長也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%a7%a4%e9%81%87%e4%b9%9f%e6%9f%94%e9%81%87%e5%89%9b%e4%b9%9f%e5%8b%bf%e7%94%a8%e5%8f%96%e5%a5%b3%e4%b8%8d%e5%8f%af%e8%88%87%e9%95%b7%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>姤，乃柔之遇剛，小人之道始遇君子之陽剛，須戒之在始，勿取如是之女，不可使小人之道長。&lt;/p>
&lt;h2 id="天地相遇品物咸章也剛遇中正天下大行也姤之時義大矣哉">
 天地相遇，品物咸章也。剛遇中正，天下大行也。&lt;strong>姤&lt;/strong>之時義大矣哉。
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e7%9b%b8%e9%81%87%e5%93%81%e7%89%a9%e5%92%b8%e7%ab%a0%e4%b9%9f%e5%89%9b%e9%81%87%e4%b8%ad%e6%ad%a3%e5%a4%a9%e4%b8%8b%e5%a4%a7%e8%a1%8c%e4%b9%9f%e5%a7%a4%e4%b9%8b%e6%99%82%e7%be%a9%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>萬物之生始於天陽地陰之交遇，不遇則不生。但须剛遇中正之道，猶人君之遇賢臣，剛與中正合德，其道必及於天下，姤之道即在遇之始，遇之正則吉，遇之不正須始戒。&lt;/p>
&lt;h2 id="象曰天下有風姤后以施命誥四方">
 象曰：天下有風，&lt;strong>姤&lt;/strong>，后以施命誥四方。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e4%b8%8b%e6%9c%89%e9%a2%a8%e5%a7%a4%e5%90%8e%e4%bb%a5%e6%96%bd%e5%91%bd%e8%aa%a5%e5%9b%9b%e6%96%b9">#&lt;/a>
&lt;/h2>
&lt;p>君之道，能如風之及於萬物，方可施政令而及於四方，故遇之道能行，天下必因中正之遇， 上下配合，而政令能如風之遍及萬物。&lt;/p>
&lt;h2 id="初六繫于金柅貞吉有攸往-見凶羸豕孚蹢躅">
 初六：繫于金&lt;strong>柅&lt;/strong>，貞吉，有攸往， 見凶，羸豕孚&lt;strong>蹢&lt;/strong>躅。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e7%b9%ab%e4%ba%8e%e9%87%91%e6%9f%85%e8%b2%9e%e5%90%89%e6%9c%89%e6%94%b8%e5%be%80-%e8%a6%8b%e5%87%b6%e7%be%b8%e8%b1%95%e5%ad%9a%e8%b9%a2%e8%ba%85">#&lt;/a>
&lt;/h2>
&lt;p>柅，止車之物，金，堅固意，因姤乃陰始於初而將長盛之卦，小人之道，於始初即應如止車之柅，且繫之，使不進也。此吉。如令其渐盛，不知始戒，有凶，猶羸弱之豕其雖不強， 然為陰物，故知其能跳躍之時，必消之，故小人之道於始即消除，則必不能成大，而無有作為矣。&lt;/p>
&lt;h2 id="九二包有魚无咎不利賓">
 九二：包有魚，无咎，不利賓。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%8c%85%e6%9c%89%e9%ad%9a%e6%97%a0%e5%92%8e%e4%b8%8d%e5%88%a9%e8%b3%93">#&lt;/a>
&lt;/h2>
&lt;p>姤相遇之道在於專一，陽剛將位之人與五君位應，其志必專一，遇則無災，如又遇於旁人，變其志，則有悔，其不利在不能專一。陰&lt;/p>
&lt;h2 id="九三臀无膚其行次且厲无大咎">
 九三：臀无膚，其行次且，厲，无大咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e8%87%80%e6%97%a0%e8%86%9a%e5%85%b6%e8%a1%8c%e6%ac%a1%e4%b8%94%e5%8e%b2%e6%97%a0%e5%a4%a7%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>時義乃謂初進之人與上位相遇而恰合，此時居上位之人同志於初始進之人，如為求其助，而親密於下，此凶，乃行且困難，必令居不安也，如臀之無膚狀，居此時如懷危懼不妄&lt;/p>
&lt;h2 id="九四包无魚起凶">
 九四：包无魚，起凶。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e5%8c%85%e6%97%a0%e9%ad%9a%e8%b5%b7%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>君側之人始遇初進同志之相應，但因其已先遇九二位之人，此遇已失，此意味臣位之人不中正，必失其民，故凶。故遇之道，必下不離散，今如下位之人散，上必失道也。&lt;/p>
&lt;h2 id="九五以杞包瓜含章有損自天">
 九五：以杞包瓜，含章，有損自天。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e4%bb%a5%e6%9d%9e%e5%8c%85%e7%93%9c%e5%90%ab%e7%ab%a0%e6%9c%89%e6%90%8d%e8%87%aa%e5%a4%a9">#&lt;/a>
&lt;/h2>
&lt;p>九五乃至尊之位，上位下求賢才，瓜乃美實但居於下，今上位之人能屈而求下，此乃包含之美德，人君能如此，則必有遇所求之人才， 故能屈尊求下內心至誠，如有隕石自天而下， 此遇之善道也。&lt;/p>
&lt;h2 id="上九姤其角吝无咎">
 上九：&lt;strong>姤&lt;/strong>其角，吝，无咎。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e5%a7%a4%e5%85%b6%e8%a7%92%e5%90%9d%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>至剛而居上，莫過於角，人之遇，必由降屈相求，巽順相應，此合之由來，如居高而剛極，持才自傲，人何將與之，此人之遠離，乃肇因於己之過亢，非他人之罪也。&lt;/p>
&lt;h2 id="象曰繫于金柅柔道牽也">
 象曰：繫于金&lt;strong>柅&lt;/strong>，柔道牽也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e7%b9%ab%e4%ba%8e%e9%87%91%e6%9f%85%e6%9f%94%e9%81%93%e7%89%bd%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陰柔小人之道，始進則如車之受金柅而止，不使其進，正道必存，吉也。&lt;/p>
&lt;p>柔之人志易變，必不能專。&lt;/p>
&lt;h2 id="象曰包有魚義不及賓也">
 象曰：包有魚，義不及賓也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%8c%85%e6%9c%89%e9%ad%9a%e7%be%a9%e4%b8%8d%e5%8f%8a%e8%b3%93%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>二位乃初遇志同之時，因不事二主，當如苞苴之魚，只能及於主人，無法及於客賓一樣。動，可無咎也。&lt;/p></description></item><item><title>43澤天夬</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/43%E6%BE%A4%E5%A4%A9%E5%A4%AC/</link><pubDate>Tue, 14 Jan 2025 09:39:20 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/43%E6%BE%A4%E5%A4%A9%E5%A4%AC/</guid><description>&lt;h1 id="43澤天夬">
 43澤天夬
 &lt;a class="anchor" href="#43%e6%be%a4%e5%a4%a9%e5%a4%ac">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦漢高祖欲拜韓信為將，卜得之，知有王佐才也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>二人同行，前水後火，虎蛇當道，一人斬蛇，竿上有文字，竿下有錢。&lt;/strong>&lt;/p>
&lt;p>神劍斬蛟之課 先損後益之象&lt;/p>
&lt;p>益之至極，猶水之滿溢，必決出之，夬者，決也，必決而後止。以卦体而言，兌上乾下， 有水之聚高至頂，則潰決也。如以爻而言，五陽在下，陽之長而陰將退，有眾陽決去一陰之象， 故於人間道，則此為君子道長，小人道消之時也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、二人同行：相輔相成，可成事也。&lt;/p>
&lt;p>二、前水後火：前險而後明，宜進取象，土生金象。&lt;/p>
&lt;p>三、虎蛇當道：虎，有權威之人。蛇—險奸之小人阻道。四、一人斬蛇：勇士也，得名將也。&lt;/p>
&lt;p>五、竿上有文字：揚竿而起，正名出師。六、竿下有錢：行動有利也。&lt;/p>
&lt;p>七、錢下有火：燒錢狀，主喪服。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>&lt;strong>夬&lt;/strong>：揚于王庭，孚號，有厲。&lt;/p>
&lt;p>夬之道，在小人式微，君子道長，必顯於公堂，使人明善惡，故揚于王庭。於此時敬戒之以至誠以命下民，使民戒之，居安思危，隨時生戒懼之心，必無後患。&lt;/p>
&lt;h2 id="告自邑不利即戎利有攸往">
 告自邑，不利即戎，利有攸往。
 &lt;a class="anchor" href="#%e5%91%8a%e8%87%aa%e9%82%91%e4%b8%8d%e5%88%a9%e5%8d%b3%e6%88%8e%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80">#&lt;/a>
&lt;/h2>
&lt;p>夬之道能於至善，必不尚武力，從修已開始，齊家後能治國，以道服眾，如此則可進而往。&lt;/p>
&lt;h2 id="彖曰夬決也剛決柔也健而説決而和">
 彖曰：&lt;strong>夬&lt;/strong>，決也，剛決柔也。健而説，決而和。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%a4%ac%e6%b1%ba%e4%b9%9f%e5%89%9b%e6%b1%ba%e6%9f%94%e4%b9%9f%e5%81%a5%e8%80%8c%e8%aa%ac%e6%b1%ba%e8%80%8c%e5%92%8c">#&lt;/a>
&lt;/h2>
&lt;p>五陽去一陰，下健而上悦，乃因健而能悦，能和，此決道之至善。&lt;/p>
&lt;h2 id="揚于王庭柔乘五剛也孚號有厲其危乃光也">
 揚于王庭，柔乘五剛也。孚號有厲，其危乃光也。
 &lt;a class="anchor" href="#%e6%8f%9a%e4%ba%8e%e7%8e%8b%e5%ba%ad%e6%9f%94%e4%b9%98%e4%ba%94%e5%89%9b%e4%b9%9f%e5%ad%9a%e8%99%9f%e6%9c%89%e5%8e%b2%e5%85%b6%e5%8d%b1%e4%b9%83%e5%85%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陰居陽上，此不正也，君子去之，當揚其罪於公堂，使民眾知善惡也。以衷心至誠帶領民眾，使知戒懼，防危之至，君子之道方可顯其力大。&lt;/p>
&lt;h2 id="告自邑不利即戎所尚乃窮也利有攸往剛長乃終也">
 告自邑，不利即戎，所尚乃窮也。利有攸往，剛長乃終也。
 &lt;a class="anchor" href="#%e5%91%8a%e8%87%aa%e9%82%91%e4%b8%8d%e5%88%a9%e5%8d%b3%e6%88%8e%e6%89%80%e5%b0%9a%e4%b9%83%e7%aa%ae%e4%b9%9f%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e5%89%9b%e9%95%b7%e4%b9%83%e7%b5%82%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>夬之時，不可崇武以力取，必須從修治本身之地起，方可有利前進光大君子陽剛之道，待正道至剛時，決不可留一邪吝之道，此剛進至終可吉也。&lt;/p>
&lt;h2 id="象曰澤上於天夬君子以施祿及下居德則忌">
 象曰：澤上於天，&lt;strong>夬&lt;/strong>，君子以施祿及下，居德則忌。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e4%b8%8a%e6%96%bc%e5%a4%a9%e5%a4%ac%e5%90%9b%e5%ad%90%e4%bb%a5%e6%96%bd%e7%a5%bf%e5%8f%8a%e4%b8%8b%e5%b1%85%e5%be%b7%e5%89%87%e5%bf%8c">#&lt;/a>
&lt;/h2>
&lt;p>水之聚而上於天，為夬象，其終必決於上，而灌溉於下，君子觀象法天，故知必施祿於天下，則民皆向之，於安處之時，知須防禁，則無潰散之虞。&lt;/p>
&lt;h2 id="初九壯于前趾往不勝爲咎">
 初九：壯于前趾，往不勝爲咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%a3%af%e4%ba%8e%e5%89%8d%e8%b6%be%e5%be%80%e4%b8%8d%e5%8b%9d%e7%88%b2%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>在下位剛健之人，於決之時，必強進執行， 如執行中受阻而失敗，必決之過，故凡事欲動之前，必戒之在燥，做最壞之打算，方可行進。&lt;/p>
&lt;h2 id="九二惕號莫夜有戎勿恤">
 九二：惕號，莫夜有戎，勿恤。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e6%83%95%e8%99%9f%e8%8e%ab%e5%a4%9c%e6%9c%89%e6%88%8e%e5%8b%bf%e6%81%a4">#&lt;/a>
&lt;/h2>
&lt;p>君子去小人之時，必思懷戒備，不鬆懈一時，如此即令夜有兵戎，亦不驚也。&lt;/p>
&lt;h2 id="九三壯于頄有凶君子夬夬-獨行遇雨若濡有慍无咎">
 九三：壯于&lt;strong>頄&lt;/strong>，有凶。君子&lt;strong>夬夬&lt;/strong>， 獨行遇雨，若濡有慍，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%a3%af%e4%ba%8e%e9%a0%84%e6%9c%89%e5%87%b6%e5%90%9b%e5%ad%90%e5%a4%ac%e5%a4%ac-%e7%8d%a8%e8%a1%8c%e9%81%87%e9%9b%a8%e8%8b%a5%e6%bf%a1%e6%9c%89%e6%85%8d%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九三居相位，上有君王，卻剛於果決，此決乃自任之決，必非合君意，果必招凶。故君子居夬之時，知己道之長，小人之道將消，必不獨與小人合，且面現愠色，必可無咎。今人皆自以為重要，見人之招凶，不論其因為何， 一律給予支持，此愚善之表現，徒令小人得逞， 不知反悔，反更盛其勢，此禍之端，乃肇因於人之愚善。&lt;/p>
&lt;h2 id="九四臀无膚其行次且牽羊悔亡聞言不信">
 九四：臀无膚，其行次且，牽羊悔亡，聞言不信。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e8%87%80%e6%97%a0%e8%86%9a%e5%85%b6%e8%a1%8c%e6%ac%a1%e4%b8%94%e7%89%bd%e7%be%8a%e6%82%94%e4%ba%a1%e8%81%9e%e8%a8%80%e4%b8%8d%e4%bf%a1">#&lt;/a>
&lt;/h2>
&lt;p>陽居陰位，乃示剛決不足之人所犯之過， 陽剛正理已明極時，如己之果決不足，必招居不安，行進又難之狀，若能法羊群之群行特性， 可無悔，但剛決不足之人，令其以柔進，必不能也，故即令告之，本性如此，必不能信用。自古以來，知過能改，知善能用，克己之欲能&lt;/p>
&lt;h2 id="九五莧陸夬夬中行无咎">
 九五：莧陸&lt;strong>夬夬&lt;/strong>，中行无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e8%8e%a7%e9%99%b8%e5%a4%ac%e5%a4%ac%e4%b8%ad%e8%a1%8c%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>君為決定之主，居夬之時，必立決，以去小人之道，稟持中正之道，必無災。&lt;/p>
&lt;h2 id="上六无號終有凶">
 上六：无號，終有凶。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e6%97%a0%e8%99%9f%e7%b5%82%e6%9c%89%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>此陰將盡之時，君子道顯，小人道必消之際，惟比附於君子之道方吉，否則即令不號咷畏懼，亦終獲凶。&lt;/p></description></item><item><title>42風雷益</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/42%E9%A2%A8%E9%9B%B7%E7%9B%8A/</link><pubDate>Tue, 14 Jan 2025 09:39:19 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/42%E9%A2%A8%E9%9B%B7%E7%9B%8A/</guid><description>&lt;h1 id="42風雷益">
 42風雷益
 &lt;a class="anchor" href="#42%e9%a2%a8%e9%9b%b7%e7%9b%8a">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦冉伯牛有疾，卜得之，乃知謾師之過也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>官人抱合子，一人推車，一鹿一錢。&lt;/strong>&lt;/p>
&lt;p>鴻鵠遇風之課 河水溢出之象&lt;/p>
&lt;p>損而不己必生益，自古盛，衰，損，益，天理循環，損至極生益，所以繼損也。此卦巽上震下，風雷二物互相增益，雷受風則迅，風受雷激則烈，互相助威，所以成益象。損上益下， 故為益，前卦乃損下益上故損，以其義而推，吾人可知，民厚則國安。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、官人抱合子：倌人，丈夫也，事必先成後破。二、一人推車：因時而動之象，空坐相請。&lt;/p>
&lt;p>三、一鹿一錢：才祿俱備，有回祿之災，財有破損，憂心忡忡。&lt;/p>
&lt;p>四、不為財货，不畏時尚之變，明知先成後破，仍走馬上任，以損上益下之道，天下或事業亦能平治。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>益：利有攸往，利涉大川。&lt;/p>
&lt;p>益，乃有益於天下之道，故可濟險難，利涉大川。&lt;/p>
&lt;h2 id="彖曰益損上益下民説无疆自上下下其道大光">
 彖曰：益，損上益下，民説无疆，自上下下，其道大光。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e7%9b%8a%e6%90%8d%e4%b8%8a%e7%9b%8a%e4%b8%8b%e6%b0%91%e8%aa%ac%e6%97%a0%e7%96%86%e8%87%aa%e4%b8%8a%e4%b8%8b%e4%b8%8b%e5%85%b6%e9%81%93%e5%a4%a7%e5%85%89">#&lt;/a>
&lt;/h2>
&lt;p>益之本義，其道在損於上而益於下，民必悦之且無盡無窮，從上而降，下之下亦受之，益道乃光顯而大也。&lt;/p>
&lt;h2 id="利有攸往中正有慶利涉大川木道乃行">
 利有攸往，中正有慶。利涉大川，木道乃行。
 &lt;a class="anchor" href="#%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e4%b8%ad%e6%ad%a3%e6%9c%89%e6%85%b6%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d%e6%9c%a8%e9%81%93%e4%b9%83%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>以中正之道助益天下，天下受福，故往吉。萬物中唯木助益人類最大，舉凡葯材，車船， 築室等皆不離木，木於平時尚未顯其要，但於艱危困頓時，則助益乃大，益道亦如是。&lt;/p>
&lt;h2 id="益動而巽日進无疆天施地生其益無方凡益之道與時偕行">
 益動而巽，日進无疆。天施地生，其益無方。凡益之道，與時偕行。
 &lt;a class="anchor" href="#%e7%9b%8a%e5%8b%95%e8%80%8c%e5%b7%bd%e6%97%a5%e9%80%b2%e6%97%a0%e7%96%86%e5%a4%a9%e6%96%bd%e5%9c%b0%e7%94%9f%e5%85%b6%e7%9b%8a%e7%84%a1%e6%96%b9%e5%87%a1%e7%9b%8a%e4%b9%8b%e9%81%93%e8%88%87%e6%99%82%e5%81%95%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>益道之動乃在乎順，動不順乎理，必不成益。天道滋始，地道成物，而化育萬物，各正性命，使益之道廣大無邊。聖人體天地之道，知能利乎天下之道，必須順乎時應乎理，因時制宜， 乃益之大道。&lt;/p>
&lt;h2 id="象曰風雷益君子以見善則遷有過則改">
 象曰：風雷，益，君子以見善則遷，有過則改。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%a2%a8%e9%9b%b7%e7%9b%8a%e5%90%9b%e5%ad%90%e4%bb%a5%e8%a6%8b%e5%96%84%e5%89%87%e9%81%b7%e6%9c%89%e9%81%8e%e5%89%87%e6%94%b9">#&lt;/a>
&lt;/h2>
&lt;p>風與雷二物相互助益，君子觀其象，而知益於己之道，乃在見善則遷，則可盡天下之善， 有過能改，則無過矣。&lt;/p>
&lt;h2 id="初九利用爲大作元吉無咎">
 初九：利用爲大作，元吉，無咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%88%a9%e7%94%a8%e7%88%b2%e5%a4%a7%e4%bd%9c%e5%85%83%e5%90%89%e7%84%a1%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>初九為陽剛之賢，如遇六四上位之順時， 亦即居下位而有能力之賢才，能得上位之順從支持，必做大益於天下之事，此為大作，如不能持此原則，不但悔咎來臨，且又累上位，此是上位之過也。如益眾人，則必無過。今人多志得意滿，狐假虎威，欺上瞞下，唯圖利自己而已。&lt;/p>
&lt;h2 id="六二或益之十朋之龜弗克違-永貞吉王用享于帝吉">
 六二：或益之，十朋之龜，弗克違， 永貞吉，王用享于帝，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e6%88%96%e7%9b%8a%e4%b9%8b%e5%8d%81%e6%9c%8b%e4%b9%8b%e9%be%9c%e5%bc%97%e5%85%8b%e9%81%95-%e6%b0%b8%e8%b2%9e%e5%90%89%e7%8e%8b%e7%94%a8%e4%ba%ab%e4%ba%8e%e5%b8%9d%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>人能處於中正之道，又知中虛來求益，且能順從無私，天下何不能受？必不相違，日久更吉。如此則必能通上位，獲吉，人皆相從矣。&lt;/p>
&lt;h2 id="六三益之用凶事无咎有孚中行告公用圭">
 六三：益之用凶事，无咎。有孚中行，告公用圭。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e7%9b%8a%e4%b9%8b%e7%94%a8%e5%87%b6%e4%ba%8b%e6%97%a0%e5%92%8e%e6%9c%89%e5%ad%9a%e4%b8%ad%e8%a1%8c%e5%91%8a%e5%85%ac%e7%94%a8%e5%9c%ad">#&lt;/a>
&lt;/h2>
&lt;p>六三乃相位，居下民之上統管民事，如能居民上而剛決，其果為益民而決，即令是凶事， 亦可無咎。但仍須以誠意通於上，使上能信任， 如所為不合中道，即令上信亦不可為也。&lt;/p>
&lt;h2 id="六四中行告公從利用爲依遷國">
 六四：中行，告公從，利用爲依遷國。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e4%b8%ad%e8%a1%8c%e5%91%8a%e5%85%ac%e5%be%9e%e5%88%a9%e7%94%a8%e7%88%b2%e4%be%9d%e9%81%b7%e5%9c%8b">#&lt;/a>
&lt;/h2>
&lt;p>居君側，以柔順從君，對下又順應於初陽之剛賢，如此則能令民順而從行。&lt;/p>
&lt;h2 id="九五有孚惠心勿問元吉有孚惠我德">
 九五：有孚惠心，勿問元吉，有孚惠我德。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e6%9c%89%e5%ad%9a%e6%83%a0%e5%bf%83%e5%8b%bf%e5%95%8f%e5%85%83%e5%90%89%e6%9c%89%e5%ad%9a%e6%83%a0%e6%88%91%e5%be%b7">#&lt;/a>
&lt;/h2>
&lt;p>陽剛君王，居尊心中又誠正，必能益於天下，不問可知，天下之人必至誠愛戴，因君之能施恩德也。&lt;/p>
&lt;h2 id="上九莫益之或擊之立心勿恒-凶">
 上九：莫益之，或擊之，立心勿恒， 凶。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e8%8e%ab%e7%9b%8a%e4%b9%8b%e6%88%96%e6%93%8a%e4%b9%8b%e7%ab%8b%e5%bf%83%e5%8b%bf%e6%81%92-%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>以剛處益之極，此專欲利己，不與眾同欲， 必招怨，或受攻撃，聖人戒之在人欲，堅心不可有私欲，否則招凶。有則須速改。&lt;/p>
&lt;h2 id="象曰元吉无咎下不厚事也">
 象曰：元吉无咎，下不厚事也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%83%e5%90%89%e6%97%a0%e5%92%8e%e4%b8%8b%e4%b8%8d%e5%8e%9a%e4%ba%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>下位之人，本就不可擔重大之事，今得上位信賴而出任大事，必须能濟世助人，方可使上位有知人善任之譽，如只會壞事，民怨四起， 則上下皆有過失也。&lt;/p></description></item><item><title>41山澤損</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/41%E5%B1%B1%E6%BE%A4%E6%90%8D/</link><pubDate>Tue, 14 Jan 2025 09:39:18 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/41%E5%B1%B1%E6%BE%A4%E6%90%8D/</guid><description>&lt;h1 id="41山澤損">
 41山澤損
 &lt;a class="anchor" href="#41%e5%b1%b1%e6%be%a4%e6%90%8d">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦薛仁貴將收燕，卜得之，大破燕軍。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>二人對酌，酒瓶倒案上，毬在地上， 文書二策，有再告二字。&lt;/strong>&lt;/p>
&lt;p>鑿石見玉之課 握土爲山之象&lt;/p>
&lt;p>解，散也，斥去也，其後必有所失，故損為序。此卦「艮」上「兑」下，山體高在上而澤體深在下乃有損下益上之義。如損上而益下，為益卦，取下而求益上，則為損，故居人上而施恩澤於下則益，如取下而求自足，乃損。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、二人對酌：二人夾木，來也。二、酒瓶倒案之：目前無指望也。三、毬在地上：所求不成狀。&lt;/p>
&lt;p>四、文書二策有再告二字：再次求，方成。&lt;/p>
&lt;p>居此之時唯求有益於人，乃得損之真道也，損其多餘，同志乃至。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>損：有孚，元吉，无咎，可貞，利有攸往。&lt;/p>
&lt;p>損之道須持之正理，來自誠正，則損因順理而至大善，此可吉也。堅固常行必利有所往。常人之損，有過或不及或不常皆不合乎正理。&lt;/p>
&lt;p>曷之用？ 二簋可用享。&lt;/p>
&lt;p>人間祭祀之禮，文繁節褥，常人多備祭品，聖人以儉為禮之本，示以至誠之心敬天，如求祭物過多，乃求飾其誠，實示人偽矣。故知凡人之慾望若有過者，其始初皆起於奉養，常久以後則成宮樓峻牆，酒池肉林，聖人有見於此，故先制其本以儉，故損之精義在損滅人欲以近乎天理而已。&lt;/p>
&lt;h2 id="彖曰損損下益上其道上行">
 彖曰：損，損下益上，其道上行。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%90%8d%e6%90%8d%e4%b8%8b%e7%9b%8a%e4%b8%8a%e5%85%b6%e9%81%93%e4%b8%8a%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>損之成，乃損下而益於上，故道乃上行。&lt;/p>
&lt;h2 id="損而有孚元吉无咎可貞利有攸往">
 損而有孚，元吉，无咎，可貞，利有攸往。
 &lt;a class="anchor" href="#%e6%90%8d%e8%80%8c%e6%9c%89%e5%ad%9a%e5%85%83%e5%90%89%e6%97%a0%e5%92%8e%e5%8f%af%e8%b2%9e%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80">#&lt;/a>
&lt;/h2>
&lt;p>損之道在至誠，堅心如此，乃可盡損之道也。&lt;/p>
&lt;h2 id="曷之用二簋可用享二簋應有時損剛益柔有時">
 曷之用？二簋可用享，二簋應有時，損剛益柔有時。
 &lt;a class="anchor" href="#%e6%9b%b7%e4%b9%8b%e7%94%a8%e4%ba%8c%e7%b0%8b%e5%8f%af%e7%94%a8%e4%ba%ab%e4%ba%8c%e7%b0%8b%e6%87%89%e6%9c%89%e6%99%82%e6%90%8d%e5%89%9b%e7%9b%8a%e6%9f%94%e6%9c%89%e6%99%82">#&lt;/a>
&lt;/h2>
&lt;p>吾人應損去外在浮飾，使至誠見，萬事之始，必有長幼尊卑，然於事之末，往往已流於形式，損之時乃知何時須損剛益柔，此損之道必以時乃吉。&lt;/p>
&lt;h2 id="損益盈虛與時偕行">
 損益盈虛，與時偕行。
 &lt;a class="anchor" href="#%e6%90%8d%e7%9b%8a%e7%9b%88%e8%99%9b%e8%88%87%e6%99%82%e5%81%95%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>須損須益，求盈求虛，只隨時之一念而已，易之於時義於此可見。&lt;/p>
&lt;h2 id="象曰山下有澤損君子以懲忿窒欲">
 象曰：山下有澤，損，君子以懲忿窒欲。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8b%e6%9c%89%e6%be%a4%e6%90%8d%e5%90%9b%e5%ad%90%e4%bb%a5%e6%87%b2%e5%bf%bf%e7%aa%92%e6%ac%b2">#&lt;/a>
&lt;/h2>
&lt;p>君子觀損之象，以損己為上，修己之道在忿與欲上，能知損己之忿與欲，乃得真損之時義。&lt;/p>
&lt;h2 id="初九已事遄往无咎酌損之">
 初九：已事遄往，无咎，酌損之。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%b7%b2%e4%ba%8b%e9%81%84%e5%be%80%e6%97%a0%e5%92%8e%e9%85%8c%e6%90%8d%e4%b9%8b">#&lt;/a>
&lt;/h2>
&lt;p>損之道，在損剛益柔也。今居下之人為益上，當以功與之，不求己居，事畢則速去，不求居功，乃能無過。若求享其功之美，此離損下益上之道，不可也。&lt;/p>
&lt;h2 id="九二利貞征凶弗損益之">
 九二：利貞，征凶，弗損益之。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%88%a9%e8%b2%9e%e5%be%81%e5%87%b6%e5%bc%97%e6%90%8d%e7%9b%8a%e4%b9%8b">#&lt;/a>
&lt;/h2>
&lt;p>剛中之人與君位柔性相應，居損時，用柔悦態度求應於上，則有失剛中之德，其動必凶， 乃因不知堅心於陽剛也。此適足以損也。&lt;/p>
&lt;h2 id="六三三人行則損一人一人行-則得其友">
 六三：三人行，則損一人。一人行， 則得其友。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e4%b8%89%e4%ba%ba%e8%a1%8c%e5%89%87%e6%90%8d%e4%b8%80%e4%ba%ba%e4%b8%80%e4%ba%ba%e8%a1%8c-%e5%89%87%e5%be%97%e5%85%b6%e5%8f%8b">#&lt;/a>
&lt;/h2>
&lt;p>天下沒有獨一之人，必有二者，如男女之往，由其精一，故能生也。一陰一陽，無法加入故三人因志不專一，必生損一人，一人獨行， 由其志為專，故必有一友能同其志，故天地之間損義之明且大哉，莫過於此。&lt;/p>
&lt;h2 id="六四換其疾使遄有喜无咎">
 六四：換其疾，使遄有喜，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e6%8f%9b%e5%85%b6%e7%96%be%e4%bd%bf%e9%81%84%e6%9c%89%e5%96%9c%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>陰柔之人居損時，須自損以從陽剛中正之道，即損不善而從善，必有喜而無災。人之損過失，唯患不速，如速則此過必不至深，為可喜也。&lt;/p>
&lt;h2 id="六五或益之十朋之龜弗克違-元吉">
 六五：或益之，十朋之龜，弗克違， 元吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e6%88%96%e7%9b%8a%e4%b9%8b%e5%8d%81%e6%9c%8b%e4%b9%8b%e9%be%9c%e5%bc%97%e5%85%8b%e9%81%95-%e5%85%83%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>君王能柔順居尊位，處損之時，知虛中自損，順從在下陽剛之賢人，人君能如此，則天下人必從其德，咸以損己為美，故有眾民之公論助之，因合正理，即龜筮亦不相違，可謂大善之吉也。古云：「謀能從眾，則合天心。」&lt;/p>
&lt;h2 id="上九弗損益之无咎貞吉利有攸往得臣无家">
 上九：弗損益之，无咎，貞吉，利有攸往，得臣无家。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e5%bc%97%e6%90%8d%e7%9b%8a%e4%b9%8b%e6%97%a0%e5%92%8e%e8%b2%9e%e5%90%89%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e5%be%97%e8%87%a3%e6%97%a0%e5%ae%b6">#&lt;/a>
&lt;/h2>
&lt;p>損道之終極，能居上而不損其下又益增在下之人，則天下莫不服從，人心歸順，無遠近內外之區限。&lt;/p></description></item><item><title>40雷水解</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/40%E9%9B%B7%E6%B0%B4%E8%A7%A3/</link><pubDate>Tue, 14 Jan 2025 09:39:17 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/40%E9%9B%B7%E6%B0%B4%E8%A7%A3/</guid><description>&lt;h1 id="40雷水解">
 40雷水解
 &lt;a class="anchor" href="#40%e9%9b%b7%e6%b0%b4%e8%a7%a3">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦項羽受困垓下，卜得之，後果士卒潰散也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>旗上提字，一刀插地，一兔走，貴人雲中，一雞在邊鳴，道士手指門，道人獻書，小堠在側。&lt;/strong>&lt;/p>
&lt;p>雷行風止之課 患難解散之象&lt;/p>
&lt;p>解者散也，萬物無終難之理，難至極而散，故解為蹇之序。此卦震上坎下，外動內險，即動於險外，有出險之象，故為患難解散之時也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、旗上提字：指名提凶，不利。有遠走他鄉之象。二、一刀插地：求快也，劉姓之人也。&lt;/p>
&lt;p>三、一兔走：卯年，劉姓。&lt;/p>
&lt;p>四、一雞在邊鳴：有競爭象，酉年適逢貴人救。五、貴人雲中：不及救也。&lt;/p>
&lt;p>六、道士手指門：入空門也，逃亡方向，出家也。七、道人獻書：裝飾外表，示誠象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>解：利西南，無所往，其來復吉，有攸往，夙吉。&lt;/p>
&lt;p>西南即坤方，坤之体本含弘光大，於天下之難方解時，人始離困苦，當以宽大簡易之法待之，切不可使煩於苛政，人心必安，再求重修冶道，立綱紀，建法治，且宜早動，如俟難復則不及矣。&lt;/p>
&lt;h2 id="象曰解險以動動而免乎險解">
 象曰：解，險以動，動而免乎險，解。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e8%a7%a3%e9%9a%aa%e4%bb%a5%e5%8b%95%e5%8b%95%e8%80%8c%e5%85%8d%e4%b9%8e%e9%9a%aa%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;p>險則示難也，不險必不難，遇解時，如不動必不能出險，故此動是免於招險也。&lt;/p>
&lt;h2 id="解利西南往得眾也">
 解利西南，往得眾也。
 &lt;a class="anchor" href="#%e8%a7%a3%e5%88%a9%e8%a5%bf%e5%8d%97%e5%be%80%e5%be%97%e7%9c%be%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此即解難之道，须廣大且平易之法以待民，則民心必歸。&lt;/p>
&lt;h2 id="其來復吉乃得中也">
 其來復吉，乃得中也。
 &lt;a class="anchor" href="#%e5%85%b6%e4%be%86%e5%be%a9%e5%90%89%e4%b9%83%e5%be%97%e4%b8%ad%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>治世之道，必待解之時來臨方可往用，此為得宜。&lt;/p>
&lt;h2 id="有攸往夙吉往有功也">
 有攸往夙吉，往有功也。
 &lt;a class="anchor" href="#%e6%9c%89%e6%94%b8%e5%be%80%e5%a4%99%e5%90%89%e5%be%80%e6%9c%89%e5%8a%9f%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>欲動而往，則必利速，愈早前往，功愈大，遲則害已生矣。&lt;/p>
&lt;h2 id="天地解而雷雨作雷雨作而百果草木皆甲坼解之時大矣哉">
 天地解而雷雨作，雷雨作而百果草木皆甲坼，解之時大矣哉！
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e8%a7%a3%e8%80%8c%e9%9b%b7%e9%9b%a8%e4%bd%9c%e9%9b%b7%e9%9b%a8%e4%bd%9c%e8%80%8c%e7%99%be%e6%9e%9c%e8%8d%89%e6%9c%a8%e7%9a%86%e7%94%b2%e5%9d%bc%e8%a7%a3%e4%b9%8b%e6%99%82%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>天地之氣開而和暢生雷雨，雷雨生而萬物甲坼，故解能成天地之功，故聖人知解之時，大&lt;/p>
&lt;p>也。讀易須体時之義，方成得易之道。易之道與天地合而同德。&lt;/p>
&lt;h2 id="象曰雷雨作解君子以赦過宥罪">
 象曰：雷雨作，解;君子以赦過宥罪。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b7%e9%9b%a8%e4%bd%9c%e8%a7%a3%e5%90%9b%e5%ad%90%e4%bb%a5%e8%b5%a6%e9%81%8e%e5%ae%a5%e7%bd%aa">#&lt;/a>
&lt;/h2>
&lt;p>天地解散而生雷雨，君子觀雷雨之象，体會發育之功，而知施恩仁，行宽法也。&lt;/p>
&lt;h2 id="初六无咎">
 初六：无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>初解之時，柔居陽剛，乃柔而能剛象,知剛柔之合宜，使患難解散。&lt;/p>
&lt;h2 id="九二田獲三狐得黃矢貞吉">
 九二：田獲三狐，得黃矢，貞吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e7%94%b0%e7%8d%b2%e4%b8%89%e7%8b%90%e5%be%97%e9%bb%83%e7%9f%a2%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>二與五陰位相應，此言陰柔之君在上，陽剛之臣在之時也，古來如君柔則小人易蔽，威必受損，又不果斷且易受小人之惑，小人一近則心動矣，處此時又逢災難初解，聖人必以能去小人來正君之心，行其剛中之道，方可吉，&lt;/p>
&lt;h2 id="六三負且乘致寇至貞吝">
 六三：負且乘，致寇至，貞吝。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e8%b2%a0%e4%b8%94%e4%b9%98%e8%87%b4%e5%af%87%e8%87%b3%e8%b2%9e%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>小人本非在上之物，今居下之上位，猶負重而乘車，乃招寇至，終必悔矣。&lt;/p>
&lt;h2 id="九四解而姆朋至斯孚">
 九四：解而姆，朋至斯孚。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e8%a7%a3%e8%80%8c%e5%a7%86%e6%9c%8b%e8%87%b3%e6%96%af%e5%ad%9a">#&lt;/a>
&lt;/h2>
&lt;p>陽剛之人居陰柔君之側時，如居上位親近小人，必使賢士遠矣，須斥去小人則君子必進， 能得人之信孚。&lt;/p>
&lt;h2 id="六五君子維有解吉有孚于小人">
 六五：君子維有解，吉，有孚于小人。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%90%9b%e5%ad%90%e7%b6%ad%e6%9c%89%e8%a7%a3%e5%90%89%e6%9c%89%e5%ad%9a%e4%ba%8e%e5%b0%8f%e4%ba%ba">#&lt;/a>
&lt;/h2>
&lt;p>君主之人必去小人，則君子必進，正道乃行，如不去小人，則天下不治，此可反看，即天下不治，乃小人不去也。&lt;/p>
&lt;h2 id="上六公用射隼于高墉之上獲之无不利">
 上六：公用射隼于高墉之上，獲之无不利。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%85%ac%e7%94%a8%e5%b0%84%e9%9a%bc%e4%ba%8e%e9%ab%98%e5%a2%89%e4%b9%8b%e4%b8%8a%e7%8d%b2%e4%b9%8b%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>解之至極如仍未解，必有堅強之害也，故於此時可強用弓矢如射鷹隼於高處，時至而發，如無良器又動不以時，射未成，必反生害， 故此言器之重要與動之時機，獲之必吉，不成&lt;/p></description></item><item><title>39水山蹇</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/39%E6%B0%B4%E5%B1%B1%E8%B9%87/</link><pubDate>Tue, 14 Jan 2025 09:39:16 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/39%E6%B0%B4%E5%B1%B1%E8%B9%87/</guid><description>&lt;h1 id="39水山蹇">
 39水山蹇
 &lt;a class="anchor" href="#39%e6%b0%b4%e5%b1%b1%e8%b9%87">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦鍾離末將收楚，卜得之，乃知身不王矣。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>日當天，旗一面上有使字，鼓五面中有一鹿、堠上千里字。&lt;/strong>&lt;/p>
&lt;p>飛雁啣草之課 背明向暗之象&lt;/p>
&lt;p>睽，乖違也，乖離必生難，蹇即難也，因時之乖違，必有蹇難，故蹇次睽為序卦。此卦坎上艮下，坎，險也，艮，止也，前有險而止不進，為蹇之意也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、日當天：君明之象，吳姓。&lt;/p>
&lt;p>二、旗一面只有使字：出使，和平之象，使—二人一口，示單人也。&lt;/p>
&lt;p>三、鼓五面者：時為五更天，佔五面地，王為君王，一方之主，有多國或多島之象。四、中有一鹿：攜財福至，旅客帶財來狀，商人至也。&lt;/p>
&lt;p>五、堆子千里字：行西南，千里封候，候姓也。六、千里為重：有第二次方吉。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>蹇：利西南，不利東北，利見大人，貞吉。&lt;/p>
&lt;p>西南為坤，坤体順，東北為艮，艮体險止，此言於蹇難之時，利處平易之地，不利止於危險，今人遇險而止，不知因險而止，乃更險也。&lt;/p>
&lt;h2 id="彖曰蹇難也險在前也見險而能止知矣哉">
 彖曰：蹇，難也，險在前也。見險而能止，知矣哉！
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%b9%87%e9%9b%a3%e4%b9%9f%e9%9a%aa%e5%9c%a8%e5%89%8d%e4%b9%9f%e8%a6%8b%e9%9a%aa%e8%80%8c%e8%83%bd%e6%ad%a2%e7%9f%a5%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>蹇有險阻之難也，因險在前，止而不進狀。處蹇之道，乃能見險而止，此知蹇難也，此止非真止也，乃不犯險而進之意。&lt;/p>
&lt;h2 id="蹇利西南往得中也不利東北其道窮也">
 蹇：利西南，往得中也：不利東北，其道窮也。
 &lt;a class="anchor" href="#%e8%b9%87%e5%88%a9%e8%a5%bf%e5%8d%97%e5%be%80%e5%be%97%e4%b8%ad%e4%b9%9f%e4%b8%8d%e5%88%a9%e6%9d%b1%e5%8c%97%e5%85%b6%e9%81%93%e7%aa%ae%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>蹇之時，唯利處平易之地，乃得中正之位，東北為山，險阻在前，犯險而進，道必窮。&lt;/p>
&lt;h2 id="利見大人往有功也當位貞吉以正邦也蹇之時用大矣哉">
 利見大人，往有功也，當位貞吉，以正邦也。蹇之時用大矣哉！
 &lt;a class="anchor" href="#%e5%88%a9%e8%a6%8b%e5%a4%a7%e4%ba%ba%e5%be%80%e6%9c%89%e5%8a%9f%e4%b9%9f%e7%95%b6%e4%bd%8d%e8%b2%9e%e5%90%89%e4%bb%a5%e6%ad%a3%e9%82%a6%e4%b9%9f%e8%b9%87%e4%b9%8b%e6%99%82%e7%94%a8%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>蹇難之時，唯聖賢能濟天下之蹇，故用賢人能往求而成功，在位之人堅心執意如此，必能正家邦，此即知蹇之時任用賢人，適時而動，量險而行，使至正之大道能濟天下之蹇。今之為政者，不知蹇之時難，乃因不知古聖先哲之智慧也。&lt;/p>
&lt;h2 id="象曰山上有水蹇君子以反身修德">
 象曰：山上有水，蹇；君子以反身修德。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8a%e6%9c%89%e6%b0%b4%e8%b9%87%e5%90%9b%e5%ad%90%e4%bb%a5%e5%8f%8d%e8%ba%ab%e4%bf%ae%e5%be%b7">#&lt;/a>
&lt;/h2>
&lt;p>山已為險阻，上又有水，故有上下險阻狀，為蹇，君子觀蹇象，知此時乃反求於己修身進德，故必省自身，以待時之至也。&lt;/p>
&lt;h2 id="初六往蹇來譽">
 初六：往蹇，來譽。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e5%be%80%e8%b9%87%e4%be%86%e8%ad%bd">#&lt;/a>
&lt;/h2>
&lt;p>此蹇之初，以陰柔無助而求進，蹇之甚也， 是知止而不進，乃因知進退而成譽也。&lt;/p>
&lt;h2 id="六二王臣蹇蹇匪躬之故">
 六二：王臣蹇蹇，匪躬之故。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e7%8e%8b%e8%87%a3%e8%b9%87%e8%b9%87%e5%8c%aa%e8%ba%ac%e4%b9%8b%e6%95%85">#&lt;/a>
&lt;/h2>
&lt;p>二爻為陰位，陰居之為正位，乃意為中正之臣，又與上五君同德而受信任，此即王臣， 今處蹇難時，即令中正之人，以陰柔之質，不能勝任，故有蹇中之蹇狀，因為中正之人，其所為必忠於君，非為私己，故即令不勝，亦因&lt;/p>
&lt;h2 id="九三往蹇來反">
 九三：往蹇，來反。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%be%80%e8%b9%87%e4%be%86%e5%8f%8d">#&lt;/a>
&lt;/h2>
&lt;p>以剛居下卦之上，處蹇時，下位之人皆柔， 依附於上狀。欲再上進，又逄陰柔，無法相濟， 故有來反，即還歸也，反回其所。&lt;/p>
&lt;h2 id="六四往蹇來連">
 六四：往蹇，來連。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e5%be%80%e8%b9%87%e4%be%86%e9%80%a3">#&lt;/a>
&lt;/h2>
&lt;p>蹇之時以陰柔而往入坎險之深處為往蹇， 如能與同志之人，使合眾而附之，此即来連， 乃真得處蹇之道也。&lt;/p>
&lt;h2 id="九五大蹇朋來">
 九五：大蹇，朋來。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%a4%a7%e8%b9%87%e6%9c%8b%e4%be%86">#&lt;/a>
&lt;/h2>
&lt;p>君處蹇難之時，必天下處難也，故名大蹇， 此時如能得朋來助，且須為陽剛中正之才來相輔方有效。&lt;/p>
&lt;h2 id="上六往蹇來碩吉利見大人">
 上六：往蹇，來碩，吉，利見大人。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%be%80%e8%b9%87%e4%be%86%e7%a2%a9%e5%90%89%e5%88%a9%e8%a6%8b%e5%a4%a7%e4%ba%ba">#&lt;/a>
&lt;/h2>
&lt;p>六以陰柔居蹇之極處，蹇之極有將離蹇之態，如以陰柔必不得出，須有陽剛之助，以寛裕之大量，見有德之人，方可為吉。&lt;/p>
&lt;h2 id="象曰往蹇來譽宜待也">
 象曰：往蹇來譽，宜待也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%be%80%e8%b9%87%e4%be%86%e8%ad%bd%e5%ae%9c%e5%be%85%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>於蹇之初，進必愈蹇，宜見幾而止，待時而進，不可燥進。&lt;/p></description></item><item><title>38火澤睽</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/38%E7%81%AB%E6%BE%A4%E7%9D%BD/</link><pubDate>Tue, 14 Jan 2025 09:39:15 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/38%E7%81%AB%E6%BE%A4%E7%9D%BD/</guid><description>&lt;h1 id="38火澤睽">
 38火澤睽
 &lt;a class="anchor" href="#38%e7%81%ab%e6%be%a4%e7%9d%bd">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦武則天聘尚賈至精魅成，卜此除之。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>人執斧在手，文書半破，牛鼠，桃開鬥掩，雁飛鳴。&lt;/strong>&lt;/p>
&lt;p>猛虎陷井之課 二女同舟之象&lt;/p>
&lt;p>家之道到窮途，則生乖違離散，故睽卦為之序。此卦上火下澤，二體相違，此睽之義，二女三女同居一室，但所歸各異，乃因志之不同也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、人執斧在手：求快也，行刑之人，執法之人，有權柄也。二、文書半破：無望象，毁約也。&lt;/p>
&lt;p>三、牛鼠：秋冬吉，春夏凶。四、桃開：逃開也。&lt;/p>
&lt;p>五、門掩：牢獄之災，閉也，隔也。&lt;/p>
&lt;p>六、雁飛鳴：悲也，孤單也，報凶訊也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>睽：小事吉。&lt;/p>
&lt;p>睽違之道於小之事，可言吉。如與不良之人乖離，與不正之事違背也。&lt;/p>
&lt;h2 id="象曰睽火動而上澤動而下二女同居其志不同行">
 象曰：睽，火動而上，澤動而下，二女同居，其志不同行。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e7%9d%bd%e7%81%ab%e5%8b%95%e8%80%8c%e4%b8%8a%e6%be%a4%e5%8b%95%e8%80%8c%e4%b8%8b%e4%ba%8c%e5%a5%b3%e5%90%8c%e5%b1%85%e5%85%b6%e5%bf%97%e4%b8%8d%e5%90%8c%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>睽，以卦才言火在上而動，澤在下位，此二物性反，其義猶二女三女其本志同而共處，及長所歸各異，其志不同也。&lt;/p>
&lt;h2 id="説而麗乎明柔進而上行得中而應乎剛是以小事吉">
 説而麗乎明，柔進而上行，得中而應乎剛，是以小事吉。
 &lt;a class="anchor" href="#%e8%aa%ac%e8%80%8c%e9%ba%97%e4%b9%8e%e6%98%8e%e6%9f%94%e9%80%b2%e8%80%8c%e4%b8%8a%e8%a1%8c%e5%be%97%e4%b8%ad%e8%80%8c%e6%87%89%e4%b9%8e%e5%89%9b%e6%98%af%e4%bb%a5%e5%b0%8f%e4%ba%8b%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>內悦順而又應乎外明，麗明居上，以柔求進，又能得中正之道相應，處睽之時雖無法去天下之睽，但於小處則吉矣。&lt;/p>
&lt;h2 id="天地睽而其事同也男女睽而其志通也萬物睽而其事類也睽之時用大矣哉">
 天地睽而其事同也，男女睽而其志通也，萬物睽而其事類也，睽之時用大矣哉！
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e7%9d%bd%e8%80%8c%e5%85%b6%e4%ba%8b%e5%90%8c%e4%b9%9f%e7%94%b7%e5%a5%b3%e7%9d%bd%e8%80%8c%e5%85%b6%e5%bf%97%e9%80%9a%e4%b9%9f%e8%90%ac%e7%89%a9%e7%9d%bd%e8%80%8c%e5%85%b6%e4%ba%8b%e9%a1%9e%e4%b9%9f%e7%9d%bd%e4%b9%8b%e6%99%82%e7%94%a8%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>天上地下雖睽然天陽下降地陰上升而成萬物，其事本同也。男女之質不同，但互相求之志卻同也。天下萬物不同是暌，然皆稟天地之氣而成，則相同也。是故物雖異而其本同，聖人用睽之道，能令天下不同之群眾，合而為一，故其事大矣哉。&lt;/p>
&lt;h2 id="象曰上火下澤睽君子以同而異">
 象曰：上火下澤，睽，君子以同而異。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b8%8a%e7%81%ab%e4%b8%8b%e6%be%a4%e7%9d%bd%e5%90%9b%e5%ad%90%e4%bb%a5%e5%90%8c%e8%80%8c%e7%95%b0">#&lt;/a>
&lt;/h2>
&lt;p>火在上，澤在下，二物之性相違，為睽象，君子觀睽而知於世俗所同者，有時須獨異於世人，中庸曰和而不流，即義此也。&lt;/p>
&lt;h2 id="初九悔亡喪馬勿逐自復見惡人无咎">
 初九：悔亡，喪馬勿逐，自復；見惡人，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%82%94%e4%ba%a1%e5%96%aa%e9%a6%ac%e5%8b%bf%e9%80%90%e8%87%aa%e5%be%a9%e8%a6%8b%e6%83%a1%e4%ba%ba%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>卦之初，即睽之始時，於睽時又剛動於下， 其悔可知，於此時因不能行而喪其馬如勿逐則馬自復回。因睽時小人必眾，若棄之，則必天下而仇己乎？就會喪失坤德之含弘功能，乃致凶地。不但無法使之化善，更遑論能合之，故有必見惡人之議，所以自古以來能化姦邪為善良，去仇敵而為臣民者，皆因不拒絶見之。&lt;/p>
&lt;h2 id="九二遇主于巷無咎">
 九二：遇主于巷，無咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e9%81%87%e4%b8%bb%e4%ba%8e%e5%b7%b7%e7%84%a1%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>睽違之時乃陰陽不合，且剛戾相對，即令為陽剛之中臣，當以委曲而婉轉之善道將就於主，期使之合，絶非求附君主而屈道相向也。&lt;/p>
&lt;h2 id="六三見輿曳其牛掣其人天且劓无初有終">
 六三：見輿曳，其牛掣，其人天且劓，无初有終。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e8%a6%8b%e8%bc%bf%e6%9b%b3%e5%85%b6%e7%89%9b%e6%8e%a3%e5%85%b6%e4%ba%ba%e5%a4%a9%e4%b8%94%e5%8a%93%e6%97%a0%e5%88%9d%e6%9c%89%e7%b5%82">#&lt;/a>
&lt;/h2>
&lt;p>三爻位為下卦之上，本離下卦而求進於上，今逢四之剛為阻，而下二爻之陽剛於後， 處此之時又逢乖違不和，猶牛車之行具，牛受掣阻於前，後有車輿在後，如以此狀況，又求力進，則必重傷於上，宜剛守中正之道與其對&lt;/p>
&lt;p>九四：睽孤，遇元夫，交孚，厲无咎。&lt;/p>
&lt;p>四爻近君位，君不與應，乃睽乖之時，故為孤，唯求與同德之人相合，且至誠相與交往， 能如此，雖處危，但仍可無咎也。&lt;/p>
&lt;h2 id="六五悔亡厥宗噬膚往何咎">
 六五：悔亡，厥宗噬膚，往何咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e6%82%94%e4%ba%a1%e5%8e%a5%e5%ae%97%e5%99%ac%e8%86%9a%e5%be%80%e4%bd%95%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>陰柔又居尊位，於睽時，其危可知，然有九二陽剛之賢相輔，可以悔亡，且陽剛之賢又能成黨，且深入之，則往而有慶也，如劉襌之庸，有孔明之輔，乃成中興之態勢。&lt;/p>
&lt;h2 id="上九暌孤見豕負塗載鬼一車-先張之弧後説之弧匪寇婚媾往遇雨則吉">
 上九：暌孤，見豕負塗，載鬼一車， 先張之弧，後説之弧，匪寇婚媾，往遇雨則吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e6%9a%8c%e5%ad%a4%e8%a6%8b%e8%b1%95%e8%b2%a0%e5%a1%97%e8%bc%89%e9%ac%bc%e4%b8%80%e8%bb%8a-%e5%85%88%e5%bc%b5%e4%b9%8b%e5%bc%a7%e5%be%8c%e8%aa%ac%e4%b9%8b%e5%bc%a7%e5%8c%aa%e5%af%87%e5%a9%9a%e5%aa%be%e5%be%80%e9%81%87%e9%9b%a8%e5%89%87%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>睽極之時，必反復正道，猶人見污濁之豕， 且全身爛泥，又車載一群惡鬼，心厭惡之乃欲張弓射之，後思之如動必反，而弗射，化仇寇為婚媾，陰陽交合而成雨，故始因疑而睽，睽至極因不疑而合，猶天地陰陽上為雨，往而遇之，則吉也。&lt;/p>
&lt;h2 id="象曰見惡人以辟咎也">
 象曰：見惡人，以辟咎也？
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e8%a6%8b%e6%83%a1%e4%ba%ba%e4%bb%a5%e8%be%9f%e5%92%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>於睽時人情乖違，為求和合，若因其惡人而避之，則生眾仇於君子，故見惡人乃為避免怨咎之悔也。&lt;/p>
&lt;h2 id="象曰遇主于巷未失道也">
 象曰：遇主于巷，未失道也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%81%87%e4%b8%bb%e4%ba%8e%e5%b7%b7%e6%9c%aa%e5%a4%b1%e9%81%93%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此意即當以至誠以動君心，使明義理而能求相合，不可屈道迎逢，乃真未失道。今之小人明知不正，然於乖違，之時，只知迎合奉承， 為求己利，枉顧正道，故因時局而戀志之人乃真小人也。&lt;/p></description></item><item><title>37風火家人</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/37%E9%A2%A8%E7%81%AB%E5%AE%B6%E4%BA%BA/</link><pubDate>Tue, 14 Jan 2025 09:39:14 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/37%E9%A2%A8%E7%81%AB%E5%AE%B6%E4%BA%BA/</guid><description>&lt;h1 id="37風火家人">
 37風火家人
 &lt;a class="anchor" href="#37%e9%a2%a8%e7%81%ab%e5%ae%b6%e4%ba%ba">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦董永喪父賣身，卜之。後感得仙女為妻。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>一人張弓，一帶在水邊，雲中文書， 貴人拜綬，婦人攜手。三點。&lt;/strong>&lt;/p>
&lt;p>入海求珠之課 開花結子之象&lt;/p>
&lt;p>人之傷於外而必後返於內，故家人次明夷為序卦，此卦專論家內之道，父子、夫婦、長幼尊卑之倫理與恩義的家人之道。外風內火，乃風自火出，火愈熾則風生，有自內而出之象，故處家之道，有內明外順象。聖人之謂人能立於家，則必能施於國，以至天下大治。故治天下猶治家也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、一人張弓：暗算，破壞也。&lt;/p>
&lt;p>二、一帶在水邊：事滯也，棄官也。三、雲中文書：突而來之喜訊也。四、貴人拜受：綬命也。&lt;/p>
&lt;p>五、婦人攜手：家和之象，此卦卜婚姻大吉。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>家人：利女貞。&lt;/p>
&lt;p>家人之道，利在女正且堅，女能正，則家道正矣。&lt;/p>
&lt;h2 id="彖曰家人女正位乎内男正位乎外男女正天地之大義也">
 彖曰：家人，女正位乎内，男正位乎外，男女正，天地之大義也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%ae%b6%e4%ba%ba%e5%a5%b3%e6%ad%a3%e4%bd%8d%e4%b9%8e%e5%86%85%e7%94%b7%e6%ad%a3%e4%bd%8d%e4%b9%8e%e5%a4%96%e7%94%b7%e5%a5%b3%e6%ad%a3%e5%a4%a9%e5%9c%b0%e4%b9%8b%e5%a4%a7%e7%be%a9%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>家人之道，正位且堅心，男主外，女主內，其有尊卑有道，乃合乎天地陰陽之道。&lt;/p>
&lt;h2 id="家人有嚴君焉父母之謂也">
 家人有嚴君焉，父母之謂也。
 &lt;a class="anchor" href="#%e5%ae%b6%e4%ba%ba%e6%9c%89%e5%9a%b4%e5%90%9b%e7%84%89%e7%88%b6%e6%af%8d%e4%b9%8b%e8%ac%82%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>父母為一家之君長，無尊嚴則無人孝，無大小，則倫理廢，故君嚴則家正。&lt;/p>
&lt;h2 id="父父子子兄兄弟弟夫夫婦婦而家道正正家而天下定矣">
 父父子子，兄兄弟弟，夫夫婦婦，而家道正，正家而天下定矣。
 &lt;a class="anchor" href="#%e7%88%b6%e7%88%b6%e5%ad%90%e5%ad%90%e5%85%84%e5%85%84%e5%bc%9f%e5%bc%9f%e5%a4%ab%e5%a4%ab%e5%a9%a6%e5%a9%a6%e8%80%8c%e5%ae%b6%e9%81%93%e6%ad%a3%e6%ad%a3%e5%ae%b6%e8%80%8c%e5%a4%a9%e4%b8%8b%e5%ae%9a%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>父母兄弟夫妻各適其位，則家道正矣。能治家道，其道亦可推而治天下。&lt;/p>
&lt;h2 id="象曰風自火出家人君子以言有物而行有恆">
 象曰：風自火出，家人。君子以言有物，而行有恆。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%a2%a8%e8%87%aa%e7%81%ab%e5%87%ba%e5%ae%b6%e4%ba%ba%e5%90%9b%e5%ad%90%e4%bb%a5%e8%a8%80%e6%9c%89%e7%89%a9%e8%80%8c%e8%a1%8c%e6%9c%89%e6%81%86">#&lt;/a>
&lt;/h2>
&lt;p>君子觀風自火出之象，知正身之道，皆由內出，故言必有物，行必有恆，身正而能治家。&lt;/p>
&lt;h2 id="初九閑有家悔亡">
 初九：閑有家，悔亡。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e9%96%91%e6%9c%89%e5%ae%b6%e6%82%94%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>家人道之始為初九，须以陽剛立家道，如無法則度量，則終至人情流放，必悔。&lt;/p>
&lt;h2 id="象曰閑有家志未變也">
 象曰：閑有家，志未變也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%96%91%e6%9c%89%e5%ae%b6%e5%bf%97%e6%9c%aa%e8%ae%8a%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>閑即預防之法則也，閑必於始初而立。在正志未流散之前，變動而法規之，因始立規之時，必不傷恩，不失義，如於志變後再思治， 則多有傷，必有悔。&lt;/p>
&lt;h2 id="六二无攸遂在中饋貞吉">
 六二：无攸遂，在中饋，貞吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e6%97%a0%e6%94%b8%e9%81%82%e5%9c%a8%e4%b8%ad%e9%a5%8b%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>常人處家，唯骨肉親情，故常以情勝禮， 以恩去義，偏私之人多矣。獨有能剛之人不以私愛而不顧理。今以陰柔之人治家，必無可為， 唯婦人之道可以柔順，如能處正，居中協調， 則必能吉。&lt;/p>
&lt;h2 id="九三家人嗃嗃悔厲吉婦子嘻嘻終吝">
 九三：家人&lt;strong>嗃嗃&lt;/strong>，悔厲吉，婦子嘻嘻，終吝。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%ae%b6%e4%ba%ba%e5%97%83%e5%97%83%e6%82%94%e5%8e%b2%e5%90%89%e5%a9%a6%e5%ad%90%e5%98%bb%e5%98%bb%e7%b5%82%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>嗃嗃乃嚴厲約束意，家人之道如約束過嚴，必有悔，然能令人心敬畏，也比讓婦人之放肆，喜樂無節，終至家敗而來得好。同理， 人能剛立，必知忠義，喜愛玩樂必不能正倫理， 知恩義也。&lt;/p>
&lt;h2 id="六四富家大吉">
 六四：富家，大吉。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e5%af%8c%e5%ae%b6%e5%a4%a7%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>能有其富，於家道大吉，保有富之人，而能保其家，此吉之大也。&lt;/p>
&lt;h2 id="九五王假有家勿恤吉">
 九五：王假有家，勿恤，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e7%8e%8b%e5%81%87%e6%9c%89%e5%ae%b6%e5%8b%bf%e6%81%a4%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>能剛又處君位，位尊而中正，又能順應內， 此治家之至正至善。是故修身來齊家，家家能正，則天下大治，此不須憂勞而天下自治矣。&lt;/p>
&lt;h2 id="上九有孚威如終吉">
 上九：有孚威如，終吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e6%9c%89%e5%ad%9a%e5%a8%81%e5%a6%82%e7%b5%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此言治家之道，非至誠之心不能也。己能守其规如常則人自化，如己不能守，況於他人乎？家之患必在禮法不足，下犯上，上凌下。如能守正禮法，又有威嚴，則必能吉。&lt;/p></description></item><item><title>36地火明夷</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/36%E5%9C%B0%E7%81%AB%E6%98%8E%E5%A4%B7/</link><pubDate>Tue, 14 Jan 2025 09:39:13 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/36%E5%9C%B0%E7%81%AB%E6%98%8E%E5%A4%B7/</guid><description>&lt;h1 id="36地火明夷">
 36地火明夷
 &lt;a class="anchor" href="#36%e5%9c%b0%e7%81%ab%e6%98%8e%e5%a4%b7">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦是文王囚姜里，見子不至，卜得知，果子歿也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>婦人在井中，虎在井上，錢破，人逐鹿， 堠上有工尺，珠聚。&lt;/strong>&lt;/p>
&lt;p>鳳凰重翼之課 出明入暗之象&lt;/p>
&lt;p>物進不已，必有所傷，故明夷為序卦，夷者，傷也，此卦坤上離下，乃明入地中之象，為晉之反卦，故義亦反，晉為明且盛，上明君下群賢並進之時。明夷乃暗君在上，明者見傷之時， 日入於地中象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、婦人在井中：女人招災，或頸部災，家內有災。二、虎在外：外人虎視眈眈。&lt;/p>
&lt;p>三、錢缺：財傷也。&lt;/p>
&lt;p>四、人逐鹿：財失也，爭相為祿，逐鹿中原。五、堠在人鹿中：猴作梗也。&lt;/p>
&lt;p>六、「：尺也，工匠獨有，匠，將也，武官人。七、堠：不動也，尊位也，姓侯，肖猴。&lt;/p>
&lt;p>八、鹿回頭：回祿也，火災。九、人手上木枝：休象。&lt;/p>
&lt;p>見此課，必傷且凶矣。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>明夷：利艱貞。&lt;/p>
&lt;p>君子處明夷之時，須知時之艱難，必求不失正道，方為君子。小人則阿諛奉承，唯利是圖， 順附勢而為，不顧正道。&lt;/p>
&lt;p>彖曰：明入地中，明夷，内文明而外柔順，以蒙大難，文王以之。&lt;/p>
&lt;p>君子處明夷之時，知明者必見傷，故求內明外順之態勢，應對大難之時，如此可內不失明， 外又可遠禍患。易之妙即在此，卦之德本亦卦之解也。&lt;/p>
&lt;h2 id="利艱貞晦其明也内難而能正其志箕子以之">
 利艱貞，晦其明也，内難而能正其志.箕子以之。
 &lt;a class="anchor" href="#%e5%88%a9%e8%89%b1%e8%b2%9e%e6%99%a6%e5%85%b6%e6%98%8e%e4%b9%9f%e5%86%85%e9%9b%a3%e8%80%8c%e8%83%bd%e6%ad%a3%e5%85%b6%e5%bf%97%e7%ae%95%e5%ad%90%e4%bb%a5%e4%b9%8b">#&lt;/a>
&lt;/h2>
&lt;p>處艱難時，能知晦藏其明，不知藏晦，必生禍患，不能守正，必非賢人。&lt;/p>
&lt;h2 id="象曰明入地中明夷君子以莅眾用晦而明">
 象曰：明入地中，明夷，君子以莅眾，用晦而明。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%98%8e%e5%85%a5%e5%9c%b0%e4%b8%ad%e6%98%8e%e5%a4%b7%e5%90%9b%e5%ad%90%e4%bb%a5%e8%8e%85%e7%9c%be%e7%94%a8%e6%99%a6%e8%80%8c%e6%98%8e">#&lt;/a>
&lt;/h2>
&lt;p>君子觀明入地中，明夷之道，乃知不極其明察而用晦之道，於莅眾之時，如此必能容物和眾，眾親而安，猶水至清則無魚，人至明則無徒亦然。&lt;/p>
&lt;h2 id="初九明夷于飛垂其翼君子于行三日不食有攸往主人有言">
 初九：明夷于飛，垂其翼。君子于行，三日不食，有攸往，主人有言。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%98%8e%e5%a4%b7%e4%ba%8e%e9%a3%9b%e5%9e%82%e5%85%b6%e7%bf%bc%e5%90%9b%e5%ad%90%e4%ba%8e%e8%a1%8c%e4%b8%89%e6%97%a5%e4%b8%8d%e9%a3%9f%e6%9c%89%e6%94%b8%e5%be%80%e4%b8%bb%e4%ba%ba%e6%9c%89%e8%a8%80">#&lt;/a>
&lt;/h2>
&lt;p>明夷之初，乃見傷之始，暗君在上，陽剛之人不得上進，猶鳥飛而傷翼，小人害君子皆害其所以行。君子之人能見事於微末，始見傷， 則避之，即令困窮亦退避之，取適之位而往， 絶不以世俗之見而遲疑所行也。常人無法見傷於始，不知退避，至傷於己時，已不能退也。&lt;/p>
&lt;h2 id="象曰君子于行義不食也">
 象曰：君子于行，義不食也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%90%9b%e5%ad%90%e4%ba%8e%e8%a1%8c%e7%be%a9%e4%b8%8d%e9%a3%9f%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>義之所至，即令困窮，亦不所為不正，故君子能安之於苦悶。&lt;/p>
&lt;h2 id="六二明夷夷于左股用拯馬壯-吉">
 六二：明夷，夷于左股，用拯馬壯， 吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e6%98%8e%e5%a4%b7%e5%a4%b7%e4%ba%8e%e5%b7%a6%e8%82%a1%e7%94%a8%e6%8b%af%e9%a6%ac%e5%a3%af-%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>六二乃陰居陰位，得中正之德，順時知處， 乃至善也。但處明夷之時，亦不免有所損傷， 但須如馬之壯，可獲免傷而吉，如自處之道不壯，則傷之深矣。&lt;/p>
&lt;h2 id="九三明夷於南狩得其大首不可疾貞">
 九三：明夷於南狩，得其大首，不可疾貞。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e6%98%8e%e5%a4%b7%e6%96%bc%e5%8d%97%e7%8b%a9%e5%be%97%e5%85%b6%e5%a4%a7%e9%a6%96%e4%b8%8d%e5%8f%af%e7%96%be%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>因上卦暗極，而又正居明之極，明即將與暗衝突之時也。居此，君子必前進除害，以獲之魁首，為要務，至於舊疾敗俗，必不能立刻改變，須知渐進之道，教其渐改，如求劇革必令不安，非上策也。&lt;/p>
&lt;h2 id="象曰六二之吉順以則也">
 象曰：六二之吉，順以則也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%ad%e4%ba%8c%e4%b9%8b%e5%90%89%e9%a0%86%e4%bb%a5%e5%89%87%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>順處且有原則，合於中正之道，故必能處明傷之時，而能保吉也。&lt;/p>
&lt;h2 id="象曰南狩之志乃大得也">
 象曰：南狩之志，乃大得也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%8d%97%e7%8b%a9%e4%b9%8b%e5%bf%97%e4%b9%83%e5%a4%a7%e5%be%97%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>用下位之明，來除上位之暗，唯求目的在除害而已，如不然則為背亂之事也。&lt;/p>
&lt;h2 id="六四入于左腹獲明夷之心于出門庭">
 六四：入于左腹，獲明夷之心，于出門庭。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e5%85%a5%e4%ba%8e%e5%b7%a6%e8%85%b9%e7%8d%b2%e6%98%8e%e5%a4%b7%e4%b9%8b%e5%bf%83%e4%ba%8e%e5%87%ba%e9%96%80%e5%ba%ad">#&lt;/a>
&lt;/h2>
&lt;p>此爻意陰邪之小人，處近君之位，乃以柔順附於君主時，為保其固交，乃以柔邪之法， 隱敝之交而結於上。而君本陰邪之人，必受蠱惑其心，而行之於外。故君必求明，守正道， 而不為小人所煽動，所利用也，即此。&lt;/p></description></item><item><title>35火地晉</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/35%E7%81%AB%E5%9C%B0%E6%99%89/</link><pubDate>Tue, 14 Jan 2025 09:39:12 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/35%E7%81%AB%E5%9C%B0%E6%99%89/</guid><description>&lt;h1 id="35火地晉">
 35火地晉
 &lt;a class="anchor" href="#35%e7%81%ab%e5%9c%b0%e6%99%89">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦昔司馬進策，卜得之，後果為丞相。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>文字破，官人掩面，毬在泥上，雞啣秤， 枯木生花，鹿啣書，一堆金寶。&lt;/strong>&lt;/p>
&lt;p>龍劍入匣之課 以臣遇君之象&lt;/p>
&lt;p>繼壯盛之後，則必進，晉，進也，明出於地，升而明，故晉，此論進之道，離，中虛為明， 乃明出於地上也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、文字破：官事不成，退位象。二、官人掩面：無顏見人，悲象。三、毬在泥上：所求必陷險也。&lt;/p>
&lt;p>四、雞啣秤：雞，酉也，肖雞人也，落日之象。秤：示公平，稱心也。五、枯木生花：晚發也。&lt;/p>
&lt;p>六、鹿啣書：祿與命到也。&lt;/p>
&lt;p>七、一堆金寶：財祿豐收之象，占疾厄，則有焚金紙之象。主喪服，二人去一也。八、人立水邊：恐泣之象，主喪服。&lt;/p>
&lt;p>九、三點在石上：心象，示人心在石上，不動念，堅心也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>晉：康侯用錫馬蕃庶，晝日三接。&lt;/p>
&lt;p>有能治安之諸侯，名康侯，其因能明，下體順附，承王之象，則見眾多之馬駕，有重賜， 乃寵遇之至也，此上明下順，乃進盛之時。&lt;/p>
&lt;h2 id="彖曰晉進也明出地上順而麗乎大明柔進而上行是以康侯用錫馬蕃庶晝日三接也">
 彖曰：晉，進也。明出地上，順而麗乎大明，柔進而上行，是以康侯用錫馬蕃庶，晝日三接也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%99%89%e9%80%b2%e4%b9%9f%e6%98%8e%e5%87%ba%e5%9c%b0%e4%b8%8a%e9%a0%86%e8%80%8c%e9%ba%97%e4%b9%8e%e5%a4%a7%e6%98%8e%e6%9f%94%e9%80%b2%e8%80%8c%e4%b8%8a%e8%a1%8c%e6%98%af%e4%bb%a5%e5%ba%b7%e4%be%af%e7%94%a8%e9%8c%ab%e9%a6%ac%e8%95%83%e5%ba%b6%e6%99%9d%e6%97%a5%e4%b8%89%e6%8e%a5%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>晉乃明進而盛，此外明內順，故能包明至大明，如順德之良臣，附麗於明主也。柔居君位， 能明而順，上附於君，下順於民，故為康侯，此為諸侯之道也。&lt;/p>
&lt;h2 id="象曰明出地上晉君子以自昭明德">
 象曰：明出地上，晉，君子以自昭明德。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%98%8e%e5%87%ba%e5%9c%b0%e4%b8%8a%e6%99%89%e5%90%9b%e5%ad%90%e4%bb%a5%e8%87%aa%e6%98%ad%e6%98%8e%e5%be%b7">#&lt;/a>
&lt;/h2>
&lt;p>君子觀明出地上，近明為晉，故知惟昭明德於已，求己之明且有德，為晉之道。&lt;/p>
&lt;h2 id="初六晉如摧如貞吉罔孚裕无咎">
 初六：晉如摧如，貞吉，罔孚，裕无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e6%99%89%e5%a6%82%e6%91%a7%e5%a6%82%e8%b2%9e%e5%90%89%e7%bd%94%e5%ad%9a%e8%a3%95%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>初爻乃晉之始時，始進而求快升，必不遂其意，因上位未能遽信，必當自守安位，寬裕不求，以待上位之信方可。小人始進而求上信， 則必傷於義，皆招咎悔。此君子方知進退之道。&lt;/p>
&lt;h2 id="六二晉如愁如貞吉受茲介福-于其王母">
 六二：晉如愁如，貞吉。受茲介福， 于其王母。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e6%99%89%e5%a6%82%e6%84%81%e5%a6%82%e8%b2%9e%e5%90%89%e5%8f%97%e8%8c%b2%e4%bb%8b%e7%a6%8f-%e4%ba%8e%e5%85%b6%e7%8e%8b%e6%af%8d">#&lt;/a>
&lt;/h2>
&lt;p>進退之間守正道，當吉，二爻之位雖無援， 因能守正，日久彰顯，自得上六五君位之人相應，上位自當求之，因德同也。&lt;/p>
&lt;h2 id="六三眾允悔亡">
 六三：&lt;strong>眾&lt;/strong>允，悔亡。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e7%9c%be%e5%85%81%e6%82%94%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>柔居剛位，又不中正，此乃居不適位時， 必有悔咎，惟居此時，能明謀從眾，順應天心， 吉。&lt;/p>
&lt;h2 id="九四晉如鼫鼠貞厲">
 九四：晉如&lt;strong>鼫&lt;/strong>鼠，貞厲。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e6%99%89%e5%a6%82%e9%bc%ab%e9%bc%a0%e8%b2%9e%e5%8e%b2">#&lt;/a>
&lt;/h2>
&lt;p>陽剛居陰位，非適其位而居之，乃貪據其位，貪而畏人者，範鼠也，近君之位又不適， 下位又求上進，居此時生畏忌之心，必生危矣。&lt;/p>
&lt;h2 id="六五悔亡失得勿恤往吉无不利">
 六五：悔亡，失得勿恤，往吉，无不利。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e6%82%94%e4%ba%a1%e5%a4%b1%e5%be%97%e5%8b%bf%e6%81%a4%e5%be%80%e5%90%89%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>柔居尊位，乃不正位，本凶。但用大明之德而上下皆附順，故反吉。因下之順附，必能盡誠委任眾人之才，以濟天下。明君不患其不能明照，患其用明之過於察察，有失委任之道， 自任其明而以私意偏任，天下必無法為公。&lt;/p>
&lt;h2 id="象曰晉如摧如獨行正也裕无咎未受命也">
 象曰：晉如摧如，獨行正也。裕无咎，未受命也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%99%89%e5%a6%82%e6%91%a7%e5%a6%82%e7%8d%a8%e8%a1%8c%e6%ad%a3%e4%b9%9f%e8%a3%95%e6%97%a0%e5%92%8e%e6%9c%aa%e5%8f%97%e5%91%bd%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>進退之間，惟君子能獨行正道，唯義之所趨，方可出仕，未受命時，皆寬裕無求。若能信於上，忠職守，卻反失去職務，則君子一日不居，必退而遠之。&lt;/p>
&lt;h2 id="象曰受茲介福以中正也">
 象曰：受茲介福，以中正也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%8f%97%e8%8c%b2%e4%bb%8b%e7%a6%8f%e4%bb%a5%e4%b8%ad%e6%ad%a3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>雖居下位之人，能永持中正之道，久必有亨。更加有明君在上，雖位遠，但必因同德受福。&lt;/p>
&lt;h2 id="象曰眾允之志上行也">
 象曰：&lt;strong>眾&lt;/strong>允之志，上行也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e7%9c%be%e5%85%81%e4%b9%8b%e5%bf%97%e4%b8%8a%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>能順從眾志，居下位之上，又上從明君， 合於眾志。&lt;/p></description></item><item><title>34雷天大壯</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/34%E9%9B%B7%E5%A4%A9%E5%A4%A7%E5%A3%AF/</link><pubDate>Tue, 14 Jan 2025 09:39:11 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/34%E9%9B%B7%E5%A4%A9%E5%A4%A7%E5%A3%AF/</guid><description>&lt;h1 id="34雷天大壯">
 34雷天大壯
 &lt;a class="anchor" href="#34%e9%9b%b7%e5%a4%a9%e5%a4%a7%e5%a3%af">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦唐玄宗避安祿山亂，卜得之，乃知不久亨通也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>北斗星，天神執劍，一官人燒香拜， 一猴，一兔，一犬。&lt;/strong>&lt;/p>
&lt;p>羝羊觸藩之課 先曲後順之象&lt;/p>
&lt;p>君子之退而伸道，多數君子之退且聚合，而成大壯之勢，壯有進且盛義，陽剛而震動此以剛而動，乃大壯之象，猶雷威震在天上也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、北斗星：帝君，老闆，主事之人。二、天神執劍：民意歸向，人心也。&lt;/p>
&lt;p>三、一官人燒香拜：拜求於天，而不求人，凶。&lt;/p>
&lt;p>四、一猴、一兔、一犬：侯，劉，狄姓，在野之人。五、猴回頭：回吼。&lt;/p>
&lt;p>六、兔回頭：回吐。七、羊回頭：回陽。&lt;/p>
&lt;p>此卦示意過剛必招凶，而猴、羊、兔為三貴人，和中近易為處之道。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>大壯：利，貞。&lt;/p>
&lt;p>大壯之道利在正，理正而勢正，如不得正而壯，只強猛無理而已，非君子之壯。&lt;/p>
&lt;p>彖曰：大壯，大者壯也，剛以動，故壯。&lt;/p>
&lt;p>大且壯為大壯，乾之至剛而動，外動內剛狀，名壯。&lt;/p>
&lt;h2 id="大壯利貞大者正也正大而天地之情可見矣">
 大壯利貞，大者正也。正大而天地之情可見矣。
 &lt;a class="anchor" href="#%e5%a4%a7%e5%a3%af%e5%88%a9%e8%b2%9e%e5%a4%a7%e8%80%85%e6%ad%a3%e4%b9%9f%e6%ad%a3%e5%a4%a7%e8%80%8c%e5%a4%a9%e5%9c%b0%e4%b9%8b%e6%83%85%e5%8f%af%e8%a6%8b%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>天地之道可運行而長久，乃至大至正始然也，此道之至大能如是。&lt;/p>
&lt;h2 id="象曰雷在天上大壯君子以非禮弗履">
 象曰：雷在天上，大壯，君子以非禮弗履。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b7%e5%9c%a8%e5%a4%a9%e4%b8%8a%e5%a4%a7%e5%a3%af%e5%90%9b%e5%ad%90%e4%bb%a5%e9%9d%9e%e7%a6%ae%e5%bc%97%e5%b1%a5">#&lt;/a>
&lt;/h2>
&lt;p>君子觀雷震威在天，此之壯大，而行大壯之道，知唯克己復禮最大。能自勝之人為天地之最壯者，能赴湯蹈火，此唯武夫之勇也。君子能和而不流，大立而不倚。&lt;/p>
&lt;h2 id="初九壯於趾征凶有孚">
 初九：壯於趾，征凶，有孚。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%a3%af%e6%96%bc%e8%b6%be%e5%be%81%e5%87%b6%e6%9c%89%e5%ad%9a">#&lt;/a>
&lt;/h2>
&lt;p>初爻在下，而陽剛居之，乃初進而用壯， 必凶，吾人居上用壯，猶須正方可行，初進而剛壯，必招凶辱。&lt;/p>
&lt;h2 id="象曰壯於趾其孚窮也">
 象曰：壯於趾，其孚窮也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a3%af%e6%96%bc%e8%b6%be%e5%85%b6%e5%ad%9a%e7%aa%ae%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>在下位而用壯，即令行可信，亦必招窮困阻滯也。&lt;/p>
&lt;h2 id="九二貞吉">
 九二：貞吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>二位屬陰位，陽剛居之，乃示人剛柔得中也，人能識得時義之輕重，則必吉。&lt;/p>
&lt;h2 id="九三小人用壯君子用罔貞厲-羝羊觸藩羸其角">
 九三：小人用壯，君子用罔。貞厲， 羝羊觸藩，羸其角。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%b0%8f%e4%ba%ba%e7%94%a8%e5%a3%af%e5%90%9b%e5%ad%90%e7%94%a8%e7%bd%94%e8%b2%9e%e5%8e%b2-%e7%be%9d%e7%be%8a%e8%a7%b8%e8%97%a9%e7%be%b8%e5%85%b6%e8%a7%92">#&lt;/a>
&lt;/h2>
&lt;p>小人尚力，只用其壯勇，而君子用罔，因其志剛，無視於非正之事，無所忌憚也。萬物莫不用其壯，猶羊之壯於首角，一遇藩籬，亦受困也，故用壯，不可強力進，須持之正道， 無忌憚於邪吝，方為真罔。&lt;/p>
&lt;h2 id="九四貞吉悔亡藩決不羸壯于大輿之複">
 九四：貞吉，悔亡，藩決不羸，壯于大輿之複。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e8%b2%9e%e5%90%89%e6%82%94%e4%ba%a1%e8%97%a9%e6%b1%ba%e4%b8%8d%e7%be%b8%e5%a3%af%e4%ba%8e%e5%a4%a7%e8%bc%bf%e4%b9%8b%e8%a4%87">#&lt;/a>
&lt;/h2>
&lt;p>時方道之長盛時，如有小失，則必害進之勢，猶大車其輪軸必壯，乃利於行，如輪軸不強，以致大車之不行也，有如藩籬之決開而不復其困也。&lt;/p>
&lt;h2 id="六五喪羊于易无悔">
 六五：喪羊于易，无悔。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%96%aa%e7%be%8a%e4%ba%8e%e6%98%93%e6%97%a0%e6%82%94">#&lt;/a>
&lt;/h2>
&lt;p>羊性喜群行又互觸其角，猶諸陽並行，如以力制，則必難勝有悔，唯其平和得之，則無所用其剛，使其壯失於和易之道，可以無悔。&lt;/p>
&lt;h2 id="上六羝羊觸藩不能退不能遂-无攸利艱則吉">
 上六：羝羊觸藩，不能退，不能遂， 无攸利，艱則吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e7%be%9d%e7%be%8a%e8%a7%b8%e8%97%a9%e4%b8%8d%e8%83%bd%e9%80%80%e4%b8%8d%e8%83%bd%e9%81%82-%e6%97%a0%e6%94%b8%e5%88%a9%e8%89%b1%e5%89%87%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>陰柔又處壯極，猶羊角之觸藩，進退不得， 必無所往也，陰柔處壯時，一遇艱困，必不能守，往即凶也。吾人須居艱困時而處柔，必吉。此壯之極，須變義也。&lt;/p>
&lt;h2 id="象曰不能退不能遂不詳也">
 象曰：不能退，不能遂，不詳也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b8%8d%e8%83%bd%e9%80%80%e4%b8%8d%e8%83%bd%e9%81%82%e4%b8%8d%e8%a9%b3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>象曰：九二貞吉，以中也。&lt;/p>
&lt;p>能得中正，而堅持守之，也吉乎，此意中而不失正。今人中立而為己，已失正道，猶牆頭之草，可嘆也。&lt;/p>
&lt;h2 id="象曰小人用壯君子罔也">
 象曰：小人用壯，君子罔也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b0%8f%e4%ba%ba%e7%94%a8%e5%a3%af%e5%90%9b%e5%ad%90%e7%bd%94%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>小人用其強壯之武力，終困，君子志氣剛強，無視邪惡，無所忌憚。&lt;/p></description></item><item><title>33天山遯</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/33%E5%A4%A9%E5%B1%B1%E9%81%AF/</link><pubDate>Tue, 14 Jan 2025 09:39:10 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/33%E5%A4%A9%E5%B1%B1%E9%81%AF/</guid><description>&lt;h1 id="33天山遯">
 33天山遯
 &lt;a class="anchor" href="#33%e5%a4%a9%e5%b1%b1%e9%81%af">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此孟嘗君進白狐裘，夜渡函谷關，卜得知， 果脱身也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>一山，一水，酒旗上文字，官人踏龜，月半雲中，幞頭上樹，樹下人獨酌。&lt;/strong>&lt;/p>
&lt;p>豹隱南山之課 守道去惡之象&lt;/p>
&lt;p>恆者，久也，久不動則有去意，遯乃退也，故遯所以繼恆也，此卦天下有山，天陽向上， 物雖上陵但止而不進，以陰陽之道論，二陰居下有上進之勢，陽將消退，故此時乃論小人渐盛， 君子退避之時，此遯之義也。&lt;/p>
&lt;h1 id="卦圖象解">
 卦圖象解
 &lt;a class="anchor" href="#%e5%8d%a6%e5%9c%96%e8%b1%a1%e8%a7%a3">#&lt;/a>
&lt;/h1>
&lt;p>一、一山：阻也。二、一水：險也。&lt;/p>
&lt;p>三、酒旗上文字：酒為忘憂之物，文在旗上，受人提攜也。四、官人踏龜：歸，鬼也；玄武自來，水上求財。&lt;/p>
&lt;p>五、幞頭上樹：求去辭官也。&lt;/p>
&lt;p>六、月在雲中：主半清半濁象，事未明晰。七、人在水邊：等待平安狀，蒞臨也。&lt;/p>
&lt;p>八、樹下人獨酌：休也，無事也，萌生退意狀。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>遞：亨，小利貞。&lt;/p>
&lt;p>遯，乃君子潛藏之時，君子退而伸其道，人退道不屈，則可亨，雖無大力，但仍有小吉， 因知時避退，此善之道也。&lt;/p>
&lt;h2 id="彖曰遯亨遯而亨也剛當位而應與時行也">
 彖曰：&lt;strong>遯&lt;/strong>亨，&lt;strong>遯&lt;/strong>而亨也。剛當位而應，與時行也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%81%af%e4%ba%a8%e9%81%af%e8%80%8c%e4%ba%a8%e4%b9%9f%e5%89%9b%e7%95%b6%e4%bd%8d%e8%80%8c%e6%87%89%e8%88%87%e6%99%82%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>君子處遯之道，知退生吉，退所以為伸道。故雖退之時，君子處之，未必真遯，當隨時消息，有可以致力，當不避之，以扶持其道，並非於遯時，藏而不為也。&lt;/p>
&lt;h2 id="小利貞浸而長也遯之時義大矣哉">
 小利貞，浸而長也，&lt;strong>遯&lt;/strong>之時義大矣哉！
 &lt;a class="anchor" href="#%e5%b0%8f%e5%88%a9%e8%b2%9e%e6%b5%b8%e8%80%8c%e9%95%b7%e4%b9%9f%e9%81%af%e4%b9%8b%e6%99%82%e7%be%a9%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>小人之道長時，不可求大功，但利於小功，君子之人能察於其微，始即深以戒之，退而伸道，不使道消，此處遯之時意義之大處也。&lt;/p>
&lt;h2 id="象曰天下有山遯君子以遠小人不惡而嚴">
 象曰：天下有山，&lt;strong>遯&lt;/strong>；君子以遠小人，不惡而嚴。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e4%b8%8b%e6%9c%89%e5%b1%b1%e9%81%af%e5%90%9b%e5%ad%90%e4%bb%a5%e9%81%a0%e5%b0%8f%e4%ba%ba%e4%b8%8d%e6%83%a1%e8%80%8c%e5%9a%b4">#&lt;/a>
&lt;/h2>
&lt;p>山在天下，由下起而上止，天上進分之相違，此遯之象，因違和而須遯。君子遠小人之道， 若以惡聲厲色，只增其怨忿而已，唯用莊嚴威色，使其敬畏，小人自然遠矣。&lt;/p>
&lt;h2 id="初六遯尾厲勿用有攸往">
 初六：&lt;strong>遯&lt;/strong>尾，厲，勿用有攸往。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e9%81%af%e5%b0%be%e5%8e%b2%e5%8b%bf%e7%94%a8%e6%9c%89%e6%94%b8%e5%be%80">#&lt;/a>
&lt;/h2>
&lt;p>因遯本即退去，故初爻為往退之初，反為其尾，此時以柔處遯，不可往，往則有災。&lt;/p>
&lt;h2 id="六二執之用黃牛之革莫之勝説">
 六二：執之用黃牛之革，莫之勝説。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%9f%b7%e4%b9%8b%e7%94%a8%e9%bb%83%e7%89%9b%e4%b9%8b%e9%9d%a9%e8%8e%ab%e4%b9%8b%e5%8b%9d%e8%aa%ac">#&lt;/a>
&lt;/h2>
&lt;p>二與五位相應，居正而相親合，其交之堅， 若牛革之繋，不可言語。&lt;/p>
&lt;h2 id="九三係遯有疾厲畜臣妾吉">
 九三：係&lt;strong>遯&lt;/strong>，有疾厲，畜臣妾，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e4%bf%82%e9%81%af%e6%9c%89%e7%96%be%e5%8e%b2%e7%95%9c%e8%87%a3%e5%a6%be%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>遯退之道，其貴在速及遠，如有事累，則不速，於遯時則有危也。此爻即言，人之親， 若以女子小人而言，其皆懷恩而不知義，親愛之則忠，犯錯而嚴厲時，則生暗害，此小人之道。然君子之道非如是，待之以正，即令有拖累亦不有災，如君王有危而不棄黎民，雖危亦&lt;/p>
&lt;h2 id="九四好遯君子吉小人否">
 九四：好&lt;strong>遯&lt;/strong>，君子吉，小人否。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e5%a5%bd%e9%81%af%e5%90%9b%e5%ad%90%e5%90%89%e5%b0%8f%e4%ba%ba%e5%90%a6">#&lt;/a>
&lt;/h2>
&lt;p>君子之人亦有所好，處退之時，必去而不疑，以道來制欲，故為吉，而小人反之，其不能以義處之，唯私慾之所好，即令身陷亦不能自制，故於小人則否。故君子必易出難進，小人則易進難出。&lt;/p>
&lt;h2 id="九五嘉遯貞吉">
 九五：嘉&lt;strong>遯&lt;/strong>，貞吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%98%89%e9%81%af%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>君王處得中道，動靜間必以時，故嘉美， 終吉。今人卻動靜皆以私慾，表裡不一，不以中正之道處，知進不知退，此凶也。&lt;/p>
&lt;h2 id="上九肥遯无不利">
 上九：肥&lt;strong>遯&lt;/strong>，无不利。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e8%82%a5%e9%81%af%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>此退之極致，退求遠且無累於他人，此退之有餘，無往不利矣。今人即令退，亦追求有所牽累他人，其動不正，唯自苦而已，小人自招之累也。&lt;/p>
&lt;h2 id="象曰遯尾之厲不往何災也">
 象曰：&lt;strong>遯&lt;/strong>尾之厲，不往何災也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%81%af%e5%b0%be%e4%b9%8b%e5%8e%b2%e4%b8%8d%e5%be%80%e4%bd%95%e7%81%bd%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>退處之時，居於尾者，此危也，唯晦藏於下或末端，可得吉，因往有晦不若不往，故晦藏可免災也。&lt;/p></description></item><item><title>32雷風恆</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/32%E9%9B%B7%E9%A2%A8%E6%81%86/</link><pubDate>Tue, 14 Jan 2025 09:39:09 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/32%E9%9B%B7%E9%A2%A8%E6%81%86/</guid><description>&lt;h1 id="32雷風恆">
 32雷風恆
 &lt;a class="anchor" href="#32%e9%9b%b7%e9%a2%a8%e6%81%86">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦宋王奪韓朋妻，卜，得之也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>日在雲，鳳啣書，官人行路，道士手指門，鼠下兩口，牆擋路。&lt;/strong>&lt;/p>
&lt;p>日月常明之課 四時不沒之象&lt;/p>
&lt;p>恆，乃論夫妻之道，終身不變者，前『咸』為少女少男之感，今『恆』乃長男長女之往， 男尊在上，女卑在下，此夫婦居室之道，男動於外，女順於內，此人倫之常，此恆久之道。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、日在雲中：昏暗之象，君主不明象。二 、鳳啣書：喜訊至，金榜题名也。&lt;/p>
&lt;p>三、官人行路：將至也，貴人至。官人，倌人，丈夫也，人傍為倌也。四、道士手指鬥：入空門也，閃也。&lt;/p>
&lt;p>五、鼠下兩口：陰謀在後之象；兩口，回也，呂姓也。六、時機：在春末，日為春之末尾也。&lt;/p>
&lt;h2 id="此即持之以恆則有撥雲見日之喜也">
 此即持之以恆，則有撥雲見日之喜也。
 &lt;a class="anchor" href="#%e6%ad%a4%e5%8d%b3%e6%8c%81%e4%b9%8b%e4%bb%a5%e6%81%86%e5%89%87%e6%9c%89%e6%92%a5%e9%9b%b2%e8%a6%8b%e6%97%a5%e4%b9%8b%e5%96%9c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>恆：亨，无咎，利貞，利有攸往。&lt;/p>
&lt;p>恆為常久之道，人能恆之於善，此道可恆，君子之道。小人之道，乃恆於惡，已失可恆之道，故恆之道能常久，乃因所恆為正，恆不正，招凶也。&lt;/p>
&lt;h2 id="彖曰恆久也剛上而柔下雷風相與巽而動剛柔皆應恆">
 彖曰：恆，久也。剛上而柔下，雷風相與，巽而動，剛柔皆應，恆。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%81%86%e4%b9%85%e4%b9%9f%e5%89%9b%e4%b8%8a%e8%80%8c%e6%9f%94%e4%b8%8b%e9%9b%b7%e9%a2%a8%e7%9b%b8%e8%88%87%e5%b7%bd%e8%80%8c%e5%8b%95%e5%89%9b%e6%9f%94%e7%9a%86%e6%87%89%e6%81%86">#&lt;/a>
&lt;/h2>
&lt;p>恆久之道，在於上剛下柔，君剛臣柔，夫剛婦柔，雷震風興，風中有雷，相互交應，助長其勢，天地之間能恆久不已，乃因能知順動而已。&lt;/p>
&lt;p>恆，亨，无咎，利貞，久於其道也。&lt;/p>
&lt;p>恆之道，可以令亨通，且無災，但須注意所恆為正，吉也，所恆不正，則反招辱。&lt;/p>
&lt;h2 id="天地之道恆久而不已也">
 天地之道，恆久而不已也。
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e4%b9%8b%e9%81%93%e6%81%86%e4%b9%85%e8%80%8c%e4%b8%8d%e5%b7%b2%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人如能恆持可恆之道，則合於天地之理。必可長久。&lt;/p>
&lt;h2 id="利有攸往終則有始也">
 利有攸往，終則有始也。
 &lt;a class="anchor" href="#%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e7%b5%82%e5%89%87%e6%9c%89%e5%a7%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>萬物之動，必有始終，今動而能恆，其間變化必多，能知隨時變易其外，神在內不變，此得易之神也。&lt;/p>
&lt;h2 id="日月得天而能久照四時變化而能久成聖人久於其道而天下化成-觀其所恆而天地萬物之情可見矣">
 日月得天而能久照，四時變化而能久成，聖人久於其道而天下化成， 觀其所恆，而天地萬物之情可見矣。
 &lt;a class="anchor" href="#%e6%97%a5%e6%9c%88%e5%be%97%e5%a4%a9%e8%80%8c%e8%83%bd%e4%b9%85%e7%85%a7%e5%9b%9b%e6%99%82%e8%ae%8a%e5%8c%96%e8%80%8c%e8%83%bd%e4%b9%85%e6%88%90%e8%81%96%e4%ba%ba%e4%b9%85%e6%96%bc%e5%85%b6%e9%81%93%e8%80%8c%e5%a4%a9%e4%b8%8b%e5%8c%96%e6%88%90-%e8%a7%80%e5%85%b6%e6%89%80%e6%81%86%e8%80%8c%e5%a4%a9%e5%9c%b0%e8%90%ac%e7%89%a9%e4%b9%8b%e6%83%85%e5%8f%af%e8%a6%8b%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>日月得天之道，能久照不已，四時往来生成萬物，也因得天，故常久不已，聖人用恆之道， 行之不已，能化成天下，成其美俗。觀天地之恆常，得天下常久之理，此聖人之道所以能常久也。常人孰能知。&lt;/p>
&lt;h2 id="象曰雷風恆君子以立不易方">
 象曰：雷風，恆；君子以立不易方。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b7%e9%a2%a8%e6%81%86%e5%90%9b%e5%ad%90%e4%bb%a5%e7%ab%8b%e4%b8%8d%e6%98%93%e6%96%b9">#&lt;/a>
&lt;/h2>
&lt;p>人才君子觀恆之象，以恆久之德性，持立於中道，永不易其立足之道。&lt;/p>
&lt;h2 id="初六浚恆貞凶无攸利">
 初六：浚恆，貞凶，无攸利。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e6%b5%9a%e6%81%86%e8%b2%9e%e5%87%b6%e6%97%a0%e6%94%b8%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>初六以柔暗之人初進，只知守常卻不度勢而為，但求上之眷顧，又堅守此向，致凶之道也。因其心志在求上眷顧，必不能安居其位， 故凶也。&lt;/p>
&lt;h2 id="九二悔亡">
 九二：悔亡。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e6%82%94%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>恆能居其正位，常道也。今陽居陰位，處非其位，雖中正之才，不知輕重之勢，造成有&lt;/p>
&lt;h2 id="九三不恆其德或承之羞貞吝">
 九三：不恆其德，或承之羞，貞吝。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e4%b8%8d%e6%81%86%e5%85%b6%e5%be%b7%e6%88%96%e6%89%bf%e4%b9%8b%e7%be%9e%e8%b2%9e%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>得位乃可久，但於須持久時不知持之以恆，朝令夕改，人無所適從，反招羞辱矣。&lt;/p>
&lt;h2 id="九四田无禽">
 九四：田无禽。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e7%94%b0%e6%97%a0%e7%a6%bd">#&lt;/a>
&lt;/h2>
&lt;p>田獵又無獲禽，徙勞無功也，九四陰位而陽居之，處非其所，恆又何益？人之動必有道， 持之以恆則有功，不得道，即久亦無功也。&lt;/p>
&lt;h2 id="六五恆其德貞婦人吉-夫子凶">
 六五：恆其德，貞，婦人吉 ，夫子凶。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e6%81%86%e5%85%b6%e5%be%b7%e8%b2%9e%e5%a9%a6%e4%ba%ba%e5%90%89-%e5%a4%ab%e5%ad%90%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>柔居剛位，又得九二之陽剛助應，此即居中正又有應乎中正，恆此以久，吉之道。婦人之道以順從為恆，此順從於婦人則吉，丈夫為剛陽，如以順從之道持恆，反致凶也。更何沉人君之道，君道切不以柔順為恆也。&lt;/p></description></item><item><title>31澤山咸</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/31%E6%BE%A4%E5%B1%B1%E5%92%B8/</link><pubDate>Tue, 14 Jan 2025 09:39:08 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8B%E7%BB%8F/31%E6%BE%A4%E5%B1%B1%E5%92%B8/</guid><description>&lt;h1 id="31澤山咸">
 31澤山咸
 &lt;a class="anchor" href="#31%e6%be%a4%e5%b1%b1%e5%92%b8">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦漢王昭君，卜得之，知和番不回也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>空中有一拳，錢寶一堆，貴人在山頂， 女人上山，一合子。&lt;/strong>&lt;/p>
&lt;p>山澤通氣之課 至誠感神之象&lt;/p>
&lt;p>易經上經乃論天地萬物之本，有天地後有萬物，聖人觀其間象，以巨視之角度來體察出天道。咸卦之始，為易經下經，其論夫婦人倫之始，較重於人道。咸之為卦，兌上艮下，乃少女少男之意，表示世上男女相感之深，莫過於少男少女，童稚之間無隔閡，人人皆以平常心處之， 男女相悦又無所求，互相以誠及悦相處對應，此時之感，即咸之深意。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、空中有一拳：貴人提拔，憑空而得。二、錢寶一堆：求財得財。&lt;/p>
&lt;p>三、貴人在山頂：孤立狀，即將下坡，退休狀。四、女人上山：夫妻吉，陰人卜之知走馬上任。五、合子：先成後破，因誠感方吉，物感必凶。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>咸：亨，利，貞，取女吉。&lt;/p>
&lt;p>咸，感也，舉凡君臣上下，夫婦、父子等皆有感之道，人人能以少男少女之童悦相感以誠悦，即以平常心相待，則必有亨通之理。今人皆以媚説，上下之位處以邪僻，皆感之不正也。艮為止，澤為悦，乃外悦內止之意，以此之意近女，乃得正而吉也。&lt;/p>
&lt;h2 id="彖曰咸感也柔上而剛下二氣感應以相與止而説男下女是以亨利貞取女吉也">
 彖曰：咸，感也，柔上而剛下，二氣感應以相與，止而説，男下女，是以亨利貞，取女吉也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%92%b8%e6%84%9f%e4%b9%9f%e6%9f%94%e4%b8%8a%e8%80%8c%e5%89%9b%e4%b8%8b%e4%ba%8c%e6%b0%a3%e6%84%9f%e6%87%89%e4%bb%a5%e7%9b%b8%e8%88%87%e6%ad%a2%e8%80%8c%e8%aa%ac%e7%94%b7%e4%b8%8b%e5%a5%b3%e6%98%af%e4%bb%a5%e4%ba%a8%e5%88%a9%e8%b2%9e%e5%8f%96%e5%a5%b3%e5%90%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陰陽相交，乃男女相感之義同，男女之交，男以篤實至誠之心，女以喜悦之心相應，此男女之感於正道，故能亨通得正。&lt;/p>
&lt;h2 id="天地感而萬物化生聖人感人心而天下和平觀其所感而天地萬物之情可見矣">
 天地感而萬物化生，聖人感人心而天下和平，觀其所感，而天地萬物之情可見矣。
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e6%84%9f%e8%80%8c%e8%90%ac%e7%89%a9%e5%8c%96%e7%94%9f%e8%81%96%e4%ba%ba%e6%84%9f%e4%ba%ba%e5%bf%83%e8%80%8c%e5%a4%a9%e4%b8%8b%e5%92%8c%e5%b9%b3%e8%a7%80%e5%85%b6%e6%89%80%e6%84%9f%e8%80%8c%e5%a4%a9%e5%9c%b0%e8%90%ac%e7%89%a9%e4%b9%8b%e6%83%85%e5%8f%af%e8%a6%8b%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>感之道到極限時，聖人能以至誠之心感億兆人之心，使天下和平，其情之偉大可見，但須知感通之理，須以默而觀之，不可道破，此感方可久矣。&lt;/p>
&lt;h2 id="象曰山上有澤咸君子以虛受人">
 象曰：山上有澤，咸；君子以虛受人。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8a%e6%9c%89%e6%be%a4%e5%92%b8%e5%90%9b%e5%ad%90%e4%bb%a5%e8%99%9b%e5%8f%97%e4%ba%ba">#&lt;/a>
&lt;/h2>
&lt;p>澤在山上有渐潤通澈狀，此感之道。君子觀山澤通氣知須虛其中方能受人，凡人之心能中虛必可受，實則不能入矣。&lt;/p>
&lt;h2 id="初六咸其拇">
 初六：咸其拇。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e5%92%b8%e5%85%b6%e6%8b%87">#&lt;/a>
&lt;/h2>
&lt;p>初與四相感，初之時感必未深，不能動人， 如拇指之動，不可進也，須識勢而為。&lt;/p>
&lt;h2 id="六二咸其腓凶居吉">
 六二：咸其腓，凶，居吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%92%b8%e5%85%b6%e8%85%93%e5%87%b6%e5%b1%85%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>腓，足肚也，人之動，足必先行，足肚自動也。二位無法守道而妄求於上，故凶。進退之道乃安居其位，以待上求，此吉也。&lt;/p>
&lt;h2 id="九三咸其股執其隨往吝">
 九三：咸其股，執其隨，往吝。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%92%b8%e5%85%b6%e8%82%a1%e5%9f%b7%e5%85%b6%e9%9a%a8%e5%be%80%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>股在身之下，足之上，不能自主，隨身而動。九三陽剛之才，感於所動而隨其動，如此已失其正道，其動必羞也。&lt;/p>
&lt;h2 id="九四貞吉悔亡憧憧往來朋從爾思">
 九四：貞吉，悔亡，憧憧往來，朋從爾思。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e8%b2%9e%e5%90%89%e6%82%94%e4%ba%a1%e6%86%a7%e6%86%a7%e5%be%80%e4%be%86%e6%9c%8b%e5%be%9e%e7%88%be%e6%80%9d">#&lt;/a>
&lt;/h2>
&lt;p>人之所動皆因感也，九四在中，乃當心臓之位，為心感之主，感之正則吉，不正則凶。今人以私心感人，所感狹小也。天地萬物各有不同，事亦變化萬千，能殊途同歸，此感之極至，必以公正無私方可行。人之向往，必有屈求，人之來至，必因有信，此屈信相感，利之&lt;/p>
&lt;h2 id="九五咸其脢无悔">
 九五：咸其&lt;strong>脢&lt;/strong>，无悔。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%92%b8%e5%85%b6%e8%84%a2%e6%97%a0%e6%82%94">#&lt;/a>
&lt;/h2>
&lt;p>居尊位之人，必以至誠感於天下，脢，背肉也，其與心相背，目所不見狀，此意能背其私心，感於非所見而能悦者，以人君可以無悔。今人不知，皆感於所見而悦，所不見而仇視之， 此感不正，招自凶亡也。&lt;/p>
&lt;h2 id="上六咸其輔頰舌">
 上六：咸其輔，頰，舌。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%92%b8%e5%85%b6%e8%bc%94%e9%a0%b0%e8%88%8c">#&lt;/a>
&lt;/h2>
&lt;p>上為感之極位，陰柔居之，此即不能以至誠感物，唯求於口舌之間感人，乃小人女子之常態，必不能動於人，故云頰。&lt;/p>
&lt;h2 id="象曰咸其拇志在外也">
 象曰：咸其拇，志在外也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%92%b8%e5%85%b6%e6%8b%87%e5%bf%97%e5%9c%a8%e5%a4%96%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>感應之志雖動，但未大，不足以進。初志之感與四相應，故曰在外。&lt;/p>
&lt;h2 id="象曰雖凶居吉順不害也">
 象曰：雖凶，居吉，順不害也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%96%e5%87%b6%e5%b1%85%e5%90%89%e9%a0%86%e4%b8%8d%e5%ae%b3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陰居二位，其得位中正，在咸之時，因質本柔，必戒以先動，求之必凶，守居不動吉。&lt;/p>
&lt;h2 id="象曰咸其股亦不處也志在隨人所執下也">
 象曰：咸其股，亦不處也，志在隨人，所執下也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%92%b8%e5%85%b6%e8%82%a1%e4%ba%a6%e4%b8%8d%e8%99%95%e4%b9%9f%e5%bf%97%e5%9c%a8%e9%9a%a8%e4%ba%ba%e6%89%80%e5%9f%b7%e4%b8%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人有陽剛之質，卻又不能自主，反隨於人而動，此所執者必卑賤甚也。&lt;/p>
&lt;p>所生處。&lt;/p></description></item><item><title>30離為火</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/30%E9%9B%A2%E7%82%BA%E7%81%AB/</link><pubDate>Tue, 14 Jan 2025 09:39:07 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/30%E9%9B%A2%E7%82%BA%E7%81%AB/</guid><description>&lt;h1 id="30離為火">
 30離為火
 &lt;a class="anchor" href="#30%e9%9b%a2%e7%82%ba%e7%81%ab">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦朱買臣被妻棄時，卜得之，知身必貴也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>人在虎背上立，官人執箭在岸上立，水中有船，二人分立兩岸。&lt;/strong>&lt;/p>
&lt;p>飛禽在網之課 大明當天之象&lt;/p>
&lt;p>陷於險難之中，必有所附麗，理之自然，離者麗也。離為火，火體中虛而能明照，故能麗於物而明也。人之明，必經險難，大風大浪過後，其經驗之累積，而後能明，此猶可人。&lt;/p>
&lt;p>今人雖歷災險，但仍不能明，吾人教授易經，其目的即希望世人，不須付出血的代價，亦能明，此中虛之廣義。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、人在虎背上立：行危不懼；難下也。&lt;/p>
&lt;p>二、 一船在江心：口舌相爭，無所適從也。三、官人執箭岸上立：在位之人，欲殺之象。此卦夫妻破散成仇，兄弟分家各自為王之課。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>離：利貞，亨，畜牝牛，吉。&lt;/p>
&lt;p>天下萬物莫不有所麗，其形即麗。人之所麗，必得貞正，得正可以亨通，人能附麗於正， 必能順於正道，從善如流為人之性，如牝牛之吉，牛之順道，由養而成，人之順德亦同，既附麗於正道，當有養以成其德也。&lt;/p>
&lt;h2 id="彖曰離麗也日月麗乎天百穀草木麗乎土-">
 彖曰：離，麗也。日月麗乎天，百穀草木麗乎土 。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%9b%a2%e9%ba%97%e4%b9%9f%e6%97%a5%e6%9c%88%e9%ba%97%e4%b9%8e%e5%a4%a9%e7%99%be%e7%a9%80%e8%8d%89%e6%9c%a8%e9%ba%97%e4%b9%8e%e5%9c%9f-">#&lt;/a>
&lt;/h2>
&lt;p>附麗狀，如日月麗於天，百穀草木麗於土 ，天下萬物必有所麗，無麗之物，人必視何麗方正，則能亨通也。&lt;/p>
&lt;h2 id="重明以麗乎正乃化成天下柔麗乎中正故亨是以畜牝牛吉也">
 重明以麗乎正，乃化成天下。柔麗乎中正，故亨。是以畜牝牛吉也。
 &lt;a class="anchor" href="#%e9%87%8d%e6%98%8e%e4%bb%a5%e9%ba%97%e4%b9%8e%e6%ad%a3%e4%b9%83%e5%8c%96%e6%88%90%e5%a4%a9%e4%b8%8b%e6%9f%94%e9%ba%97%e4%b9%8e%e4%b8%ad%e6%ad%a3%e6%95%85%e4%ba%a8%e6%98%af%e4%bb%a5%e7%95%9c%e7%89%9d%e7%89%9b%e5%90%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>上下皆離故曰重明，乃意君臣皆有明之能，又處事中正，故可以教化天下成文明之俗也。人又能柔順於中正之明德如牝牛之順吉，乃更能將明德發乎光大，襯托明德之麗。&lt;/p>
&lt;h2 id="象曰明兩作離大人以繼明照于四方">
 象曰：明兩作離，大人以繼明照于四方。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%98%8e%e5%85%a9%e4%bd%9c%e9%9b%a2%e5%a4%a7%e4%ba%ba%e4%bb%a5%e7%b9%bc%e6%98%8e%e7%85%a7%e4%ba%8e%e5%9b%9b%e6%96%b9">#&lt;/a>
&lt;/h2>
&lt;p>此卦若云兩離，則只見明，而不知繼明之德。君子觀離明相繼之象，知本身之明德能濟天下，為使以明德中正永傳後世，則須有進一步繼明之能，能明於選擇何人能承繼，乃繼明之義。如堯之擇舜，漢之蕭規曹隨等即是繼明之用。&lt;/p>
&lt;h2 id="初九履錯然敬之无咎">
 初九：履錯然，敬之，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%b1%a5%e9%8c%af%e7%84%b6%e6%95%ac%e4%b9%8b%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>初爻陽居之，乃言初進有陽剛之才而進又躁動，卻因動之非宜，已失居下位之分而得咎， 但因為人才，只須知守義而戒慎之，則不至於有咎。&lt;/p>
&lt;h2 id="六二黃離元吉">
 六二：黃離，元吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e9%bb%83%e9%9b%a2%e5%85%83%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>以柔居中乃得正位，黃為中色，人能文明而中正，則美之至極也。又有六五文明之君以順其德，其能明如此，乃大善之吉也。&lt;/p>
&lt;h2 id="九三日昃之離不鼓缶而歌則大耋之嗟凶">
 九三：日昃之離，不鼓缶而歌，則大耋之嗟，凶。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e6%97%a5%e6%98%83%e4%b9%8b%e9%9b%a2%e4%b8%8d%e9%bc%93%e7%bc%b6%e8%80%8c%e6%ad%8c%e5%89%87%e5%a4%a7%e8%80%8b%e4%b9%8b%e5%97%9f%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>易有八純卦，唯離為火於人事之義陳述最細。今九三吾人居下卦之終乃意前明將盡，後明當繼之時，人之有始，必有其終，此常道也。智慮通達之人，以順理為樂且常持之，如不能如此，則有將盡之悲，而日夜恐於死亡，故君子樂天，小人終日恐懼，此處易論生死之道也。&lt;/p>
&lt;h2 id="象曰履錯之敬以辟咎也">
 象曰：履錯之敬，以辟咎也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%a5%e9%8c%af%e4%b9%8b%e6%95%ac%e4%bb%a5%e8%be%9f%e5%92%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>能知履動之躁進為錯而敬慎之，因居下位，但求避之可也，不致有災。吾人有陽剛之才，仍須有明之能，能剛不能明，則因妄動生災也。&lt;/p>
&lt;h2 id="象曰黃離元吉得中道也">
 象曰：黃離元吉，得中道也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%bb%83%e9%9b%a2%e5%85%83%e5%90%89%e5%be%97%e4%b8%ad%e9%81%93%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>能成文明乃由中之虛明，故元吉之因，是由其得中之道也。&lt;/p>
&lt;h2 id="象曰日昃之離何可久也">
 象曰：日昃之離，何可久也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%97%a5%e6%98%83%e4%b9%8b%e9%9b%a2%e4%bd%95%e5%8f%af%e4%b9%85%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>日已倾，不可久也，能明之人，能求人以繼其事，知退而修其身，則可長久。&lt;/p>
&lt;h2 id="九四突如其來如焚如死如棄如">
 九四：突如、其來如、焚如、死如、棄如。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e7%aa%81%e5%a6%82%e5%85%b6%e4%be%86%e5%a6%82%e7%84%9a%e5%a6%82%e6%ad%bb%e5%a6%82%e6%a3%84%e5%a6%82">#&lt;/a>
&lt;/h2>
&lt;p>九四位，乃言繼明之初，承繼之意，但陽爻居之，有剛躁但不失中正之意，此非善繼者， 能知善繼之人，始繼必有謙讓之誠，知順承前賢之道。今突如其來，已失善繼，又剛勢凌主， 氣焰高張故焚如，必招禍害致死，故死如，以眾所棄之，故果為棄如。&lt;/p>
&lt;h2 id="六五出涕沱若戚嗟若吉">
 六五：出涕沱若，戚嗟若，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%87%ba%e6%b6%95%e6%b2%b1%e8%8b%a5%e6%88%9a%e5%97%9f%e8%8b%a5%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>出涕戚嗟，皆形容人憂懼至深。君位以陰柔之才居之，又受於陽剛之在左右，此居尊位之明，能知憂且畏，故能吉。今若自持己才之不足，全然不知懼，必不能得其吉也。&lt;/p>
&lt;h2 id="上九王用出征有嘉折首獲匪其醜无咎">
 上九：王用出征，有嘉。折首，獲匪其醜，无咎。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e7%8e%8b%e7%94%a8%e5%87%ba%e5%be%81%e6%9c%89%e5%98%89%e6%8a%98%e9%a6%96%e7%8d%b2%e5%8c%aa%e5%85%b6%e9%86%9c%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>陽剛之才居離之終，有剛明至極之狀。此方式乃適用之於君王出征時，明則足以察邪惡，剛則能斷事，施以威行，如此則能去天下之邪惡，此有功也。世上事至刑不足以阻時， 必用征伐方法解決，此之時也。去天下之邪惡， 如明斷之極，則必無所宽宥，此時必取其魁首， 始作俑者方是，趕盡誅滅，必有暴殘之後悔也。&lt;/p></description></item><item><title>29坎爲水</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/29%E5%9D%8E%E7%88%B2%E6%B0%B4/</link><pubDate>Tue, 14 Jan 2025 09:39:06 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/29%E5%9D%8E%E7%88%B2%E6%B0%B4/</guid><description>&lt;h1 id="29坎爲水">
 29坎爲水
 &lt;a class="anchor" href="#29%e5%9d%8e%e7%88%b2%e6%b0%b4">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦唐玄宗避祿山，卜得之，果身出九重也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>人在井中，人用繩引出，一牛一鼠，人身虎頭。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>船涉重灘之課 外虛中實之象&lt;/strong>&lt;/p>
&lt;p>大過之後，過至極必陷，坎者，陷也。重坎即重險，險中有險，此卦專論處險之道，如何用險等。&lt;/p>
&lt;h1 id="卦圖象解">
 卦圖象解
 &lt;a class="anchor" href="#%e5%8d%a6%e5%9c%96%e8%b1%a1%e8%a7%a3">#&lt;/a>
&lt;/h1>
&lt;p>一、人在井中：官司，牢獄，陷入險地象。&lt;/p>
&lt;p>二、人用繩引出：責人出手相救狀。&lt;/p>
&lt;p>三、一牛：勞苦也，春夏凶，秋冬吉，亦肖牛人。&lt;/p>
&lt;p>四、一鼠：肖鼠人，陰謀暗害者，暗藏也。&lt;/p>
&lt;p>五、人身虎頭：有權威之人，貴人也。&lt;/p>
&lt;h1 id="人間道">
 人間道
 &lt;a class="anchor" href="#%e4%ba%ba%e9%96%93%e9%81%93">#&lt;/a>
&lt;/h1>
&lt;p>&lt;strong>習坎：有孚，維心亨，行有尚。&lt;/strong>&lt;/p>
&lt;p>陽實在中，乃中有孚信，惟心誠正一，則能亨通，俗謂：至誠可以通金石，入水火，有何險難不可亨？&lt;mark>故出險之道在於誠一而行，否則常居險中也。&lt;/mark>&lt;/p>
&lt;p>&lt;strong>彖曰：習坎，重險也，水流而不盈，行險而不失其信。&lt;/strong>&lt;/p>
&lt;p>習有重覆之意，上下皆坎，即險中有險，水流而不盈，即動於險中仍未出險之時，吾人行險须不失其信，乃可吉。&lt;/p>
&lt;p>&lt;strong>維心亨，乃以剛中也。行有尚，往有功也。&lt;/strong>&lt;/p>
&lt;p>以剛中之道，抱持至誠之內實，天下何所不通，若止而不行，則常居險中也，故&lt;mark>坎險以能行為功&lt;/mark>。&lt;/p>
&lt;p>&lt;strong>天險不可升也，地險山川丘陵也，王公設險以守其國。險之時用大矣哉！&lt;/strong>&lt;/p>
&lt;p>天之險乃因高不可升，地之險為山川丘陵，諸王公觀坎之象，知險不可陵越，故設高牆深地為險，以守其國，保其人民，此用險之時也。人間亦然，凡知人之學，分尊卑，分貴賤，區分小人與君子，皆為用於杜絶災殃，限隔上下，此都是體悟了險之用也。&lt;/p>
&lt;p>&lt;strong>象曰：水洊至，習坎，君子以常德行，習敎事。&lt;/strong>&lt;/p>
&lt;p>水勢就下，由小而大，歷久不變，君子觀坎水之象，取其有常，不變其德性為真。如人之德行常變，則偽也。政治上發令行教，必使民熟於聞，人人皆從之，故有謂三令五申，即此意。&lt;/p>
&lt;p>&lt;strong>初六：習坎，入于坎窞，凶。&lt;/strong>&lt;/p>
&lt;p>初以陰柔居坎險之下，因無援，處不當， 不能出險，唯益陷深而已，故凶。&lt;/p>
&lt;p>&lt;strong>象曰：習坎入坎，失道凶也。&lt;/strong>&lt;/p>
&lt;p>由險中而加陷入險，乃失正道，加凶。&lt;/p>
&lt;p>&lt;strong>九二：坎有險，求小得。&lt;/strong>&lt;/p>
&lt;p>二爻位，乃陽陷二陰之中，即&lt;mark>至險而有險狀，但其本為剛中之才，故雖未出險，亦可自救&lt;/mark>，不至於愈險，故&lt;mark>君子處艱險而能自得，皆因剛中&lt;/mark>而已。&lt;mark>能剛則有才，能執中則動不失所宜&lt;/mark>。&lt;br>
&lt;strong>象曰：求小得，未出中也。&lt;/strong>&lt;/p>
&lt;p>此即雖有小得，雖不致於陷險，然亦未能出險狀。&lt;/p>
&lt;p>&lt;strong>六三：來之坎坎，險且枕，入于坎富，勿用。&lt;/strong>&lt;br>
六三位在坎險之時，以陰柔居而處不正， 走下則入險，向上則重險，故有&lt;mark>進與退皆遇險&lt;/mark>， 居又有險，枕乃處不安狀，此時唯&lt;mark>戒勿用&lt;/mark>方是。&lt;/p>
&lt;p>&lt;strong>象曰：來之坎坎，終无功也。&lt;/strong>&lt;/p>
&lt;p>以陰柔又處不正，動則唯益險，&lt;mark>人出險须有道&lt;/mark>，如失道，但為能求去，只益增困窮而己。&lt;/p>
&lt;p>&lt;strong>六四：樽酒，簋貳，用缶，納約自牖，終无咎。&lt;/strong>&lt;/p>
&lt;p>此言大臣當險難之時，唯有至誠於君，不可停交往，而又能打開使君能明之心，則可保无災。人欲求上之篤信，只有求質實而已，如多禮儀而尚服飾，反凶。一樽之酒，二簋之飯， 以瓦缶為器，乃求&lt;mark>質實&lt;/mark>之意。再處明之地以明君之心，如此方能入君心，即令艱險，亦可無咎。自古以來，只求剛直攻訐直言不諱之人， 多忤逆君心，而屬&lt;mark>温厚明辨&lt;/mark>者，反而能入君心， 改變君主。&lt;/p>
&lt;p>&lt;strong>象曰：樽酒簋貳，剛柔際也。&lt;/strong>&lt;/p>
&lt;p>但求實質，又剛中有柔，必平安。君臣之交能長久，不外乎誠實而已。&lt;/p>
&lt;p>&lt;strong>九五：坎不盈，衹。既平，无咎。&lt;/strong>&lt;/p>
&lt;p>此即九五之尊，有剛中之才，可以濟險， 但下無助，獨依君之力無法濟天下之險，則有咎，必待盈平，方可無咎。&lt;/p>
&lt;p>&lt;strong>象曰：坎不盈，中未大也。&lt;/strong>&lt;/p>
&lt;p>剛中之才得居君位，時天下險難，但&lt;mark>未至全險，其未能平險&lt;/mark>，乃因君臣無法協力相濟之故，故此君道未能救濟天下，乃因無臣，故曰不稱其位。&lt;/p>
&lt;p>&lt;strong>上六：係用徽纆，寘于叢棘，三歲不得，凶。&lt;/strong>&lt;br>
此意&lt;mark>陰柔而深陷險中&lt;/mark>，聖人以牢獄比喻， 縛以徽纏，囚置於叢棘之中，其不能出，至少三年不可免，其凶如此。&lt;/p>
&lt;p>&lt;strong>象曰：上六失道，凶三歲也。&lt;/strong>&lt;/p>
&lt;p>上六以陰柔而處險地，乃因其失道而成。其災延三年不得免，意久也。&lt;/p></description></item><item><title>28澤風大過</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/28%E6%BE%A4%E9%A2%A8%E5%A4%A7%E9%81%8E/</link><pubDate>Tue, 14 Jan 2025 09:39:04 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/28%E6%BE%A4%E9%A2%A8%E5%A4%A7%E9%81%8E/</guid><description>&lt;h1 id="28澤風大過">
 28澤風大過
 &lt;a class="anchor" href="#28%e6%be%a4%e9%a2%a8%e5%a4%a7%e9%81%8e">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦姜太公釣渭水，卜之，至八十方遇文王。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>官人乘車上，插兩旗，旗上有喜字， 入朱門，門外貴人立，文書在地，一合子。&lt;/strong>&lt;/p>
&lt;p>寒木生花之課 本末俱弱之象&lt;/p>
&lt;p>頤者，養也，萬物養而後能成，成而後動，動則有過，故大過次頤也。大過乃論過失之大與過人之大事也。舉凡世間事之大過於常者，皆是也，古聖人盡人道非過於理之正，如今之行過乎恭，喪過乎哀，用過乎儉，皆過之也。過人之大事，本不常見，故非常人能為之，如堯舜之襌讓，湯武之放伐，即立不世之功，乃過人之大事。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、官人乘車上插兩旗：車至官來，必有官司訴訟，軍人象。二、旗上有喜字且分開，乃喜有破損象，捨去婚姻象。&lt;/p>
&lt;p>三、入朱鬥：乃豪門世家相請，或朱姓人。四，、門外貴人立：被棄於外象。&lt;/p>
&lt;p>五、文書在地：合約，契約，不成之象。六、一合子：先成後破之象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>大過：棟橈，利有攸往，亨。&lt;/p>
&lt;p>小過與大過之分，乃小過為陰過於上下，大過乃陽過於中，上下皆弱，故有棟橈之象。此卦四陽居中，乃棟象，能任重也。即君子盛而小人衰，故利有攸往可亨。&lt;/p>
&lt;h2 id="彖曰大過大者過也">
 彖曰：大過，大者過也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%a4%a7%e9%81%8e%e5%a4%a7%e8%80%85%e9%81%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>犯過之大與成大過於人之事。&lt;/p>
&lt;h2 id="棟橈本末弱也">
 棟橈，本末弱也。
 &lt;a class="anchor" href="#%e6%a3%9f%e6%a9%88%e6%9c%ac%e6%9c%ab%e5%bc%b1%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>本末為陰而中為重陽，故為楝橈。&lt;/p>
&lt;h2 id="剛過而中巽而説行利有攸往乃亨">
 剛過而中，巽而説行，利有攸往，乃亨。
 &lt;a class="anchor" href="#%e5%89%9b%e9%81%8e%e8%80%8c%e4%b8%ad%e5%b7%bd%e8%80%8c%e8%aa%ac%e8%a1%8c%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e4%b9%83%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>雖因陽剛有過，但處不失中道，巽順和悦，無以私心，必利攸往，所以亨。&lt;/p>
&lt;h2 id="大過之時大矣哉">
 大過之時大矣哉！
 &lt;a class="anchor" href="#%e5%a4%a7%e9%81%8e%e4%b9%8b%e6%99%82%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>人能立非常之大事，立不世之大功，乃真大過，處之時得宜乃大哉。&lt;/p>
&lt;h2 id="象曰澤滅木大過君子以獨立不懼遯世无悶">
 象曰：澤滅木，大過。君子以獨立不懼，遯世无悶。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e6%bb%85%e6%9c%a8%e5%a4%a7%e9%81%8e%e5%90%9b%e5%ad%90%e4%bb%a5%e7%8d%a8%e7%ab%8b%e4%b8%8d%e6%87%bc%e9%81%af%e4%b8%96%e6%97%a0%e6%82%b6">#&lt;/a>
&lt;/h2>
&lt;p>澤本潤養於木，今至滅沒於木，此過之甚矣，為天地之象。君子（人才）觀大過之象，以立其大過於人之行，其所以能大過於人者，乃其能獨立不懼，天下誹之亦無動其心，舉世不見&lt;/p>
&lt;p>知而不悔，隱世而不憂悶，如此方能自守，此為其能大過於人也。&lt;/p>
&lt;h2 id="初六藉用白茅无咎">
 初六：藉用白茅，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e8%97%89%e7%94%a8%e7%99%bd%e8%8c%85%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>此以陰柔而處卑下，易藉用茅為至薄之物，但用之亦很慎重，此為敬慎之至也，故可以無災。&lt;/p>
&lt;h2 id="九二枯陽生稊老夫得其女妻-无不利">
 九二：枯陽生稊，老夫得其女妻， 无不利。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e6%9e%af%e9%99%bd%e7%94%9f%e7%a8%8a%e8%80%81%e5%a4%ab%e5%be%97%e5%85%b6%e5%a5%b3%e5%a6%bb-%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>二為柔位，陽剛居柔，是過剛之人而能以中自處，與柔相濟，其功如老夫之得女妻，則&lt;/p>
&lt;h2 id="九三棟橈凶">
 九三：棟橈，凶。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e6%a3%9f%e6%a9%88%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>九三以太過之陽剛自居，又不得中道，此剛過之甚，其動必違和於中，拂逆眾心，故即以棟樑之才，而無人自輔，安能當大過之任乎？故凶。君子居大過之時，立大過之功，非剛柔適中，得人之輔，則不能也。&lt;/p>
&lt;h2 id="九四棟隆吉-有它吝">
 九四：棟隆，吉 ，有它吝。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e6%a3%9f%e9%9a%86%e5%90%89-%e6%9c%89%e5%ae%83%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>此近君之位，又當大過之任，以剛處柔則能相濟，是吉也。但如有異志，則剛必失中， 此加累於陽剛，雖不致有大害，但亦可吝也。&lt;/p>
&lt;h2 id="九五枯楊生華老婦得其士夫-无咎无譽">
 九五：枯楊生華，老婦得其士夫， 无咎无譽。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e6%9e%af%e6%a5%8a%e7%94%9f%e8%8f%af%e8%80%81%e5%a9%a6%e5%be%97%e5%85%b6%e5%a3%ab%e5%a4%ab-%e6%97%a0%e5%92%8e%e6%97%a0%e8%ad%bd">#&lt;/a>
&lt;/h2>
&lt;p>君位處大過之時，下無助援，就如枯楊不生根而生外表，其表秀雖可見，但卻無益於枯也。猶如老婦之與士夫，此雖无咎，但非美也， 其可醜乎。&lt;/p>
&lt;h2 id="上六過涉滅頂凶无咎">
 上六：過涉滅頂，凶，无咎。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e9%81%8e%e6%b6%89%e6%bb%85%e9%a0%82%e5%87%b6%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>此陰柔又處過之極者，乃小人過之極也， 小人之大過，並非能做大過於人之事也，而是過越常理，不體恤危亡，犯險闖禍而已，如涉水而至滅頂，必凶。此自取其辱，无所怨尤。&lt;/p></description></item><item><title>27山雷頤</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/27%E5%B1%B1%E9%9B%B7%E9%A0%A4/</link><pubDate>Tue, 14 Jan 2025 09:39:03 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/27%E5%B1%B1%E9%9B%B7%E9%A0%A4/</guid><description>&lt;h1 id="27山雷頤">
 27山雷頤
 &lt;a class="anchor" href="#27%e5%b1%b1%e9%9b%b7%e9%a0%a4">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;/p>
&lt;p>此卦張騫尋黄河源，卜得之，乃知登天位也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>雨下，三小兒，日當天，香案，金紫官人引一人。&lt;/strong>&lt;/p>
&lt;p>龍隱清潭之課 遷善遠惡之象&lt;/p>
&lt;p>萬物畜聚之後，必有所養，無養不成，故頤者，養也，次大畜之序卦。上艮下震，乃上止而下動，外實中虛象，如人頷頤物於口中象。人之口所以飲食，乃能養人之身，此為頤。此論頤養之道，大至於天地養萬物，聖人養賢，人之養生，養形，養德，養人，養才，皆屬頤養之道。&lt;/p>
&lt;p>一、雨下：受恩澤也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>二、三小兒：乃合心之象，有德之國也。三、日當天：君明之象。父全。&lt;/p>
&lt;p>四、香案：求取之象。&lt;/p>
&lt;p>五、金紫官人：天子身側之人。六、引一人：提攜，推薦也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>頤：貞吉，觀頤，自求口實。&lt;/p>
&lt;p>頤之養人，君子觀之，自求口實之道，乃養君子。口不實又不知養，小人。&lt;/p>
&lt;h2 id="彖曰頤貞吉養正則吉也觀頤觀其所養也自求口實觀其自養也天地養萬物聖人養賢以及萬民頤之時大矣哉">
 彖曰：頤，貞吉，養正則吉也，觀頤，觀其所養也，自求口實，觀其自養也。天地養萬物，聖人養賢以及萬民，頤之時大矣哉！
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%a0%a4%e8%b2%9e%e5%90%89%e9%a4%8a%e6%ad%a3%e5%89%87%e5%90%89%e4%b9%9f%e8%a7%80%e9%a0%a4%e8%a7%80%e5%85%b6%e6%89%80%e9%a4%8a%e4%b9%9f%e8%87%aa%e6%b1%82%e5%8f%a3%e5%af%a6%e8%a7%80%e5%85%b6%e8%87%aa%e9%a4%8a%e4%b9%9f%e5%a4%a9%e5%9c%b0%e9%a4%8a%e8%90%ac%e7%89%a9%e8%81%96%e4%ba%ba%e9%a4%8a%e8%b3%a2%e4%bb%a5%e5%8f%8a%e8%90%ac%e6%b0%91%e9%a0%a4%e4%b9%8b%e6%99%82%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>吾人所養之人及養生之道，皆不外自求口實，皆以正則吉。聖人養賢，使之為天位，使之食天祿，為求賢才施惠於天下。此養賢即養萬民也。&lt;/p>
&lt;h2 id="象曰山下有雷頤君子以慎言語節飲食">
 象曰：山下有雷，頤。君子以慎言語，節飲食。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8b%e6%9c%89%e9%9b%b7%e9%a0%a4%e5%90%9b%e5%ad%90%e4%bb%a5%e6%85%8e%e8%a8%80%e8%aa%9e%e7%af%80%e9%a3%b2%e9%a3%9f">#&lt;/a>
&lt;/h2>
&lt;p>以象言，雷震於山下，萬物根動而萌芽，此天地養之象。君子知口所以養身，故慎言語以養其德，節制飲食以養身。&lt;/p>
&lt;h2 id="初九舍爾靈龜觀我朵頤凶">
 初九：舍爾靈龜，觀我朵頤，凶。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e8%88%8d%e7%88%be%e9%9d%88%e9%be%9c%e8%a7%80%e6%88%91%e6%9c%b5%e9%a0%a4%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>龜之性，能咽息不食，可以不求養於外， 故為靈，即明智，而人口腹之慾既動，則必失所養，故凶。&lt;/p>
&lt;h2 id="象曰觀我朵頤亦不足貴也">
 象曰：觀我朵頤，亦不足貴也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e8%a7%80%e6%88%91%e6%9c%b5%e9%a0%a4%e4%ba%a6%e4%b8%8d%e8%b6%b3%e8%b2%b4%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人之動為慾，即使有剛健之才，再明智， 終亦必失，故不足貴也。&lt;/p>
&lt;h2 id="六二顚頤拂經于丘頤征凶">
 六二：顚頤，拂經，于丘頤，征凶。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e9%a1%9a%e9%a0%a4%e6%8b%82%e7%b6%93%e4%ba%8e%e4%b8%98%e9%a0%a4%e5%be%81%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>養之道正，在以上養下，天子養天下，養臣子，臣食君祿，皆以上養下。今女不能自處必從男，陰不能獨立必從於陽，此二爻不能自養反求下之陽剛，故為顛倒，拂違常理，故不可行。丘即上九，為在外而高之物，故往而必凶，此即意示人之才不足以自養，見在上位勢足養人，即非同類之君子，妄往求之，取辱必矣。&lt;/p>
&lt;h2 id="六三拂頤貞凶十年勿用无攸利">
 六三：拂頤，貞凶，十年勿用，无攸利。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e6%8b%82%e9%a0%a4%e8%b2%9e%e5%87%b6%e5%8d%81%e5%b9%b4%e5%8b%bf%e7%94%a8%e6%97%a0%e6%94%b8%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>邪柔又動之不正，違反頤之正道，故凶。&lt;/p>
&lt;h2 id="六四顚頤吉虎視眈眈其欲逐逐无咎">
 六四：顚頤，吉，虎視眈眈，其欲逐逐，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e9%a1%9a%e9%a0%a4%e5%90%89%e8%99%8e%e8%a6%96%e7%9c%88%e7%9c%88%e5%85%b6%e6%ac%b2%e9%80%90%e9%80%90%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>陰柔居大臣之位，陰柔不足以自養，如何養天下？今如與初陽剛相應，而柔順於初陽之賢正，吉。故如己之才不足以養天下，但知求在下之賢而順從之，亦可吉也。但須養其威嚴， 眈眈如虎視，以免因己才之陰柔不足養，而受人輕視，造成犯上。但亦須注意所須用者，必逐逐相繼而不缺，若唯取於人又不能繼，困窮&lt;/p>
&lt;h2 id="六五拂經居貞吉不可涉大川">
 六五：拂經，居貞吉，不可涉大川。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e6%8b%82%e7%b6%93%e5%b1%85%e8%b2%9e%e5%90%89%e4%b8%8d%e5%8f%af%e6%b6%89%e5%a4%a7%e5%b7%9d">#&lt;/a>
&lt;/h2>
&lt;p>君位乃養人者，但其質如陰柔，即才不足以養天下，而能順從於陽剛（師）之賢，賴其以濟天下，必須有居安篤信之心，全般信賴， 則可輔其身，德澤天下，故吉。但此種狀況可依賴賢能之人於平時，不可於有困艱生變故之時，否則招凶。&lt;/p>
&lt;h2 id="上九由頤厲吉利涉大川">
 上九：由頤，厲吉，利涉大川。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e7%94%b1%e9%a0%a4%e5%8e%b2%e5%90%89%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d">#&lt;/a>
&lt;/h2>
&lt;p>此以陽剛之德，任師之職，君位從而篤信， 天下得養也，但須夕惕若厲，戒慎恐懼，方能濟天下之危，故利涉大川。&lt;/p>
&lt;h2 id="象曰六二征凶行失類也">
 象曰：六二征凶，行失類也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%ad%e4%ba%8c%e5%be%81%e5%87%b6%e8%a1%8c%e5%a4%b1%e9%a1%9e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>征而從上，又非其類，故人求非同類，必得凶矣。&lt;/p>
&lt;p>十為數之終，故終不可用，無所往而利。&lt;/p>
&lt;h2 id="象曰十年勿用道大悖也">
 象曰：十年勿用，道大悖也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%8d%81%e5%b9%b4%e5%8b%bf%e7%94%a8%e9%81%93%e5%a4%a7%e6%82%96%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此戒之終不可用，凡人邪而柔，又欲動， 反正道大也，此戒之。&lt;/p></description></item><item><title>26山天大畜</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/26%E5%B1%B1%E5%A4%A9%E5%A4%A7%E7%95%9C/</link><pubDate>Tue, 14 Jan 2025 09:39:02 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/26%E5%B1%B1%E5%A4%A9%E5%A4%A7%E7%95%9C/</guid><description>&lt;h1 id="26山天大畜">
 26山天大畜
 &lt;a class="anchor" href="#26%e5%b1%b1%e5%a4%a9%e5%a4%a7%e7%95%9c">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦昔神堯，卜得之，果登天位也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>一鹿一馬，月下有文書，官人憑欄， 盆內蒼發茂盛。&lt;/strong>&lt;/p>
&lt;p>龍潛大壑之課 積小成大之象&lt;/p>
&lt;p>無妄則至善，可以積畜，故大畜為序卦。畜為止，又為聚，止而後聚，此卦天至大，而在山中，有所畜至大之象。外止內健為畜象，吾人視萬物外則無欲，即止也。內則運行不斷，必有大積畜於其中。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、一鹿一馬：祿馬交馳，大富之象。&lt;/p>
&lt;p>二、月下有文書：明而有往，中秋時節，文書在空中尚未到手。&lt;/p>
&lt;p>三、官人憑欄：無事狀，遥望所失之國度。又欄為木，人靠木，休也。棺也。四、花在盆中：有限也。&lt;/p>
&lt;h2 id="此卦求官不利求財大利">
 此卦求官不利，求財大利。
 &lt;a class="anchor" href="#%e6%ad%a4%e5%8d%a6%e6%b1%82%e5%ae%98%e4%b8%8d%e5%88%a9%e6%b1%82%e8%b2%a1%e5%a4%a7%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>大畜：利貞，不家食，吉，利涉大川。&lt;/p>
&lt;p>大畜於人亦同，人之畜在學術道德充積於內，乃至大之畜，若為邪端異説畜又何用？今人重大畜於錢財，不重視學術修養，所畜何用？不為大畜。&lt;/p>
&lt;h2 id="彖曰大畜剛健篤實輝光日新其德">
 彖曰：大畜剛健，篤實輝光，日新其德。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%a4%a7%e7%95%9c%e5%89%9b%e5%81%a5%e7%af%a4%e5%af%a6%e8%bc%9d%e5%85%89%e6%97%a5%e6%96%b0%e5%85%b6%e5%be%b7">#&lt;/a>
&lt;/h2>
&lt;p>人须能剛健篤實，其畜乃大，又因充實而光辉，德必日新。&lt;/p>
&lt;h2 id="剛上而尚賢能止健大正也">
 剛上而尚賢，能止健，大正也。
 &lt;a class="anchor" href="#%e5%89%9b%e4%b8%8a%e8%80%8c%e5%b0%9a%e8%b3%a2%e8%83%bd%e6%ad%a2%e5%81%a5%e5%a4%a7%e6%ad%a3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>居尊位能剛明用賢，又能持之永恆，此大正之道。今之君王剛而不明，用人乃因私慾，而不以賢能為基準，故非大正之道。&lt;/p>
&lt;h2 id="不家食吉養賢也利涉大川應乎天也">
 不家食吉，養賢也；利涉大川，應乎天也。
 &lt;a class="anchor" href="#%e4%b8%8d%e5%ae%b6%e9%a3%9f%e5%90%89%e9%a4%8a%e8%b3%a2%e4%b9%9f%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d%e6%87%89%e4%b9%8e%e5%a4%a9%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>大畜學術道德之人，施其所畜，利於天下，因而不在家食，乃吉。能涉大川而無險，乃應乎天地也。&lt;/p>
&lt;h2 id="象曰天在山中大畜君子以多識前言往行以畜其德">
 象曰：天在山中，大畜，君子以多識前言往行，以畜其德。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e5%9c%a8%e5%b1%b1%e4%b8%ad%e5%a4%a7%e7%95%9c%e5%90%9b%e5%ad%90%e4%bb%a5%e5%a4%9a%e8%ad%98%e5%89%8d%e8%a8%80%e5%be%80%e8%a1%8c%e4%bb%a5%e7%95%9c%e5%85%b6%e5%be%b7">#&lt;/a>
&lt;/h2>
&lt;p>君子觀天之至大而畜山中，故知人之能畜大，乃由學而大，學之道在多聞古聖賢之言行， 取長為己用，察言以求其內心，乃大畜之真義。&lt;/p>
&lt;h2 id="初九有厲利己">
 初九：有厲，利己。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%9c%89%e5%8e%b2%e5%88%a9%e5%b7%b1">#&lt;/a>
&lt;/h2>
&lt;p>初爻為陽剛，必上進不已，則有危厲，此時，利在己之畜而不進，待與上合志乃動。&lt;/p>
&lt;h2 id="九二輿説輹">
 九二：輿説輹。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e8%bc%bf%e8%aa%ac%e8%bc%b9">#&lt;/a>
&lt;/h2>
&lt;p>二為六五位所對應，雖陽剛但亦不可力進，進則如車輪脱軸，不得行也。&lt;/p>
&lt;h2 id="九三良馬逐利艱貞曰閑輿衛-利有攸往">
 九三：良馬逐，利艱貞，曰閑輿衛， 利有攸往。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e8%89%af%e9%a6%ac%e9%80%90%e5%88%a9%e8%89%b1%e8%b2%9e%e6%9b%b0%e9%96%91%e8%bc%bf%e8%a1%9b-%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80">#&lt;/a>
&lt;/h2>
&lt;p>三為相位，以剛健之才，能與上位合志而同進，就如良馬之馳，速也。唯雖速，但須切&lt;/p>
&lt;h2 id="六四童牛之牿元吉">
 六四：童牛之牿，元吉。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e7%ab%a5%e7%89%9b%e4%b9%8b%e7%89%bf%e5%85%83%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此言近君位之人，须上畜止人君之邪心， 下畜止天下之惡。凡人之惡能止於初始，則易如童牛加桎梏。俟惡盛而後禁，必相隔而難勝。故聖人止惡於初。&lt;/p>
&lt;h2 id="六五豶豕之牙吉">
 六五：豶豕之牙，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e8%b1%b6%e8%b1%95%e4%b9%8b%e7%89%99%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>豬之去勢，則雖有牙，而剛躁必自止。君子體之，知天下之惡，不可力制之，須査其根本，不靠刑法嚴峻而能止惡。聖人教修政教， 使人人足用，知廉恥之心，方為至善。&lt;/p>
&lt;h2 id="上九何天之衢亨">
 上九：何天之衢，亨。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e4%bd%95%e5%a4%a9%e4%b9%8b%e8%a1%a2%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>大畜之道，能如行空中，橫行無阻，必散之天下，吉也。&lt;/p>
&lt;h2 id="象曰有厲利己不犯災也">
 象曰：有厲利己，不犯災也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%9c%89%e5%8e%b2%e5%88%a9%e5%b7%b1%e4%b8%8d%e7%8a%af%e7%81%bd%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此即不度局勢而進，不利己，乃災至。戒不可犯危而行。&lt;/p></description></item><item><title>25天雷无妄</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/25%E5%A4%A9%E9%9B%B7%E6%97%A0%E5%A6%84/</link><pubDate>Tue, 14 Jan 2025 09:39:01 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/25%E5%A4%A9%E9%9B%B7%E6%97%A0%E5%A6%84/</guid><description>&lt;h1 id="25天雷无妄">
 25天雷无妄
 &lt;a class="anchor" href="#25%e5%a4%a9%e9%9b%b7%e6%97%a0%e5%a6%84">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦李廣，卜得之，後凡為事皆不利也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>官人射鹿，鹿啣文書，錢一堆在水中，一鼠一豬。&lt;/strong>&lt;/p>
&lt;p>石中蘊玉之課 守舊安常之象&lt;/p>
&lt;p>因復於道，合於正理，則无妄，故復之後受以无妄。卦乾上震下，此言動以天則為无妄， 如動以人慾則生妄矣。故无妄之義大也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、官人射鹿：自亂陣腳。二、鹿啣文書：財訊至也。&lt;/p>
&lt;p>三、錢一堆在水中：得財遇險之象。險中求財，憂心忡忡也。四、一鼠一豬：遇子、亥年吉，肖鼠人陰謀，肖豬人黑心。&lt;/p>
&lt;p>又可以子、亥為孩，亦即孩無子為亥，缺子象。又六字不全，亥月凶，無尾凶， 不足六歲，為五歲凶死。&lt;/p>
&lt;p>天機象：犬、豬、牛、羊：叱之即去。雞、魚、鵝、鴨：欲用則不生。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>无妄：元，亨，利，貞，其匪正有眚，不利有攸往。&lt;/p>
&lt;p>无妄即至誠也。至誠為天道。天能化育萬物，生生不息，且各正其性，此无妄也。人如能合於无妄之道，則能與天地合德，故大吉，君子行無妄之道，能致大吉，須戒在堅心，如失貞， 則致災。今人本無邪心，但如不合正理，則妄亦邪心也。&lt;/p>
&lt;p>彖曰：无妄，剛自外來而爲主於内。動而健，剛中而應，大亨以正，天之命也。&lt;/p>
&lt;p>動以天則无妄，今人動以人慾。剛自外而入主於內，乃以正去妄之象。上健而下動，內動而外健，其動乃剛，理正氣壯，道乃大亨，此天道也。今人動之以慾，而無法示誠於外，不夠剛明，乃因內不實，此致妄矣。&lt;/p>
&lt;h2 id="其匪正有眚不利有攸往无妄之往何之矣天命不祐行矣哉">
 其匪正有眚，不利有攸往，无妄之往，何之矣。天命不祐，行矣哉？
 &lt;a class="anchor" href="#%e5%85%b6%e5%8c%aa%e6%ad%a3%e6%9c%89%e7%9c%9a%e4%b8%8d%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e6%97%a0%e5%a6%84%e4%b9%8b%e5%be%80%e4%bd%95%e4%b9%8b%e7%9f%a3%e5%a4%a9%e5%91%bd%e4%b8%8d%e7%a5%90%e8%a1%8c%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>无妄，即正也，小失於正，乃妄。入於妄，不知復，乃更往，則必悖天理，為天道所不容， 不可行也。&lt;/p>
&lt;h2 id="象曰天下雷行物與无妄先王以茂對時育萬物">
 象曰：天下雷行，物與无妄，先王以茂對時育萬物。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e4%b8%8b%e9%9b%b7%e8%a1%8c%e7%89%a9%e8%88%87%e6%97%a0%e5%a6%84%e5%85%88%e7%8e%8b%e4%bb%a5%e8%8c%82%e5%b0%8d%e6%99%82%e8%82%b2%e8%90%ac%e7%89%a9">#&lt;/a>
&lt;/h2>
&lt;p>雷行天下，陰陽和而成聲，生發萬物，各正性命，其發而无妄，先王觀此象，體天之道， 養育人民，使各正性命，乃對時育物之道也。&lt;/p>
&lt;h2 id="初九无妄往吉">
 初九：无妄，往吉。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%97%a0%e5%a6%84%e5%be%80%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>初進陽剛在內，以无妄之天理行之於外， 故往吉。&lt;/p>
&lt;h2 id="六二不耕穫不菑畬則利有攸往">
 六二：不耕穫，不菑畬，則利有攸往。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e4%b8%8d%e8%80%95%e7%a9%ab%e4%b8%8d%e8%8f%91%e7%95%ac%e5%89%87%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80">#&lt;/a>
&lt;/h2>
&lt;p>人之欲即妄，理之自然者，非妄，今以耕穫喻之，農耕後之穫，乃理之自然也。田一歲為『菑』，三歲曰『畬』，有耕而有穫，有菑而有畬，聖人順時而作，乃為聖也，讀易之人， 能知時順勢，得易之道矣。&lt;/p>
&lt;h2 id="六三无妄之災或繫之牛行人之得邑人之災">
 六三：无妄之災，或繫之牛，行人之得，邑人之災。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e6%97%a0%e5%a6%84%e4%b9%8b%e7%81%bd%e6%88%96%e7%b9%ab%e4%b9%8b%e7%89%9b%e8%a1%8c%e4%ba%ba%e4%b9%8b%e5%be%97%e9%82%91%e4%ba%ba%e4%b9%8b%e7%81%bd">#&lt;/a>
&lt;/h2>
&lt;p>人之妄動，由己之欲也，妄動有得，亦必有失，陰柔居相位，動乃因妄，失之大在欲， 故妄得之福，災亦隨之，妄得之得，失亦來之， 皆非真得也。&lt;/p>
&lt;h2 id="九四可貞无咎">
 九四：可貞，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e5%8f%af%e8%b2%9e%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>四位剛而居之，剛則必無私，永不生妄。&lt;/p>
&lt;h2 id="九五无亡之疾勿藥有喜">
 九五：无亡之疾，勿藥有喜。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e6%97%a0%e4%ba%a1%e4%b9%8b%e7%96%be%e5%8b%bf%e8%97%a5%e6%9c%89%e5%96%9c">#&lt;/a>
&lt;/h2>
&lt;p>九五為尊位，以陽剛應之，下又以陽剛中正順應，則致善也。即令有小疵，不須去治而自癒，如持之以恆，則平安無災，戒之在動， 一動生妄，故人君之无妄道即在此。&lt;/p>
&lt;h2 id="上九无妄行有眚无攸利">
 上九：无妄，行有眚，无攸利。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e6%97%a0%e5%a6%84%e8%a1%8c%e6%9c%89%e7%9c%9a%e6%97%a0%e6%94%b8%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>此位為卦之極，无妄已至善，人至無妄， 又復行，理必過也。過於理，則生妄。&lt;/p>
&lt;h2 id="象曰无妄之往得志也">
 象曰：无妄之往，得志也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%97%a0%e5%a6%84%e4%b9%8b%e5%be%80%e5%be%97%e5%bf%97%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>无妄乃誠也，人之至誠，物無不動，君子以之修身則身正，以之治事則得理，以之待人則人化，无往不利也。&lt;/p>
&lt;h2 id="象曰不耕穫未富也">
 象曰：不耕穫，未富也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b8%8d%e8%80%95%e7%a9%ab%e6%9c%aa%e5%af%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>心念於始耕菑之時，乃為求畬，此所以為富。心有欲而為，則妄。故易言人之行但求合於自然，不為人欲所動，故能勝己之欲為大勇也。&lt;/p></description></item><item><title>24地雷復</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/24%E5%9C%B0%E9%9B%B7%E5%BE%A9/</link><pubDate>Tue, 14 Jan 2025 09:39:00 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/24%E5%9C%B0%E9%9B%B7%E5%BE%A9/</guid><description>&lt;h1 id="24地雷復">
 24地雷復
 &lt;a class="anchor" href="#24%e5%9c%b0%e9%9b%b7%e5%be%a9">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦唐太宗歸天，卜得之，七日復還魂也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>官人乘車，上兩隻旗，堠上東字，一將持刀立，一兔一虎。&lt;/strong>&lt;/p>
&lt;p>淘沙見金之課 反復往來之象&lt;/p>
&lt;p>萬物無剝盡之理，故剝極必復來。復為之序卦。此卦一陽生於五陰之下，有陰極生陽象， 如同冬至極寒，則必生陽，亦同。雷在地下，有復生之象，外順內動，此為復之始。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、官人乘車：使節也；車姓、連姓也；軍隊也；官大也；調職也。二、上兩隻旗：鬥也；將、帥也；一方之主也。&lt;/p>
&lt;p>三、堠上東字：猴發木形人。東：有心約束，十八日至。十日來人封侯象。四、一將持刀立：武威之人，司法執行人。&lt;/p>
&lt;p>五、一兔：肖兔之人，劉姓之人。六、一虎：肖虎之人，王姓之人。&lt;/p>
&lt;p>此卦云：君子之道，既消而復，始復必不能力勝小人，必待其朋類渐盛，協力致勝可也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>復：亨，出入无疾，朋來无咎。&lt;/p>
&lt;p>萬物既復則必亨，如君子之道將復，雖微，但同類將渐進，故亨且盛矣。故復之時至，並無法立勝小人，必待其同朋相繼，則協力能勝也。&lt;/p>
&lt;h2 id="反復其道七日來復利有攸往">
 反復其道，七日來復，利有攸往。
 &lt;a class="anchor" href="#%e5%8f%8d%e5%be%a9%e5%85%b6%e9%81%93%e4%b8%83%e6%97%a5%e4%be%86%e5%be%a9%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80">#&lt;/a>
&lt;/h2>
&lt;p>此為消長之道，易之論數，以立準則，小有七日乃復，大有七年方復，此復之道也。&lt;/p>
&lt;h2 id="彖曰復亨剛反動而以順行是以出入无疾朋來无咎">
 彖曰：復，亨。剛反，動而以順行，是以出入无疾，朋來无咎。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%be%a9%e4%ba%a8%e5%89%9b%e5%8f%8d%e5%8b%95%e8%80%8c%e4%bb%a5%e9%a0%86%e8%a1%8c%e6%98%af%e4%bb%a5%e5%87%ba%e5%85%a5%e6%97%a0%e7%96%be%e6%9c%8b%e4%be%86%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>此以卦才來論，復之道，陽剛因消弱至極而反來，其法動而取順行法，是故出入皆無災， 朋之來，亦因順而動來也。&lt;/p>
&lt;h2 id="反復其道七日來復天行也利有攸往剛長也復其見天地之心乎">
 反復其道，七日來復，天行也。利有攸往，剛長也；復其見天地之心乎！
 &lt;a class="anchor" href="#%e5%8f%8d%e5%be%a9%e5%85%b6%e9%81%93%e4%b8%83%e6%97%a5%e4%be%86%e5%be%a9%e5%a4%a9%e8%a1%8c%e4%b9%9f%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e5%89%9b%e9%95%b7%e4%b9%9f%e5%be%a9%e5%85%b6%e8%a6%8b%e5%a4%a9%e5%9c%b0%e4%b9%8b%e5%bf%83%e4%b9%8e">#&lt;/a>
&lt;/h2>
&lt;p>復之返來，順天之運行，故言七日。因君子道長，故利前往，陽復生於下，乃是天地生物之心，以為動之始也，故外見動，而始生於內也。&lt;/p>
&lt;h2 id="象曰雷在地中復先王以至日閉關商旅不行后不省方">
 象曰：雷在地中，復。先王以至日閉關，商旅不行，后不省方。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b7%e5%9c%a8%e5%9c%b0%e4%b8%ad%e5%be%a9%e5%85%88%e7%8e%8b%e4%bb%a5%e8%87%b3%e6%97%a5%e9%96%89%e9%97%9c%e5%95%86%e6%97%85%e4%b8%8d%e8%a1%8c%e5%90%8e%e4%b8%8d%e7%9c%81%e6%96%b9">#&lt;/a>
&lt;/h2>
&lt;p>以卦象而言，如雷乃陰陽相搏而成聲，時陽之微，未能發也。如聖人順天之道，於日陽之&lt;/p>
&lt;p>始生，安靜養之以閉關，使商旅不得行，人君不視四方，此順天也，於人亦以此安養其陽為復原之道。&lt;/p>
&lt;h2 id="初九不遠復无祇悔元吉">
 初九：不遠復，无祇悔，元吉。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e4%b8%8d%e9%81%a0%e5%be%a9%e6%97%a0%e7%a5%87%e6%82%94%e5%85%83%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>有失而後有復，此復之始時，因失之不遠， 故復必不至於悔，故吉。&lt;/p>
&lt;h2 id="六二休復吉">
 六二：休復，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e4%bc%91%e5%be%a9%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>二為切近初陽之位，君子道始生於下，若二位志向於陽，今陽在下從之，故能下之道為仁。吉。&lt;/p>
&lt;h2 id="六三頻復厲无咎">
 六三：頻復，厲，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e9%a0%bb%e5%be%a9%e5%8e%b2%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>從復之道，又頻復履失，致危之道也。故須厲，即戒此可无咎，頻失致危，其過乃在失而不復也。今人迷途不知返，比之皆是，又知返而不戒又入迷，凶也。&lt;/p>
&lt;h2 id="六四中行獨復">
 六四：中行獨復。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e4%b8%ad%e8%a1%8c%e7%8d%a8%e5%be%a9">#&lt;/a>
&lt;/h2>
&lt;p>四於眾陰之間，能自處於正，但因力弱， 不足克濟，此言獨復，不一定無災。&lt;/p>
&lt;h2 id="六五敦復无悔">
 六五：敦復，无悔。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e6%95%a6%e5%be%a9%e6%97%a0%e6%82%94">#&lt;/a>
&lt;/h2>
&lt;p>君王於復之道，能敦篤而行之，但臣下均陰柔之輩，因無助，但能無悔而不能無災，君子戒之。&lt;/p>
&lt;h2 id="上六迷復凶有災眚用行師-終有大敗以其國君凶至于十年不克征">
 上六：迷復，凶，有災眚，用行師， 終有大敗，以其國君凶，至于十年不克征。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e8%bf%b7%e5%be%a9%e5%87%b6%e6%9c%89%e7%81%bd%e7%9c%9a%e7%94%a8%e8%a1%8c%e5%b8%ab-%e7%b5%82%e6%9c%89%e5%a4%a7%e6%95%97%e4%bb%a5%e5%85%b6%e5%9c%8b%e5%90%9b%e5%87%b6%e8%87%b3%e4%ba%8e%e5%8d%81%e5%b9%b4%e4%b8%8d%e5%85%8b%e5%be%81">#&lt;/a>
&lt;/h2>
&lt;p>陰柔居復之終，乃意終迷不復者，大凶。招凶，皆因己之迷而不返，動則必有過失，以之出師必大敗，以之為國君，大凶。迷於道，&lt;/p>
&lt;h2 id="象曰不遠之復以脩身也">
 象曰：不遠之復，以脩身也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b8%8d%e9%81%a0%e4%b9%8b%e5%be%a9%e4%bb%a5%e8%84%a9%e8%ba%ab%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此即知不善而速改，為君子修身之道。學問之道即在此，知不對立改，為君子也。&lt;/p>
&lt;h2 id="象曰休復之吉以下仁也">
 象曰：休復之吉，以下仁也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%bc%91%e5%be%a9%e4%b9%8b%e5%90%89%e4%bb%a5%e4%b8%8b%e4%bb%81%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>仁者天下之公，善之本源，能體會而近於下之仁，乃休復之美。&lt;/p></description></item><item><title>23山地剝</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/23%E5%B1%B1%E5%9C%B0%E5%89%9D/</link><pubDate>Tue, 14 Jan 2025 09:38:59 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/23%E5%B1%B1%E5%9C%B0%E5%89%9D/</guid><description>&lt;h1 id="23山地剝">
 23山地剝
 &lt;a class="anchor" href="#23%e5%b1%b1%e5%9c%b0%e5%89%9d">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦尉遲將軍與金牙鬥爭，卜得之，不利男子。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>婦人床上坐，風中燭，葫蘆在地，山下官人坐，冠巾掛木上，一結亂絲。&lt;/strong>&lt;/p>
&lt;p>去舊生新之課 群陰剝盡之象&lt;/p>
&lt;p>盡賁飾之道，而後可亨。但飾之終，不戒，則必剝，故為之序。卦體為五陰一陽，乃意陰始自下生，渐長至極盛，群陰皆受剝於陽也。天地之間，山乃高大，但仍附於地上，此為頹剝之象也。外止內順，招剝之象也。而順且止，為處剝之道。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、婦人床上坐：必有暗災，陰人得勢，陽道衰弱，小人為主官。二、燭在風中：險也。&lt;/p>
&lt;p>三、葫蘆：醫藥無救也；有暗計也。四、繅絲：事務繁冗。&lt;/p>
&lt;p>五、山下官人坐：有靠山，但陰人為禍。 六、冠巾掛木上：求去之象；又有樂之象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>剝：不利有攸往。&lt;/p>
&lt;p>剝乃群陰長盛，剝削陽時，同眾小人剝喪君子，故君子不利往。&lt;/p>
&lt;h2 id="彖曰剝剝也柔變剛也不利有攸往小人長也">
 彖曰：剝，剝也，柔變剛也。不利有攸往，小人長也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%89%9d%e5%89%9d%e4%b9%9f%e6%9f%94%e8%ae%8a%e5%89%9b%e4%b9%9f%e4%b8%8d%e5%88%a9%e6%9c%89%e6%94%b8%e5%be%80%e5%b0%8f%e4%ba%ba%e9%95%b7%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>剝，落也。柔盛而剛剝，陰盛陽必退，此陰陽之道，小人道長盛，君子消退也。&lt;/p>
&lt;h2 id="順而止之觀象也君子尚消息盈虛天行也">
 順而止之，觀象也；君子尚消息盈虛，天行也。
 &lt;a class="anchor" href="#%e9%a0%86%e8%80%8c%e6%ad%a2%e4%b9%8b%e8%a7%80%e8%b1%a1%e4%b9%9f%e5%90%9b%e5%ad%90%e5%b0%9a%e6%b6%88%e6%81%af%e7%9b%88%e8%99%9b%e5%a4%a9%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>君子處剝之時，知不可往，順時而止，乃因能觀剝也。故此卦有順止之象，為處剝之道。君子之人見事於始，凡事之始皆有理，君子視其盈虧消息，而知處之道。順時則吉，逆時則凶， 故君子事天。小人反之，不見事始之作為如何，不論事理之盈虧如何，一昧迎隨奉承，故小人事人。&lt;/p>
&lt;h2 id="象曰山附於地剝上以厚下安宅">
 象曰：山附於地，剝，上以厚下安宅。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e9%99%84%e6%96%bc%e5%9c%b0%e5%89%9d%e4%b8%8a%e4%bb%a5%e5%8e%9a%e4%b8%8b%e5%ae%89%e5%ae%85">#&lt;/a>
&lt;/h2>
&lt;p>山再高大仍依附於地，聖人體此，知人君與上位者，視剝而知厚固其下位之人，以安居也， 下者為上之本，從未有基本固而能剝者也。故上如有剝，必自下。故安養人民以厚國本。書曰&lt;/p>
&lt;p>『民惟邦本，本固邦寧』。&lt;/p>
&lt;h2 id="初六剝床以足蔑貞凶">
 初六：剝床以足，蔑貞，凶。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e5%89%9d%e5%ba%8a%e4%bb%a5%e8%b6%b3%e8%94%91%e8%b2%9e%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>因剝之始皆自下，故曰剝足，陰自下進， 渐消亡正道，凶之至也。&lt;/p>
&lt;h2 id="六二剝床以辨蔑貞凶">
 六二：剝床以辨，蔑貞凶。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%89%9d%e5%ba%8a%e4%bb%a5%e8%be%a8%e8%94%91%e8%b2%9e%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>此陰漸進，為將者已受剝也，凶益甚也。&lt;/p>
&lt;h2 id="六三剝之无咎">
 六三：剝之，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e5%89%9d%e4%b9%8b%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>眾陰在下剝陽之時，三之相位獨剛應之， 則可無災，但因勢孤弱，雖可無災，但未必能大亨。&lt;/p>
&lt;h2 id="六四剝床以膚凶">
 六四：剝床以膚，凶。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e5%89%9d%e5%ba%8a%e4%bb%a5%e8%86%9a%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>剝之及身時也，其凶可知。乃因不知始剝於下，以致進盛至此。&lt;/p>
&lt;h2 id="六五貫魚以宮人寵无不利">
 六五：貫魚，以宮人寵，无不利。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e8%b2%ab%e9%ad%9a%e4%bb%a5%e5%ae%ae%e4%ba%ba%e5%af%b5%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>剝本及於君，凶可知，但聖人於此，知人性之從善如流，以示寵方式，使群陰如魚之貫序，則可無所不利。此寵如對妻妾之同態也。&lt;/p>
&lt;h2 id="上九碩果不食君子得輿小人剝廬">
 上九：碩果不食，君子得輿，小人剝廬。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e7%a2%a9%e6%9e%9c%e4%b8%8d%e9%a3%9f%e5%90%9b%e5%ad%90%e5%be%97%e8%bc%bf%e5%b0%8f%e4%ba%ba%e5%89%9d%e5%bb%ac">#&lt;/a>
&lt;/h2>
&lt;p>果之大者，如不食，則有復生之理。陰道盛極，天下大亂，但亂極則必思治，故眾人之心，必願載君子，故如得輿。此陰極生陽也。若為小人於此，則必無安身之地。&lt;/p>
&lt;h2 id="象曰剝床以足以滅下也">
 象曰：剝床以足，以滅下也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%89%9d%e5%ba%8a%e4%bb%a5%e8%b6%b3%e4%bb%a5%e6%bb%85%e4%b8%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>正道之侵滅，必由下而上渐進。用剝之道即在此。&lt;/p>
&lt;h2 id="象曰剝床以辨未有與也">
 象曰：剝床以辨，未有與也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%89%9d%e5%ba%8a%e4%bb%a5%e8%be%a8%e6%9c%aa%e6%9c%89%e8%88%87%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>小人之侵剝君子，若君子有對應，則小人不能為害，如無對應，則有被滅之凶。&lt;/p>
&lt;h2 id="象曰剝之无咎失上下也">
 象曰：剝之，无咎，失上下也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%89%9d%e4%b9%8b%e6%97%a0%e5%92%8e%e5%a4%b1%e4%b8%8a%e4%b8%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>為相之人居剝之時，无災之因乃同類而相失，不與同道，故也。&lt;/p></description></item><item><title>22山火賁</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/22%E5%B1%B1%E7%81%AB%E8%B3%81/</link><pubDate>Tue, 14 Jan 2025 09:38:58 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/22%E5%B1%B1%E7%81%AB%E8%B3%81/</guid><description>&lt;h1 id="22山火賁">
 22山火賁
 &lt;a class="anchor" href="#22%e5%b1%b1%e7%81%ab%e8%b3%81">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦管鮑卜得之，果獲全，彼此相遜，終顯名義也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>雨下，車行路，舟張帆江中，官人著公服登梯，仙女雲中執珪。&lt;/strong>&lt;/p>
&lt;p>猛虎靠岩之課 光明通泰之象&lt;/p>
&lt;p>物之合後則必立文，文乃飾之意。賁者，飾也，故為之序。人因合聚則有威儀上下，物之合聚則必有次序行列。此卦山下有火，草木百物聚於山處，下有火，則能照見草木百物，且增益其光彩，有賁飾之象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;h3 id="一雨下滿也潤澤也成也">
 一、雨下：滿也，潤澤也，成也。
 &lt;a class="anchor" href="#%e4%b8%80%e9%9b%a8%e4%b8%8b%e6%bb%bf%e4%b9%9f%e6%bd%a4%e6%be%a4%e4%b9%9f%e6%88%90%e4%b9%9f">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>二、車行路：前往任官象，行走四方也。三、舟張帆在江中：此行順風大利也。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>四、官人著公服登梯：升遷在外地象。任公職主官外調象。丈夫從公職升官也。五、仙女雲中執珪：受陰人提攜象。&lt;/strong>&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>賁：亨，小利有攸往。&lt;/p>
&lt;p>物有外飾而後有立，但须有內實而加外飾，則可以亨。因文飾之道可以增加光彩，故必利於小進。&lt;/p>
&lt;p>彖曰：賁亨，柔來而文剛，故亨。分剛上而文柔，故小利有攸往，天文也；文明以止，人文也。&lt;/p>
&lt;p>賁之道能亨，實由飾而來，飾之道，須來往以柔，求文飾以剛，名須正，故利小吉。賁飾之道，並非能增其內實，只外加文彩而已。今人但求外飾，不求內實，富侈表面，內無實才， 比比皆是，上位者所用皆富有之人，此敗亡之初始象也。&lt;/p>
&lt;h2 id="觀乎天文以察時變觀乎人文以化成天下">
 觀乎天文以察時變，觀乎人文以化成天下。
 &lt;a class="anchor" href="#%e8%a7%80%e4%b9%8e%e5%a4%a9%e6%96%87%e4%bb%a5%e5%af%9f%e6%99%82%e8%ae%8a%e8%a7%80%e4%b9%8e%e4%ba%ba%e6%96%87%e4%bb%a5%e5%8c%96%e6%88%90%e5%a4%a9%e4%b8%8b">#&lt;/a>
&lt;/h2>
&lt;p>天文，為日月星辰之錯列，四時寒暑之變化。人文為人理之倫序，觀人文以教化天下，此聖人用賁之道也。&lt;/p>
&lt;h2 id="象曰山下有火賁君子以明庶政无敢折獄">
 象曰：山下有火，賁。君子以明庶政，无敢折獄。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8b%e6%9c%89%e7%81%ab%e8%b3%81%e5%90%9b%e5%ad%90%e4%bb%a5%e6%98%8e%e5%ba%b6%e6%94%bf%e6%97%a0%e6%95%a2%e6%8a%98%e7%8d%84">#&lt;/a>
&lt;/h2>
&lt;p>山下有火，草木為其明照而有光彩，此賁飾也。聖人觀此明照之象，以修明庶政，成文明之治，無敢於用文飾，掩飾實情，枉法不顧，故君子以用明為戒。&lt;/p>
&lt;h2 id="初九賁其趾舍車而徒">
 初九：賁其趾，舍車而徒。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e8%b3%81%e5%85%b6%e8%b6%be%e8%88%8d%e8%bb%8a%e8%80%8c%e5%be%92">#&lt;/a>
&lt;/h2>
&lt;p>初九乃君子有剛明之德，居於下也。因其無位，無法施濟天下，唯求賁飾自己而已。君子修飾之道，在正其所行，守節處義，凡不正則寧不與同行。&lt;/p>
&lt;h2 id="六二賁其須">
 六二：賁其須。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e8%b3%81%e5%85%b6%e9%a0%88">#&lt;/a>
&lt;/h2>
&lt;p>外飾於物，無法改變其本質，須因其本質如何加飾，乃賁之道。&lt;/p>
&lt;h2 id="九三賁如濡如永貞吉">
 九三：賁如濡如，永貞，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e8%b3%81%e5%a6%82%e6%bf%a1%e5%a6%82%e6%b0%b8%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>賁之盛，須戒永正，則吉，因永正之心及行，很難維持。&lt;/p>
&lt;h2 id="六四賁如皤如白馬翰如匪寇婚媾">
 六四：賁如皤如，白馬翰如，匪寇婚媾。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e8%b3%81%e5%a6%82%e7%9a%a4%e5%a6%82%e7%99%bd%e9%a6%ac%e7%bf%b0%e5%a6%82%e5%8c%aa%e5%af%87%e5%a9%9a%e5%aa%be">#&lt;/a>
&lt;/h2>
&lt;p>賁外飾為白色，白馬亦為白色，但志不同， 由外飾同，而終有婚遂相應也。今人之求門當户對也。&lt;/p>
&lt;h2 id="六五賁于丘園束帛戔戔吝-終吉">
 六五：賁于丘園，束帛戔戔，吝， 終吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e8%b3%81%e4%ba%8e%e4%b8%98%e5%9c%92%e6%9d%9f%e5%b8%9b%e6%88%94%e6%88%94%e5%90%9d-%e7%b5%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此雖君位，但本質陰柔，不足自守，但求外賁於設險守國，田園近城，山丘在外，據險而守，即令陰柔之質，受人裁制其外，雖君子吝之，但終平安。&lt;/p>
&lt;h2 id="上九白賁无咎">
 上九：白賁，无咎。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e7%99%bd%e8%b3%81%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>賁飾之極，則失於外偽，唯能質白於賁， 則無過飾之災。故尚質素，不失其本真，千萬不可外飾過於華美而失其本質，此戒賁也。&lt;/p>
&lt;h2 id="象曰舍車而徒義弗乘也">
 象曰：舍車而徒，義弗乘也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e8%88%8d%e8%bb%8a%e8%80%8c%e5%be%92%e7%be%a9%e5%bc%97%e4%b9%98%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>於義不可同行，寧舍車而步行。&lt;/p>
&lt;h2 id="象曰賁其須與上興也">
 象曰：賁其須，與上興也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e8%b3%81%e5%85%b6%e9%a0%88%e8%88%87%e4%b8%8a%e8%88%88%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>須賁之道，須與上隨，隨上而動，動靜歸依於所主。&lt;/p>
&lt;h2 id="象曰永貞之吉終莫之陵也">
 象曰：永貞之吉，終莫之陵也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%b0%b8%e8%b2%9e%e4%b9%8b%e5%90%89%e7%b5%82%e8%8e%ab%e4%b9%8b%e9%99%b5%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>如飾之變化多且非正，人所陵侮也，故戒之永正則吉。&lt;/p></description></item><item><title>21火雷噬嗑</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/21%E7%81%AB%E9%9B%B7%E5%99%AC%E5%97%91/</link><pubDate>Tue, 14 Jan 2025 09:38:57 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/21%E7%81%AB%E9%9B%B7%E5%99%AC%E5%97%91/</guid><description>&lt;h1 id="21火雷噬嗑">
 21火雷噬嗑
 &lt;a class="anchor" href="#21%e7%81%ab%e9%9b%b7%e5%99%ac%e5%97%91">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦蘇秦説六國，卜得之，後為六國丞相。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>北斗星，婦人燒香拜，憂字不全，喜字全，一雁食稻，一錢財，一鹿。&lt;/strong>&lt;/p>
&lt;p>日中爲喜之課 順中有物之象&lt;/p>
&lt;p>觀之後而有來合者，所合者，噬嗑也。故為觀之序。卦才中有一剛居，意為口中有物隔其上下，不得嗑狀，必咬之則得嗑，故稱噬嗑，以此理推而天下事，如天下有強梗或讒邪阻隔其間，使天下事不得合，當用刑法。小則懲戒，大則誅戮以除去，使天下得治。古今萬物皆合而後遂成，如未合必有間阻，若君臣、父子、親人、朋友有怨隙者，因讒言在其間也，除之則合， 是故間隔為天下之大害。聖人體噬嗑之道，知此為天下之大用，能去天下之阻間，唯刑與罰。此卦二體明照而威鎮，乃用刑之象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、北斗星：君王也，夫君也，公職也。&lt;/p>
&lt;p>二、婦人燒香拜：妻於人事無助，乃求助於天。三、憂字不全喜字全：乃無又喜象。&lt;/p>
&lt;p>四、一雞食稻：果被食，無果也。&lt;/p>
&lt;p>五、一錢財、一鹿者：於財祿事憂心忡忡也。六、禽：字解為『離多會少』之象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>噬嗑：亨，利用獄。&lt;/p>
&lt;p>此即天下之事不能亨通，乃因有間阻，非刑獄何以除之。&lt;/p>
&lt;h2 id="彖曰頤中有物曰噬嗑噬嗑而亨">
 彖曰：頤中有物，曰噬嗑，噬嗑而亨。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%a0%a4%e4%b8%ad%e6%9c%89%e7%89%a9%e6%9b%b0%e5%99%ac%e5%97%91%e5%99%ac%e5%97%91%e8%80%8c%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>如口中有物阻，必用力嗑之，乃能亨通象。用獄之道，所以察情偽，得其情，則知為間之道，而後可以設防與致刑。知噬嗑之道，乃知去間之道，而天下亨通。&lt;/p>
&lt;h2 id="剛柔分動而明雷電合而章">
 剛柔分，動而明，雷電合而章。
 &lt;a class="anchor" href="#%e5%89%9b%e6%9f%94%e5%88%86%e5%8b%95%e8%80%8c%e6%98%8e%e9%9b%b7%e9%9b%bb%e5%90%88%e8%80%8c%e7%ab%a0">#&lt;/a>
&lt;/h2>
&lt;p>此卦才有剛有柔，分而不雜，為明辨之象。察獄之本即明辨，以明而動，上震下離，其動因明也。照與威並行，為用獄之道。人能照，則無隱情，有威則無人不畏，故照與明並用也。&lt;/p>
&lt;h2 id="柔得中而上行雖不當位利用獄也">
 柔得中而上行，雖不當位，利用獄也。
 &lt;a class="anchor" href="#%e6%9f%94%e5%be%97%e4%b8%ad%e8%80%8c%e4%b8%8a%e8%a1%8c%e9%9b%96%e4%b8%8d%e7%95%b6%e4%bd%8d%e5%88%a9%e7%94%a8%e7%8d%84%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此言治獄之道，如全剛則傷於嚴暴，過柔則失於宽縱。以仁而居剛得中正，則得用獄之道。&lt;/p>
&lt;h2 id="象曰雷電噬嗑先王以明罰敕法">
 象曰：雷電，噬嗑，先王以明罰敕法。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b7%e9%9b%bb%e5%99%ac%e5%97%91%e5%85%88%e7%8e%8b%e4%bb%a5%e6%98%8e%e7%bd%b0%e6%95%95%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;p>雷威而電明，聖人觀雷電之象，效法其明與威，而立刑罰法令。法之精神乃在教明事理而設防也。&lt;/p>
&lt;h2 id="初九屨校滅趾无咎">
 初九：屨校滅趾，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%b1%a8%e6%a0%a1%e6%bb%85%e8%b6%be%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>最下位，下民之象，為受刑之人，用刑之始，罪小刑輕，以木械傷其趾，則不敢進惡矣。此即因小懲而有大戒。小人之福，即在此。&lt;/p>
&lt;h2 id="六二噬膚滅鼻无咎也">
 六二：噬膚滅鼻，无咎也。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%99%ac%e8%86%9a%e6%bb%85%e9%bc%bb%e6%97%a0%e5%92%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>二居中而得正，是用刑得中正象。如此罪惡易服，然遇剛強之人，刑之必须深痛，故致滅鼻而无災。&lt;/p>
&lt;h2 id="六三噬臘肉遇毒小吝无咎">
 六三：噬臘肉遇毒，小吝，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e5%99%ac%e8%87%98%e8%82%89%e9%81%87%e6%af%92%e5%b0%8f%e5%90%9d%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>本身不正又用刑於人，則人不服而怨對反駁，如食臘肉遇毒，反傷於口。此雖有小議， 但無大災也。&lt;/p>
&lt;h2 id="九四噬乾胏得金矢利艱貞-吉">
 九四：噬乾胏，得金矢，利艱貞， 吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e5%99%ac%e4%b9%be%e8%83%8f%e5%be%97%e9%87%91%e7%9f%a2%e5%88%a9%e8%89%b1%e8%b2%9e-%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>九四乃居近君之位，乃意愈大，則用刑必重。至此得剛直之道，可克艱其事，又因貞固本身操守，且執意行之，則无咎。&lt;/p>
&lt;h2 id="六五噬乾肉得黃金貞厲无咎">
 六五：噬乾肉，得黃金，貞厲，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%99%ac%e4%b9%be%e8%82%89%e5%be%97%e9%bb%83%e9%87%91%e8%b2%9e%e5%8e%b2%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>因五乃居君位，至尊故勢大，以此刑下， 較易如吃乾肉，故為君之道，時天下之間阻物大，須得中而剛，心懷危懼，持續下去，方吉。&lt;/p>
&lt;h2 id="上九何校滅耳凶">
 上九：何校滅耳，凶。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e4%bd%95%e6%a0%a1%e6%bb%85%e8%80%b3%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>受刑之極，乃起因於惡之積也，其凶可知。小惡不懲，必成大惡。&lt;/p>
&lt;h2 id="象曰履校滅趾不行也">
 象曰：履校滅趾，不行也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%a5%e6%a0%a1%e6%bb%85%e8%b6%be%e4%b8%8d%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>因小罪而小用木械傷其趾，則因懲而不再進為惡也。&lt;/p>
&lt;h2 id="象曰噬膚滅鼻乘剛也">
 象曰：噬膚滅鼻，乘剛也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%99%ac%e8%86%9a%e6%bb%85%e9%bc%bb%e4%b9%98%e5%89%9b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此用刑於剛強之人，不得不深痛，乃有戒也。&lt;/p></description></item><item><title>20風地觀</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/20%E9%A2%A8%E5%9C%B0%E8%A7%80/</link><pubDate>Tue, 14 Jan 2025 09:38:56 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/20%E9%A2%A8%E5%9C%B0%E8%A7%80/</guid><description>&lt;h1 id="20風地觀">
 20風地觀
 &lt;a class="anchor" href="#20%e9%a2%a8%e5%9c%b0%e8%a7%80">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦唐明皇與葉靜遊月宫，卜得之，雖有好事，必違也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>日月當天，官人香案邊立，鹿在山上， 金甲人執印秤。&lt;/strong>&lt;/p>
&lt;p>雲捲晴空之課 春花競發之象&lt;/p>
&lt;p>臨者，大也，萬物之成大，乃有可觀，故觀所以次臨也。凡觀視於物，即為觀也。人君上觀天道，下觀民俗，為觀之道。風行地上，遍觸萬物，乃周觀之象。以陽剛在上，為群下所觀， 故觀亦有仰之義。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、日月當天：政治清明，普照大地，父母雙全。&lt;/p>
&lt;p>二、官人香案邊立：倌人，丈夫也。蔡姓人士，神人共明之象。三、鹿在山上：得高祿之象。&lt;/p>
&lt;p>四、金甲人：君側之人也，護衛也。五、執印秤：提印信而來授權也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>觀：盥而不薦，有孚顒若。&lt;/p>
&lt;p>人於祭祀之始，求神之時，心念最專精之時也。居上位者，正其儀表，以為下民之觀，當&lt;/p>
&lt;p>始與終，皆能令民之觀如初始之專精，則盡觀之道也。今人至君位後，禮數繁多，致令人心散， 精一不如初始也。&lt;/p>
&lt;h2 id="彖曰大觀在上順而巽中正以觀天下">
 彖曰：大觀在上，順而巽，中正以觀天下。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%a4%a7%e8%a7%80%e5%9c%a8%e4%b8%8a%e9%a0%86%e8%80%8c%e5%b7%bd%e4%b8%ad%e6%ad%a3%e4%bb%a5%e8%a7%80%e5%a4%a9%e4%b8%8b">#&lt;/a>
&lt;/h2>
&lt;p>五居尊位之人，能以陽剛中正之德，始終如一，為下所觀見，則必能精一也。&lt;/p>
&lt;h2 id="觀盥而不薦有孚顒若下觀而化也">
 觀，盥而不薦，有孚顒若，下觀而化也。
 &lt;a class="anchor" href="#%e8%a7%80%e7%9b%a5%e8%80%8c%e4%b8%8d%e8%96%a6%e6%9c%89%e5%ad%9a%e9%a1%92%e8%8b%a5%e4%b8%8b%e8%a7%80%e8%80%8c%e5%8c%96%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>處觀之道須嚴守如始之精一，則下民必至誠瞻仰而從教化，不薦為不使誠意少散。&lt;/p>
&lt;h2 id="觀天之神道而四時不忒聖人以神道設敎而天下服矣">
 觀天之神道，而四時不忒，聖人以神道設敎，而天下服矣。
 &lt;a class="anchor" href="#%e8%a7%80%e5%a4%a9%e4%b9%8b%e7%a5%9e%e9%81%93%e8%80%8c%e5%9b%9b%e6%99%82%e4%b8%8d%e5%bf%92%e8%81%96%e4%ba%ba%e4%bb%a5%e7%a5%9e%e9%81%93%e8%a8%ad%e6%95%8e%e8%80%8c%e5%a4%a9%e4%b8%8b%e6%9c%8d%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>天之道至神，故曰神道。聖人觀天之運行四時，從無差錯，其神妙如此。聖人體神之道而以設教，故天下服也。&lt;/p>
&lt;h2 id="象曰風行地上觀先王以省方觀民設敎">
 象曰：風行地上，觀。先王以省方、觀民、設敎。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%a2%a8%e8%a1%8c%e5%9c%b0%e4%b8%8a%e8%a7%80%e5%85%88%e7%8e%8b%e4%bb%a5%e7%9c%81%e6%96%b9%e8%a7%80%e6%b0%91%e8%a8%ad%e6%95%8e">#&lt;/a>
&lt;/h2>
&lt;p>風行地上，能觸萬物，聖人體之，知巡省四方，觀視民俗，設為政教，例如見奢則約之以儉，見奸則矯之以正，則民將觀之。&lt;/p>
&lt;h2 id="初六童觀小人无咎君子吝">
 初六：童觀，小人无咎，君子吝。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e7%ab%a5%e8%a7%80%e5%b0%8f%e4%ba%ba%e6%97%a0%e5%92%8e%e5%90%9b%e5%ad%90%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>處最下之位，又為陰柔之本質，離陽剛過遠，是故其觀淺如童稚，故曰童觀。小人觀陽剛之道，不識君子之道，於觀之初，反而無災， 如見君子亦昏淺如是，則可羞也。&lt;/p>
&lt;h2 id="六二闚觀利女貞">
 六二：闚觀，利女貞。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e9%97%9a%e8%a7%80%e5%88%a9%e5%a5%b3%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>象曰：初六童觀，小人道也。&lt;/p>
&lt;p>此所觀不明如童稚，此實小人也，故言小人之道。&lt;/p>
&lt;p>觀，乃少見而無甚明也。二居將位，而不能明見陽剛中正之道，則如女子之道，即見之不甚明，又能順從者。將位之人，能如女子之順從，則不失其正，故利。&lt;/p>
&lt;h2 id="象曰闚觀女貞亦可醜也">
 象曰：闚觀女貞，亦可醜也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%97%9a%e8%a7%80%e5%a5%b3%e8%b2%9e%e4%ba%a6%e5%8f%af%e9%86%9c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此即君子之人不能觀見陽剛中正之大德，雖能順從，乃同女子也。亦可羞也。&lt;/p>
&lt;h2 id="六三觀我生進退">
 六三：觀我生，進退。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e8%a7%80%e6%88%91%e7%94%9f%e9%80%b2%e9%80%80">#&lt;/a>
&lt;/h2>
&lt;p>柔質居相位，處觀之時，其進退之道，乃為己者，雖非正，.亦不為過也。&lt;/p>
&lt;h2 id="六四觀國之光利用賓于王">
 六四：觀國之光，利用賓于王。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e8%a7%80%e5%9c%8b%e4%b9%8b%e5%85%89%e5%88%a9%e7%94%a8%e8%b3%93%e4%ba%8e%e7%8e%8b">#&lt;/a>
&lt;/h2>
&lt;p>四雖陰柔居君側之位，能觀見國之光辉盛大，可見人君之道德也。此因九五君位為聖明之人，致令才德之士 ，皆願進朝廷輔佐，以濟天下。反之聖君因能用敬才德之人，則人才聚之。&lt;/p>
&lt;h2 id="九五觀我生君子无咎">
 九五：觀我生，君子无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e8%a7%80%e6%88%91%e7%94%9f%e5%90%9b%e5%ad%90%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九五君位之人，體觀之道，其視天下之俗而知己，若天下之俗，不合乎君子之道，則是己之所為，政治必不佳，不可不怪自己。&lt;/p>
&lt;h2 id="上九觀其生君子无咎">
 上九：觀其生，君子无咎。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e8%a7%80%e5%85%b6%e7%94%9f%e5%90%9b%e5%ad%90%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>上九為不當位之人，以陽剛處之，如同賢人君子不在其位，而道德為天下所觀仰，能如此，皆君子也。&lt;/p></description></item><item><title>19地澤臨</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/19%E5%9C%B0%E6%BE%A4%E8%87%A8/</link><pubDate>Tue, 14 Jan 2025 09:38:55 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/19%E5%9C%B0%E6%BE%A4%E8%87%A8/</guid><description>&lt;h1 id="19地澤臨">
 19地澤臨
 &lt;a class="anchor" href="#19%e5%9c%b0%e6%be%a4%e8%87%a8">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦蔡琰去和番，卜得知，必還故國也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>婦人乘風，一車上有使旗，人在山頂， 虎在山下坐，一合子，人射弓。&lt;/strong>&lt;/p>
&lt;p>鳳入雞群之課 以上臨下之象&lt;/p>
&lt;p>有事之後乃有可大之心，臨者，大也，故序卦為臨。為卦澤上有地，乃岸也，因與水相近故曰臨，天下之事最近臨者，唯水與地，故地上有水，為此卦，澤上有地，為臨；臨，即臨民臨事，凡所面臨的，皆有臨之道。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、婦人乘風：外援為陰女，美人也。&lt;/p>
&lt;p>二、一車上有使旗：出使之象，以謀略可解災，謀之對象為女人也。連姓、車姓人。三、人在山頂頭：盛極將衰，招困也，即將下坡也。&lt;/p>
&lt;p>四、虎在山下坐：人受虎困之象。五、一合：先成後破象。&lt;/p>
&lt;p>六、人射弓：張姓人士，夷狄之人，以弓射獵，故外族入侵象。&lt;/p>
&lt;h2 id="故自古天下安治未有久而不亂者皆因不能戒盛而已">
 故自古天下安治，未有久而不亂者，皆因不能戒盛而已。
 &lt;a class="anchor" href="#%e6%95%85%e8%87%aa%e5%8f%a4%e5%a4%a9%e4%b8%8b%e5%ae%89%e6%b2%bb%e6%9c%aa%e6%9c%89%e4%b9%85%e8%80%8c%e4%b8%8d%e4%ba%82%e8%80%85%e7%9a%86%e5%9b%a0%e4%b8%8d%e8%83%bd%e6%88%92%e7%9b%9b%e8%80%8c%e5%b7%b2">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>臨：元，亨，利，貞。&lt;/p>
&lt;p>言臨之道，可致大亨也。&lt;/p>
&lt;h2 id="至于八月有凶">
 至于八月有凶。
 &lt;a class="anchor" href="#%e8%87%b3%e4%ba%8e%e5%85%ab%e6%9c%88%e6%9c%89%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>二陽才剛生於下，聖人戒之於方盛，方盛而慮衰，則可以防自滿，圖其永久，衰而後戒， 無及也，此乃戒盛之道。今人富而多驕，為安樂而壞綱紀，忘禍亂而任小人奸邪，皆因不知戒盛。&lt;/p>
&lt;h2 id="彖曰臨剛浸而長説而順剛中而應大亨以正天之道也">
 彖曰：臨，剛浸而長，説而順，剛中而應，大亨以正，天之道也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%87%a8%e5%89%9b%e6%b5%b8%e8%80%8c%e9%95%b7%e8%aa%ac%e8%80%8c%e9%a0%86%e5%89%9b%e4%b8%ad%e8%80%8c%e6%87%89%e5%a4%a7%e4%ba%a8%e4%bb%a5%e6%ad%a3%e5%a4%a9%e4%b9%8b%e9%81%93%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>剛中得正道，而有應助，故能大亨。天道，能化育生萬物，皆因其剛正而和順而已。以此道來臨事，臨人，臨天下，莫不大亨通也。&lt;/p>
&lt;h2 id="至於八月有凶消不久也">
 至於八月有凶，消不久也。
 &lt;a class="anchor" href="#%e8%87%b3%e6%96%bc%e5%85%ab%e6%9c%88%e6%9c%89%e5%87%b6%e6%b6%88%e4%b8%8d%e4%b9%85%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此乃聖人知戒於盛時，不以自滿，則凶不至也。&lt;/p>
&lt;h2 id="象曰澤上有地臨君子以敎思无窮容保民无疆">
 象曰：澤上有地，臨。君子以敎思无窮，容保民无疆。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e4%b8%8a%e6%9c%89%e5%9c%b0%e8%87%a8%e5%90%9b%e5%ad%90%e4%bb%a5%e6%95%8e%e6%80%9d%e6%97%a0%e7%aa%ae%e5%ae%b9%e4%bf%9d%e6%b0%91%e6%97%a0%e7%96%86">#&lt;/a>
&lt;/h2>
&lt;p>地與水之臨近為至近，君子以此知臨之道乃親民如此，才能教導人民。有寬容保民之心， 才能廣大無窮的包容。&lt;/p>
&lt;h2 id="初九咸臨貞吉">
 初九：咸臨，貞吉。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%92%b8%e8%87%a8%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>初為卑下之位，而以正道與四位感應，為所信任而得行其志，故吉。&lt;/p>
&lt;h2 id="九二咸臨吉无不利">
 九二：咸臨，吉无不利。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%92%b8%e8%87%a8%e5%90%89%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>九二居將位，能以陽剛之心臨人，臨事， 不愧於人，吉無不利。&lt;/p>
&lt;h2 id="六三甘臨无攸利既憂之无咎">
 六三：甘臨，无攸利，既憂之，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e7%94%98%e8%87%a8%e6%97%a0%e6%94%b8%e5%88%a9%e6%97%a2%e6%86%82%e4%b9%8b%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>三居相位，柔陰居之，此居上位又不以中正臨下，此失德也，不利。如能憂於此而立改之，則無災也。&lt;/p>
&lt;h2 id="六四至臨无咎">
 六四：至臨，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e8%87%b3%e8%87%a8%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>此臨之至也，臨道乃由近而生，此位居上之下，又切臨於下，乃處近君之臣位，守正任賢，如親臨於下，則无咎。&lt;/p>
&lt;h2 id="六五知臨大君之宜吉">
 六五：知臨，大君之宜，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e7%9f%a5%e8%87%a8%e5%a4%a7%e5%90%9b%e4%b9%8b%e5%ae%9c%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>以一人之身，君臨天下之廣，若皆以自任， 必不能周於萬事，如自認為皆知者，正明示其不知也。唯有能得天下之善，用天下之智者， 則無所不周，這就是不以自認皆知，故其知乃可大。&lt;/p>
&lt;h2 id="上六敦臨吉无咎">
 上六：敦臨，吉，无咎。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e6%95%a6%e8%87%a8%e5%90%89%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>此位乃臨之極位，以坤順而居此位，乃意尊而應卑，高而從下，尊賢取善，此為敦厚之極也。皆因其能敦厚於順剛，是以吉而無災。&lt;/p>
&lt;h2 id="象曰咸臨貞吉志行正也">
 象曰：咸臨貞吉，志行正也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%92%b8%e8%87%a8%e8%b2%9e%e5%90%89%e5%bf%97%e8%a1%8c%e6%ad%a3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陽剛之志在於行正，志正也。&lt;/p></description></item><item><title>18山風蠱</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/18%E5%B1%B1%E9%A2%A8%E8%A0%B1/</link><pubDate>Tue, 14 Jan 2025 09:38:54 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/18%E5%B1%B1%E9%A2%A8%E8%A0%B1/</guid><description>&lt;h1 id="18山風蠱">
 18山風蠱
 &lt;a class="anchor" href="#18%e5%b1%b1%e9%a2%a8%e8%a0%b1">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦伯樂療馬，卜得知馬難治，見三蠱同器皿也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>孩兒在雲中，雁啣書，一鹿、一錢，男女相拜。&lt;/strong>&lt;/p>
&lt;p>三蠱食血之課 以惡害義之象&lt;/p>
&lt;p>因喜而隨人者，必有事，無事何喜何隨？故蠱以次隨也。山下有風，風在山下，遇山而回， 使物亂，是為蠱象，蠱者，壞亂也。長女下於少男，長幼無序也，其亂可知。此卦象言成蠱之因，卦才專言，治蠱之道。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、孩兒在雲中：有天官促成也。不求名利之人。二、雁啣書：有消息至。&lt;/p>
&lt;p>三、一鹿：有大利也。&lt;/p>
&lt;p>四、錢在空中：此心中圖利之象也。&lt;/p>
&lt;p>五、男女相拜：男女相合，此為利而結合，非正婚也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>蠱：元亨，利涉大川。&lt;/p>
&lt;p>蠱之大者，乃時之艱難險阻，能有治蠱之才，則必亨通。&lt;/p>
&lt;h2 id="先甲三日後甲三日">
 先甲三日，後甲三日。
 &lt;a class="anchor" href="#%e5%85%88%e7%94%b2%e4%b8%89%e6%97%a5%e5%be%8c%e7%94%b2%e4%b8%89%e6%97%a5">#&lt;/a>
&lt;/h2>
&lt;p>甲為十干之首，意言事之始也。先甲三日，乃言治蠱之道，應先思其事之原，再思其事之後，乃知救弊之道。亦強調慮之深，推之遠也。能善於救者，則前之弊可革，能善親備者，則後利長久。此聖人之治蠱道。今人不明聖人先甲後甲之誡，慮淺而事近，故勞於救亂，亂不革， 功未及成，弊已生矣。&lt;/p>
&lt;h2 id="彖曰蠱剛上而柔下巽而止蠱">
 彖曰：蠱，剛上而柔下，巽而止，蠱。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%a0%b1%e5%89%9b%e4%b8%8a%e8%80%8c%e6%9f%94%e4%b8%8b%e5%b7%bd%e8%80%8c%e6%ad%a2%e8%a0%b1">#&lt;/a>
&lt;/h2>
&lt;p>以卦而言，男雖少但居上，女雖長而在下，尊卑得正，上下顺理，治蠱之道也，故以巽順之道治蠱，是以元亨。&lt;/p>
&lt;h2 id="蠱元亨而天下治也利涉大川往有事也">
 蠱，元亨，而天下治也。利涉大川，往有事也。
 &lt;a class="anchor" href="#%e8%a0%b1%e5%85%83%e4%ba%a8%e8%80%8c%e5%a4%a9%e4%b8%8b%e6%b2%bb%e4%b9%9f%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d%e5%be%80%e6%9c%89%e4%ba%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>自古治亂者，能使尊卑上下之義正，在下為巽順，在上有才能安定萬事，如此則天下大治。如正遇天下壞亂之時，持治蠱之道而往濟之，利也。&lt;/p>
&lt;h2 id="先甲三日後甲三日終則有始天行也">
 先甲三日。後甲三日，終則有始，天行也。
 &lt;a class="anchor" href="#%e5%85%88%e7%94%b2%e4%b8%89%e6%97%a5%e5%be%8c%e7%94%b2%e4%b8%89%e6%97%a5%e7%b5%82%e5%89%87%e6%9c%89%e5%a7%8b%e5%a4%a9%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>有始必有終，終之後必有始，此天道也。聖人體始終之道，故能於事之始而探究其所以然， 能於事之終而備其將然，此先甲後甲之慮，故能治蠱而天下亨。&lt;/p>
&lt;h2 id="象曰山下有風蠱君子以振民育德">
 象曰：山下有風，蠱，君子以振民育德。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8b%e6%9c%89%e9%a2%a8%e8%a0%b1%e5%90%9b%e5%ad%90%e4%bb%a5%e6%8c%af%e6%b0%91%e8%82%b2%e5%be%b7">#&lt;/a>
&lt;/h2>
&lt;p>山下有風，風遇山而回，致物皆散亂，故為有事之象。君子觀有事之象，在己則養德，在天下則濟民，君子所事此二者為最大。&lt;/p>
&lt;h2 id="初六幹父之盎有子考无咎-厲終吉">
 初六：幹父之盎，有子，考无咎， 厲終吉。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e5%b9%b9%e7%88%b6%e4%b9%8b%e7%9b%8e%e6%9c%89%e5%ad%90%e8%80%83%e6%97%a0%e5%92%8e-%e5%8e%b2%e7%b5%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>庶民之道，即子幹父蠱之道。子能居其位而知正，則無災，不然，則為父之累，故必惕厲為戒，終吉。初六為最下之道，故言子與父之關係。&lt;/p>
&lt;h2 id="九二幹母之蠱不可貞">
 九二：幹母之蠱，不可貞。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%b9%b9%e6%af%8d%e4%b9%8b%e8%a0%b1%e4%b8%8d%e5%8f%af%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>婦人本陰柔，若子只顧強伸己陽剛之道， 反逆之，則傷恩，所害大也，唯有屈下己意柔順將成，使之身正而事乃治，故曰不可貞。如同陽剛之道輔柔弱之君，須盡誠竭忠致使其於中道即可，不會有大做為的。&lt;/p>
&lt;h2 id="象曰幹父之蠱意承考也">
 象曰：幹父之蠱，意承考也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b9%b9%e7%88%b6%e4%b9%8b%e8%a0%b1%e6%84%8f%e6%89%bf%e8%80%83%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>子幹父蠱之道，意在能承擔父事，常懷惕厲，只敬其事，盡誠於父，則終吉。&lt;/p>
&lt;h2 id="象曰幹母之蠱得中道也">
 象曰：幹母之蠱，得中道也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b9%b9%e6%af%8d%e4%b9%8b%e8%a0%b1%e5%be%97%e4%b8%ad%e9%81%93%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>居臣位，不過剛，乃得幹母蠱之道完整者。&lt;/p>
&lt;h2 id="九三幹父之蠱小有悔无大咎">
 九三：幹父之蠱，小有悔，无大咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%b9%b9%e7%88%b6%e4%b9%8b%e8%a0%b1%e5%b0%8f%e6%9c%89%e6%82%94%e6%97%a0%e5%a4%a7%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九三乃以陽剛之才居相位，克盡所事，雖以剛過而小有悔，但終無大災，但如以事親之道，則並非善事親之人也。&lt;/p>
&lt;h2 id="六四裕父之蠱往見吝">
 六四：裕父之蠱，往見吝。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e8%a3%95%e7%88%b6%e4%b9%8b%e8%a0%b1%e5%be%80%e8%a6%8b%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>此柔順之才而以正道處事，只能自守其道而已，若遇非正之事，因柔順之本質，而無法矯正，故不能而招罷斥。&lt;/p>
&lt;h2 id="六五幹父之蠱用譽">
 六五：幹父之蠱，用譽。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%b9%b9%e7%88%b6%e4%b9%8b%e8%a0%b1%e7%94%a8%e8%ad%bd">#&lt;/a>
&lt;/h2>
&lt;p>此君位之人但質柔，但下應九二陽剛之位，意其能用陽剛之才為臣，但因本實陰柔， 故可為承其舊業，而不能為開創事業之才。自古創業之事，非剛明之才不足以成事。不能用剛賢之人，只可以守舊袓業而已。&lt;/p></description></item><item><title>17澤雷隨</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/17%E6%BE%A4%E9%9B%B7%E9%9A%A8/</link><pubDate>Tue, 14 Jan 2025 09:38:53 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/17%E6%BE%A4%E9%9B%B7%E9%9A%A8/</guid><description>&lt;h1 id="17澤雷隨">
 17澤雷隨
 &lt;a class="anchor" href="#17%e6%be%a4%e9%9b%b7%e9%9a%a8">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦孫臏破秦，卜得之，便知必勝也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>雲中雁傳書，一堆錢，朱門內有人坐， 一人在門外立，地上一堆珠。&lt;/strong>&lt;/p>
&lt;p>良士琢玉之課 如水推車之象&lt;/p>
&lt;p>豫悦之道，人必皆隨之，故豫之後有隨。震為雷，兌為澤，雷震於澤中，澤隨雷而動，此隨之義。以陽而下陰，陰乃隨陽，此陰陽不易之理。『外悦內動象』『下動上悦象』。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、雲中雁傳書：飛來喜訊象。二、一堆錢：財聚也。&lt;/p>
&lt;p>三、朱門內有人坐：君王之象，必見君面也。&lt;/p>
&lt;p>四、一人在鬥外立地：乃士人求仕，受尊重之象。五、串錢在地：有用利不行之象。&lt;/p>
&lt;p>六、亂珠聚盆：先聚後散之象。&lt;/p>
&lt;h2 id="全卦禮儀得體有見速喜之象">
 全卦：禮儀得體，有見速喜之象。
 &lt;a class="anchor" href="#%e5%85%a8%e5%8d%a6%e7%a6%ae%e5%84%80%e5%be%97%e9%ab%94%e6%9c%89%e8%a6%8b%e9%80%9f%e5%96%9c%e4%b9%8b%e8%b1%a1">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>隨：元，亨，利，貞，无咎。&lt;/p>
&lt;p>隨之道，可以致大亨通。君子之道，眾人所隨，又遇事擇所隨，隨能得道，必致大亨。今&lt;/p>
&lt;p>人君之從民意，臣下之從君意，人人隨從義，利在堅守隨義，隨因能正，其道必亨。小人群聚， 此隨失正，豈不招凶乎。&lt;/p>
&lt;h2 id="彖曰隨剛來而下柔動而説隨大亨貞无咎而天下隨時">
 彖曰：隨，剛來而下柔，動而説，隨。大亨，貞，无咎，而天下隨時。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%9a%a8%e5%89%9b%e4%be%86%e8%80%8c%e4%b8%8b%e6%9f%94%e5%8b%95%e8%80%8c%e8%aa%ac%e9%9a%a8%e5%a4%a7%e4%ba%a8%e8%b2%9e%e6%97%a0%e5%92%8e%e8%80%8c%e5%a4%a9%e4%b8%8b%e9%9a%a8%e6%99%82">#&lt;/a>
&lt;/h2>
&lt;p>雷為剛今居柔下，是以尊貴而對下隨，為隨之義。臣君關係，以上悦下動，以動可悦，為隨之道，如是則亨通而無災。&lt;/p>
&lt;h2 id="隨時之義大矣哉">
 隨時之義大矣哉。
 &lt;a class="anchor" href="#%e9%9a%a8%e6%99%82%e4%b9%8b%e7%be%a9%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>君子之道，隨時而變，因時制宜。今世昏蒙不明，凡事皆表明裡暗，是故民之所隨，未能適中，常受謡言、外飾所惑，隨而必枉，受奸人利用。&lt;/p>
&lt;h2 id="象曰澤中有雷隨君子以嚮晦入宴息">
 象曰：澤中有雷，隨，君子以嚮晦入宴息。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%be%a4%e4%b8%ad%e6%9c%89%e9%9b%b7%e9%9a%a8%e5%90%9b%e5%ad%90%e4%bb%a5%e5%9a%ae%e6%99%a6%e5%85%a5%e5%ae%b4%e6%81%af">#&lt;/a>
&lt;/h2>
&lt;p>澤隨雷震而動，君子晝則自強不息，夜則入居內安其身，起居作息隨天時，乃宜也。禮云： 君子晝不居內，夜不居外，此隨時之道。&lt;/p>
&lt;h2 id="初九官有渝貞吉出門交有功">
 初九：官有渝，貞吉，出門交有功。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%ae%98%e6%9c%89%e6%b8%9d%e8%b2%9e%e5%90%89%e5%87%ba%e9%96%80%e4%ba%a4%e6%9c%89%e5%8a%9f">#&lt;/a>
&lt;/h2>
&lt;p>官為守也，因所從隨為正，故吉。出門交往多所親愛者，因人心所從隨也。常人之情， 愛之所見皆對，惡之所見皆非，小人皆以私情而隨從之，不合正理，君子出鬥交不以私，故所隨皆有功也。&lt;/p>
&lt;h2 id="六二係小子失丈夫">
 六二：係小子，失丈夫。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e4%bf%82%e5%b0%8f%e5%ad%90%e5%a4%b1%e4%b8%88%e5%a4%ab">#&lt;/a>
&lt;/h2>
&lt;p>六二為陰柔位，陰乃順從，柔順之意，但如順隨的對象為小人，則必失卻君子之人，此因不能固守，聖人戒之。&lt;/p>
&lt;h2 id="六三係丈夫失小子隨有求得-利居貞">
 六三：係丈夫，失小子，隨有求得， 利居貞。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e4%bf%82%e4%b8%88%e5%a4%ab%e5%a4%b1%e5%b0%8f%e5%ad%90%e9%9a%a8%e6%9c%89%e6%b1%82%e5%be%97-%e5%88%a9%e5%b1%85%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>六三居相位，所固守本身之正，求上之隨， 有求必得，乃上上隨也。如背是求非，舍君子從小人，為下下之隨也。故君子之隨，首先固守本身之正。&lt;/p>
&lt;h2 id="九四隨有獲貞凶有孚在道以明何咎">
 九四：隨有獲，貞凶，有孚在道以明，何咎？
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e9%9a%a8%e6%9c%89%e7%8d%b2%e8%b2%9e%e5%87%b6%e6%9c%89%e5%ad%9a%e5%9c%a8%e9%81%93%e4%bb%a5%e6%98%8e%e4%bd%95%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>因四位乃臣之極位，如隨而有獲，即正亦易招凶，皆因天下之心隨於己。為臣之道，應使恩威出於上，眾心能隨於君，如讓人心從己， 致凶之道。故君子居此，唯誠正於心，所動皆合於道，則可無悔。小人位極，用君王權，遂行其志，得民心又不歸功於上，位極而逼上， 勢強而專權，隨之過大矣。君子雖功大震主， 但由於其正而心誠，故主隨從而信之，何有災？&lt;/p>
&lt;h2 id="九五孚於嘉吉">
 九五：孚於嘉，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%ad%9a%e6%96%bc%e5%98%89%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此君位之人，得中正而固守，動隨於善， 大吉也。故此，從人君到平民，隨道之吉，唯隨善耳。&lt;/p>
&lt;h2 id="上六拘係之乃從維之王用亨于西山">
 上六：拘係之，乃從維之，王用亨于西山。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e6%8b%98%e4%bf%82%e4%b9%8b%e4%b9%83%e5%be%9e%e7%b6%ad%e4%b9%8b%e7%8e%8b%e7%94%a8%e4%ba%a8%e4%ba%8e%e8%a5%bf%e5%b1%b1">#&lt;/a>
&lt;/h2>
&lt;p>象曰：官有渝，從正吉也。出門交有功，不失也。&lt;/p>
&lt;p>所隨從之道，須從正則吉。隨從不正，招悔咎也。因交非因本身之私，其交必正，故不失。&lt;/p></description></item><item><title>16雷地豫</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/16%E9%9B%B7%E5%9C%B0%E8%B1%AB/</link><pubDate>Tue, 14 Jan 2025 09:38:52 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/16%E9%9B%B7%E5%9C%B0%E8%B1%AB/</guid><description>&lt;h1 id="16雷地豫">
 16雷地豫
 &lt;a class="anchor" href="#16%e9%9b%b7%e5%9c%b0%e8%b1%ab">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦諸葛孔明討南蠻，卜得之，便知必勝。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>兩重山，一官人，一祿一馬，金銀數錠，錢一堆者。&lt;/strong>&lt;/p>
&lt;p>鳳凰生雛之課 萬物發生之象&lt;/p>
&lt;p>人有大量而又能謙，必豫，豫者悦也，豫卦承大有及謙之序也。上動而下又順，以象言， 陽之始，潛伏地下，及出於地，乃因動，即為雷，故雷出地上，有通暢和順象。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、兩重山：出象，千里阻隔也。&lt;/p>
&lt;p>二、官人在中：外出不任官象；丈夫外出從商。三、一祿一馬：從商之人，財祿豐盛。&lt;/p>
&lt;p>四、金銀數錠：紙錢錠，主喪服。五、錢一堆者：內有憂心忡忡象。&lt;/p>
&lt;h2 id="全卦此卦內有憂外有阻乃順勢而動祿馬來會可去官從商矣">
 全卦：此卦內有憂，外有阻，乃順勢而動，祿馬來會，可去官從商矣。
 &lt;a class="anchor" href="#%e5%85%a8%e5%8d%a6%e6%ad%a4%e5%8d%a6%e5%85%a7%e6%9c%89%e6%86%82%e5%a4%96%e6%9c%89%e9%98%bb%e4%b9%83%e9%a0%86%e5%8b%a2%e8%80%8c%e5%8b%95%e7%a5%bf%e9%a6%ac%e4%be%86%e6%9c%83%e5%8f%af%e5%8e%bb%e5%ae%98%e5%be%9e%e5%95%86%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>豫：利建侯，行師。&lt;/p>
&lt;p>聖人體豫悦之道，知兵師之興，諸侯之封，必眾心和悦方成，故能君臨萬邦，能群聚大眾， 唯和悦可也，此豫之時也。&lt;/p>
&lt;h2 id="彖曰豫剛應而志行順以動豫">
 彖曰：豫，剛應而志行，順以動，豫。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%b1%ab%e5%89%9b%e6%87%89%e8%80%8c%e5%bf%97%e8%a1%8c%e9%a0%86%e4%bb%a5%e5%8b%95%e8%b1%ab">#&lt;/a>
&lt;/h2>
&lt;p>動之順理，眾順而回應，其志乃行，故豫乃動而眾順。&lt;/p>
&lt;h2 id="豫順以動故天地如之而況建侯行師乎">
 豫順以動，故天地如之，而況建侯行師乎。
 &lt;a class="anchor" href="#%e8%b1%ab%e9%a0%86%e4%bb%a5%e5%8b%95%e6%95%85%e5%a4%a9%e5%9c%b0%e5%a6%82%e4%b9%8b%e8%80%8c%e6%b3%81%e5%bb%ba%e4%be%af%e8%a1%8c%e5%b8%ab%e4%b9%8e">#&lt;/a>
&lt;/h2>
&lt;p>順理而動，天地之道亦如是，更何況立建諸侯，興兵之師。&lt;/p>
&lt;h2 id="天地以順動故日月不爲過而四時不忒聖人以順動則刑罰清-而民服">
 天地以順動，故日月不爲過，而四時不忒；聖人以順動，則刑罰清， 而民服。
 &lt;a class="anchor" href="#%e5%a4%a9%e5%9c%b0%e4%bb%a5%e9%a0%86%e5%8b%95%e6%95%85%e6%97%a5%e6%9c%88%e4%b8%8d%e7%88%b2%e9%81%8e%e8%80%8c%e5%9b%9b%e6%99%82%e4%b8%8d%e5%bf%92%e8%81%96%e4%ba%ba%e4%bb%a5%e9%a0%86%e5%8b%95%e5%89%87%e5%88%91%e7%bd%b0%e6%b8%85-%e8%80%8c%e6%b0%91%e6%9c%8d">#&lt;/a>
&lt;/h2>
&lt;p>天地之順而動，吾人可視四季之行，日月運轉永不為過，聖人稟此，而知因正而民相爭於行善，刑清罰簡，萬民皆服。&lt;/p>
&lt;h2 id="豫之時義大矣哉">
 豫之時義大矣哉。
 &lt;a class="anchor" href="#%e8%b1%ab%e4%b9%8b%e6%99%82%e7%be%a9%e5%a4%a7%e7%9f%a3%e5%93%89">#&lt;/a>
&lt;/h2>
&lt;p>聖人知豫而體用豫之道，故於時機之掌握大矣，此卦之下有十一卦，豫、遯、姤、旅，皆言時之義。坎、睽、蹇，皆言時之用。頤、大過、解、革，皆言時之大也。&lt;/p>
&lt;h2 id="象曰雷出地奮豫先王以作樂崇德殷薦之上帝以配祖考">
 象曰：雷出地奮，豫。先王以作樂崇德，殷薦之上帝，以配祖考。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b7%e5%87%ba%e5%9c%b0%e5%a5%ae%e8%b1%ab%e5%85%88%e7%8e%8b%e4%bb%a5%e4%bd%9c%e6%a8%82%e5%b4%87%e5%be%b7%e6%ae%b7%e8%96%a6%e4%b9%8b%e4%b8%8a%e5%b8%9d%e4%bb%a5%e9%85%8d%e7%a5%96%e8%80%83">#&lt;/a>
&lt;/h2>
&lt;p>雷動出於地而奮震，悦之象也。先王作聲樂以褒揚功德，歸之上帝、祖先，此言，豫之道， 能知，能體，則盛而至大也。&lt;/p>
&lt;h2 id="初六鳴豫凶">
 初六：鳴豫，凶。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e9%b3%b4%e8%b1%ab%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>初六乃下位，陰柔處之，是意不中正之小人，處豫時，為上所寵，志得意滿，乃至於發聲，小人之輕淺如是，必至凶也。&lt;/p>
&lt;h2 id="六二介于石不終日貞吉">
 六二：介于石，不終日，貞吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e4%bb%8b%e4%ba%8e%e7%9f%b3%e4%b8%8d%e7%b5%82%e6%97%a5%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>豫悦之道，易流放縱，過則失正道，乃不合於時。此六二本陰位，今陰爻居位，乃處中正，為自守之象，君子處豫之時，獨其能以中正自守，示出其節介如石之堅也，故吉。能見事於幾微者，謂之神妙。君子之人上交不諂， 下交不瀆，因能知微，吉凶之始，可先見於此也。守堅如石，則能不惑而明。&lt;/p>
&lt;h2 id="六三盱豫悔遲有悔">
 六三：盱豫，悔。遲有悔。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e7%9b%b1%e8%b1%ab%e6%82%94%e9%81%b2%e6%9c%89%e6%82%94">#&lt;/a>
&lt;/h2>
&lt;p>六三乃以陰而居陽位，為不中不正之人居相位也。如此動則有悔，盱為上視也，其動竟上視君側之人，故不中不正，悔之始也。是故君子明處身不正，進退皆有悔矣。處已之道， 在正本身而已，以禮制心，即處豫卻不失中正， 則無悔矣。&lt;/p>
&lt;h2 id="九四由豫大有得勿疑朋盍簪">
 九四：由豫，大有得，勿疑，朋盍簪。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e7%94%b1%e8%b1%ab%e5%a4%a7%e6%9c%89%e5%be%97%e5%8b%bf%e7%96%91%e6%9c%8b%e7%9b%8d%e7%b0%aa">#&lt;/a>
&lt;/h2>
&lt;p>九四乃君側之位，動則眾陰悦順，此豫之義。豫悦之由，以陽剛而任此位，大行其志， 而天下皆悦。人能盡誠則無疑，上下因至誠而信，合而聚之，簪，乃聚髪之物。&lt;/p>
&lt;h2 id="六五貞疾恆不死">
 六五：貞疾，恆不死。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e8%b2%9e%e7%96%be%e6%81%86%e4%b8%8d%e6%ad%bb">#&lt;/a>
&lt;/h2>
&lt;p>六五為君位，當豫悦之時，陰柔有沉溺之象，故乃柔弱不能自立且耽於酒色之豫道，受制於專權之臣，因受制於下，故有疾苦，古今人君致危之道很多，但以縱情於樂居多，豈有不死乎？&lt;/p>
&lt;h2 id="上六冥豫成有渝无咎">
 上六：冥豫，成有渝，无咎。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%86%a5%e8%b1%ab%e6%88%90%e6%9c%89%e6%b8%9d%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>豫之極，而以陰柔居之，乃聖人示意，凡人之失，苟能自變，則亦可以无咎，此乃為君子。如昏迷不知反省，必招凶。&lt;/p></description></item><item><title>15地山謙</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/15%E5%9C%B0%E5%B1%B1%E8%AC%99/</link><pubDate>Tue, 14 Jan 2025 09:38:51 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/15%E5%9C%B0%E5%B1%B1%E8%AC%99/</guid><description>&lt;h1 id="15地山謙">
 15地山謙
 &lt;a class="anchor" href="#15%e5%9c%b0%e5%b1%b1%e8%ac%99">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦唐玄宗因祿山之亂，卜得之，乃知干戈必息也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>月當天，一人騎鹿，三人腳下亂絲， 貴人捧鏡，文字上有公字。&lt;/strong>&lt;/p>
&lt;p>地中有山之課 仰高就下之象&lt;/p>
&lt;p>大有至終必不可盈滿，故聖人受之序卦為謙。天之道盈滿，則必損地道，此卦為亦謙之義， 以自然界喻之，外卦為地，內卦為山，即山居地下，山乃至高大之物，而今居地下，此處卑乃謙之象，亦示人有崇高之至德，而處卑下，乃盡謙之義。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、月當天：清明之政，中秋時也。二、一人骑鹿：才祿俱備。&lt;/p>
&lt;p>三、三人腳下亂絲，隱於山後：小人不敢正面示人，惟隱山謙之後(即外飾謙為幌子)實則亂如麻，計無所出。&lt;/p>
&lt;p>四、貴人捧鏡：明鏡高懸，執法公正光大。五、文字上有公字：處事以公，得理也。&lt;/p>
&lt;h2 id="全卦不知謙下自晦果必招訟也">
 全卦：不知謙下自晦，果必招訟也。
 &lt;a class="anchor" href="#%e5%85%a8%e5%8d%a6%e4%b8%8d%e7%9f%a5%e8%ac%99%e4%b8%8b%e8%87%aa%e6%99%a6%e6%9e%9c%e5%bf%85%e6%8b%9b%e8%a8%9f%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>謙：亨，君子有終。&lt;/p>
&lt;p>有德而不居，為謙，人能以謙遜自處，無往不利。君子之志在達理，樂天命而無競之心， 但求內充，退讓而不衿持。能安於謙，終身不易。小人則有慾必競，此種人見有德之人必攻之， 即令有人告之謙遜，但終不能宽行固守。故小人，必不能有終也。&lt;/p>
&lt;h2 id="彖曰謙亨天道下濟而光明地道卑而上行">
 彖曰：謙，亨，天道下濟而光明，地道卑而上行。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%ac%99%e4%ba%a8%e5%a4%a9%e9%81%93%e4%b8%8b%e6%bf%9f%e8%80%8c%e5%85%89%e6%98%8e%e5%9c%b0%e9%81%93%e5%8d%91%e8%80%8c%e4%b8%8a%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>君子明謙之道而能亨。天之道因其氣能下濟，故能生育萬物，故道乃光明，故君子知謙而能使其道濟天下萬民，地之道亦同天，因自處卑地，故能上交於天，是故天地二者，皆因能卑降而終亨通也。&lt;/p>
&lt;h2 id="天道虧盈而益謙">
 天道虧盈而益謙。
 &lt;a class="anchor" href="#%e5%a4%a9%e9%81%93%e8%99%a7%e7%9b%88%e8%80%8c%e7%9b%8a%e8%ac%99">#&lt;/a>
&lt;/h2>
&lt;p>天之道有日月五星，其隨時盈晦，故能降氣於地，生養萬物。&lt;/p>
&lt;h2 id="地道變盈而流謙">
 地道變盈而流謙。
 &lt;a class="anchor" href="#%e5%9c%b0%e9%81%93%e8%ae%8a%e7%9b%88%e8%80%8c%e6%b5%81%e8%ac%99">#&lt;/a>
&lt;/h2>
&lt;p>地勢如盈滿，則必倾變而下陷。&lt;/p>
&lt;h2 id="鬼神害盈而福謙">
 鬼神害盈而福謙。
 &lt;a class="anchor" href="#%e9%ac%bc%e7%a5%9e%e5%ae%b3%e7%9b%88%e8%80%8c%e7%a6%8f%e8%ac%99">#&lt;/a>
&lt;/h2>
&lt;p>天地之道乃形而上之學，吾人可推理求之。鬼神人道乃形而下之學，吾人可親而見之，世間萬物必有其用，凡盈滿者，必有禍害，能謙損者，必有福祐之，猶今之西醫，其但知能如何除瘤用毒，不知損害之大，故後遗症之多，而自不見之。&lt;/p>
&lt;h2 id="人道惡盈而好謙">
 人道惡盈而好謙。
 &lt;a class="anchor" href="#%e4%ba%ba%e9%81%93%e6%83%a1%e7%9b%88%e8%80%8c%e5%a5%bd%e8%ac%99">#&lt;/a>
&lt;/h2>
&lt;p>人情必惡人之盈滿，好人之謙損，故聖人戒盈而勸人為謙也。&lt;/p>
&lt;h2 id="謙尊而光卑而不可喻君子之終也">
 謙尊而光，卑而不可喻，君子之終也。
 &lt;a class="anchor" href="#%e8%ac%99%e5%b0%8a%e8%80%8c%e5%85%89%e5%8d%91%e8%80%8c%e4%b8%8d%e5%8f%af%e5%96%bb%e5%90%9b%e5%ad%90%e4%b9%8b%e7%b5%82%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>君子之道因謙卑而光大，至誠之念如是而終。&lt;/p>
&lt;h2 id="象曰地中有山謙君子以裒多益寡稱物平施">
 象曰：地中有山，謙。君子以裒多益寡，稱物平施。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%9c%b0%e4%b8%ad%e6%9c%89%e5%b1%b1%e8%ac%99%e5%90%9b%e5%ad%90%e4%bb%a5%e8%a3%92%e5%a4%9a%e7%9b%8a%e5%af%a1%e7%a8%b1%e7%89%a9%e5%b9%b3%e6%96%bd">#&lt;/a>
&lt;/h2>
&lt;p>高大之山在地下，故示人外卑下，內實高大乃謙象。君子有過則損之，不足則益之，以之用於事，使萬物皆平衡也。&lt;/p>
&lt;h2 id="初六謙謙君子用涉大川吉">
 初六：謙謙君子，用涉大川，吉。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e8%ac%99%e8%ac%99%e5%90%9b%e5%ad%90%e7%94%a8%e6%b6%89%e5%a4%a7%e5%b7%9d%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>最卑下之位以柔態處之，又謙讓也。能如是，君子也。即涉險難，必無凶也。&lt;/p>
&lt;h2 id="六三嗚謙貞吉">
 六三：嗚謙，貞吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e5%97%9a%e8%ac%99%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>二位以柔順居中，謙之德至此，則須明倡於外，見諸聲色，堅心如此，吉也。&lt;/p>
&lt;h2 id="九三勞謙君子有終吉">
 九三：勞謙，君子有終，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%8b%9e%e8%ac%99%e5%90%9b%e5%ad%90%e6%9c%89%e7%b5%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>三為相位，以陽剛居之，上為君所任，下為民所從，能知勞而不居功，謙下待人，君子能行之至終，故吉。今上位掌權之人，盡皆示民其功勳為何，不知勞謙之美，此為小人之道長之時也。反之，能盡勞謙之道，必為君子。&lt;/p>
&lt;h2 id="六四无不利撝謙">
 六四：无不利，撝謙。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e6%97%a0%e4%b8%8d%e5%88%a9%e6%92%9d%e8%ac%99">#&lt;/a>
&lt;/h2>
&lt;p>四體居近君主之位，此時因六五之君，以謙柔自處，九三之相位，又因大功德為上所用， 此當恭畏侍君，卑謙以讓勞謙之臣，所有布施， 均為謙也，切不可不利於謙。&lt;/p></description></item><item><title>14火天大有</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/14%E7%81%AB%E5%A4%A9%E5%A4%A7%E6%9C%89/</link><pubDate>Tue, 14 Jan 2025 09:38:50 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/14%E7%81%AB%E5%A4%A9%E5%A4%A7%E6%9C%89/</guid><description>&lt;h1 id="14火天大有">
 14火天大有
 &lt;a class="anchor" href="#14%e7%81%ab%e5%a4%a9%e5%a4%a7%e6%9c%89">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦藺相如送趙壁往秦，卜得之，果還壁歸趙也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>婦人腹中一道氣，氣中二小兒，一藥王，藥有光，女人受藥，一犬。&lt;/strong>&lt;/p>
&lt;p>金玉滿堂之課 日麗中天之象&lt;/p>
&lt;p>同人之序卦，與人同者，物必歸，此天紀也。故大有為同人之序，物歸之後，乃大有也此卦，火在天上，火之處高，其明及遠，能照萬物，此為大有之象，一柔居尊位，眾陽應和，此居尊執柔，物乃所歸，上下相應，為天子之道。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、婦人腹中一道氣：妊娠之事；事萌於內也。二、氣中二子：主雙喜臨鬥。伯仲之間象。&lt;/p>
&lt;p>三、一藥王：平安之象。得病有救，遇良醫也。四、藥有光：藥有名也，災中有救也。&lt;/p>
&lt;p>五、女人受藥：女人為陰，示表面不信，但暗中仍聽之。&lt;/p>
&lt;p>六、一犬：乃狗年，戌月，戌日，此論時機也；或狄姓人士。七、犬：哭笑皆有象。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>大有：元亨。&lt;/p>
&lt;p>此乃以卦才而言，不言元亨利貞四德，乃恐與乾坤二卦相混淆，只言元亨乃盡元之義，元乃物之始，萬物生成之初皆為大善，因必有功用。此為大善之初，易經唯四卦，大有、蠱、升、鼎有元亨。其不與乾坤同，在乾為首出萬物，元始之象，在此四卦唯至善為大而已。&lt;/p>
&lt;h2 id="彖曰大有柔得尊位大中而上下應之曰大有其德剛健而文明-應乎天而時行是以元亨">
 彖曰：大有，柔得尊位，大中而上下應之，曰大有。其德剛健而文明， 應乎天而時行，是以元亨。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%a4%a7%e6%9c%89%e6%9f%94%e5%be%97%e5%b0%8a%e4%bd%8d%e5%a4%a7%e4%b8%ad%e8%80%8c%e4%b8%8a%e4%b8%8b%e6%87%89%e4%b9%8b%e6%9b%b0%e5%a4%a7%e6%9c%89%e5%85%b6%e5%be%b7%e5%89%9b%e5%81%a5%e8%80%8c%e6%96%87%e6%98%8e-%e6%87%89%e4%b9%8e%e5%a4%a9%e8%80%8c%e6%99%82%e8%a1%8c%e6%98%af%e4%bb%a5%e5%85%83%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>此卦之所以為大有，乃因五以陰柔居尊位，又處以中庸大中之道，為諸陽所依歸，上下相應，此居尊執柔，有虛中之象，卦德內剛健而外明理，處事順乎天應乎人，此所以元亨。事於成後，方可見成敗，敗非先現於事前也。故有得後乃有所失，非得則何言有失乎？&lt;/p>
&lt;h2 id="象曰火在天上大有君子以遏惡揚善順天休命">
 象曰：火在天上，大有，君子以遏惡揚善，順天休命。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e7%81%ab%e5%9c%a8%e5%a4%a9%e4%b8%8a%e5%a4%a7%e6%9c%89%e5%90%9b%e5%ad%90%e4%bb%a5%e9%81%8f%e6%83%a1%e6%8f%9a%e5%96%84%e9%a0%86%e5%a4%a9%e4%bc%91%e5%91%bd">#&lt;/a>
&lt;/h2>
&lt;p>火因在天上，故能照見萬物，君子觀大有之象，故知治眾之道，唯遏惡揚善，此能順天命而安眾民心，天子之道即如是。&lt;/p>
&lt;h2 id="初九无交害匪咎艱則无咎">
 初九：无交害，匪咎，艱則无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%97%a0%e4%ba%a4%e5%ae%b3%e5%8c%aa%e5%92%8e%e8%89%b1%e5%89%87%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>以陽剛之性處卑下之位，因未至於盛，故不有驕盈之慮，因無交往，故無害。人之富有於財或才，鮮不有害，富有本無罪，但人卻皆因富有而招害，乃因處富有而不知思艱戒盛， 則生驕侈之心，此所以生害也。&lt;/p>
&lt;h2 id="九二大車以載有攸往无咎">
 九二：大車以載，有攸往，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%a4%a7%e8%bb%8a%e4%bb%a5%e8%bc%89%e6%9c%89%e6%94%b8%e5%be%80%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>此位以剛健之才，居於陰柔之位，而為六五君位所信任，故無災。就如大車之材，強壯能载重物，可以任重行遠，往而無災。&lt;/p>
&lt;h2 id="九三公用亨于天子小人弗克">
 九三：公用亨于天子，小人弗克。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%85%ac%e7%94%a8%e4%ba%a8%e4%ba%8e%e5%a4%a9%e5%ad%90%e5%b0%8f%e4%ba%ba%e5%bc%97%e5%85%8b">#&lt;/a>
&lt;/h2>
&lt;p>九三居下卦之上位，為諸侯之位，諸侯雖享有土地之富，人民之眾，但仍屬天子所有， 此人臣之義。但小人居此位則專其富有以為私，不知奉上以公之道。&lt;/p>
&lt;h2 id="九四匪其彭无咎">
 九四：匪其彭，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e5%8c%aa%e5%85%b6%e5%bd%ad%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>九四陽剛居大有之時，因近君位，如處之太盛，則致凶，彭為盛大之義，須謙損，方為吉道。&lt;/p>
&lt;h2 id="六五厥孚交如威如吉">
 六五：厥孚交如，威如，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%8e%a5%e5%ad%9a%e4%ba%a4%e5%a6%82%e5%a8%81%e5%a6%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>人君之位，以陰柔守之，以誠信待於下， 下亦誠信待上，上下相交，此人心易安，但若專以柔順，則必生悔慢之心，故以威信，故君子柔中有威，使下屬有畏，其吉可知也。&lt;/p>
&lt;h2 id="上九自天祐之吉无不利">
 上九：自天祐之，吉，无不利。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e8%87%aa%e5%a4%a9%e7%a5%90%e4%b9%8b%e5%90%89%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>此位乃大有卦之終極，仍明之極意。人唯至明，故不居於已有，有極大之位，而不為已有，則無盈滿之災，君能至此，則合於天道， 得天之祐，則無往不吉。大同之世來矣。&lt;/p>
&lt;h2 id="象曰大有初九无交害也">
 象曰：大有初九，无交害也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a7%e6%9c%89%e5%88%9d%e4%b9%9d%e6%97%a0%e4%ba%a4%e5%ae%b3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此即在大有之初始，即生戒心，須時思念艱難之時，此居安思危之來源，故能如此，則交亦無害也。故與人交往，持富有而驕，必生害也。&lt;/p>
&lt;h2 id="象曰大車以載積中不敗也">
 象曰：大車以載，積中不敗也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a7%e8%bb%8a%e4%bb%a5%e8%bc%89%e7%a9%8d%e4%b8%ad%e4%b8%8d%e6%95%97%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>大車能載重物，重物集中而不損敗，言九二才力之強，能勝大有之重任。&lt;/p>
&lt;h2 id="象曰公用亨于天子小人害也">
 象曰：公用亨于天子，小人害也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%ac%e7%94%a8%e4%ba%a8%e4%ba%8e%e5%a4%a9%e5%ad%90%e5%b0%8f%e4%ba%ba%e5%ae%b3%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>諸侯能守臣節，忠順奉上，慎養其眾，為王之徵用。若小人處此位，則不知奉上之道， 以所有為私有，故小人居此位，則有大害也。&lt;/p>
&lt;h2 id="象曰匪其彭无咎明辯皙也">
 象曰：匪其彭，无咎，明辯皙也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%8c%aa%e5%85%b6%e5%bd%ad%e6%97%a0%e5%92%8e%e6%98%8e%e8%be%af%e7%9a%99%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>明智之人，處此大有盛大之時，戒在咎之將至，以謙損態度應之，不敢至於極滿招凶之道也。故無災。&lt;/p></description></item><item><title>13天火同人</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/13%E5%A4%A9%E7%81%AB%E5%90%8C%E4%BA%BA/</link><pubDate>Tue, 14 Jan 2025 09:38:49 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/13%E5%A4%A9%E7%81%AB%E5%90%8C%E4%BA%BA/</guid><description>&lt;h1 id="13天火同人">
 13天火同人
 &lt;a class="anchor" href="#13%e5%a4%a9%e7%81%ab%e5%90%8c%e4%ba%ba">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦劉文龍在外求官，卜得之，果衣錦還鄉。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>人捧文書上有心字，人張弓，射山上， 一鹿飲水，一溪。&lt;/strong>&lt;/p>
&lt;p>游魚從水之課 二人分金之象&lt;/p>
&lt;p>天地不交則否，上下相同則同。遇否之世，必與人同力方能渡過。故次否也。以象言，天之性在上，火之性炎上與天同，故為同人。以卦體言，五為君位乾主，二為離位，陰柔居二爻。上下相同之義，天性剛健，火性明耀，即外健內明之象，吾人外剛健，內明道，則成天火同人， 此為大同之道。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、人捧文書上有心字：得民心之象，同心協力之象。寧姓。二、人張弓射山上：高中金榜。張姓人氏。&lt;/p>
&lt;p>三、一鹿飲水：财祿滾滾而來。亦在野之賢人。四、一溪：平和安靜狀。&lt;/p>
&lt;p>五、鹿之性，動則敏，靜則順，此剛健人之性，世間但聞虎食人，未聞鹿食人。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>同人：于野，亨。利涉大川，利君子貞。&lt;/p>
&lt;p>野即遠與外之意，以天下大同之道，聖賢大公之心，使之無遠不同。常人之同，以私意所合，此暱親之情。故必于野，方可謂大同。天下皆同時，何險阻能阻礙？何艱困能致危？故利涉大川，君子須堅心於此。小人唯用私意，所親比者亦為小人，朋黨之始，其心不正也。&lt;/p>
&lt;h2 id="象曰同人柔得位得中而應乎乾曰同人">
 象曰：同人，柔得位，得中而應乎乾，曰同人。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%90%8c%e4%ba%ba%e6%9f%94%e5%be%97%e4%bd%8d%e5%be%97%e4%b8%ad%e8%80%8c%e6%87%89%e4%b9%8e%e4%b9%be%e6%9b%b0%e5%90%8c%e4%ba%ba">#&lt;/a>
&lt;/h2>
&lt;p>二爻以陰居陰位，此為正位，得中正之德，應乎乾上，五為君位，以剛健中正，二以柔順對應，上下同心同德，故曰：同人。&lt;/p>
&lt;h2 id="同人于野亨利涉大川乾行也">
 同人于野，亨，利涉大川，乾行也。
 &lt;a class="anchor" href="#%e5%90%8c%e4%ba%ba%e4%ba%8e%e9%87%8e%e4%ba%a8%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d%e4%b9%be%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>乾之行，必至誠無私，故可以涉險難，而吉。無私，天德也。&lt;/p>
&lt;h2 id="文明以健中正而應君子正也唯君子爲能通天下之志">
 文明以健，中正而應，君子正也。唯君子爲能通天下之志。
 &lt;a class="anchor" href="#%e6%96%87%e6%98%8e%e4%bb%a5%e5%81%a5%e4%b8%ad%e6%ad%a3%e8%80%8c%e6%87%89%e5%90%9b%e5%ad%90%e6%ad%a3%e4%b9%9f%e5%94%af%e5%90%9b%e5%ad%90%e7%88%b2%e8%83%bd%e9%80%9a%e5%a4%a9%e4%b8%8b%e4%b9%8b%e5%bf%97">#&lt;/a>
&lt;/h2>
&lt;p>下體為有文明之德，上卦為剛健之性，此君子之正道。天下之志萬殊且異，但理則一也。君子因明理，故能通天下之志。聖人視億萬人之心為一心，因只一理而已。文明能使人更明理， 故能明大同之真義，剛健必能克已，則必能致大同之道。&lt;/p>
&lt;h2 id="象曰天與火同人君子以類族辨物">
 象曰：天與火，同人，君子以類族辨物。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e8%88%87%e7%81%ab%e5%90%8c%e4%ba%ba%e5%90%9b%e5%ad%90%e4%bb%a5%e9%a1%9e%e6%97%8f%e8%be%a8%e7%89%a9">#&lt;/a>
&lt;/h2>
&lt;p>天在上，火之性炎上，此為同人，君子觀同人之象，以分類群族各以其性同來區分，如君子小人，善惡是非，物之外形固異，但事理皆同，君子能辨明。&lt;/p>
&lt;h2 id="初九同人于門无咎">
 初九：同人于門，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%90%8c%e4%ba%ba%e4%ba%8e%e9%96%80%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>初進為剛健，此因無所偏私，出門在外因無私，而無咎也。&lt;/p>
&lt;h2 id="象曰出門同人又誰咎也">
 象曰：出門同人，又誰咎也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%87%ba%e9%96%80%e5%90%8c%e4%ba%ba%e5%8f%88%e8%aa%b0%e5%92%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>出門在外，因同人之道而無私，同此道之人又廣，無厚此薄彼之異，則無人歸咎也。&lt;/p>
&lt;h2 id="六二同人于宗吝">
 六二：同人于宗，吝！
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%90%8c%e4%ba%ba%e4%ba%8e%e5%ae%97%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>宗為宗黨也，同於所派系，此有所偏，故可吝。故只用宗黨之人則有偏私，此為鄙吝之人。&lt;/p>
&lt;h2 id="九三伏戎于莽升其高陵三歲不興">
 九三：伏戎于莽，升其高陵，三歲不興。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e4%bc%8f%e6%88%8e%e4%ba%8e%e8%8e%bd%e5%8d%87%e5%85%b6%e9%ab%98%e9%99%b5%e4%b8%89%e6%ad%b2%e4%b8%8d%e8%88%88">#&lt;/a>
&lt;/h2>
&lt;p>二以中正之道與君五位相同志，三以剛暴之人居二五之間，欲奪，然理不直，義不勝， 不敢發動，故只能藏兵戎於莽林間，時升高陵顧望，至三年之久，仍無機可乘，此小人之情狀。&lt;/p>
&lt;h2 id="九四乘其墉弗克攻吉">
 九四：乘其墉，弗克攻，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e4%b9%98%e5%85%b6%e5%a2%89%e5%bc%97%e5%85%8b%e6%94%bb%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>九四乃陰位，陽剛居之，故以剛居柔位， 其近君位，知義不直而能復返正道，亦吉也。&lt;/p>
&lt;p>三以剛居剛，故終其強而不可能反。此示人畏義能改則終吉。&lt;/p>
&lt;h2 id="九五同人先號咷而後笑大師克相遇">
 九五：同人，先號咷而後笑，大師克相遇。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%90%8c%e4%ba%ba%e5%85%88%e8%99%9f%e5%92%b7%e8%80%8c%e5%be%8c%e7%ac%91%e5%a4%a7%e5%b8%ab%e5%85%8b%e7%9b%b8%e9%81%87">#&lt;/a>
&lt;/h2>
&lt;p>人君當與天下大同，如獨私一人，則非君道也。其同志為二爻，間隔有三四之剛，故未遇之前憤怒而號咷，即遇則大笑，故二人同心， 其利斷金，中誠所同，無所不同，天下莫能離間，則無所不入，故聖人赞之曰：『同心之言， 其臭如蘭』。&lt;/p>
&lt;h2 id="上九同人于郊无悔">
 上九：同人于郊，无悔。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e5%90%8c%e4%ba%ba%e4%ba%8e%e9%83%8a%e6%97%a0%e6%82%94">#&lt;/a>
&lt;/h2>
&lt;p>求大同之道，必相親相與，即在外又遠之地不同，但亦永無悔矣。&lt;/p></description></item><item><title>12天地否</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/12%E5%A4%A9%E5%9C%B0%E5%90%A6/</link><pubDate>Tue, 14 Jan 2025 09:38:48 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/12%E5%A4%A9%E5%9C%B0%E5%90%A6/</guid><description>&lt;h1 id="12天地否">
 12天地否
 &lt;a class="anchor" href="#12%e5%a4%a9%e5%9c%b0%e5%90%a6">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦蘇秦將遊説六國，卜得之，果為相矣。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>男人臥病，鏡破，人路上坐，張弓箭頭落地，人拍掌笑，口舌。&lt;/strong>&lt;/p>
&lt;p>天地不交之課 人口不實之象&lt;/p>
&lt;p>上泰之終，六爻以陰柔（小人）處之，則為否之初。天地相交，陰陽相通，則為泰，今天在上，地在下，是天地隔絶，不相往來，故成否卦。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、男子臥病：男子為陽，陽同佯，裝病之象也。二、镜破：不可赴也。破鏡難圓之象。&lt;/p>
&lt;p>三、人路上坐：小人阻路，不讓進也。四、張弓箭頭落地：鳥盡弓藏也。&lt;/p>
&lt;p>五、人拍掌笑：幸災樂禍之小人，做假攻訐兩人感情得逞狀，夫妻凶。六、舌：主口舌，官司，謡言生害。&lt;/p>
&lt;p>七、口上有四點：四點為黑，暗中誣陷之謡言，古人謂三口成虎，即意此。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>否之匪人。不利君子貞，大往小來。&lt;/p>
&lt;p>舉凡天地之間皆為人道，今天地不交，不生萬物，是無人道，故曰匪人。處此之時，君子不可堅心，因正道不行，小人道長之時。&lt;/p>
&lt;h2 id="彖曰否之匪人不利君子貞大往小來則是天地不交而萬物不通也上下不交而天下无邦也内陰而外陽内柔而外剛内小人而外君子小人道長君子道消也">
 彖曰：否之匪人，不利君子貞，大往小來，則是天地不交，而萬物不通也。上下不交，而天下无邦也。内陰而外陽，内柔而外剛，内小人而外君子，小人道長，君子道消也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%90%a6%e4%b9%8b%e5%8c%aa%e4%ba%ba%e4%b8%8d%e5%88%a9%e5%90%9b%e5%ad%90%e8%b2%9e%e5%a4%a7%e5%be%80%e5%b0%8f%e4%be%86%e5%89%87%e6%98%af%e5%a4%a9%e5%9c%b0%e4%b8%8d%e4%ba%a4%e8%80%8c%e8%90%ac%e7%89%a9%e4%b8%8d%e9%80%9a%e4%b9%9f%e4%b8%8a%e4%b8%8b%e4%b8%8d%e4%ba%a4%e8%80%8c%e5%a4%a9%e4%b8%8b%e6%97%a0%e9%82%a6%e4%b9%9f%e5%86%85%e9%99%b0%e8%80%8c%e5%a4%96%e9%99%bd%e5%86%85%e6%9f%94%e8%80%8c%e5%a4%96%e5%89%9b%e5%86%85%e5%b0%8f%e4%ba%ba%e8%80%8c%e5%a4%96%e5%90%9b%e5%ad%90%e5%b0%8f%e4%ba%ba%e9%81%93%e9%95%b7%e5%90%9b%e5%ad%90%e9%81%93%e6%b6%88%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>天地不交，萬物不生。上下不和，則天下無治國之道。治世乃上位施政來治民，人民擁戴君王而願從命，上下相交，此治國之道。今君子居於外野，小人處於朝內，故為小人道長，君子道消之時也。&lt;/p>
&lt;h2 id="象曰天地不交否君子以儉德辟難不可榮以祿">
 象曰：天地不交，否。君子以儉德辟難，不可榮以祿。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e5%9c%b0%e4%b8%8d%e4%ba%a4%e5%90%a6%e5%90%9b%e5%ad%90%e4%bb%a5%e5%84%89%e5%be%b7%e8%be%9f%e9%9b%a3%e4%b8%8d%e5%8f%af%e6%a6%ae%e4%bb%a5%e7%a5%bf">#&lt;/a>
&lt;/h2>
&lt;p>君子觀否塞之象為外健內顺(柔)。處否之時，損儉自己，避開禍亂。千萬不可榮居祿位， 戀棧不去。因小人得志之時，君子仍居顯位，則禍必及己身。反之，仍居顯位不放，乃真小人也。即內小人，外君子之意。&lt;/p>
&lt;h2 id="初六拔茅如以其彙貞吉亨">
 初六：拔茅如，以其彙，貞吉，亨。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e6%8b%94%e8%8c%85%e5%a6%82%e4%bb%a5%e5%85%b6%e5%bd%99%e8%b2%9e%e5%90%89%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>否之在最下者，為君子也。因否而不能進者，君子也。處否而能進者，小人也。因在下位，又貞固其節志，同類而聚，雖不進升，但亦吉矣。&lt;/p>
&lt;h2 id="六二包承小人吉大人否亨">
 六二：包承，小人吉，大人否，亨。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e5%8c%85%e6%89%bf%e5%b0%8f%e4%ba%ba%e5%90%89%e5%a4%a7%e4%ba%ba%e5%90%a6%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>六二本陰爻位，今陰柔居之，以小人而言， 其心所包容的，皆承顺上位之意，以求本身之利，此小人之吉。大人處否，則以道之陽剛自勉，絶不枉屈正道，奉承上位，雖身處否，但道仍亨也。&lt;/p>
&lt;h2 id="六三包羞">
 六三：包羞。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e5%8c%85%e7%be%9e">#&lt;/a>
&lt;/h2>
&lt;p>不中不正之人居否之時，位居相位，不能守道安命，極盡小人之能事，每日謀慮邪事， 無所不包，此羞恥之大也。&lt;/p>
&lt;h2 id="九四有命无咎疇離祉">
 九四：有命，无咎，疇離祉。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e6%9c%89%e5%91%bd%e6%97%a0%e5%92%8e%e7%96%87%e9%9b%a2%e7%a5%89">#&lt;/a>
&lt;/h2>
&lt;p>居君側之人，最忌有居功招忌之事，因否時君道不正，即令有濟世之大才，亦不堪用。如能使事事出於君令，威柄皆歸於上，則&lt;/p>
&lt;p>無災而可實現大志。當君子道行，同類必同進同出為天下黎民福祉著想。小人亦同進退也。&lt;/p>
&lt;h2 id="九五休否大人吉其亡其亡">
 九五：休否，大人吉，其亡，其亡，
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e4%bc%91%e5%90%a6%e5%a4%a7%e4%ba%ba%e5%90%89%e5%85%b6%e4%ba%a1%e5%85%b6%e4%ba%a1">#&lt;/a>
&lt;/h2>
&lt;p>繋于苞桑。&lt;/p>
&lt;p>處否之時，惟有陽剛中正之人居君位，能去天下之否，即大人吉。如循環至泰，亦須戒盛警惕否之復来，此其亡，其亡之意。此戒须如同苞桑，桑為根深蒂固之物，苞乃叢生之物， 其固更強，此為安固之道。此為聖人之深戒也。 繫辭：『危者安其位者也，亡者保其存者也， 亂者有其治者也。是故君子安而不忘危，存而不忘亡，治而不忘亂，是以身安而國家可保也。』&lt;/p>
&lt;h2 id="上九傾否先否後喜">
 上九：傾否，先否後喜。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e5%82%be%e5%90%a6%e5%85%88%e5%90%a6%e5%be%8c%e5%96%9c">#&lt;/a>
&lt;/h2>
&lt;p>物極必反，泰極則否，否極則泰，故否之極，即否道將覆，則泰矣，故曰後喜。&lt;/p>
&lt;h2 id="象曰拔茅貞吉志在君也">
 象曰：拔茅貞吉，志在君也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%8b%94%e8%8c%85%e8%b2%9e%e5%90%89%e5%bf%97%e5%9c%a8%e5%90%9b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>君子處否時而居下位，冀得同類而進，如遇小人，則堅守其節，但心仍在天下。&lt;/p>
&lt;h2 id="象曰大人否亨不亂群也">
 象曰：大人否亨，不亂群也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a7%e4%ba%ba%e5%90%a6%e4%ba%a8%e4%b8%8d%e4%ba%82%e7%be%a4%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>處否而守其正節，乃為大人，不與小人同亂為群體，形雖否，但其道吉，此道必大。&lt;/p>
&lt;h2 id="象曰包羞位不當也">
 象曰：包羞，位不當也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%8c%85%e7%be%9e%e4%bd%8d%e4%b8%8d%e7%95%b6%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>居否時，所為邪吝，羞於公正，居此相位而不適，此不可以為正道。&lt;/p></description></item><item><title>11地天泰</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/11%E5%9C%B0%E5%A4%A9%E6%B3%B0/</link><pubDate>Tue, 14 Jan 2025 09:38:47 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/11%E5%9C%B0%E5%A4%A9%E6%B3%B0/</guid><description>&lt;h1 id="11地天泰">
 11地天泰
 &lt;a class="anchor" href="#11%e5%9c%b0%e5%a4%a9%e6%b3%b0">#&lt;/a>
&lt;/h1>
&lt;p>此卦堯帝將襌位，卜得之，乃得舜而遜位。&lt;/p>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
圖中：&lt;/p>
&lt;p>&lt;strong>月中桂開，官人登梯，鹿銜書，小兒在雲中，羊回頭，地下亂點。&lt;/strong>&lt;/p>
&lt;p>天地交泰之課 小往大來之象&lt;/p>
&lt;p>履之後（有禮而始終如一）則有泰，即履得其所，則舒泰而安也。故泰所以次履也，坤柔在上，乾陽居下，乃天地陰陽之氣相交合，萬物生成，故表通泰狀。卦象外柔內健，此為致泰之道。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、月中桂開：清明政治之時。&lt;/p>
&lt;p>二、官人登梯：升遷順遂之意，官人亦倌人，即丈夫也。三、鹿銜書：受天子恩賜祿位。&lt;/p>
&lt;p>四、小兒在雲中：少年得志象。得天官貴人助也。 五、羊回頭：回陽間也。亦楊姓人，發肖羊人成格。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>泰，小往大來，吉亨。&lt;/p>
&lt;p>陽氣下降，陰氣上升，陰陽和暢，萬物生焉，此天地之泰。人間之泰，大則居上，小則臣下，君王推誠任下，臣盡誠以事君，上下同志，朝廷之泰。君子，小人亦如是，君子處君位， 小人居下位，天下之泰也。&lt;/p>
&lt;h2 id="彖曰泰小往大來吉亨則是天地交而萬物通也上下交而其志同也">
 彖曰：泰，小往大來，吉亨。則是天地交而萬物通也，上下交而其志同也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%b3%b0%e5%b0%8f%e5%be%80%e5%a4%a7%e4%be%86%e5%90%89%e4%ba%a8%e5%89%87%e6%98%af%e5%a4%a9%e5%9c%b0%e4%ba%a4%e8%80%8c%e8%90%ac%e7%89%a9%e9%80%9a%e4%b9%9f%e4%b8%8a%e4%b8%8b%e4%ba%a4%e8%80%8c%e5%85%b6%e5%bf%97%e5%90%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陰往而陽來，天地氣相交，萬物通泰。人則上下之志相同，互相交通，人之泰也。「內陽而外陰，內健而外順，內君子而外小人，君子道長，小人道消也。」陽進陰退之時，故內健外順，君子之道也，君子在內，小人在外，此所以為泰。&lt;/p>
&lt;h2 id="象曰天地交泰后以財成天地之道輔相天地之宜以左右民">
 象曰：天地交，泰。后以財成天地之道，輔相天地之宜，以左右民。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e5%9c%b0%e4%ba%a4%e6%b3%b0%e5%90%8e%e4%bb%a5%e8%b2%a1%e6%88%90%e5%a4%a9%e5%9c%b0%e4%b9%8b%e9%81%93%e8%bc%94%e7%9b%b8%e5%a4%a9%e5%9c%b0%e4%b9%8b%e5%ae%9c%e4%bb%a5%e5%b7%a6%e5%8f%b3%e6%b0%91">#&lt;/a>
&lt;/h2>
&lt;p>此示人君須體會交泰之道而為法制，使民用天時之宜，輔助教育人民之功，使民有財，輔助於民，民則必賴君上之法制，因法治之宜也，得其生養。&lt;/p>
&lt;h2 id="初九拔茅茹以其彙征吉">
 初九：拔茅茹，以其彙，征吉。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%8b%94%e8%8c%85%e8%8c%b9%e4%bb%a5%e5%85%b6%e5%bd%99%e5%be%81%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>剛明之才，居於下位，遇泰之時，志而上&lt;/p>
&lt;p>進，遇同志而行同道，因同類而進，吉。凡君子小人都須賴同類以助，未有人能獨立而不須朋類之助。&lt;/p>
&lt;h2 id="象曰拔茅征吉志在外也">
 象曰：拔茅征吉，志在外也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%8b%94%e8%8c%85%e5%be%81%e5%90%89%e5%bf%97%e5%9c%a8%e5%a4%96%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>同類相聚，如拔茅之根相牽連，同欲上進。&lt;/p>
&lt;h2 id="九二包荒用馮河不遐遺朋亡得尚于中行">
 九二：包荒，用馮河，不遐遺，朋亡，得尚于中行。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%8c%85%e8%8d%92%e7%94%a8%e9%a6%ae%e6%b2%b3%e4%b8%8d%e9%81%90%e9%81%ba%e6%9c%8b%e4%ba%a1%e5%be%97%e5%b0%9a%e4%ba%8e%e4%b8%ad%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>九二為將位，以剛明之才，五為柔順而得君位，上下之專信建立，此位乃治泰者，故治泰之道，主將位而能包荒，如人情放肆所為， 則政令緩，法度廢弛，治此之道，必有包含荒穢之量，詳密施政，去其弊端，則人安之。處泰之道，人之常情習於久安，惰於因循，不敢變更，用馮河，乃奮發改革之意，雖至小至微之事亦不可遺漏，自古立法治事，牽於人情， 卒不能行者多矣。如禁奢侈則害近戚，限田宅， 則防礙貴族之家，此治泰之難。遇治泰，須稟持公正之態度，即中行意。&lt;/p>
&lt;h2 id="九三无平不陂无往不復艱貞无咎勿恤其孚于食有福">
 九三：无平不陂，无往不復，艱貞无咎，勿恤其孚，于食有福。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e6%97%a0%e5%b9%b3%e4%b8%8d%e9%99%82%e6%97%a0%e5%be%80%e4%b8%8d%e5%be%a9%e8%89%b1%e8%b2%9e%e6%97%a0%e5%92%8e%e5%8b%bf%e6%81%a4%e5%85%b6%e5%ad%9a%e4%ba%8e%e9%a3%9f%e6%9c%89%e7%a6%8f">#&lt;/a>
&lt;/h2>
&lt;p>三居諸陽之上，乃泰之盛時。聖人為之戒， 在下者必升，居上者必降，泰久而必否，故戒之。故當此時，不敢安逸，居安思危，則無災。故處泰之道須能堅貞，可常保泰。自古以來隆盛皆因內失道而喪敗下來。&lt;/p>
&lt;h2 id="六四翩翩不富以其鄰不戒以孚">
 六四：翩翩不富，以其鄰，不戒以孚。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e7%bf%a9%e7%bf%a9%e4%b8%8d%e5%af%8c%e4%bb%a5%e5%85%b6%e9%84%b0%e4%b8%8d%e6%88%92%e4%bb%a5%e5%ad%9a">#&lt;/a>
&lt;/h2>
&lt;p>翩翩，疾飛之貌，人富而從其類，為利也。不富而從其者；志同也。上三爻皆為陰，陰在上而失其中實之道，皆欲下從，故為不富而從， 此誠意相合也。如至六四位方戒已晚，居三為適中，知戒可保，四位則已過，必生變化。&lt;/p>
&lt;h2 id="六五帝乙歸妹以祉元吉">
 六五：帝乙歸妹，以祉元吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e5%b8%9d%e4%b9%99%e6%ad%b8%e5%a6%b9%e4%bb%a5%e7%a5%89%e5%85%83%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>為居君位，古之帝女皆向下嫁，帝乙制禮法，须降其尊貴，以順從其夫也。今六五以陰柔居君位，對應之九二為陽剛，乃能信之，而任用其賢且順從之，猶帝女之下嫁亦然，此成治泰之功也。&lt;/p>
&lt;h2 id="上六城復于隍勿用師自邑告命貞吝">
 上六：城復于隍，勿用師，自邑告命，貞吝。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%9f%8e%e5%be%a9%e4%ba%8e%e9%9a%8d%e5%8b%bf%e7%94%a8%e5%b8%ab%e8%87%aa%e9%82%91%e5%91%8a%e5%91%bd%e8%b2%9e%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>此致泰之終也，小人處之，行必否矣。掘隍土累積成城，如治道累積以成泰，今城土頹圮，又復返於隍也。勿用師，夫用師之道，必得民心，今民心不從，用師必亂，此時即自有天命任之，亦逄羞而凶矣。&lt;/p>
&lt;h2 id="象曰包荒得尚於中行以光大也">
 象曰：包荒，得尚於中行，以光大也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%8c%85%e8%8d%92%e5%be%97%e5%b0%9a%e6%96%bc%e4%b8%ad%e8%a1%8c%e4%bb%a5%e5%85%89%e5%a4%a7%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>有包含荒穢之量，又配合中行之德，其道則明顯光大。&lt;/p>
&lt;h2 id="象曰无不復天地際也">
 象曰：无不復，天地際也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%97%a0%e4%b8%8d%e5%be%a9%e5%a4%a9%e5%9c%b0%e9%9a%9b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陽降於下，必復上，陰升於上，必復下， 此示人明天地交泰之道不常存之理也，聖人戒之。&lt;/p></description></item><item><title>10天澤履</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/10%E5%A4%A9%E6%B3%BD%E5%B1%A5/</link><pubDate>Tue, 14 Jan 2025 09:38:46 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/10%E5%A4%A9%E6%B3%BD%E5%B1%A5/</guid><description>&lt;h1 id="10天澤履">
 10天澤履
 &lt;a class="anchor" href="#10%e5%a4%a9%e6%be%a4%e5%b1%a5">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦子路出行，卜得之，遇虎拔其尾也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>笠子下一女，文書破，手中有傘，軍旗官人邊坐，堠上有千里字，地上兩點足印。&lt;/strong>&lt;/p>
&lt;p>如履虎尾之課 安中防危之象&lt;/p>
&lt;p>天地間萬物由畜道而止之後，有禮生焉，履者，禮也，故畜之後為履。所有物之聚大小不同，高下不等，有美惡之分，是故物聚後必有禮。人到何處，必有禮也。卦體天在上，澤在下， 上下區分，尊卑立見，此理所當然也。此以柔藉剛，謙卑而順，説禮之道也。澤有卑順之意， 卦象『外健內卑』，禮之本也。&lt;/p>
&lt;p>一、女人在笠下：妾也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>二、千里堠：遠離外出封侯象。&lt;/p>
&lt;p>三、文書破在地：憑證承諾無效象。四、傘下：有庇蔭也。&lt;/p>
&lt;p>五、軍旗下官人坐：主有官司、訴訟、牢獄之災象。&lt;/p>
&lt;p>六、二點在地：踐踏之足印也，示人處危之時，有禮之道，乃能行危而無殃也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>履虎尾，不咥人，亨。&lt;/p>
&lt;p>有禮之道即入險中，如踐虎尾，不見其反食人，乃因有禮也，所以亨也。故常言伸手不打笑臉人，同此。&lt;/p>
&lt;h2 id="彖曰履柔履剛也説而應乎乾是以履虎尾不咥人亨">
 彖曰：履，柔履剛也。説而應乎乾，是以履虎尾，不咥人，亨。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%b1%a5%e6%9f%94%e5%b1%a5%e5%89%9b%e4%b9%9f%e8%aa%ac%e8%80%8c%e6%87%89%e4%b9%8e%e4%b9%be%e6%98%af%e4%bb%a5%e5%b1%a5%e8%99%8e%e5%b0%be%e4%b8%8d%e5%92%a5%e4%ba%ba%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>兌為澤，為悦，兌以柔順之藉乾剛，與乾剛相乎應，又有禮於下，故踐虎尾而不相害也。&lt;/p>
&lt;h2 id="剛中正履帝位而不疚光明也">
 剛中正，履帝位而不疚，光明也。
 &lt;a class="anchor" href="#%e5%89%9b%e4%b8%ad%e6%ad%a3%e5%b1%a5%e5%b8%9d%e4%bd%8d%e8%80%8c%e4%b8%8d%e7%96%9a%e5%85%89%e6%98%8e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>九五以陽剛又居君位，又得履道之善，此不病之因，乃得光明也。&lt;/p>
&lt;h2 id="象曰上天下澤履君子以辯上下定民志">
 象曰：上天下澤，履。君子以辯上下，定民志。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e4%b8%8a%e5%a4%a9%e4%b8%8b%e6%be%a4%e5%b1%a5%e5%90%9b%e5%ad%90%e4%bb%a5%e8%be%af%e4%b8%8a%e4%b8%8b%e5%ae%9a%e6%b0%91%e5%bf%97">#&lt;/a>
&lt;/h2>
&lt;p>天在上，澤在下，尊卑有分，此天下之正理也。人之禮常如是，有禮乃行也。君子觀履象， 以辨上下之區分，來立民志，民因上下區分明顯而志定，自此乃可言治。立法複雜，民無所從， 治世將不再。是故人各安其位，此得其分內也，如佔位又不進德，除之，由君子進任，士人進修學識，到一定程度而君子求之。士農工商各行業之人，因所享有限，而能有定志，則天下一&lt;/p>
&lt;p>心也。今人自下至公卿，日所志為尊榮，農工商人，日思於富侈，億兆之心交相為利，天下皆如此，心如何一致？要它不亂也難矣！皆因上下無定其志也。君子觀履，分區上下，使各當其位，用此以定民心之向也。&lt;/p>
&lt;h2 id="初九素履往无咎">
 初九：素履往，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e7%b4%a0%e5%b1%a5%e5%be%80%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>初處於下，陽剛之才可以進，但外則表現其卑下之位的素養，無咎。&lt;/p>
&lt;h2 id="九二履道坦坦幽人貞吉">
 九二：履道坦坦，幽人貞吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%b1%a5%e9%81%93%e5%9d%a6%e5%9d%a6%e5%b9%bd%e4%ba%ba%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>二為陰位，陽居，即意其待人之禮坦蕩蕩， 平易之道也。因為陽進，故須有防人嗤之禮數之誹，是以安幽清靜之心情處此時，則吉。&lt;/p>
&lt;h2 id="六三眇能視跛能履履虎尾-咥人凶武人爲于大君">
 六三：眇能視，跛能履，履虎尾， 咥人凶，武人爲于大君。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e7%9c%87%e8%83%bd%e8%a6%96%e8%b7%9b%e8%83%bd%e5%b1%a5%e5%b1%a5%e8%99%8e%e5%b0%be-%e5%92%a5%e4%ba%ba%e5%87%b6%e6%ad%a6%e4%ba%ba%e7%88%b2%e4%ba%8e%e5%a4%a7%e5%90%9b">#&lt;/a>
&lt;/h2>
&lt;p>三為陽位，柔居之，乃志欲剛而體本柔， 不能堅心為履道。就如盲人之視而不見，跛人行路而不遠，意乃才能不足，又處時之不順遂， 則禮道非正，乃履於危地，因不善履道，入危地召凶，禍患立至，故咥人凶，就如武暴之人卻居人上，又任意為之，不知禮，乃凶之道。&lt;/p>
&lt;h2 id="象曰素履之往獨行願也">
 象曰：素履之往，獨行願也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e7%b4%a0%e5%b1%a5%e4%b9%8b%e5%be%80%e7%8d%a8%e8%a1%8c%e9%a1%98%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>安於有禮之往，因非為利也，乃各有其志也。如人有行道之心，又有名利之心，交戰於中，豈能安履。&lt;/p>
&lt;h2 id="象曰幽人貞吉中不自亂也">
 象曰：幽人貞吉，中不自亂也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b9%bd%e4%ba%ba%e8%b2%9e%e5%90%89%e4%b8%ad%e4%b8%8d%e8%87%aa%e4%ba%82%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>履之道(禮之道)在於安靜，其因正，則所履安也，心中躁動，則不能安於禮道，此即有禮於人，必以心中安靜，如以利欲交爭於心中， 必自亂。&lt;/p>
&lt;h2 id="象曰眇能視不足以明也跛能履不足以與行也">
 象曰：眇能視，不足以明也，跛能履，不足以與行也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e7%9c%87%e8%83%bd%e8%a6%96%e4%b8%8d%e8%b6%b3%e4%bb%a5%e6%98%8e%e4%b9%9f%e8%b7%9b%e8%83%bd%e5%b1%a5%e4%b8%8d%e8%b6%b3%e4%bb%a5%e8%88%87%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陰柔乃才不足之人，視不明，行又不遠， 今又居剛之上，災難來矣。&lt;/p>
&lt;h2 id="咥人之凶位不當也武人爲于大君志剛也">
 咥人之凶，位不當也，武人爲于大君，志剛也。
 &lt;a class="anchor" href="#%e5%92%a5%e4%ba%ba%e4%b9%8b%e5%87%b6%e4%bd%8d%e4%b8%8d%e7%95%b6%e4%b9%9f%e6%ad%a6%e4%ba%ba%e7%88%b2%e4%ba%8e%e5%a4%a7%e5%90%9b%e5%bf%97%e5%89%9b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此凶之致，乃因才不足，以武人為喻，其居陽剛之位，但才不足，又強出之，則所履不由本道，屬於志剛又妄動。&lt;/p></description></item><item><title>09風天小畜</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/09%E9%A2%A8%E5%A4%A9%E5%B0%8F%E7%95%9C/</link><pubDate>Tue, 14 Jan 2025 09:38:44 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/09%E9%A2%A8%E5%A4%A9%E5%B0%8F%E7%95%9C/</guid><description>&lt;h1 id="09風天小畜">
 09風天小畜
 &lt;a class="anchor" href="#09%e9%a2%a8%e5%a4%a9%e5%b0%8f%e7%95%9c">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦韓信擊取散關不破，卜得之後，再撃之果破也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>兩重山，一人在山頂，舟横岸上，望竿在草中，羊馬過河。&lt;/strong>&lt;/p>
&lt;p>匣藏寶劍之課 密雲不雨之象&lt;/p>
&lt;p>比乃親和，親和之後必有所畜，因物相比親則附於一處，為畜，此畜者，聚之來源也。同相親和之人，其志必同畜。畜亦止也，止然後有聚。此體本乾為天，乃在上之體，今居風之下， 示意吾人如要聚止剛健之人，唯有巽順為大，故世間再剛健之事與人，必為巽順所止也。本卦一陰居第四位，為五陽所包，此得位乃因柔巽之道也。卦象『外柔內剛』，乃能以小畜大。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、兩重山：知有險阻於前，不妄動之象。亦為出字象。二、一人山頂：孤立獨行象。已至顛峰，將走下坡之意。三、舟横岸上：準備出發，水未至而不行也。&lt;/p>
&lt;p>四、望竿在草裡：等待訊息象。草頭姓人為貴人。望，亡也。&lt;/p>
&lt;p>五、上有羊馬：馬引羊過河，馬為貴人，肖馬人，姓馬人也，馬亦為午時。&lt;/p>
&lt;h2 id="全卦一人在頂顛但有疑前有二山所阻只有等待消息午年或午月午日午時或馬人引羊至不由水路而來也">
 全卦：一人在頂顛，但有疑，前有二山所阻，只有等待消息，午年或午月、午日、午時或馬人引羊至，不由水路而來也。
 &lt;a class="anchor" href="#%e5%85%a8%e5%8d%a6%e4%b8%80%e4%ba%ba%e5%9c%a8%e9%a0%82%e9%a1%9b%e4%bd%86%e6%9c%89%e7%96%91%e5%89%8d%e6%9c%89%e4%ba%8c%e5%b1%b1%e6%89%80%e9%98%bb%e5%8f%aa%e6%9c%89%e7%ad%89%e5%be%85%e6%b6%88%e6%81%af%e5%8d%88%e5%b9%b4%e6%88%96%e5%8d%88%e6%9c%88%e5%8d%88%e6%97%a5%e5%8d%88%e6%99%82%e6%88%96%e9%a6%ac%e4%ba%ba%e5%bc%95%e7%be%8a%e8%87%b3%e4%b8%8d%e7%94%b1%e6%b0%b4%e8%b7%af%e8%80%8c%e4%be%86%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>小畜，亨。密雲不雨，自我西郊。&lt;/p>
&lt;p>此言雲之畜聚雖密，卻不能成雨，猶人雖聚，卻不能和之義。&lt;/p>
&lt;h2 id="彖曰小畜柔得位而上下應之曰小畜">
 彖曰：小畜，柔得位而上下應之，曰小畜。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%b0%8f%e7%95%9c%e6%9f%94%e5%be%97%e4%bd%8d%e8%80%8c%e4%b8%8a%e4%b8%8b%e6%87%89%e4%b9%8b%e6%9b%b0%e5%b0%8f%e7%95%9c">#&lt;/a>
&lt;/h2>
&lt;p>小畜之卦，因第四爻陰，居近君主之位，以巽之柔順本性，使上下之陽剛相互溝通，但只能維繫，卻不能強固，故曰小畜。&lt;/p>
&lt;h2 id="健而巽剛中而志行乃亨">
 健而巽，剛中而志行，乃亨。
 &lt;a class="anchor" href="#%e5%81%a5%e8%80%8c%e5%b7%bd%e5%89%9b%e4%b8%ad%e8%80%8c%e5%bf%97%e8%a1%8c%e4%b9%83%e4%ba%a8">#&lt;/a>
&lt;/h2>
&lt;p>以卦象而言，內剛健而外能柔順，雖為小畜，但能亨也。&lt;/p>
&lt;h2 id="密雲不雨尚往也自我西郊施未行也">
 密雲不雨，尚往也。自我西郊，施未行也。
 &lt;a class="anchor" href="#%e5%af%86%e9%9b%b2%e4%b8%8d%e9%9b%a8%e5%b0%9a%e5%be%80%e4%b9%9f%e8%87%aa%e6%88%91%e8%a5%bf%e9%83%8a%e6%96%bd%e6%9c%aa%e8%a1%8c%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此言密雲不能成雨，猶小畜無法成大也，其因下陽往上，上陽往下，二氣不和。&lt;/p>
&lt;h2 id="象曰風行天上小畜君子以懿文德">
 象曰：風行天上，小畜，君子以懿文德。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%a2%a8%e8%a1%8c%e5%a4%a9%e4%b8%8a%e5%b0%8f%e7%95%9c%e5%90%9b%e5%ad%90%e4%bb%a5%e6%87%bf%e6%96%87%e5%be%b7">#&lt;/a>
&lt;/h2>
&lt;p>以乾之剛健，風仍能在上而行，故剛健之性，唯柔順能畜止之，君子以小則文章才藝，大則道德經綸之聖才，以此二道為所畜之才義。&lt;/p>
&lt;h2 id="初九復自道何其咎吉">
 初九：復自道，何其咎，吉。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e5%be%a9%e8%87%aa%e9%81%93%e4%bd%95%e5%85%b6%e5%92%8e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>初入之地為初爻，以其剛健之性，又得上位之同性，進必上，何來災也。故初之陽剛， 乃因上位之陽剛性同，故無災也。&lt;/p>
&lt;h2 id="九二牽復吉">
 九二：牽復，吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e7%89%bd%e5%be%a9%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>九二居將位，因與第五爻陽爻相對應，同為剛健，雖中有四爻，但因同為陽剛，自古『同患相憂』〔同慾相憎〕，吉之道，此時為將時。&lt;/p>
&lt;h2 id="九三輿説輻夫妻反目説即脱">
 九三：輿説輻，夫妻反目。(説即脱)
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e8%bc%bf%e8%aa%ac%e8%bc%bb%e5%a4%ab%e5%a6%bb%e5%8f%8d%e7%9b%ae%e8%aa%ac%e5%8d%b3%e8%84%b1">#&lt;/a>
&lt;/h2>
&lt;p>九三為下卦之上爻，最親密於四爻陰位， 故乃陰陽之情相處也。猶如夫妻。陰本受制於陽，今居四位居陽之上，即反制陽，如夫妻之反目，故如車輿脱去輪軸，不能行也。妻為夫所惑，反制於夫，乃因夫不正道。未有夫不失道，而妻能制之也。&lt;/p>
&lt;h2 id="六四有孚血去惕出无咎">
 六四：有孚，血去惕出，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e6%9c%89%e5%ad%9a%e8%a1%80%e5%8e%bb%e6%83%95%e5%87%ba%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>六四乃處近君之位，其能畜君，使五位君之威嚴能因之而止其欲，皆因六四有孚信(孚， 乃內有誠信也〕而受其感也。&lt;/p>
&lt;h2 id="九五有孚攣如富以其鄰">
 九五：有孚攣如，富以其鄰。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e6%9c%89%e5%ad%9a%e6%94%a3%e5%a6%82%e5%af%8c%e4%bb%a5%e5%85%b6%e9%84%b0">#&lt;/a>
&lt;/h2>
&lt;p>小畜之時，乃眾陽皆為其中一陰所畜之時。猶如一國之君，與臣下皆剛而不容（密雲不雨〕，但近君側之人，適得柔順之人，而此人為上下溝通之管道，此時乃即小畜之時也。九五為君位，如以中正居至尊之位，又內有誠信，則所有皆附應之。就好像富人出其財力與鄰共享之也。從此爻則知當君子為小人所困， 正人為艰邪所逼，此時如無上下正陽之互援， 則獨力難助於此時，須有互助方可去小人也。&lt;/p>
&lt;h2 id="上九既雨既處尚德載婦貞厲月幾望君子征凶">
 上九：既雨既處，尚德載，婦貞厲。月幾望，君子征凶。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e6%97%a2%e9%9b%a8%e6%97%a2%e8%99%95%e5%b0%9a%e5%be%b7%e8%bc%89%e5%a9%a6%e8%b2%9e%e5%8e%b2%e6%9c%88%e5%b9%be%e6%9c%9b%e5%90%9b%e5%ad%90%e5%be%81%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>上九為此卦之終極，乃處畜之終。和而能止乃畜之道，陰柔之能畜剛，由累積而成，非朝夕可得，此戒之在平時，如專任以柔制剛， 不知止，如婦之堅守此道則乃凶矣，天下無婦制其夫，臣制其君，尚能安穩者乎？月滿之時為月望，與日相敵狀。若君子待婦將成敵時，&lt;/p>
&lt;p>動之必凶，不須戒也，故须戒之於月未滿時。&lt;/p>
&lt;h2 id="象曰復自道其義吉也">
 象曰：復自道，其義吉也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%be%a9%e8%87%aa%e9%81%93%e5%85%b6%e7%be%a9%e5%90%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>初爻與第四爻本為對應之位，故在畜時， 陰在四，陽在初，陰陽相應，故吉。&lt;/p></description></item><item><title>08水地比</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/08%E6%B0%B4%E5%9C%B0%E6%AF%94/</link><pubDate>Tue, 14 Jan 2025 09:38:43 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/08%E6%B0%B4%E5%9C%B0%E6%AF%94/</guid><description>&lt;h1 id="08水地比">
 08水地比
 &lt;a class="anchor" href="#08%e6%b0%b4%e5%9c%b0%e6%af%94">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦陸賈將説蠻，卜得之，果勝蠻王歸也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>月圓當空，秀才望月飲酒，自酌自斟， 藥爐在高處，枯樹開花。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>眾&lt;/strong>星拱比之課 水行地上之象&lt;/p>
&lt;p>師之後，師者眾也，眾聚有相比親也。比，相親也，有眾則必有比，故次師也。物之相近莫如水與地，永遠相比附，故卦體為水在地上，地上有水象。水為險，地為順，故外險內順為比卦。險猶戰戰兢兢，恐得罪人象，內心又持順之地道，有坤厚之德性，此比之道也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、月圓當空：政治清明象。&lt;/p>
&lt;p>二、三星拱照：得賢能剛直之人輔助。&lt;/p>
&lt;p>三、秀才望月飲酒：示才智之人無憂也。(亦示：作秀之人，於政治清明時，無法出頭〕四、自酌自斟：無慾則剛象，孤獨之象。&lt;/p>
&lt;p>五、藥爐在高處：無病無災，故不需用藥也。&lt;/p>
&lt;p>六、枯樹開花：晚發也。示心有誠，制度立，事必成。七、酒：忘憂之物。&lt;/p>
&lt;h2 id="全卦上位清明三台輔佐人將無憂即使枯樹亦能開花">
 全卦：上位清明，三台輔佐，人將無憂，即使枯樹亦能開花。
 &lt;a class="anchor" href="#%e5%85%a8%e5%8d%a6%e4%b8%8a%e4%bd%8d%e6%b8%85%e6%98%8e%e4%b8%89%e5%8f%b0%e8%bc%94%e4%bd%90%e4%ba%ba%e5%b0%87%e7%84%a1%e6%86%82%e5%8d%b3%e4%bd%bf%e6%9e%af%e6%a8%b9%e4%ba%a6%e8%83%bd%e9%96%8b%e8%8a%b1">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>比：吉，原筮，元永貞，无咎。不寧方來，後夫凶。&lt;/p>
&lt;p>比為吉之道。人相親比，必有其道，須視可比而決定比之，不可比而比，凶。如果等到不能自保安寧之時，方開始求親比，幸運的得所親比，可得平安。但如仍獨立自持，求親比之想法不前反後，即使是丈夫之親人，亦招凶矣。&lt;/p>
&lt;p>是故君王亦懷柔天下，下位之人亦和親其上，未能獨立也，平日即須有此志，天地之間， 沒有不相親比而能獨立生存的。&lt;/p>
&lt;p>相比之道，须兩志相求，如互不相求則為睽卦，故戰國策〈中山策〕有同慾相憎，同憂相親之理。所以好的制度，能使人有所依從，故能互相親和也。&lt;/p>
&lt;h2 id="彖曰比吉也比輔也下順從也">
 彖曰：比，吉也。比，輔也，下順從也。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e6%af%94%e5%90%89%e4%b9%9f%e6%af%94%e8%bc%94%e4%b9%9f%e4%b8%8b%e9%a0%86%e5%be%9e%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>因相親比為吉之道，有相輔相成之意。但求比之道，須如臣下順從君上一樣，即使地位相同，或上下有別，決不可因持於己之高位，而忘順從之道，此乃真比之道。&lt;/p>
&lt;h2 id="原筮元永貞无咎以剛中也">
 原筮，元永貞，无咎，以剛中也。
 &lt;a class="anchor" href="#%e5%8e%9f%e7%ad%ae%e5%85%83%e6%b0%b8%e8%b2%9e%e6%97%a0%e5%92%8e%e4%bb%a5%e5%89%9b%e4%b8%ad%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>元、永、貞為相比之道。元為君長之道，永為可以長久，貞謂得正道且堅其心志，人有此三德性，再以陽剛當君主之位，此為君之德也。如此之君主可以無災矣。&lt;/p>
&lt;h2 id="不寧方來上下應也">
 不寧方來，上下應也。
 &lt;a class="anchor" href="#%e4%b8%8d%e5%af%a7%e6%96%b9%e4%be%86%e4%b8%8a%e4%b8%8b%e6%87%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>上位之念，應知君不能獨立，须保民以此為安。下民知己不能自保，須擁君以求寧，此上下相應之理。如以王之私而行為之，不求下民之附和，凶危立至矣。&lt;/p>
&lt;h2 id="後夫凶其道窮矣">
 後夫凶，其道窮矣。
 &lt;a class="anchor" href="#%e5%be%8c%e5%a4%ab%e5%87%b6%e5%85%b6%e9%81%93%e7%aa%ae%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>若眾人之志相和親，則無有不遂，此天地之道，若人之和親不行，則雖夫亦凶矣。&lt;/p>
&lt;h2 id="象曰地上有水比先王以建萬國親諸侯">
 象曰：地上有水，比。先王以建萬國，親諸侯。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%9c%b0%e4%b8%8a%e6%9c%89%e6%b0%b4%e6%af%94%e5%85%88%e7%8e%8b%e4%bb%a5%e5%bb%ba%e8%90%ac%e5%9c%8b%e8%a6%aa%e8%ab%b8%e4%be%af">#&lt;/a>
&lt;/h2>
&lt;p>天地之間，物相親比，莫如水在地上，聖人觀比之象，以此建萬國，近諸侯，親近人民， 此比之極道。&lt;/p>
&lt;h2 id="初六有孚比之无咎有孚盈缶-終來有它吉">
 初六：有孚，比之无咎。有孚盈缶， 終來有它，吉。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e6%9c%89%e5%ad%9a%e6%af%94%e4%b9%8b%e6%97%a0%e5%92%8e%e6%9c%89%e5%ad%9a%e7%9b%88%e7%bc%b6-%e7%b5%82%e4%be%86%e6%9c%89%e5%ae%83%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此為比之始。孚為中信，故相比之道，以誠信為本，表裡不一致，人誰近之。誠信充實於內，如於缶中之滿，且外不加修飾（它，外也〕，至誠以待之，則無不信。&lt;/p>
&lt;h2 id="六二比之自内貞吉">
 六二：比之自内，貞吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e6%af%94%e4%b9%8b%e8%87%aa%e5%86%85%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>自內言主之在己也。得正道，而與君道相合，此吉也。即以中正之道，合於上位之所求， 乃曰自內。今人汲汲以求比者，非君子自重之道，乃自失之道也。&lt;/p>
&lt;h2 id="六三比之匪人">
 六三：比之匪人。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e6%af%94%e4%b9%8b%e5%8c%aa%e4%ba%ba">#&lt;/a>
&lt;/h2>
&lt;p>相親比之人，如為不正當之人，即為匪人， 招凶也。&lt;/p>
&lt;h2 id="六四外比之貞吉">
 六四：外比之，貞吉。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e5%a4%96%e6%af%94%e4%b9%8b%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>六四之位，為近君之位。居此位之人，以柔性坤德向君主親比，且堅心順從，吉也。&lt;/p>
&lt;h2 id="象曰比之初六有它吉也">
 象曰：比之初六，有它吉也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e6%af%94%e4%b9%8b%e5%88%9d%e5%85%ad%e6%9c%89%e5%ae%83%e5%90%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此即比之道在乎始也。始即能中實誠信， 終吉，始無誠信，終凶。&lt;/p></description></item><item><title>07地水師</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/07%E5%9C%B0%E6%B0%B4%E5%B8%AB/</link><pubDate>Tue, 14 Jan 2025 09:38:42 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/07%E5%9C%B0%E6%B0%B4%E5%B8%AB/</guid><description>&lt;h1 id="07地水師">
 07地水師
 &lt;a class="anchor" href="#07%e5%9c%b0%e6%b0%b4%e5%b8%ab">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦周亞夫將欲排陣，卜得之，果獲勝。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>虎馬羊待命，將軍臺上立，一文一武綬印，人跪台上受印，棋盤在下。&lt;/strong>&lt;/p>
&lt;p>天馬出群之課 以寡服眾之象&lt;/p>
&lt;p>師之興，因有爭議也。此卦本體上順下險之象，亦即地下有水，內外分即內險外順，有行險之道如何順行之義。水在地下必聚，如部隊之集結，如九五為一陽，餘為諸陰，則為天子之象，今九二為將位，統帥諸陰，則為將帥之象。此卦申明處師之時，內須戒慎警惕，不可掉以輕心，外須統一專權，命令如一，方能行順之義。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、肖虎、馬、羊之人三合：可戰。二、文武二官綬印：得萬人服之帥。&lt;/p>
&lt;p>三、人立棋盤上：圍棋愈下愈多，但須有謀略方可成事。 四、將軍臺上立：示有兵權也。生殺之專權也。武職大利。&lt;/p>
&lt;p>五、羊回首：回陽也，病危之人卜之，有自陰間回陽間之象。六、虎在馬後：為馬之靠山，馬因虎威而動。故馬回首視虎。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>師：貞，丈人吉，无咎。&lt;/p>
&lt;p>此言，師之道必有正名，因師之與，天下萬民必傷，如不以正，則民心不從，致凶之道。丈人，即尊貴有眾望之人，故出師必立帥將，此人必民所聽從順同，不能服眾人，安得民心。如此則無災。故興師必有二道：正名與主將。&lt;/p>
&lt;h2 id="彖曰師眾也貞正也能以眾正可以王矣">
 彖曰：師，眾也；貞，正也，能以眾正，可以王矣。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%b8%ab%e7%9c%be%e4%b9%9f%e8%b2%9e%e6%ad%a3%e4%b9%9f%e8%83%bd%e4%bb%a5%e7%9c%be%e6%ad%a3%e5%8f%af%e4%bb%a5%e7%8e%8b%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>師為帶眾之道，必以正，如能使眾人皆正，即可王天下。此用師之正道。&lt;/p>
&lt;h2 id="剛中而應行險而順">
 剛中而應，行險而順。
 &lt;a class="anchor" href="#%e5%89%9b%e4%b8%ad%e8%80%8c%e6%87%89%e8%a1%8c%e9%9a%aa%e8%80%8c%e9%a0%86">#&lt;/a>
&lt;/h2>
&lt;p>出師之將帥，須得君王之專信也。此王者之帥，民心從之，雖有險必順矣。&lt;/p>
&lt;h2 id="以此毒天下而民從之吉又何咎矣">
 以此毒天下，而民從之，吉又何咎矣。
 &lt;a class="anchor" href="#%e4%bb%a5%e6%ad%a4%e6%af%92%e5%a4%a9%e4%b8%8b%e8%80%8c%e6%b0%91%e5%be%9e%e4%b9%8b%e5%90%89%e5%8f%88%e4%bd%95%e5%92%8e%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>如從前面所論之師道下手，則雖因出師傷下之百姓，民仍從之，故吉而無災。&lt;/p>
&lt;h2 id="象曰地中有水師君子以容民畜眾">
 象曰：地中有水，師，君子以容民畜眾。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%9c%b0%e4%b8%ad%e6%9c%89%e6%b0%b4%e5%b8%ab%e5%90%9b%e5%ad%90%e4%bb%a5%e5%ae%b9%e6%b0%91%e7%95%9c%e7%9c%be">#&lt;/a>
&lt;/h2>
&lt;p>水在地下相聚，為眾聚之象，君子之人須以包容民眾，為使民順從之法。&lt;/p>
&lt;h2 id="初六師出以律否臧凶">
 初六：師出以律，否臧凶。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e5%b8%ab%e5%87%ba%e4%bb%a5%e5%be%8b%e5%90%a6%e8%87%a7%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>師之出，必以誅亂制暴而動，行師之道， 须以律法，合於義理，如不按此法，即致勝亦凶。&lt;/p>
&lt;h2 id="九二在師中吉无咎王三錫命">
 九二：在師中，吉，无咎，王三錫命。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%9c%a8%e5%b8%ab%e4%b8%ad%e5%90%89%e6%97%a0%e5%92%8e%e7%8e%8b%e4%b8%89%e9%8c%ab%e5%91%bd">#&lt;/a>
&lt;/h2>
&lt;p>此言九二之道，為為將之道，君之事為人臣絶無敢專權，但出師作戰之時，則將在外君命有所不從，君王須順從其命，以專信任之。&lt;/p>
&lt;h2 id="六三-師或輿尸凶">
 六三： 師或輿尸，凶。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89-%e5%b8%ab%e6%88%96%e8%bc%bf%e5%b0%b8%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>輿尸，眾人為主也。此言師旅之事，任當專一，須以剛中之才居上為信，乃得成功。如不這樣，而以眾之意見為主，凶之道也。&lt;/p>
&lt;h2 id="六四師左次无咎">
 六四：師左次，无咎。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e5%b8%ab%e5%b7%a6%e6%ac%a1%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>左次，乃知不可進而退。此言，師之常法， 見可而進，知難而退，進退有據，平安無災。六四為陰爻，主陰柔，而師必以強勇，中有陰柔，即兵家之風、林、火、山同義。&lt;/p>
&lt;h2 id="六五田有禽利執言无咎長子帥師弟子輿尸貞凶">
 六五：田有禽，利執言，无咎。長子帥師，弟子輿尸，貞凶。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e7%94%b0%e6%9c%89%e7%a6%bd%e5%88%a9%e5%9f%b7%e8%a8%80%e6%97%a0%e5%92%8e%e9%95%b7%e5%ad%90%e5%b8%a5%e5%b8%ab%e5%bc%9f%e5%ad%90%e8%bc%bf%e5%b0%b8%e8%b2%9e%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>五為君之位，此為興師之主，此君主興師任將之道。師之興，必以生民受災，蠻夷賊寇， 此正名以誅之。如禽獸之入於田中，害五穀， 於義宜獵取，則獵取之，如此之動，則吉。如無禽獸入田，則出不因禽，凶。此有禽之義。&lt;/p>
&lt;h2 id="上六大君有命開國成家小人勿用">
 上六：大君有命，開國成家，小人勿用。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%a4%a7%e5%90%9b%e6%9c%89%e5%91%bd%e9%96%8b%e5%9c%8b%e6%88%90%e5%ae%b6%e5%b0%8f%e4%ba%ba%e5%8b%bf%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;p>師之終極，言功之成也。此時君主以爵位財祿賞賜有功之人，並任用之。但於軍旅征戰中，查覺出之小人，不能因其有功而任用之， 致凶之道。&lt;/p>
&lt;h2 id="象曰師出以律失律凶也">
 象曰：師出以律，失律凶也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b8%ab%e5%87%ba%e4%bb%a5%e5%be%8b%e5%a4%b1%e5%be%8b%e5%87%b6%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>師出必有律法，失律法，致凶之道。&lt;/p>
&lt;h2 id="象曰在師中吉承天寵也王三錫命懷萬邦也">
 象曰：在師中吉，承天寵也。王三錫命，懷萬邦也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%9c%a8%e5%b8%ab%e4%b8%ad%e5%90%89%e6%89%bf%e5%a4%a9%e5%af%b5%e4%b9%9f%e7%8e%8b%e4%b8%89%e9%8c%ab%e5%91%bd%e6%87%b7%e8%90%ac%e9%82%a6%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人臣如無君之專寵，則不得專制之權，更何論成功。&lt;/p></description></item><item><title>06天水讼</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/06%E5%A4%A9%E6%B0%B4%E8%AE%BC/</link><pubDate>Tue, 14 Jan 2025 09:38:41 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/06%E5%A4%A9%E6%B0%B4%E8%AE%BC/</guid><description>&lt;h1 id="06天水讼">
 06天水讼
 &lt;a class="anchor" href="#06%e5%a4%a9%e6%b0%b4%e8%ae%bc">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦漢高祖斬丁公，疑惑，卜得之後，果遭戮也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>口舌二字，山下有睡虎，文書在雲中， 人立虎下，望口舌，柳樹在旁。&lt;/strong>&lt;/p>
&lt;p>蒼鷹逐兔之課 天水相違之象&lt;/p>
&lt;p>人之所需飲食也，因有所須，爭訟之所由起。天陽上行，水性就下，其行相違，所以成訟也。卦義：外健內險之象，必有訟。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、口舌二字：官司，糾紛，災也。二、山下有睡虎：入危地而不知象。三、虎：王姓，肖虎之人。&lt;/p>
&lt;p>四、文書在雲中：心想事不成，幻想也。 五、人立虎下：近險也，近險為脱險之道。&lt;/p>
&lt;p>六、柳樹：隨風而動，雖大風而不斷，此柳之性也。〔韓信之辱，即柳性〕&lt;/p>
&lt;p>人间道&lt;/p>
&lt;p>訟：有孚，窒惕，中吉，終凶。&lt;/p>
&lt;p>訟之道，必中實，如中無有實，乃誣妄，凶之道也。訟，乃與人爭辩，而待決於他人，雖有孚，仍會窒塞。故有得中實則吉，但終極其事則凶也。&lt;/p>
&lt;h2 id="利見大人不利涉大川">
 利見大人，不利涉大川。
 &lt;a class="anchor" href="#%e5%88%a9%e8%a6%8b%e5%a4%a7%e4%ba%ba%e4%b8%8d%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d">#&lt;/a>
&lt;/h2>
&lt;p>因訟者求辩曲直，故利見大人，如大人能以剛明中正決其訟，吉。因訟非吉事，須擇安地而居，不可陷於險難，故不利涉大川也。&lt;/p>
&lt;h2 id="彖曰訟上剛下險險而健訟">
 彖曰：訟，上剛下險，險而健，訟。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%a8%9f%e4%b8%8a%e5%89%9b%e4%b8%8b%e9%9a%aa%e9%9a%aa%e8%80%8c%e5%81%a5%e8%a8%9f">#&lt;/a>
&lt;/h2>
&lt;p>此內險外健，訟之所起。若健而不險，不生訟也。險而不健，不能訟也。猶如一人，只重外飾，內無真實材料，此為訟之源也。&lt;/p>
&lt;h2 id="訟有孚窒惕中吉剛來而得中也">
 訟，有孚，窒惕，中吉，剛來而得中也。
 &lt;a class="anchor" href="#%e8%a8%9f%e6%9c%89%e5%ad%9a%e7%aa%92%e6%83%95%e4%b8%ad%e5%90%89%e5%89%9b%e4%be%86%e8%80%8c%e5%be%97%e4%b8%ad%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>訟之，有中實剛健，但處訟之時，雖有中實，仍有阻礙而須惕懼，則吉。&lt;/p>
&lt;h2 id="終凶訟不可成也">
 終凶，訟不可成也。
 &lt;a class="anchor" href="#%e7%b5%82%e5%87%b6%e8%a8%9f%e4%b8%8d%e5%8f%af%e6%88%90%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>因訟本非善事，乃不得已也，終極其事，則凶矣。&lt;/p>
&lt;h2 id="利見大人尚中正也不利涉大川入于淵也">
 利見大人，尚中正也。不利涉大川，入于淵也。
 &lt;a class="anchor" href="#%e5%88%a9%e8%a6%8b%e5%a4%a7%e4%ba%ba%e5%b0%9a%e4%b8%ad%e6%ad%a3%e4%b9%9f%e4%b8%8d%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d%e5%85%a5%e4%ba%8e%e6%b7%b5%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>如見中正之大人，吉。與人訟必先居於平安之地，任意行險，則身陷。&lt;/p>
&lt;h2 id="象曰天與水違行訟君子以作事謀始">
 象曰：天與水違行，訟，君子以作事謀始。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e8%88%87%e6%b0%b4%e9%81%95%e8%a1%8c%e8%a8%9f%e5%90%9b%e5%ad%90%e4%bb%a5%e4%bd%9c%e4%ba%8b%e8%ac%80%e5%a7%8b">#&lt;/a>
&lt;/h2>
&lt;p>此因天上水下，二卦體相違，訟之由也。君子觀象，知人有爭訟之道，故行事必「慎始」， 絶訟端於事之始，則訟不生矣。&lt;/p>
&lt;h2 id="初六不永所事小有言終吉">
 初六：不永所事，小有言，終吉。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e4%b8%8d%e6%b0%b8%e6%89%80%e4%ba%8b%e5%b0%8f%e6%9c%89%e8%a8%80%e7%b5%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此陰柔居下位，必不可終極其訟也。若不終極其訟，雖小有言傷，而終得吉。&lt;/p>
&lt;h2 id="九二不克訟歸而逋其邑人三百户无眚">
 九二：不克訟，歸而逋，其邑人三百户，无眚。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e4%b8%8d%e5%85%8b%e8%a8%9f%e6%ad%b8%e8%80%8c%e9%80%8b%e5%85%b6%e9%82%91%e4%ba%ba%e4%b8%89%e7%99%be%e6%88%b7%e6%97%a0%e7%9c%9a">#&lt;/a>
&lt;/h2>
&lt;p>二爻與五爻為相應之地，九二乃將位，以剛處險，與五之君位為敵，知不可敵，歸而避之，儉樸自處，則無過矣。三百户，乃邑之至小者，如處強大，此競也，則必過也。&lt;/p>
&lt;h2 id="六三食舊德貞厲終吉或從王事无成">
 六三：食舊德，貞厲終吉。或從王事，无成。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e9%a3%9f%e8%88%8a%e5%be%b7%e8%b2%9e%e5%8e%b2%e7%b5%82%e5%90%89%e6%88%96%e5%be%9e%e7%8e%8b%e4%ba%8b%e6%97%a0%e6%88%90">#&lt;/a>
&lt;/h2>
&lt;p>陰爻居三陽剛位，乃陰柔居二剛之間，须知雖處危地，能知危懼，終必獲吉。守原之本分而無所求，則不生訟矣。或從上而成，因從王事，故不在己也。訟乃剛健之事，故始則不永，三則從之，皆可使善也。&lt;/p>
&lt;h2 id="九四不克訟復即命渝安貞-吉">
 九四：不克訟，復即命，渝安貞， 吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e4%b8%8d%e5%85%8b%e8%a8%9f%e5%be%a9%e5%8d%b3%e5%91%bd%e6%b8%9d%e5%ae%89%e8%b2%9e-%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此陽剛居乾下，因不得中正，本必訟。故四爻剛位陽居之，雖剛健欲訟，而無與對敵， 則訟無由而興。此即若能克制剛忿欲訟之心， 就於命，革其心，平其氣，而變為安貞，吉矣。孟子云：「方命虐民，夫剛健而不中正，則躁動，故不安，處非中正，故不貞，不安貞，所以好訟也。」方，不順也。&lt;/p>
&lt;h2 id="九五訟元吉">
 九五：訟，元吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e8%a8%9f%e5%85%83%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>九五居尊位，治訟得中正，則大吉而盡善。&lt;/p>
&lt;h2 id="上九或錫之鞶帶終朝三褫之">
 上九：或錫之鞶帶，終朝三褫之。
 &lt;a class="anchor" href="#%e4%b8%8a%e4%b9%9d%e6%88%96%e9%8c%ab%e4%b9%8b%e9%9e%b6%e5%b8%b6%e7%b5%82%e6%9c%9d%e4%b8%89%e8%a4%ab%e4%b9%8b">#&lt;/a>
&lt;/h2>
&lt;p>剛健之極，處訟之終極，人因其剛強，窮極於訟，取禍喪身，即使善訟能勝，即賞，亦來自與人仇爭所得，其能保乎。終一日而見三次褫奪也。&lt;/p></description></item><item><title>05水天需</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/05%E6%B0%B4%E5%A4%A9%E9%9C%80/</link><pubDate>Tue, 14 Jan 2025 09:38:40 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/05%E6%B0%B4%E5%A4%A9%E9%9C%80/</guid><description>&lt;h1 id="05水天需">
 05水天需
 &lt;a class="anchor" href="#05%e6%b0%b4%e5%a4%a9%e9%9c%80">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦蔡順遇赤眉贼，卜得知，乃知必脱大難也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>月當天，一門，一人攀龍尾，一僧接引，一墓。&lt;/strong>&lt;/p>
&lt;p>雲靄中天之課 密雲不雨之象&lt;/p>
&lt;p>蒙之後須養，此需之時也，飲食之道也。雲之上於天有蒸潤之象，就如同飲食之於人一樣， 此養之時，乃待也。乾之性健，必採進法，仍處坎險之下，故須待而後進，即外險內健，此卦之象，乃真養之義。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、月當天：陰人居上位象，無擔當也；清明無災。二、 一門：豪鬥也，官府也。&lt;/p>
&lt;p>三、一人攀龍尾：附於貴人，想進據其位也。&lt;/p>
&lt;p>四、一僧接引：光頭之人，柔而無慾之象。入空門可解。五、墓：藏棺之地，有官與財象；置之死地而後生之象。&lt;/p>
&lt;h2 id="全意即使如龍之力大但動不以時則有入墓之險此動為求官與財佛理亦同生死一線無死焉大生">
 全意，即使如龍之力大，但動不以時，則有入墓之險，此動為求官與財。佛理亦同：『生死一線，無死焉大生』。
 &lt;a class="anchor" href="#%e5%85%a8%e6%84%8f%e5%8d%b3%e4%bd%bf%e5%a6%82%e9%be%8d%e4%b9%8b%e5%8a%9b%e5%a4%a7%e4%bd%86%e5%8b%95%e4%b8%8d%e4%bb%a5%e6%99%82%e5%89%87%e6%9c%89%e5%85%a5%e5%a2%93%e4%b9%8b%e9%9a%aa%e6%ad%a4%e5%8b%95%e7%82%ba%e6%b1%82%e5%ae%98%e8%88%87%e8%b2%a1%e4%bd%9b%e7%90%86%e4%ba%a6%e5%90%8c%e7%94%9f%e6%ad%bb%e4%b8%80%e7%b7%9a%e7%84%a1%e6%ad%bb%e7%84%89%e5%a4%a7%e7%94%9f">#&lt;/a>
&lt;/h2>
&lt;p>人间道&lt;/p>
&lt;p>需：有孚，光亨贞吉，利涉大川。&lt;/p>
&lt;p>以二卦體而言，乾以剛健，如上進而遇險，此未可進也。需待之。以卦之爻言，五爻陽居陽位，乃陽剛中正之德人，居君位，而誠信充實於內（內卦為乾），則光明而可進，必亨，故利涉大川。&lt;/p>
&lt;h2 id="彖曰需須也險在前也剛健而不陷其義不困窮矣">
 彖曰：需，須也，險在前也，剛健而不陷，其義不困窮矣。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e9%9c%80%e9%a0%88%e4%b9%9f%e9%9a%aa%e5%9c%a8%e5%89%8d%e4%b9%9f%e5%89%9b%e5%81%a5%e8%80%8c%e4%b8%8d%e9%99%b7%e5%85%b6%e7%be%a9%e4%b8%8d%e5%9b%b0%e7%aa%ae%e7%9f%a3">#&lt;/a>
&lt;/h2>
&lt;p>因險在前，未可遽進，须待而進，以乾之剛健，能待而不輕動，則不陷險中，則必不至困窮。時下剛健之人頗多，其動必躁，如能待時而動，則為至善之道。&lt;/p>
&lt;h2 id="需有孚光亨貞吉位乎天位以正中也">
 需：有孚，光亨貞吉，位乎天位以正中也。
 &lt;a class="anchor" href="#%e9%9c%80%e6%9c%89%e5%ad%9a%e5%85%89%e4%ba%a8%e8%b2%9e%e5%90%89%e4%bd%8d%e4%b9%8e%e5%a4%a9%e4%bd%8d%e4%bb%a5%e6%ad%a3%e4%b8%ad%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>孚，中實之義。五位因剛實居中，此孚之象，此居天位而能正中，光明而亨通，且須貞正&lt;/p>
&lt;p>（堅心），吉也。&lt;/p>
&lt;h2 id="利涉大川往有功也">
 利涉大川，往有功也。
 &lt;a class="anchor" href="#%e5%88%a9%e6%b6%89%e5%a4%a7%e5%b7%9d%e5%be%80%e6%9c%89%e5%8a%9f%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>因中實（內之學問、操守）而貞正（堅心向道），即涉險阻，亦可有功也。故需之道在以乾剛之性而知待之道，何所不利。&lt;/p>
&lt;h2 id="象曰雲上於天需君子以飲食宴樂">
 象曰：雲上於天，需，君子以飲食宴樂。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b2%e4%b8%8a%e6%96%bc%e5%a4%a9%e9%9c%80%e5%90%9b%e5%ad%90%e4%bb%a5%e9%a3%b2%e9%a3%9f%e5%ae%b4%e6%a8%82">#&lt;/a>
&lt;/h2>
&lt;p>此自然之象，水上於天未成雨，為雲。猶君子積蓄其才德，而未施於用也，懷其大才，安以待時，飲食以養身體，宴樂和其心志也。&lt;/p>
&lt;h2 id="初九需于郊利用恆无咎">
 初九：需于郊，利用恆，无咎。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e9%9c%80%e4%ba%8e%e9%83%8a%e5%88%a9%e7%94%a8%e6%81%86%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>初爻因最遠於險，故於郊（曠遠之地）， 故君子處於曠遠之地，仍安守其常，則無咎災也。如躁進犯難，則必災至矣。&lt;/p>
&lt;h2 id="九二需于沙小有言終吉">
 九二：需于沙，小有言，終吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e9%9c%80%e4%ba%8e%e6%b2%99%e5%b0%8f%e6%9c%89%e8%a8%80%e7%b5%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>坎為水，水近則有沙，此二爻之位近險， 故需于沙。君子知渐近於險難，雖未至於害， 已小有言矣。此示言語之傷，至小者也。二爻以陽爻居之，示人陽剛之才居陰柔位，守中正之德，雖小有言語之傷，而无大害，終也吉。&lt;/p>
&lt;h2 id="九三需于泥致寇至">
 九三：需于泥，致寇至。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e9%9c%80%e4%ba%8e%e6%b3%a5%e8%87%b4%e5%af%87%e8%87%b3">#&lt;/a>
&lt;/h2>
&lt;p>泥，逼近於水也。因逼近於險，而致寇難之至，此居健體之上，有進動之象，苟非謹慎， 終致喪敗也。&lt;/p>
&lt;h2 id="六四需于血出自穴">
 六四：需于血，出自穴。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e9%9c%80%e4%ba%8e%e8%a1%80%e5%87%ba%e8%87%aa%e7%a9%b4">#&lt;/a>
&lt;/h2>
&lt;p>第四爻位以陰柔之質居於險，下又有三陽之進，必傷於險難。因傷於險難，必不可安居， 而失其居所，故出自穴。此順時以從，不競於險難，則不至凶也。又無中正之德，只以剛競於險，此適足以致凶之道也。&lt;/p>
&lt;h2 id="九五需於酒食貞吉">
 九五：需於酒食，貞吉。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e9%9c%80%e6%96%bc%e9%85%92%e9%a3%9f%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此五君位，陽剛之人居中，只需宴安酒食以待之，所需必得也。堅心，必吉。&lt;/p>
&lt;h2 id="上六入于穴有不速之客三人來-敬之終吉">
 上六：入于穴，有不速之客三人來， 敬之終吉。
 &lt;a class="anchor" href="#%e4%b8%8a%e5%85%ad%e5%85%a5%e4%ba%8e%e7%a9%b4%e6%9c%89%e4%b8%8d%e9%80%9f%e4%b9%8b%e5%ae%a2%e4%b8%89%e4%ba%ba%e4%be%86-%e6%95%ac%e4%b9%8b%e7%b5%82%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>陰柔於六位，乃需之極限，須安其處，此入於穴之義。安而止居，則下之三陽必來。不速，不促之而自來也。此時須以至誠盡敬之心以待之，雖再剛暴，必無欺凌之理也，此因六位陰位，非三陽乾體之人，志在必奪，故敬之則吉。&lt;/p></description></item><item><title>04山水蒙</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/04%E5%B1%B1%E6%B0%B4%E8%92%99/</link><pubDate>Tue, 14 Jan 2025 09:38:39 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/04%E5%B1%B1%E6%B0%B4%E8%92%99/</guid><description>&lt;h1 id="04山水蒙">
 04山水蒙
 &lt;a class="anchor" href="#04%e5%b1%b1%e6%b0%b4%e8%92%99">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦王莽篡漢社稷卜得知，乃知漢家必有中與之主。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>一鹿一堆錢，一合子，李樹一枝子折， 二人江中撑船，珍寳填塞。&lt;/strong>&lt;/p>
&lt;p>人藏祿寶之課 萬物发生之象&lt;/p>
&lt;p>艮為山，為止，坎為水，為險。山下有險，遇險而止，莫知所之，蒙之象也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>蒙卦有示吾人去蒙之道。反觀之，如人以蒙蔽之法示人，勢必有所圖也。圖中：&lt;/p>
&lt;p>一、滿船珍寳：暗示人圖財之象。二、船在水上：乃離國他去象。&lt;/p>
&lt;p>三、鹿在地上，示仍有小祿於內，鹿—祿也。&lt;/p>
&lt;p>四、兩串錢：乃憂心忡忡象，即意雖有祿，但仍令人憂心。&lt;/p>
&lt;p>五、圖中一碗：示此蒙蔽手段，必先成後破，因其乃不正之財，必不久遠也。六、李樹子折：示人李姓人氏，且有子夭折之象，則成格。&lt;/p>
&lt;p>人间道&lt;/p>
&lt;h2 id="蒙亨匪我求童蒙童蒙求我初筮告再三瀆瀆則不告利貞">
 蒙：亨，匪我求童蒙，童蒙求我。初筮告，再三瀆，瀆則不告，利貞。
 &lt;a class="anchor" href="#%e8%92%99%e4%ba%a8%e5%8c%aa%e6%88%91%e6%b1%82%e7%ab%a5%e8%92%99%e7%ab%a5%e8%92%99%e6%b1%82%e6%88%91%e5%88%9d%e7%ad%ae%e5%91%8a%e5%86%8d%e4%b8%89%e7%80%86%e7%80%86%e5%89%87%e4%b8%8d%e5%91%8a%e5%88%a9%e8%b2%9e">#&lt;/a>
&lt;/h2>
&lt;p>兒童之蒙，其未發蒙，而志則專一，此為童蒙，因有童蒙，則告之。因其童蒙，故必至誠一意以求必中。而發蒙之道，必以貞正方吉。&lt;/p>
&lt;h2 id="象曰蒙山下有險險而止蒙蒙亨以亨行時中也匪我求童蒙童蒙求我志應也">
 象曰：蒙，山下有險，險而止，蒙。蒙亨，以亨行，時中也。匪我求童蒙，童蒙求我，志應也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e8%92%99%e5%b1%b1%e4%b8%8b%e6%9c%89%e9%9a%aa%e9%9a%aa%e8%80%8c%e6%ad%a2%e8%92%99%e8%92%99%e4%ba%a8%e4%bb%a5%e4%ba%a8%e8%a1%8c%e6%99%82%e4%b8%ad%e4%b9%9f%e5%8c%aa%e6%88%91%e6%b1%82%e7%ab%a5%e8%92%99%e7%ab%a5%e8%92%99%e6%b1%82%e6%88%91%e5%bf%97%e6%87%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此因剛賢之才居九二爻位，處於下位。六五之童蒙，處於君位。九二之賢臣，必以時中也。時之義，必待其至誠一心之童蒙求問，方以告之，乃中與。如賢能之人處下，而自求為進，主動告以君，則必無被信用之理。故如方法正確，非二求於王君位，實為五之志應於下二也。此為「時中」也。&lt;/p>
&lt;h2 id="初筮告以剛中也再三瀆漬則不告瀆蒙也">
 初筮告，以剛中也，再三瀆，漬則不告，瀆蒙也。
 &lt;a class="anchor" href="#%e5%88%9d%e7%ad%ae%e5%91%8a%e4%bb%a5%e5%89%9b%e4%b8%ad%e4%b9%9f%e5%86%8d%e4%b8%89%e7%80%86%e6%bc%ac%e5%89%87%e4%b8%8d%e5%91%8a%e7%80%86%e8%92%99%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此言，如誠一而來求決其蒙，當以剛中之道開發之，如煩數不能誠一，則乃瀆蒙，此時， 不當告。因告之必不能信受，徒以煩瀆，無益矣。&lt;/p>
&lt;h2 id="蒙以養正聖功也">
 蒙以養正，聖功也。
 &lt;a class="anchor" href="#%e8%92%99%e4%bb%a5%e9%a4%8a%e6%ad%a3%e8%81%96%e5%8a%9f%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此申利貞之義，養蒙之法，必以正道，此時乃純一未發之童蒙時，故養正於蒙，乃學之至善也。現今人類皆「教而後禁」，故難以教勝，故時風日下。&lt;/p>
&lt;h2 id="象曰山下出泉蒙君子以果行育德">
 象曰：山下出泉，蒙，君子以果行育德。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%b1%e4%b8%8b%e5%87%ba%e6%b3%89%e8%92%99%e5%90%9b%e5%ad%90%e4%bb%a5%e6%9e%9c%e8%a1%8c%e8%82%b2%e5%be%b7">#&lt;/a>
&lt;/h2>
&lt;p>此蒙之象也，如人蒙蔽，未知所適從狀。君子此時，必以果決其行，使通行無阻。如始生而方法不對，則以養育其明德為教法。&lt;/p>
&lt;h2 id="初六發蒙利用刑人用説桎梏-以往吝">
 初六：發蒙，利用刑人，用説桎梏， 以往吝。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e7%99%bc%e8%92%99%e5%88%a9%e7%94%a8%e5%88%91%e4%ba%ba%e7%94%a8%e8%aa%ac%e6%a1%8e%e6%a2%8f-%e4%bb%a5%e5%be%80%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>初六之爻屬最下位，此言，發下民之蒙， 须明刑禁以示之，使之知懼，從而教之。是故為政之始，立法居先，治蒙之初，威以刑者， 是以使民去其昏蒙之桎梏。不設法去其蒙之桎梏，即善教亦無法改變其蒙，故聖人使下民畏威以從，不敢任意其昏蒙之欲，然後才能漸知善道，此為移風易俗之唯一法門。但只有初爻之始可用之，如專用刑以為治，則蒙雖畏，終不能发。&lt;/p>
&lt;h2 id="九二包蒙吉納婦吉子克家">
 九二：包蒙吉，納婦吉，子克家。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e5%8c%85%e8%92%99%e5%90%89%e7%b4%8d%e5%a9%a6%e5%90%89%e5%ad%90%e5%85%8b%e5%ae%b6">#&lt;/a>
&lt;/h2>
&lt;p>九二有剛明之才，與六五之君相對應，其志又一同，當其時，必廣其包容，老人婦孺之見，皆包容，則能啓天下之蒙，功大矣。今人專持其明，漫用自任，致凶之道。是故古之堯舜，其聖功天下莫及，尚能請教下民，取合理之言，天下之民歸之，就如兒子能治其家一樣&lt;/p>
&lt;h2 id="六三勿用取女見金夫不有躬-无攸利">
 六三：勿用，取女見金夫，不有躬， 无攸利。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e5%8b%bf%e7%94%a8%e5%8f%96%e5%a5%b3%e8%a6%8b%e9%87%91%e5%a4%ab%e4%b8%8d%e6%9c%89%e8%ba%ac-%e6%97%a0%e6%94%b8%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>三爻之位陰居之，此時機正應上位不能遠從近見，九二為群蒙所蔽，居此之時，無所往則利矣。猶女之嫁夫，當由正禮，如見人多金， 悦而相從，不可取也。&lt;/p>
&lt;h2 id="六四困蒙吝">
 六四：困蒙，吝。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e5%9b%b0%e8%92%99%e5%90%9d">#&lt;/a>
&lt;/h2>
&lt;p>因六四之陰爻，離剛賢最遠，無由來發其蒙，終困於昏蒙也，其永不足矣。&lt;/p>
&lt;h2 id="六五童蒙吉">
 六五：童蒙，吉。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%94%e7%ab%a5%e8%92%99%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>此示柔順之人居君位，下應於二，乃示柔中之德，任剛明之才，如此能治天下之蒙，吉也。為人君者，如至誠用賢，以成功惠於百姓，此功亦猶如己出一樣，何須顧忌手下，功高震主。&lt;/p>
&lt;h2 id="象曰利用刑人以正法也">
 象曰：利用刑人，以正法也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%88%a9%e7%94%a8%e5%88%91%e4%ba%ba%e4%bb%a5%e6%ad%a3%e6%b3%95%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此即用立法制刑，以教人之意，萬不可不教而誅。後世之論刑者，不復知教化孕其中， 只一昧的論刑。&lt;/p></description></item><item><title>03水雷屯</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/03%E6%B0%B4%E9%9B%B7%E5%B1%AF/</link><pubDate>Tue, 14 Jan 2025 09:38:38 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/03%E6%B0%B4%E9%9B%B7%E5%B1%AF/</guid><description>&lt;h1 id="03水雷屯">
 03水雷屯
 &lt;a class="anchor" href="#03%e6%b0%b4%e9%9b%b7%e5%b1%af">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦季布遇難，卜得之漢推其忠，乃赦其罪。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>人在望竿頭立，車在泥中，犬頭上回字， 人射文書，刀在牛上，一合子。&lt;/strong>&lt;/p>
&lt;p>龍困淺水之課 萬物如生之象&lt;/p>
&lt;p>雲雷之興，陰陽始交，而未成澤，故為屯，如成澤則為解，此卦動於險中，乃屯之義，如陰陽不交則否，此時機乃天下屯難，未亨泰之時也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、人在望竿頭上立：此不明局勢之屯難時也，不可妄動也。二、犬上回字：乃肖狗之人，狗年，狄姓之人，果為哭之象。三、車在泥中：進退兩難之象。刀在牛上：解也，牛為貴人象。四、人射文書：張姓，小人阻礙也。射：同音，色也，緋聞。五、牛不順道：背道而馳，反其道而為之，吉。&lt;/p>
&lt;p>六、人望：人亡也。七、人立：在位也。八、盒：先成後破。&lt;/p>
&lt;p>九、牛回頭視犬：計無所出，待也。&lt;/p>
&lt;h2 id="卜得此卦動於險中先成後破也">
 卜得此卦：動於險中，先成後破也。
 &lt;a class="anchor" href="#%e5%8d%9c%e5%be%97%e6%ad%a4%e5%8d%a6%e5%8b%95%e6%96%bc%e9%9a%aa%e4%b8%ad%e5%85%88%e6%88%90%e5%be%8c%e7%a0%b4%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>人間道&lt;/p>
&lt;p>屯：元、亨、利、貞，勿用有攸往，利建侯。&lt;/p>
&lt;p>此義處屯之時必貞固（堅心），須明非獨力能成，必廣資助，此利見侯之義。不可往，唯利建侯。&lt;/p>
&lt;h2 id="象曰屯剛柔始交而難生動乎險中">
 象曰：屯，剛柔始交而難生，動乎險中。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%b1%af%e5%89%9b%e6%9f%94%e5%a7%8b%e4%ba%a4%e8%80%8c%e9%9b%a3%e7%94%9f%e5%8b%95%e4%b9%8e%e9%9a%aa%e4%b8%ad">#&lt;/a>
&lt;/h2>
&lt;p>剛柔始交而未通暢，則難屯，難生，於此之時，如動即往，乃取險之道。&lt;/p>
&lt;h2 id="大亨貞雷雨之動滿盈">
 大亨貞，雷雨之動滿盈。
 &lt;a class="anchor" href="#%e5%a4%a7%e4%ba%a8%e8%b2%9e%e9%9b%b7%e9%9b%a8%e4%b9%8b%e5%8b%95%e6%bb%bf%e7%9b%88">#&lt;/a>
&lt;/h2>
&lt;p>此言屯有大亨之道，得陰陽交而和洽，則成雷雨，充滿天地之間，此因貞固才能出屯。&lt;/p>
&lt;h2 id="天造草昧宜建侯而不寧">
 天造草昧，宜建侯而不寧。
 &lt;a class="anchor" href="#%e5%a4%a9%e9%80%a0%e8%8d%89%e6%98%a7%e5%ae%9c%e5%bb%ba%e4%be%af%e8%80%8c%e4%b8%8d%e5%af%a7">#&lt;/a>
&lt;/h2>
&lt;p>天時造出地上之草，亂而無序，此暗昧不明時，須建立輔助，可以有助矣，此聖人之戒。&lt;/p>
&lt;h2 id="象曰雲雷屯君子以經綸">
 象曰：雲雷，屯。君子以經綸。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e9%9b%b2%e9%9b%b7%e5%b1%af%e5%90%9b%e5%ad%90%e4%bb%a5%e7%b6%93%e7%b6%b8">#&lt;/a>
&lt;/h2>
&lt;p>水未能成雨為雲象，君子觀屯象，知須立法規範來經營此時。&lt;/p>
&lt;h2 id="初九盤桓利居貞利建侯">
 初九：盤桓，利居貞，利建侯。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e7%9b%a4%e6%a1%93%e5%88%a9%e5%b1%85%e8%b2%9e%e5%88%a9%e5%bb%ba%e4%be%af">#&lt;/a>
&lt;/h2>
&lt;p>初而陽爻居下，意乃剛明之才，當屯難之時，而居下位。此時未便往濟，故盤桓。如遽進，則犯險遇難。此即示人處屯難時，須守正方是，現今之人，鮮少人於屯難之時守正。聖人戒之於屯時。&lt;/p>
&lt;h2 id="以貴下賤大得民也">
 以貴下賤，大得民也。
 &lt;a class="anchor" href="#%e4%bb%a5%e8%b2%b4%e4%b8%8b%e8%b3%a4%e5%a4%a7%e5%be%97%e6%b0%91%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>象曰：雖盤桓，志行正也。&lt;/p>
&lt;p>聖人處屯時，雖有濟屯之志，仍盤桓不動， 因時未至也。此居下位之念。&lt;/p>
&lt;p>初陽之剛健，居陰之下，此易以貴下賤之象。即處屯之時，陰柔不能存，唯一陽剛之才， 則眾所歸從也。更加此人能自處卑下，所以大得民心。&lt;/p>
&lt;h2 id="六二-屯如邅如乘馬班如匪寇婚媾女子貞不字十年乃字">
 六二 ：屯如邅如，乘馬班如，匪寇，婚媾，女子貞不字，十年乃字。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c-%e5%b1%af%e5%a6%82%e9%82%85%e5%a6%82%e4%b9%98%e9%a6%ac%e7%8f%ad%e5%a6%82%e5%8c%aa%e5%af%87%e5%a9%9a%e5%aa%be%e5%a5%b3%e5%ad%90%e8%b2%9e%e4%b8%8d%e5%ad%97%e5%8d%81%e5%b9%b4%e4%b9%83%e5%ad%97">#&lt;/a>
&lt;/h2>
&lt;p>此陰爻之柔居屯世。受逼於初剛健之人， 故柔處屯時，無法自濟，又受下之陽剛所逼， 為難為也。非理而至者為寇，柔守中正不苟合於初剛之意，須十年久久乃通。&lt;/p>
&lt;h2 id="象曰六二之難乘剛也十年乃字反常也">
 象曰：六二之難，乘剛也。十年乃字，反常也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%ad%e4%ba%8c%e4%b9%8b%e9%9b%a3%e4%b9%98%e5%89%9b%e4%b9%9f%e5%8d%81%e5%b9%b4%e4%b9%83%e5%ad%97%e5%8f%8d%e5%b8%b8%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此六二患難，因柔，又居屯時，又有下之陽剛所逼，此患難乃因柔而生，須十年，難久必過。如反其柔之常性，而與陽剛合，則省十年，十為數之終也。&lt;/p>
&lt;h2 id="六四乘馬班如求婚媾往吉-无不利">
 六四：乘馬班如，求婚媾，往吉， 无不利。
 &lt;a class="anchor" href="#%e5%85%ad%e5%9b%9b%e4%b9%98%e9%a6%ac%e7%8f%ad%e5%a6%82%e6%b1%82%e5%a9%9a%e5%aa%be%e5%be%80%e5%90%89-%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>此以柔順居近於君位，此得之於上者，而才不足以濟屯時，須求賢自輔，則往而利矣。此即居公卿之位，己之才不足以濟屯難之時， 若能求在下之賢人，親而用之，則必平安有利。&lt;/p>
&lt;h2 id="九五屯其膏小貞吉大貞凶">
 九五：屯其膏，小貞吉，大貞凶。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e5%b1%af%e5%85%b6%e8%86%8f%e5%b0%8f%e8%b2%9e%e5%90%89%e5%a4%a7%e8%b2%9e%e5%87%b6">#&lt;/a>
&lt;/h2>
&lt;p>五居尊位得正，當屯時，若有剛明之才為位，則利。如無，則屯其膏，此因無良臣，而施為有所不下於民，民未得其德澤，乃因威權不在己之故也。此屯因威權已去而妄想瞬間正回，此求凶之道。须以渐正之，方吉，如不為會因當屯時不改，以至於亡矣。&lt;/p></description></item><item><title>02坤爲地</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/02%E5%9D%A4%E4%B8%BA%E5%9C%B0/</link><pubDate>Tue, 14 Jan 2025 09:38:37 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/02%E5%9D%A4%E4%B8%BA%E5%9C%B0/</guid><description>&lt;h1 id="02坤爲地">
 02坤爲地
 &lt;a class="anchor" href="#02%e5%9d%a4%e7%88%b2%e5%9c%b0">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦漢高袓與項羽交爭卜得之，乃知身霸天下。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>十一箇口，一官人，坐看二串錢。一官人立受命，一馬，金甲神人在台上乘雲下， 綬文書與官，土堆上有四點。&lt;/strong>&lt;/p>
&lt;p>生載萬物之課 君倡臣和之象&lt;/p>
&lt;p>一、十一口：吉也，陳姓人也。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>二、一官人：倌人，丈夫也。公務員也。 三、坐看二串錢：欲拿不得，憂心忡忡狀。四、一馬者：肖馬人；指官貴；指調動也。五、金甲神：示民心也。&lt;/p>
&lt;p>六、授文書與官：授官封侯。&lt;/p>
&lt;p>七、土堆上有四點：黑也，背有陰謀也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>坤：元、亨、利牝馬之貞。&lt;/p>
&lt;p>坤乃地之厚德，示人效地之性，如牝馬之柔順而健行也，貞示堅心，但與乾不同，乃堅心於柔順之念也。&lt;/p>
&lt;h2 id="君子有攸往">
 君子有攸往。
 &lt;a class="anchor" href="#%e5%90%9b%e5%ad%90%e6%9c%89%e6%94%b8%e5%be%80">#&lt;/a>
&lt;/h2>
&lt;p>君子因行柔順，且表裡一致，合乎坤地之德性。&lt;/p>
&lt;h2 id="先迷後得主利">
 先迷後得，主利。
 &lt;a class="anchor" href="#%e5%85%88%e8%bf%b7%e5%be%8c%e5%be%97%e4%b8%bb%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>陰從陽也，即不了解但知須從陽剛之中正，如不知而欲進，則迷錯，損失在己，須居於後， 則利，如君臣之道，柔順乃臣之職也。&lt;/p>
&lt;h2 id="西南得朋東北喪朋安貞吉">
 西南得朋，東北喪朋，安貞吉。
 &lt;a class="anchor" href="#%e8%a5%bf%e5%8d%97%e5%be%97%e6%9c%8b%e6%9d%b1%e5%8c%97%e5%96%aa%e6%9c%8b%e5%ae%89%e8%b2%9e%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>西南為陰位，東北為陽位，陰必從於陽，陽之正而陰亦正，由陽剛之中正，去蕪存菁，故能成化育之功也。&lt;/p>
&lt;h2 id="彖曰至哉坤元萬物資生乃順承天坤厚載物德合无疆">
 彖曰：至哉坤元！萬物資生，乃順承天，坤厚載物，德合无疆。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e8%87%b3%e5%93%89%e5%9d%a4%e5%85%83%e8%90%ac%e7%89%a9%e8%b3%87%e7%94%9f%e4%b9%83%e9%a0%86%e6%89%bf%e5%a4%a9%e5%9d%a4%e5%8e%9a%e8%bc%89%e7%89%a9%e5%be%b7%e5%90%88%e6%97%a0%e7%96%86">#&lt;/a>
&lt;/h2>
&lt;p>坤之道大也，萬物因乾而始，因坤而生，猶父母之道，坤之德厚，故能持載萬物。&lt;/p>
&lt;h2 id="含弘光大品物咸亨牝馬地類行地無彊柔順利貞君子攸行">
 含弘光大，品物咸亨，牝馬地類，行地無彊，柔順利貞，君子攸行。
 &lt;a class="anchor" href="#%e5%90%ab%e5%bc%98%e5%85%89%e5%a4%a7%e5%93%81%e7%89%a9%e5%92%b8%e4%ba%a8%e7%89%9d%e9%a6%ac%e5%9c%b0%e9%a1%9e%e8%a1%8c%e5%9c%b0%e7%84%a1%e5%bd%8a%e6%9f%94%e9%a0%86%e5%88%a9%e8%b2%9e%e5%90%9b%e5%ad%90%e6%94%b8%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>含弘光大此四者，用来形容坤道，含，包容也，弘，寬裕也，光，昭明也，大，厚且博廣。聖人有此四德，故能成天之功，牝馬因柔順而能行，故健。&lt;/p>
&lt;h2 id="先迷失道後順得常西南得朋乃與類行東北喪朋乃終有慶-安貞之吉應地无疆">
 先迷失道，後順得常。西南得朋，乃與類行；東北喪朋，乃終有慶， 安貞之吉，應地无疆。
 &lt;a class="anchor" href="#%e5%85%88%e8%bf%b7%e5%a4%b1%e9%81%93%e5%be%8c%e9%a0%86%e5%be%97%e5%b8%b8%e8%a5%bf%e5%8d%97%e5%be%97%e6%9c%8b%e4%b9%83%e8%88%87%e9%a1%9e%e8%a1%8c%e6%9d%b1%e5%8c%97%e5%96%aa%e6%9c%8b%e4%b9%83%e7%b5%82%e6%9c%89%e6%85%b6-%e5%ae%89%e8%b2%9e%e4%b9%8b%e5%90%89%e6%87%89%e5%9c%b0%e6%97%a0%e7%96%86">#&lt;/a>
&lt;/h2>
&lt;p>因先迷而從陽剛之德，後必得理，西南為陰，同類而行，故得朋，東北陽方，離其類而喪朋，因離其類而從陽，故能成物之功也。終必吉，又因能安心堅守此道，則無所不可往矣。&lt;/p>
&lt;h2 id="象曰地勢坤君子以厚德載物">
 象曰：地勢坤，君子以厚德載物。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%9c%b0%e5%8b%a2%e5%9d%a4%e5%90%9b%e5%ad%90%e4%bb%a5%e5%8e%9a%e5%be%b7%e8%bc%89%e7%89%a9">#&lt;/a>
&lt;/h2>
&lt;p>坤地之道至大，聖人體之，君子以地之柔順且厚能載物之德處事。&lt;/p>
&lt;h2 id="初六履霜堅冰至">
 初六：履霜，堅冰至。
 &lt;a class="anchor" href="#%e5%88%9d%e5%85%ad%e5%b1%a5%e9%9c%9c%e5%a0%85%e5%86%b0%e8%87%b3">#&lt;/a>
&lt;/h2>
&lt;p>聖人於陰之始生，知其將長，此時戒之， 猶人之履及霜，則知後必有堅冰，故小人始雖甚微，但絶不可使其長，長盛則凶也。&lt;/p>
&lt;h2 id="六二直方大不習无不利">
 六二：直方大，不習，无不利。
 &lt;a class="anchor" href="#%e5%85%ad%e4%ba%8c%e7%9b%b4%e6%96%b9%e5%a4%a7%e4%b8%8d%e7%bf%92%e6%97%a0%e4%b8%8d%e5%88%a9">#&lt;/a>
&lt;/h2>
&lt;p>聖人以地之直、方、大三德以盡地之道。直者，直來直往，不迂迴作假。方者，原則不因局勢而改變，且正。大者，容載萬物之胸襟乃大也。不習，謂順其自然，則無往不利。亦可云，因又直且方，氣勢乃大也。&lt;/p>
&lt;h2 id="六三含章可貞或從王事无成有終">
 六三：含章可貞，或從王事，无成有終。
 &lt;a class="anchor" href="#%e5%85%ad%e4%b8%89%e5%90%ab%e7%ab%a0%e5%8f%af%e8%b2%9e%e6%88%96%e5%be%9e%e7%8e%8b%e4%ba%8b%e6%97%a0%e6%88%90%e6%9c%89%e7%b5%82">#&lt;/a>
&lt;/h2>
&lt;p>六三居相位，為臣之道，如有含章之美， 即不居其功，將善歸於君王，乃可因王無忌惡之心，終必吉。&lt;/p>
&lt;h2 id="或從王事知光大也">
 或從王事，知光大也。
 &lt;a class="anchor" href="#%e6%88%96%e5%be%9e%e7%8e%8b%e4%ba%8b%e7%9f%a5%e5%85%89%e5%a4%a7%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>象曰：履霜堅冰，陰始凝也，馴致其道，至堅冰也。&lt;/p>
&lt;p>陰始凝為霜，渐盛則至堅冰，故聖人戒小人於初，如任小人因循不阻止，則終至凶。故吾人須戒之於初，小人表面常有可憐，博人同情，示弱以求憫恤，實則內心有所圖，今人不知濟弱扶倾與姑息養奸乃一線之差，一昧以濟弱扶倾為自傲，殊不知其姑息養奸，而至今小人才盛。&lt;/p>
&lt;h2 id="象曰六二之動直以方也不習-无不利地道光也">
 象曰：六二之動，直以方也，不習， 无不利，地道光也。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%85%ad%e4%ba%8c%e4%b9%8b%e5%8b%95%e7%9b%b4%e4%bb%a5%e6%96%b9%e4%b9%9f%e4%b8%8d%e7%bf%92-%e6%97%a0%e4%b8%8d%e5%88%a9%e5%9c%b0%e9%81%93%e5%85%89%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>地道之光顯，由其直且方大，人人順其自然，則奸人何所遁形，無往不利。&lt;/p></description></item><item><title>01乾爲天</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/01%E4%B9%BE%E4%B8%BA%E5%A4%A9/</link><pubDate>Tue, 14 Jan 2025 09:38:36 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A4%A9%E7%BA%AA/%E4%BA%BA%E9%97%B4%E9%81%93/%E4%B8%8A%E7%BB%8F/01%E4%B9%BE%E4%B8%BA%E5%A4%A9/</guid><description>&lt;h1 id="01乾爲天">
 01乾爲天
 &lt;a class="anchor" href="#01%e4%b9%be%e7%88%b2%e5%a4%a9">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/000000.png" alt="" />&lt;br>
此卦高祖與呂后走在芒碭山卜得之，餘人難壓也。&lt;/p>
&lt;p>圖中：&lt;/p>
&lt;p>&lt;strong>鹿在雲中，石上玉，有光明，人琢玉。月當空，官人登雲梯，望月。&lt;/strong>&lt;/p>
&lt;p>六龍御天之課 廣大包容之象&lt;/p>
&lt;p>萬物皆成於天地之間，故天之高，地之厚德，皆為吾人所效法。聖人觀天而知天之運行恆古不變，且永不止息，此天之道。乾為萬物之始，以象言其為天，為陽，為父，為君。&lt;/p>
&lt;p>卦圖象解&lt;/p>
&lt;p>一、官人在梯上：平步青雲象。&lt;/p>
&lt;p>二、鹿在雲中：作為行事心中不可求祿，則祿至矣。三、石上玉有光明：示人才如玉之含光，吉也。&lt;/p>
&lt;p>四、人磨玉：示人堅心不移，夕惕若厲，隨時戒之。五、工匠：有重立門户之象。&lt;/p>
&lt;p>六、梯上官人：棺也。卜疾厄凶也。&lt;/p>
&lt;p>七、官人望磨玉人：示人即平步青雲須戒盛，且望下看，念中無妄，則升遷平安，如爭位則旦夕而亡也。&lt;/p>
&lt;p>人間道&lt;/p>
&lt;p>乾：元、亨、利、貞。&lt;/p>
&lt;p>元為萬物之始生，亨為萬物之成長，利為萬物之遂成，貞為萬物之堅心，此為乾之性，恒古不變，示人须有堅定不移之心志，萬事乃成於此。&lt;/p>
&lt;h2 id="初九潛龍勿用">
 初九：潛龍勿用。
 &lt;a class="anchor" href="#%e5%88%9d%e4%b9%9d%e6%bd%9b%e9%be%8d%e5%8b%bf%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;p>初爻為陽位，且陽居此，因爻理本無形， 聖人假借龍之物象來示人乾之初象如聖人始萌，如物之始端，若龍之潛隱，由於始生，未為可用之時機，當韜光養晦，以俟時之至。&lt;/p>
&lt;h2 id="九二見龍在田利見大人">
 九二：見龍在田，利見大人。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%8c%e8%a6%8b%e9%be%8d%e5%9c%a8%e7%94%b0%e5%88%a9%e8%a6%8b%e5%a4%a7%e4%ba%ba">#&lt;/a>
&lt;/h2>
&lt;p>以個人而言，此時如舜之田漁，其德已著， 乃時之至，故利見大德之君，以行其道。以君王言，此時亦利見大德之人臣，以共成其功。以天下百姓言，亦利見大德之人才，以受其恩澤。&lt;/p>
&lt;h2 id="九三君子終日乾乾夕惕若厲无咎">
 九三：君子終日乾乾，夕惕若厲，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%b8%89%e5%90%9b%e5%ad%90%e7%b5%82%e6%97%a5%e4%b9%be%e4%b9%be%e5%a4%95%e6%83%95%e8%8b%a5%e5%8e%b2%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>三爻位是在下卦之最上，雖為臣位，但未離下位，此時君子知朝夕不懈，隨時警惕，即處危地，但因戒惕而無災至。時今在下位之人，因德已顯彰，民心將至，天下將歸於他，試想其危懼之程度，故聖人設戒於此時，此易之論時也。&lt;/p>
&lt;h2 id="九四或躍在淵无咎">
 九四：或躍在淵，无咎。
 &lt;a class="anchor" href="#%e4%b9%9d%e5%9b%9b%e6%88%96%e8%ba%8d%e5%9c%a8%e6%b7%b5%e6%97%a0%e5%92%8e">#&lt;/a>
&lt;/h2>
&lt;p>或乃進與不進之時，聖人示戒進之時機，如時機不對，亦可不進，或之意也，無災。&lt;/p>
&lt;h2 id="九五飛龍在天利見大人">
 九五：飛龍在天，利見大人。
 &lt;a class="anchor" href="#%e4%b9%9d%e4%ba%94%e9%a3%9b%e9%be%8d%e5%9c%a8%e5%a4%a9%e5%88%a9%e8%a6%8b%e5%a4%a7%e4%ba%ba">#&lt;/a>
&lt;/h2>
&lt;p>此乃進乎天位君位之時，天下利見有大德之人，來共成天下之大事，聖人居此位，乃知時之至矣。廣納天下大德之人共成之。&lt;/p>
&lt;h2 id="用九見群龍無首吉">
 用九：見群龍無首，吉。
 &lt;a class="anchor" href="#%e7%94%a8%e4%b9%9d%e8%a6%8b%e7%be%a4%e9%be%8d%e7%84%a1%e9%a6%96%e5%90%89">#&lt;/a>
&lt;/h2>
&lt;p>上九：亢龍有悔。&lt;/p>
&lt;p>上九為位之極點，過此時太過也。聖人知此為時之極限，乃知進退存亡而終至無過,就不至於後悔也。&lt;/p>
&lt;p>用九之道，即用鲍陽剛之道，須剛柔相濟方為中道，如過乎剛，以至剛為天下之優先，此凶之道也。&lt;/p>
&lt;h2 id="彖曰大哉乾元萬物資始乃統天雲行雨施品物流形大明终始六位時成時乘六龍以御天乾道變化各正性命保合大和-乃利貞首出庶務萬國咸寧">
 彖曰：大哉乾元！萬物資始，乃統天。雲行雨施，品物流形。大明终始。六位時成，時乘六龍以御天。乾道變化，各正性命，保合大和， 乃利貞。首出庶務，萬國咸寧。
 &lt;a class="anchor" href="#%e5%bd%96%e6%9b%b0%e5%a4%a7%e5%93%89%e4%b9%be%e5%85%83%e8%90%ac%e7%89%a9%e8%b3%87%e5%a7%8b%e4%b9%83%e7%b5%b1%e5%a4%a9%e9%9b%b2%e8%a1%8c%e9%9b%a8%e6%96%bd%e5%93%81%e7%89%a9%e6%b5%81%e5%bd%a2%e5%a4%a7%e6%98%8e%e7%bb%88%e5%a7%8b%e5%85%ad%e4%bd%8d%e6%99%82%e6%88%90%e6%99%82%e4%b9%98%e5%85%ad%e9%be%8d%e4%bb%a5%e5%be%a1%e5%a4%a9%e4%b9%be%e9%81%93%e8%ae%8a%e5%8c%96%e5%90%84%e6%ad%a3%e6%80%a7%e5%91%bd%e4%bf%9d%e5%90%88%e5%a4%a7%e5%92%8c-%e4%b9%83%e5%88%a9%e8%b2%9e%e9%a6%96%e5%87%ba%e5%ba%b6%e5%8b%99%e8%90%ac%e5%9c%8b%e5%92%b8%e5%af%a7">#&lt;/a>
&lt;/h2>
&lt;p>彖為一卦之義，吾人觀讀彖，有助於對卦之了解。開始即讃乾道之浩大，萬物由此而生， 乾道因統天，故即為天道，萬物生後，雲行雨施，品物流形，此物之長也。六爻之卦位，各因時而成，此為天之運行，因天道之剛健而自強不息的運作，生育出萬物，且各有分類，各有所性，各有所命。吾人言『天所賦為命，物所受為性。』自此常存此道，因天道生成之&lt;/p>
&lt;p>剛正，利於吾人堅心向道，果必吉。天之道首出萬物而皆亨吉，人君之道遵循天道，以致四海顺从。&lt;/p>
&lt;h2 id="象曰天行健君子以自彊不息">
 象曰：天行健，君子以自彊不息。
 &lt;a class="anchor" href="#%e8%b1%a1%e6%9b%b0%e5%a4%a9%e8%a1%8c%e5%81%a5%e5%90%9b%e5%ad%90%e4%bb%a5%e8%87%aa%e5%bd%8a%e4%b8%8d%e6%81%af">#&lt;/a>
&lt;/h2>
&lt;p>象為解一卦之神，每卦皆有象，每爻皆有象，所有的卦皆以象為法則。此乾之卦象言，始終如一，永恆不變，人之行為能如此則至健，可以見天道也。吾人之自強不息，乃法天之則也。此為天紀。&lt;/p>
&lt;h2 id="潛龍勿用陽在下也">
 潛龍勿用，陽在下也。
 &lt;a class="anchor" href="#%e6%bd%9b%e9%be%8d%e5%8b%bf%e7%94%a8%e9%99%bd%e5%9c%a8%e4%b8%8b%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>陽居最下始生之位，猶植物之生於土中， 未出頭，始萌之狀。故君子如處此時，乃應進德修業，未為可用之時機也。&lt;/p>
&lt;h2 id="終日乾乾反復道也">
 終日乾乾，反復道也。
 &lt;a class="anchor" href="#%e7%b5%82%e6%97%a5%e4%b9%be%e4%b9%be%e5%8f%8d%e5%be%a9%e9%81%93%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>此時居下卦之最上，要再進前，但又未脱下位之關係，進退動靜，必依有道，且旦夕進修勵德，此時之法則也。&lt;/p>
&lt;h2 id="飛龍在天大人造也">
 飛龍在天，大人造也。
 &lt;a class="anchor" href="#%e9%a3%9b%e9%be%8d%e5%9c%a8%e5%a4%a9%e5%a4%a7%e4%ba%ba%e9%80%a0%e4%b9%9f">#&lt;/a>
&lt;/h2>
&lt;p>君子能進君位，而行其正道，天下大治矣。&lt;/p></description></item><item><title>19子张篇第十九</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/19%E5%AD%90%E5%BC%A0%E7%AF%87%E7%AC%AC%E5%8D%81%E4%B9%9D/</link><pubDate>Sat, 11 Jan 2025 19:53:40 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/19%E5%AD%90%E5%BC%A0%E7%AF%87%E7%AC%AC%E5%8D%81%E4%B9%9D/</guid><description>&lt;h1 id="子张篇第十九">
 子张篇第十九
 &lt;a class="anchor" href="#%e5%ad%90%e5%bc%a0%e7%af%87%e7%ac%ac%e5%8d%81%e4%b9%9d">#&lt;/a>
&lt;/h1>
&lt;p>(共二十五章)&lt;/p>
&lt;p>19.1子张曰：“士见危致命，见得思义，祭思敬，丧思哀，其可已矣。”&lt;/p>
&lt;p>【译文】子张说：“读书人看见危险便肯豁出生命，看见有所得便考虑是否该得，祭祀时候考虑严肃恭敬，居丧时候考虑悲痛哀伤，那也就可以了。”&lt;/p>
&lt;p>19.2子张曰：“执德不弘⑴，信道不笃，焉能为有？焉能为亡⑵？”&lt;/p>
&lt;p>【译文】子张说：“对于道德，行为不坚强，信仰不忠实，［这种人，］有他不为多，没他不为少。”&lt;/p>
&lt;p>【注释】⑴弘——此“弘”字就是今之“强”字，说见章炳麟《广论语骈枝》。⑵焉能为有，焉能为亡——这两句疑是当日成语。何晏《论语集解》云：“言无所轻重”，所以译文也用今日俗语来表达此意。&lt;/p>
&lt;p>19.3子夏之门人问交于子张。子张曰：“子夏云何？”&lt;/p>
&lt;p>对曰：“子夏曰：‘可者与之，其不可者拒之。’”&lt;/p>
&lt;p>子张曰：“异乎吾所闻：君子尊贤而容众，嘉善而矜不能。我之大贤与，于人何所不容？我之不贤与，人将拒我，如之何其拒人也？”&lt;/p>
&lt;p>【译文】子夏的学生向子张问怎样去交朋友。子张道：“子夏说了些什么？”&lt;/p>
&lt;p>答道：“子夏说，可以交的去交他，不可以交的拒绝他。”&lt;/p>
&lt;p>子张道：“我所听到的与此不同：君子尊敬贤人，也接纳普通人；鼓励好人，可怜无能的人。我是非常好的人吗，对什么人不能容纳呢？我是坏人吗，别人会拒绝我，我怎能去拒绝别人呢？”&lt;/p>
&lt;p>19.4子夏曰：“虽小道，必有可观者焉；致远恐泥，是以君子不为也。”&lt;/p>
&lt;p>【译文】子夏说道：“就是小技艺，一定有可取的地方；恐怕它妨碍远大事业，所以君子不从事于它。”&lt;/p>
&lt;p>19.5子夏曰：“日知其所亡，月无忘其所能，可谓好学也已矣。”&lt;/p>
&lt;p>【译文】子夏说：“每天知道所未知的，每月复习所已能的，可以说是好学了。”&lt;/p>
&lt;p>19.6子夏曰：“博学而笃志⑴，切问而近思，仁在其中矣。”&lt;/p>
&lt;p>【译文】子夏说：“广泛地学习，坚守自己志趣；恳切地发问，多考虑当前的问题，仁德就在这中间了。”&lt;/p>
&lt;p>【注释】⑴志——孔注以为“志”与“识”同，那么，“博学笃志”便是“博闻强记”之意，说虽可通，但不及译文所解恰切。&lt;/p>
&lt;p>19.7子夏曰：“百工居肆以成其事，君子学以致其道。”&lt;/p>
&lt;p>【译文】子夏说：“各种工人居住于其制造场所完成他们的工作，君子则用学习获得那个道。”&lt;/p>
&lt;p>19.8子夏曰：“小人之过也必文。”&lt;/p>
&lt;p>【译文】子夏说：“小人对于错误一定加以掩饰。”&lt;/p>
&lt;p>19.9子夏曰：“君子有三变：望之俨然，卽之也温，听其言也厉。”&lt;/p>
&lt;p>【译文】子夏说：“君子有三变：远远望着，庄严可畏；向他靠拢，温和可亲；听他的话，严厉不苟。”&lt;/p>
&lt;p>19.10子夏曰：“君子信而后劳其民；未信，则以为厉己也。信而后谏；未信，则以为谤己也。”&lt;/p>
&lt;p>【译文】子夏说：“君子必须得到信仰以后才去动员百姓；否则百姓会以为你在折磨他们。必须得到信任以后才去进谏，否则君上会以为你在毁谤他。”&lt;/p>
&lt;p>19.11子夏曰：“大德不踰闲，小德出入可也。”&lt;/p>
&lt;p>【译文】子夏说：“人的重大节操不能踰越界限，作风上的小节稍稍放松一点是可以的。”&lt;/p>
&lt;p>19.12子游曰：“子夏之门人小子，当洒扫应对进退，则可矣，抑末也。本之则无，如之何？”&lt;/p>
&lt;p>子夏闻之，曰：“噫！言游过矣！君子之道，孰先传焉？孰后倦焉？譬诸草木，区以别矣。君子之道，焉可诬也？有始有卒者，其惟圣人乎！”&lt;/p>
&lt;p>【译文】子游道：“子夏的学生，叫他们做做打扫、接待客人、应对进退的工作，那是可以的；不过这只是末节罢了。探讨他们的学术基础却没有，怎样可以呢？”&lt;/p>
&lt;p>子夏听了这话，便道：“咳！言游说错了！君子的学术，哪一项先传授呢？哪一项最后讲述呢？学术犹如草木，是要区别为各种各类的。君子的学术，如何可以歪曲？［依照一定的次序去传授而］有始有终的，大概只有圣人罢！”&lt;/p>
&lt;p>19.13子夏曰：“仕而优则学，学而优则仕。”&lt;/p>
&lt;p>【译文】子夏说：“做官了，有余力便去学习；学习了，有余力便去做官。”&lt;/p>
&lt;p>19.14子游曰：“丧致乎哀而止。”&lt;/p>
&lt;p>【译文】子游说：“居丧，充分表现了他的悲哀也就够了。”&lt;/p>
&lt;p>19.15子游曰：“吾友张也为难能也，然而未仁。”&lt;/p>
&lt;p>【译文】子游说：“我的朋友子张是难能可贵的了，然而还不能做到仁。”&lt;/p>
&lt;p>19.16曾子曰：“堂堂⑴乎张也，难与并为仁矣。”&lt;/p>
&lt;p>【译文】曾子说：“子张的为人高得不可攀了，难以携带别人一同进入仁德。”&lt;/p>
&lt;p>【注释】⑴堂堂——这是迭两字而成的形容词，其具体意义如何，古今解释纷纭。《荀子·非十二子篇》云：“弟佗其冠，神禫其辞，禹行而舜趋，是子张氏之贱儒也。”这是对子张学派的具体描写，因此我把“堂堂”译为“高不可攀”。根据《论语》和后代儒家诸书，可以证明曾子的学问重在“正心诚意”，而子张则重在言语形貌，所以子游也批评子张“然而未仁”。&lt;/p>
&lt;p>19.17曾子曰：“吾闻诸夫子：人未有自致者也，必也亲丧乎！”&lt;/p>
&lt;p>【译文】曾子说：“我听老师说过，平常时候，人不可能来自动地充分发挥感情，［如果有，］一定在父母死亡的时候罢！”&lt;/p>
&lt;p>19.18曾子曰：“吾闻诸夫子：孟庄子⑴之孝也，其它可能也；其不改父之臣与父之政，是难能也。”&lt;/p>
&lt;p>【译文】曾子说：“我听老师说过：孟庄子的孝，别的都容易做到；而留用他父亲的僚属，保持他父亲的政治设施，是难以做到的。”&lt;/p>
&lt;p>【注释】⑴孟庄子——鲁大夫孟献子仲孙蔑之子，名速。其父死于鲁襄公十九年，本人死于二十三年，相距仅四年。这一章可以和“三年无改于父之道可谓孝矣”（1.11）结合来看。&lt;/p>
&lt;p>19.19孟氏使阳肤⑴为士师，问于曾子。曾子曰：“上失其道，民散⑵久矣。如得其情，则哀矜而勿喜！”&lt;/p>
&lt;p>【译文】孟氏任命阳肤做法官，阳肤向曾子求教。曾子道：“现今在上位的人不依规矩行事，百姓早就离心离德了。你假若能够审出罪犯的真情，便应该同情他，可怜他，切不要自鸣得意！”&lt;/p>
&lt;p>【注释】⑴阳肤——旧注说他是曾子弟子。⑵散——黄家岱《嬹艺轩杂着·论语多齐鲁方言述》云：“散训犯法，与上下文义方接。扬氏《方言》：‘虔散，杀也。东齐曰散，青徐淮楚之间曰虔。’虔散为贼杀义。曰民散久矣，用齐语也。”译文未取此说，録之以备参考。&lt;/p>
&lt;p>19.20子贡曰：“纣⑴之不善，不如是之甚也。是以君子恶居下流，天下之恶皆归焉。”&lt;/p>
&lt;p>【译文】子贡说：“商纣的坏，不像现在传说的这么厉害。所以君子憎恨居于下流，一居下流，天下的什么坏名声都会集中在他身上了。”&lt;/p>
&lt;p>【注释】⑴纣——殷商最末之君，为周武王所伐，自焚而死。&lt;/p>
&lt;p>19.21子贡曰：“君子之过也，如日月之食焉：过也，人皆见之；更也，人皆仰之。”&lt;/p>
&lt;p>【译文】子贡说：“君子的过失好比日蚀月蚀：错误的时候，每个人都看得见；更改的时候，每个人都仰望着。”&lt;/p>
&lt;p>19.22卫公孙朝⑴问于子贡曰：“仲尼焉学？”子贡曰：“文武之道，未坠于地，在人。贤者识其大者，不贤者识其小者。莫不有文武之道焉。夫子焉不学？而亦何常师之有？”&lt;/p>
&lt;p>【译文】卫国的公孙朝向子贡问道：“孔仲尼的学问是从哪里学来的？”子贡道：“周文王武王之道，并没有失传，散在人间。贤能的人便抓住大处，不贤能的人只抓些末节。没有地方没有文王武王之道。我的老师何处不学，又为什么要有一定的老师，专门的传授呢？”&lt;/p>
&lt;p>【注释】⑴卫公孙朝——翟灏《四书考异》云：“春秋时鲁有成大夫公孙朝，见昭二十六年传；楚有武城尹公孙朝，见哀十七年传；郑子产有弟曰公孙朝，见列子。记者故系‘卫’以别之。”&lt;/p>
&lt;p>19.23叔孙武叔⑴语大夫于朝曰：“子贡贤于仲尼。”&lt;/p>
&lt;p>子服景伯以告子贡。&lt;/p>
&lt;p>子贡曰：“譬之宫墙⑵，赐之墙也及肩，窥见室家之好。夫子之墙数仞⑶，不得其门而入，不见宗庙之美，百官⑷之富。得其门者或寡矣。夫子之云，不亦宜乎！”&lt;/p>
&lt;p>【译文】叔孙武叔在朝廷中对官员们说：“子贡比他老师仲尼要强些。”&lt;/p>
&lt;p>子服景伯便把这话告诉子贡。&lt;/p>
&lt;p>子贡道：“拿房屋的围墙作比喻罢：我家的围墙只有肩膀那么高，谁都可以探望到房屋的美好。我老师的围墙却有几丈高，找不到大门走进去，就看不到他那宗庙的雄伟，房舍的多种多样。能够找着大门的人或许不多罢，那么，武叔他老人家的这话，不也是自然的吗？”&lt;/p>
&lt;p>【注释】⑴叔孙武叔——鲁大夫，名州仇。⑵宫墙——“宫”有围障的意义，如《礼记·丧大记》：“君为庐宫之”。“宫墙”当系一词，犹如今天的“围墙”。⑶仞——七尺曰仞（此从程瑶田《通艺録·释仞》之说）。⑷官——“官”字的本义是房舍，其后才引申为官职之义，说见俞樾《羣经平议》卷三及遇夫先生《积微居小学金石论丛》卷一。这里也是指房舍而言。&lt;/p>
&lt;p>19.24叔孙武叔毁仲尼。子贡曰：“无以⑴为也！仲尼不可毁也。他人之贤者，丘陵也，犹可踰也；仲尼，日月也，无得而踰焉。人虽欲自绝，其何伤于日月乎？多⑵见其不知量也⑶。”&lt;/p>
&lt;p>【译文】叔孙武叔毁谤仲尼。子贡道：“不要这样做，仲尼是毁谤不了的。别人的贤能，好比山邱，还可以超越过去；仲尼，简直是太阳和月亮，不可能超越它。人家纵是要自绝于太阳月亮，那对太阳月亮有什么损害呢？祗是表示他不自量罢了。”&lt;/p></description></item><item><title>13子路篇第十三</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/13%E5%AD%90%E8%B7%AF%E7%AF%87%E7%AC%AC%E5%8D%81%E4%B8%89/</link><pubDate>Sat, 11 Jan 2025 19:53:39 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/13%E5%AD%90%E8%B7%AF%E7%AF%87%E7%AC%AC%E5%8D%81%E4%B8%89/</guid><description>&lt;h1 id="子路篇第十三">
 子路篇第十三
 &lt;a class="anchor" href="#%e5%ad%90%e8%b7%af%e7%af%87%e7%ac%ac%e5%8d%81%e4%b8%89">#&lt;/a>
&lt;/h1>
&lt;p>(共三十章)&lt;/p>
&lt;p>13.1子路问政。子曰：“先之⑴劳之。”请益。曰：“无倦⑵。”&lt;/p>
&lt;p>【译文】子路问政治。孔子道：“自己给百姓带头，然后让他们勤劳地工作。”子路请求多讲一点。孔子又道：“永远不要懈怠。”&lt;/p>
&lt;p>【注释】⑴先之——就是下一章“先有司”之意。⑵无倦——也就是“居之无倦”（12.14）之意。&lt;/p>
&lt;p>13.2仲弓为季氏宰，问政。子曰：“先有司，赦小过，举贤才。”&lt;/p>
&lt;p>曰：“焉知贤才而举之？”子曰：“举尔所知；尔所不知，人其舍诸？”&lt;/p>
&lt;p>【译文】仲弓做了季氏的总管，向孔子问政治。孔子道：“给工作人员带头，不计较人家的小错误，提拔优秀人才。”&lt;/p>
&lt;p>仲弓道：“怎样去识别优秀人才把他们提拔出来呢？”孔子道：“提拔你所知道的；那些你所不知道的，别人难道会埋没他吗？”&lt;/p>
&lt;p>13.3子路曰：“卫君⑴待子而为政，子将奚先？”&lt;/p>
&lt;p>子曰：“必也正名⑵乎！”&lt;/p>
&lt;p>子路曰：“有是哉，子之迂也！奚其正？”&lt;/p>
&lt;p>子曰：“野哉，由也！君子于其所不知，盖阙如也。名不正，则言不顺；言不顺，则事不成；事不成，则礼乐不兴；礼乐不兴，则刑罚不中；刑罚不中，则民无所错⑶手足。故君子名之必可言也，言之必可行也。君子于其言，无所苟而已矣。”&lt;/p>
&lt;p>【译文】子路对孔子说：“卫君等着您去治理国政，您准备首先干什么？”&lt;/p>
&lt;p>孔子道：“那一定是纠正名分上的用词不当罢！”&lt;/p>
&lt;p>子路道：“您的迂腐竟到如此地步吗！这又何必纠正？”&lt;/p>
&lt;p>孔子道：“你怎么这样卤莽！君子对于他所不懂的，大概采取保留态度，［你怎么能乱说呢？］用词不当，言语就不能顺理成章；言语不顺理成章，工作就不可能搞好；工作搞不好，国家的礼乐制度也就举办不起来；礼乐制度举办不起来，刑罚也就不会得当；刑罚不得当，百姓就会［惶惶不安，］连手脚都不晓得摆在哪里才好。所以君子用一个词，一定［有它一定的理由，］可以说得出来；而顺理成章的话也一定行得通。君子对于措词说话要没有一点马虎的地方才罢了。”&lt;/p>
&lt;p>【注释】⑴卫君——历来的注释家都说是卫出公辄。⑵正名——关于这两个字的解释，从汉以来便异说纷纭。皇侃《义疏》引郑玄的注云：“正名谓正书字也，古者曰名，今世曰字。”这说恐不合孔子原意。《左传》成公二年曾经载有孔子的话，说：“唯器（礼器）与名（名义、名分）不可以假人。”《论语》这一“名”字应该和《左传》的这一“名”字相同。《论语》中有孔子“觚不觚”之叹。“觚”而不像“觚”，有其名，无其实，就是名不正。孔子对齐景公之问，说，“君君，臣臣，父父，子子”，也就是正名。《韩诗外传》卷五记载着孔子的一段故事，说，“孔子侍坐于季孙，季孙之宰通曰：‘君使人假马，其与之乎？’孔子曰：‘吾闻：君取于臣曰取，不曰假。’季孙悟，告宰通曰：‘今以往，君有取谓之取，无曰假。’孔子曰：‘正假马之言而君臣之义定矣。’”更可以说明孔子正名的实际意义。我这里用“名分上的用词不当”来解释“名不正”，似乎较为接近孔子原意。但孔子所要纠正的，只是有关古代礼制、名分上的用词不当的现象，而不是一般的用词不当的现象。一般的用词不当的现象，是语法修辞范畴中的问题；礼制上、名分上用词不当的现象，依孔子的意见，是有关伦理和政治的问题，这两点必须区别开来。⑶错——同“措”，安置也。&lt;/p>
&lt;p>13.4樊迟请学稼。子曰：“吾不如老农。”请学为圃。曰：“吾不如老圃。”&lt;/p>
&lt;p>樊迟出。子曰：“小人哉，樊须也！上好礼，则民莫敢不敬；上好义，则民莫敢不服；上好信，则民莫敢不用情。夫如是，则四方之民襁负其子而至矣，焉用稼？”&lt;/p>
&lt;p>【译文】樊迟请求学种庄稼。孔子道：“我不如老农民。”又请求学种菜蔬。孔子道：“我不如老菜农。”&lt;/p>
&lt;p>樊迟退了出来。孔子道：“樊迟真是小人，统治者讲究礼节，百姓就没有人敢不尊敬；统治者行为正当，百姓就没有人敢不服从；统治者诚恳信实，百姓就没有人敢不说真话。做到这样，四方的百姓都会背负着小儿女来投奔，为什么要自己种庄稼呢？”&lt;/p>
&lt;p>13.5子曰：“诵《诗》三百，授之以政，不达；使于四方，不能专对⑴；虽多，亦奚以为⑵？”&lt;/p>
&lt;p>【译文】孔子说：“熟读《诗经》三百篇，交给他以政治任务，却办不通；叫他出使外国，又不能独立地去谈判酬酢；纵是读得多，有什么用处呢？”&lt;/p>
&lt;p>【注释】⑴不能专对——古代的使节，只接受使命，至于如何去交涉应对，只能随机应变，独立行事，更不能事事请示或者早就在国内一切安排好，这便叫做“受命不受辞”，也就是这里的“专对”。同时春秋时代的外交酬酢和谈判，多半背诵诗篇来代替语言（《左传》里充满了这种记载），所以诗是外交人才的必读书。⑵亦奚以为——“以”，动词，用也。“为”，表疑问的语气词，但只跟“奚”、“何”诸字连用，如“何以文为”、“何以伐为”。&lt;/p>
&lt;p>13.6子曰：“其身正，不令而行；其身不正，虽令不从。”&lt;/p>
&lt;p>【译文】孔子说：“统治者本身行为正当，不发命令，事情也行得通。他本身行为不正当，纵三令五申，百姓也不会信从。”&lt;/p>
&lt;p>13.7子曰：“鲁、卫之政，兄弟也。”&lt;/p>
&lt;p>【译文】孔子说：“鲁国的政治和卫国的政治，像兄弟一般［地相差不远］。”&lt;/p>
&lt;p>13.8子谓卫公子荆⑴，“善居室⑵，始有，曰：‘苟合⑶矣。’少有，曰：‘苟完矣。’富有，曰：‘茍美矣。’”&lt;/p>
&lt;p>【译文】孔子谈到卫国的公子荆，说：“他善于居家过日子，刚有一点，便说道：‘差不多够了。’增加了一点，又说道：‘差不多完备了。’多有一点，便说道：‘差不多富丽堂皇了。”&lt;/p>
&lt;p>【注释】⑴卫公子荆——卫国的公子，吴季札曾把他列为卫国的君子，见《左传》襄公二十九年。有人说：“此取荆之善居室以风有位者也。”因为当时的卿大夫，不但贪污，而且奢侈成风，所以孔子“以廉风贪，以俭风侈。”似可备一说。⑵居室——这一词组意义甚多：（甲）居住房舍，《礼记·曲礼》“君子将营宫室，宗庙为先，廐库为次，居室为后。”（乙）夫妇同居，《孟子·万章》：“男女居室，人之大伦也。”（丙）汉代又以为狱名，《史记·卫青传》：“青尝从入甘泉居室。”（丁）此则为积蓄家业居家度日之义。“居”读为“奇货可居”之“居”。⑶合——给也，足也。此依俞樾《羣经平议》说。&lt;/p>
&lt;p>13.9子适卫，冉有仆⑴。子曰：“庶矣哉！”&lt;/p>
&lt;p>冉有曰：“既庶矣，又何加焉？”曰：“富之。”&lt;/p>
&lt;p>曰：“既富矣，又何加焉？”曰：“教之⑵。”&lt;/p>
&lt;p>【译文】孔子到卫国，冉有替他驾车子。孔子道：“好稠密的人口！”&lt;/p>
&lt;p>冉有道：“人口已经众多了，又该怎么办呢？”孔子道：“使他们富裕起来。”&lt;/p>
&lt;p>冉有道：“已经富裕了，又该怎么办呢？”孔子道：“教育他们”&lt;/p>
&lt;p>【注释】⑴仆——动词，驾御车马。其人则谓之仆夫，《诗·小雅·出车》“仆夫况瘁”可证。仆亦作名词，驾车者，《诗·小雅·正月》“屡顾尔仆”是也。⑵既富……教之——孔子主张“先富后教”，孟子、荀子也都继续发挥了这一主张。所以孟子说“乐岁终身苦，凶年不免于死亡。此惟救死而恐不赡，奚暇治礼义哉？”（《梁惠王上》）也和《管子·治国篇》的“凡治国之道，必先富民”主张相同。&lt;/p>
&lt;p>13.10子曰：“苟有用我者，期月⑴而已可也，三年有成。”&lt;/p>
&lt;p>【译文】孔子说：“假若有用我主持国家政事的，一年便差不多了，三年便会很有成绩。”&lt;/p>
&lt;p>【注释】⑴期月——期同“朞”，有些本子卽作“朞”，音姬，jī。期月，一年。&lt;/p>
&lt;p>13.11子曰：“‘善人为邦百年，亦可以胜⑴残去⑵杀矣⑶。’诚哉是言也！”&lt;/p>
&lt;p>【译文】孔子说：“‘善人治理国政连续到一百年，也可以克服残暴免除虐杀了。’这句话真说得对呀！”&lt;/p>
&lt;p>【注释】⑴胜——旧读平声。⑵去——旧读上声。⑶善人……去杀矣——依文意是孔子引别人的话。&lt;/p>
&lt;p>13.12子曰：“如有王者，必世而后仁。”&lt;/p>
&lt;p>【译文】孔子说：“假若有王者兴起，一定需要三十年才能使仁政大行。”&lt;/p>
&lt;p>13.13子曰：“苟正其身矣，于从政乎何有？不能正其身，如正人何？”&lt;/p>
&lt;p>【译文】孔子说：“假若端正了自己，治理国政有什么困难呢？连本身都不能端正，怎么端正别人呢？”&lt;/p>
&lt;p>13.14冉子退朝。子曰：“何晏也？”对曰：“有政。”子曰：“其事也。如有政，虽不吾以，吾其与闻之⑴。”&lt;/p>
&lt;p>【译文】冉有从办公的地方回来。孔子道：“为什么今天回得这样晚呢？”答道：“有政务。”孔子道：“那只是事务罢了。若是有政务，虽然不用我了，我也会知道的。”&lt;/p>
&lt;p>【注释】⑴与闻之——与，去声，参预之意。《左传》哀公十一年曾有记载，季氏以用田赋的事征求孔子意见，并且说，“子为国老，待子而行。”可见孔子“如有政，吾其与闻之”这话是有根据的。只是冉有不明白“政”和“事”的分别，一时用词不当罢了。依我看，这章并无其它意义，前人有故求深解的，未必对。&lt;/p>
&lt;p>13.15定公问：“一言而可以兴邦，有诸？”&lt;/p>
&lt;p>孔子对曰：“言不可以若是其几也。人之言曰：‘为君难，为臣不易。’如知为君之难也，不几乎一言而兴邦乎？”&lt;/p>
&lt;p>曰：“一言而丧邦，有诸？”&lt;/p>
&lt;p>孔子对曰：“言不可以若是其几也。人之言曰：‘予无乐乎为君，唯其言而莫予违也。’如其善而莫之违也，不亦善乎？如不善而莫之违也，不几乎一言而丧邦乎？”&lt;/p>
&lt;p>【译文】鲁定公问：“一句话兴盛国家，有这事么？”&lt;/p>
&lt;p>孔子答道：“说话不可以像这样地简单机械。不过，人家都说：‘做君上很难，做臣子不容易。’假若知道做君上的艰难，［自然会谨慎认真地干去，］不近于一句话便兴盛国家么？”&lt;/p>
&lt;p>定公又道：“一句话丧失国家，有这事么？”&lt;/p>
&lt;p>孔子答道：“说话不可以像这样地简单机械。不过，大家都说：‘我做国君没有别的快乐，只是我说什么话都没有人违抗我。’假若说的话正确而没有人违抗，不也好么？假若说的话不正确而也没有人违抗，不近于一句话便丧失国家么？”&lt;/p>
&lt;p>13.16叶公问政。子曰：“近者悦，远者来。”&lt;/p>
&lt;p>【译文】叶公问政治。孔子道：“境内的人使他高兴，境外的人使他来投奔。”&lt;/p>
&lt;p>13.17子夏为莒父⑴宰，问政。子曰：“无欲速，无见小利。欲速，则不达；见小利，则大事不成。”&lt;/p>
&lt;p>【译文】子夏做了莒父的县长，问政治。孔子道：“不要图快，不要顾小利。图快，反而不能达到目的；顾小利，就办不成大事。”&lt;/p>
&lt;p>【注释】⑴莒父——鲁国之一邑，现在已经不能确知其所在。山东通志认为在今山东高密县东南。&lt;/p>
&lt;p>13.18叶公语孔子曰：“吾党有直躬者，其父攘羊，而子证⑴之。”孔子曰：“吾党之直者异于是：父为子隐，子为父隐。——直在其中⑵矣。”&lt;/p>
&lt;p>【译文】叶公告诉孔子道：“我那里有个坦白直率的人，他父亲偷了羊，他便告发。”孔子道：“我们那里坦白直率的人和你们的不同：父亲替儿子隐瞒，儿子替父亲隐瞒——直率就在这里面。”&lt;/p>
&lt;p>【注释】⑴证——《说文》云：“证，告也。”正是此义。相当今日的“检举”“揭发”，《韩非子·五蠹篇》述此事作“谒之吏”，《吕氏春秋·当务篇》述此事作“谒之上”，都可以说明正是其子去告发他父亲。“证明”的“证”，古书一般用“征”字为之。⑵直在其中——孔子伦理哲学的基础就在于“孝”和“慈”因之说父子相隐，直在其中。&lt;/p></description></item><item><title>09子罕篇第九</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/09%E5%AD%90%E7%BD%95%E7%AF%87%E7%AC%AC%E4%B9%9D/</link><pubDate>Sat, 11 Jan 2025 19:53:38 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/09%E5%AD%90%E7%BD%95%E7%AF%87%E7%AC%AC%E4%B9%9D/</guid><description>&lt;h1 id="子罕篇第九">
 子罕篇第九
 &lt;a class="anchor" href="#%e5%ad%90%e7%bd%95%e7%af%87%e7%ac%ac%e4%b9%9d">#&lt;/a>
&lt;/h1>
&lt;p>(共三十一章（朱熹《集注》把第六、第七两章合并为一章，所以作三十章。）)&lt;/p>
&lt;p>9.1子罕⑴言利与命与仁。&lt;/p>
&lt;p>【译文】孔子很少［主动］谈到功利、命运和仁德。&lt;/p>
&lt;p>【注释】⑴罕——副词，少也，只表示动作频率。而《论语》一书，讲“利”的六次，讲“命”的八、九次，若以孔子全部语言比较起来，可能还算少的。因之子贡也说过，“夫子之言性与天道，不可得而闻也。”（公冶长篇第五）至于“仁”，在《论语》中讲得最多，为什么还说“孔子罕言”呢？于是对这一句话便生出别的解释了。金人王若虚（《误谬杂辨》）、清人史绳祖（《学斋占毕》）都以为造句应如此读：“子罕言利，与命，与仁。”“与”，许也。意思是“孔子很少谈到利，却赞成命，赞成仁”。黄式三（《论语后案》）则认为“罕”读为“轩”，显也。意思是“孔子很明显地谈到利、命和仁”。遇夫先生（《论语疏证》）又以为“所谓罕言仁者，乃不轻许人以仁之意，与罕言利命之义似不同。试以圣人评论仲弓、子路、冉有、公西华、令尹子文、陈文子之为人及克伐怨欲不行之德，皆云不知其仁，更参之以儒行之说，可以证明矣”。我则以为《论语》中讲“仁”虽多，但是一方面多半是和别人问答之词，另一方面，“仁”又是孔门的最高道德标准，正因为少谈，孔子偶一谈到，便有记载。不能以记载的多便推论孔子谈得也多。孔子平生所言，自然千万倍于《论语》所记载的，《论语》出现孔子论“仁”之处若用来和所有孔子平生之言相比，可能还是少的。诸家之说未免对于《论语》一书过于拘泥，恐怕不与当时事实相符，所以不取。于省吾读“仁”为“𡰥”，卽“夷狄”之“夷”，未必确。&lt;/p>
&lt;p>9.2达巷党⑴人曰：“大哉孔子！博学而无所成名。”子闻之，谓门弟子曰：“吾何执？执御乎？执射乎？吾执御矣。”&lt;/p>
&lt;p>【译文】达街的一个人说：“孔子真伟大！学问广博，可惜没有足以树立名声的专长。”孔子听了这话，就对学生们说：“我干什么呢？赶马车呢？做射击手呢？我赶马车好了。”&lt;/p>
&lt;p>【注释】⑴达巷党——《礼记·杂记》有“余从老聃助葬于巷党”的话，可见“巷党”两字为一词，“里巷”的意思。&lt;/p>
&lt;p>9.3子曰：“麻冕⑴，礼也；今也纯⑵，俭⑶，吾从众。拜下⑷，礼也；今拜乎上，泰也。虽违众，吾从下。”&lt;/p>
&lt;p>【译文】孔子说：“礼帽用麻料来织，这是合于传统的礼的；今天大家都用丝料，这样省俭些，我同意大家的做法。臣见君，先在堂下磕头，然后升堂又磕头，这是合于传统的礼的。今天大家都免除了堂下的磕头，只升堂后磕头，这是倨傲的表现。虽然违反大家，我仍然主张要先在堂下磕头。”&lt;/p>
&lt;p>【注释】⑴麻冕——一种礼帽，有人说就是缁布冠（古人一到二十岁，便举行加帽子的仪式，叫“冠礼”。第一次加的便是缁布冠），未必可信。⑵纯——黑色的丝。⑶俭——绩麻做礼帽，依照规定，要用二千四百缕经线。麻质较粗，必须织得非常细密，这很费工。若用丝，丝质细，容易织成，因而省俭些。⑷拜下——指臣子对君主的行礼，先在堂下磕头，然后升堂再磕头。《左传》僖公九年和《国语·齐语》都记述齐桓公不听从周襄王的辞让，终于下拜的事。到孔子时，下拜的礼似乎废弃了。&lt;/p>
&lt;p>9.4子絶四——毋意，毋必，毋固，毋我。&lt;/p>
&lt;p>【译文】孔子一点也没有四种毛病——不悬空揣测，不绝对肯定，不拘泥固执，不唯我独是。&lt;/p>
&lt;p>9.5子畏于匡⑴，曰：“文王既没，文不在兹乎？天之将丧斯文也，后死者⑵不得与⑶于斯文也；天之未丧斯文也，匡人其如予何？”&lt;/p>
&lt;p>【译文】孔子被匡地的羣众所拘禁，便道：“周文王死了以后，一切文化遗产不都在我这里吗？天若是要消灭这种文化，那我也不会掌握这些文化了；天若是不要消灭这一文化，那匡人将把我怎么样呢？”&lt;/p>
&lt;p>【注释】⑴子畏于匡——《史记·孔子世家》说，孔子离开卫国，准备到陈国去，经过匡。匡人曾经遭受过鲁国阳货的掠夺和残杀，而孔子的相貌很像阳货，便以为孔子就是过去曾经残害过匡地的人，于是囚禁了孔子。“畏”是拘囚的意思，《荀子·赋篇》云：“比干见刳，孔子拘匡。”《史记·孔子世家》作“拘焉五日”，可见这一“畏”字和《礼记·檀弓》“死而不吊者三，畏、厌、溺”的“畏”相同，说见俞樾《羣经平议》。今河南省长垣县西南十五里有匡城，可能就是当日孔子被囚之地。⑵后死者——孔子自谓。⑶与——音预。&lt;/p>
&lt;p>9.6太宰⑴问于子贡曰：“夫子圣者与？何其多能也？”子贡曰：“固天纵之将圣，又多能也。”&lt;/p>
&lt;p>子闻之，曰：“太宰知我乎！吾少也贱，故多能鄙事。君子多乎哉？不多也。”&lt;/p>
&lt;p>【译文】太宰向子贡问道：“孔老先生是位圣人吗？为什么这样多才多艺呢？”子贡道：“这本是上天让他成为圣人，又使他多才多艺。”&lt;/p>
&lt;p>孔子听到，便道：“太宰知道我呀！我小时候穷苦，所以学会了不少鄙贱的技艺。真正的君子会有这样多的技巧吗？是不会的。”&lt;/p>
&lt;p>【注释】⑴太宰——官名。这位太宰已经不知是哪一国人以及姓甚名谁了。&lt;/p>
&lt;p>9.7牢⑴曰：“子云，‘吾不试⑵，故艺。’”&lt;/p>
&lt;p>【译文】牢说：“孔子说过，我不曾被国家所用，所以学得一些技艺。”&lt;/p>
&lt;p>【注释】⑴牢——郑玄说是孔子学生，但《史记·仲尼弟子列传》无此人。王肃伪撰之《孔子家语》说“琴张，一名牢，字子开，亦字子张，卫人也”，尤其不可信。说本王引之，详王念孙《读书杂志》卷四之三。⑵试——《论衡·正说篇》云：“尧曰：‘我其试哉！’说《尚书》曰：‘试者用也。’”这“试”字也应当“用”字解。&lt;/p>
&lt;p>9.8子曰：“吾有知乎哉？无知也。有鄙夫问于我，空空如也。我叩其两端而竭焉。”&lt;/p>
&lt;p>【译文】孔子说：“我有知识吗？没有哩。有一个庄稼汉问我，我本是一点也不知道的；我从他那个问题的首尾两头去盘问，［才得到很多意思，］然后尽量地告诉他。”&lt;/p>
&lt;p>9.9子曰：“凤鸟不至，河不出图⑴，吾已矣夫！”&lt;/p>
&lt;p>【译文】孔子说：“凤凰不飞来了，黄河也没有图画出来了，我这一生恐怕是完了吧！”&lt;/p>
&lt;p>【注释】⑴凤鸟河图——古代传说，凤凰是一种神鸟，祥瑞的象征，出现就是表示天下太平。又说，圣人受命，黄河就出现图画。孔子说这几句话，不过藉此比喻当时天下无清明之望罢了。&lt;/p>
&lt;p>9.10子见齐衰⑴者、冕衣裳者⑵与瞽者，见之，虽少，必作⑶；过之，必趋⑶。&lt;/p>
&lt;p>【译文】孔子看见穿丧服的人、穿戴着礼帽礼服的人以及瞎了眼睛的人，相见的时候，他们虽然年轻，孔子一定站起来；走过的时候，一定快走几步。&lt;/p>
&lt;p>【注释】⑴齐衰——齐音咨，zī；衰音崔，cuī。齐衰，古代丧服，用熟麻布做的，其下边缝齐（斩衰则用粗而生的麻布，左右及下边也都不缝）。齐衰又有齐衰三年、齐衰期（一年）、齐衰五月、齐衰三月几等；看死了什么人，便服多长日子的孝。这里讲齐衰，自然也包括斩衰而言。斩衰是最重的孝服，儿子对父亲，臣下对君上才斩衰三年。⑵冕衣裳者——卽衣冠整齐的贵族。冕是高等贵族所戴的礼帽，后来只有皇帝所戴才称冕。衣是上衣，裳是下衣，相当现代的帬。古代男子上穿衣，下着帬。⑶作，趋——作，起；趋，疾行。这都是一种敬意的表示。&lt;/p>
&lt;p>9.11颜渊喟然叹曰：“仰之弥高，钻之弥坚。瞻之在前，忽焉在后。夫子循循然善诱人，博我以文，约我以礼，欲罢不能。既竭吾才，如有所立卓尔。虽欲从之，末由也已。”&lt;/p>
&lt;p>【译文】颜渊感叹着说：“老师之道，越抬头看，越觉得高；越用力钻研，越觉得深。看看，似乎在前面，忽然又到后面去了。［虽然这样高深和不容易捉摸，可是］老师善于有步骤地诱导我们，用各种文献来丰富我的知识，又用一定的礼节来约束我的行为，使我想停止学习都不可能。我已经用尽我的才力，似乎能够独立地工作。要想再向前迈进一步，又不知怎样着手了。”&lt;/p>
&lt;p>9.12子疾病，子路使门人为臣⑴。病间，曰：“久矣哉，由之行诈也！无臣而为有臣。吾谁欺？欺天乎！且予与其死于臣之手也，无宁⑵死于二三子之手乎！且予纵不得大葬，予死于道路乎？”&lt;/p>
&lt;p>【译文】孔子病得厉害，子路便命孔子的学生组织治丧处。很久以后，孔子的病渐渐好了，就道：“仲由干这种欺假的勾当竟太长久了呀！我本不该有治丧的组织，却一定要使人组织治丧处。我欺哄谁呢？欺哄上天吗？我与其死在治丧的人的手里，宁肯死在你们学生们的手里，不还好些吗？卽使不能热热闹闹地办理丧葬，我会死在路上吗？”&lt;/p>
&lt;p>【注释】⑴为臣——和今天的组织治丧处有相似之处，所以译文用来比傅。但也有不同之处。相似之处是死者有一定的社会地位才给他组织治丧处。古代，诸侯之死才能有“臣”；孔子当时，可能有许多卿大夫也“僭”行此礼。不同之处是治丧处人死以后才组织，才开始工作。“臣”却不然，死前便工作，死者的衣衾手足的安排以及翦须诸事都由“臣”去处理。所以孔子这里也说“死于臣之手”的话。⑵无宁——“无”为发语词，无义。《左传》隐公十一年云：“无宁兹许公复奉其社稷。”杜预的注说：“无宁，宁也。”&lt;/p>
&lt;p>9.13子贡曰：“有美玉于斯，韫椟而藏诸？求善贾⑴而沽诸？”子曰：“沽之哉！沽之哉！我待贾者也。”&lt;/p>
&lt;p>【译文】子贡道：“这里有一块美玉，把它放在柜子里藏起来呢？还是找一个识货的商人卖掉呢？”孔子道：“卖掉，卖掉，我是在等待识货者哩。”&lt;/p>
&lt;p>【注释】⑴贾——音古，gǔ，商人。又同“价”，价钱。如果取后一义，“善贾”便是“好价钱”，“待贾”便是“等好价钱”。不过与其说孔子是等价钱的人，不如说他是等识货者的人。&lt;/p>
&lt;p>9.14子欲居九夷⑴。或曰：“陋，如之何？”子曰：“君子居之，何陋之有⑵？”&lt;/p>
&lt;p>【译文】孔子想搬到九夷去住。有人说：“那地方非常简陋，怎么好住？，”孔子道：“有君子去住，就不简陋了。”&lt;/p>
&lt;p>【注释】⑴九夷——九夷就是淮夷。《韩非子·说林上篇》云：“周公旦攻九夷而商盖伏。”商盖就是商奄，则九夷本居鲁国之地，周公曾用武力降服他们。春秋以后，盖臣属楚、吴、越三国，战国时又专属楚。以《说苑·君道篇》、《淮南子·齐俗训》、《战国策·秦策》与《魏策》、李斯〈上秦始皇书〉诸说九夷者考之，九夷实散居于淮、泗之间，北与齐、鲁接壤（说本孙诒让《墨子闲诂·非攻篇》）。⑵何陋之有——直译是“有什么简陋呢”，此用意译。&lt;/p>
&lt;p>9.15子曰：“吾自卫反鲁⑴，然后乐正，《雅》、《颂》各得其所⑵。”&lt;/p>
&lt;p>【译文】孔子说：“我从卫国回到鲁国，才把音乐［的篇章］整理出来，使《雅》归《雅》，《颂》归《颂》，各有适当的安置。”&lt;/p>
&lt;p>【注释】⑴自卫反鲁——根据《左传》，事在鲁哀公十一年冬。⑵雅颂各得其所——“雅”和“颂”一方面是《诗经》内容分类的类名，一方面也是乐曲分类的类名。篇章内容的分类，可以由今日的《诗经》考见；乐曲的分类，因为古乐早已失传，便无可考证了。孔子的正雅颂，究竟是正其篇章呢？还是正其乐曲呢？或者两者都正呢？《史记·孔子世家》和《汉书·礼乐志》则以为主要的是正其篇章，因为我们已经得不到别的材料，只得依从此说。孔子只“正乐”，调整《诗经》篇章的次序，太史公在孔子世家中因而说孔子曾把三千余篇的古诗删为三百余篇，是不可信的。&lt;/p>
&lt;p>9.16子曰：“出则事公卿，入则事父兄⑴，丧事不敢不勉，不为酒困，何有于我哉⑵？”&lt;/p>
&lt;p>【译文】孔子说：“出外便服事公卿，入门便服事父兄，有丧事不敢不尽礼，不被酒所困扰，这些事我做到了哪些呢？”&lt;/p>
&lt;p>【注释】⑴父兄——孔子父亲早死，说这话时候，或者他哥孟皮还在，“父兄”二字，只“兄”字有义，古人常有这用法。“父兄”或者在此引伸为长者之义。⑵何有于我哉——如果把“何有”看为“不难之词”，那这一句便当译为“这些事对我有什么困难呢”。全文由自谦之词变为自述之词了。&lt;/p>
&lt;p>9.17子在川上，曰：“逝者如斯夫！不舍⑴昼夜。”&lt;/p>
&lt;p>【译文】孔子在河边，叹道：“消逝的时光像河水一样呀！日夜不停地流去。”&lt;/p>
&lt;p>【注释】⑴舍——上、去两声都可以读。上声，同舍；去声，也作动词，居住，停留。孔子这话不过感叹光阴之奔驶而不复返吧了，未必有其它深刻的意义。《孟子·离娄下》、《荀子·宥坐篇》、《春秋繁露·山川颂》对此都各有阐发，很难说是孔子本意。&lt;/p>
&lt;p>9.18子曰：“吾未见好德如好色者也。”&lt;/p>
&lt;p>【译文】孔子说：“我没有看见过这样的人，喜爱道德赛过喜爱美貌。”&lt;/p>
&lt;p>9.19子曰：“譬如为山，未成一篑，止，吾止也。譬如平地，虽覆一篑，进，吾往也⑴。”&lt;/p>
&lt;p>【译文】孔子说：“好比堆土成山，只要再加一筐土便成山了，如果懒得做下去，这是我自己停止的。又好比在平地上堆土成山，纵是刚刚倒下一筐土，如果决心努力前进，还是要自己坚持呵！”&lt;/p>
&lt;p>【注释】⑴子曰……往也——这一章也可以这样讲解：“好比堆土成山，只差一筐土了，如果［应该］停止，我便停止。好比平地堆土成山，纵是刚刚倒下一筐土，如果［应该］前进，我便前进。”依照前一讲解，便是“为仁由己”的意思；依照后一讲解，便是“唯义与比”的意思。&lt;/p>
&lt;p>9.20子曰：“语之而不惰者，其回也与！”&lt;/p>
&lt;p>【译文】孔子说：“听我说话始终不懈怠的，大概只有颜回一个人吧！”&lt;/p>
&lt;p>9.21子谓颜渊，曰：“惜乎！吾见其进也，未见其止也。”&lt;/p>
&lt;p>【译文】孔子谈到颜渊，说道：“可惜呀［他死了］！我只看见他不断地进步，从没看见他停留。”&lt;/p>
&lt;p>9.22子曰:“苗而不秀⑴者有矣夫！秀而不实者有矣夫！”&lt;/p>
&lt;p>【译文】孔子说：“庄稼生长了，却不吐穗开花的，有过的罢！吐穗开花了，却不凝浆结实的，有过的罢！”&lt;/p>
&lt;p>【注释】⑴秀——“秀”字从禾，则只是指禾黍的吐花。《诗经·大雅·生民》云：“实发实秀，实坚实好。”“发”和“秀”是指庄稼的生长和吐穗开花；“坚”和“好”是指谷粒的坚实和壮大。这都是“秀”的本义。现在还把庄稼的吐穗开花叫做“秀穗”。因此译文点明是指庄稼而言。汉人唐人多以为孔子这话是为颜回短命而发。但颜回只是“秀而不实”（祢衡〈颜子碑〉如此说），则“苗而不秀”又指谁呢？孔子此言必有为而发，但究竟何所指，则不必妄测。&lt;/p>
&lt;p>9.23子曰：“后生可畏，焉知来者之不如今也？四十、五十而无闻焉，斯亦不足畏也已。”&lt;/p>
&lt;p>【译文】孔子说：“年少的人是可怕的，怎能断定他的将来赶不上现在的人呢，一个人到了四、五十岁还没有什么名望，也就值不得惧怕了。”&lt;/p>
&lt;p>9.24子曰：“法语之言，能无从乎？改之为贵。巽与之言，能无说乎？绎之为贵。说而不绎，从而不改，吾末如之何也已矣。”&lt;/p>
&lt;p>【译文】孔子说：“严肃而合乎原则的话，能够不接受吗？改正错误才可贵。顺从己意的话，能够不高兴吗？分析一下才可贵。盲目高兴，不加分析；表面接受，实际不改，这种人我是没有办法对付他的了。”&lt;/p></description></item><item><title>06雍也篇第六</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/06%E9%9B%8D%E4%B9%9F%E7%AF%87%E7%AC%AC%E5%85%AD/</link><pubDate>Sat, 11 Jan 2025 19:53:37 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/06%E9%9B%8D%E4%B9%9F%E7%AF%87%E7%AC%AC%E5%85%AD/</guid><description>&lt;h1 id="雍也篇第六">
 雍也篇第六
 &lt;a class="anchor" href="#%e9%9b%8d%e4%b9%9f%e7%af%87%e7%ac%ac%e5%85%ad">#&lt;/a>
&lt;/h1>
&lt;p>(共三十章（朱熹《集注》把第一、第二和第四、第五各并为一章，故作二十八章。）)&lt;/p>
&lt;p>6.1子曰：“雍也可使南面⑴。”&lt;/p>
&lt;p>【译文】孔子说：“冉雍这个人，可以让他做一部门或一地方的长官。”&lt;/p>
&lt;p>【注释】⑴南面——古代早就知道坐北朝南的方向是最好的，因此也以这个方向的位置最为尊贵，无论天子、诸侯、卿大夫，当他作为长官出现的时候，总是南面而坐的。说见王引之《经义述闻》和凌廷堪《礼经释义》。&lt;/p>
&lt;p>6.2仲弓问子桑伯子⑴。子曰：“可也简⑵。”仲弓曰：“居敬而行简，以临其民，不亦可乎？居简而行简，无乃⑶大⑷简乎？”子曰：“雍之言然。”&lt;/p>
&lt;p>【译文】仲弓问到子桑伯子这个人。孔子道：“他简单得好。”仲弓道：“若存心严肃认真，而以简单行之，［抓大体，不烦琐，］来治理百姓，不也可以吗？若存心简单，又以简单行之，不是太简单了吗？”孔子道：“你这番话正确。”&lt;/p>
&lt;p>【注释】⑴子桑伯子——此人已经无可考。有人以为就是《庄子》的子桑户，又有人以为就是秦穆公时的子桑（公孙枝），都未必可靠。既然称“伯子”，很大可能是卿大夫。仲弓说“以临其民”。也要是卿大夫才能临民。⑵简——《说苑》有子桑伯子的一段故事，说他“不衣冠而处”，孔子却认为他“质美而无文”，因之有人认为这一“简”字是指其“无文”而言。但此处明明说他“可也简”，而《说苑》孔子却说，“吾将说而文之”，似乎不能如此解释。朱熹以为“简”之所以“可”，在于“事不烦而民不扰”，颇有道理，故译文加了两句。⑶无乃——相当于“不是”，但只用于反问句。⑷大——同“太”。&lt;/p>
&lt;p>6.3哀公问：“弟子孰为好学？”孔子对曰：“有颜回者好学，不迁怒，不贰过。不幸短命⑴死矣，今也则亡，未闻好学者也。”&lt;/p>
&lt;p>【译文】鲁哀公问：“你的学生中，哪个好学？”孔子答道：“有一个叫颜回的人好学，不拿别人出气；也不再犯同样的过失。不幸短命死了，现在再没有这样的人了，再也没听过好学的人了。”&lt;/p>
&lt;p>【注释】短命——《公羊传》把颜渊的死列在鲁哀公十四年（公元前481年），其时孔子年七十一，依《史记·仲尼弟子列传》，颜渊少于孔子三十岁，则死时年四十一。但据《孔子家语》等书，颜回卒时年仅三十一，因此毛奇龄（《论语稽求篇》）谓《史记》“少孔子三十岁，原是四十之误”。&lt;/p>
&lt;p>6.4子华⑴使⑵于齐，冉子⑶为其母请粟⑷。子曰：“与之釜⑸。”&lt;/p>
&lt;p>请益。曰：“与之庾⑹。”&lt;/p>
&lt;p>冉子与之粟五秉⑺。&lt;/p>
&lt;p>子曰：“赤之适齐也，乘肥马⑻，衣⑼轻裘。吾闻之也：君子周⑽急不继富。”&lt;/p>
&lt;p>【译文】公西华被派到齐国去作使者，冉有替他母亲向孔子请求小米。孔子道：“给他六斗四升。”&lt;/p>
&lt;p>冉有请求增加。孔子道：“再给他二斗四升。”&lt;/p>
&lt;p>冉有却给了他八十石。&lt;/p>
&lt;p>孔子道：“公西赤到齐国去，坐着由肥马驾的车辆，穿着又轻又暖的皮袍。我听说过：君子只是雪里送炭，不去锦上添花。”&lt;/p>
&lt;p>【注释】⑴子华——孔子学生，姓公西，名赤，字子华，比孔子小四十二岁。⑵使——旧读去声，出使。⑶冉子——《论语》中，孔子弟子称“子”的不过曾参、有若、闵子骞和冉有几个人，因之这冉子当然就是冉有。⑷粟——小米（详新建设杂志1954年12月号胡静〈我国古代农艺史上的几个问题〉）。一般的说法，粟是指未去壳的谷粒，去了壳就叫做米。但在古书中也有把米唤做粟的。见沈彤《周官禄田考》。⑸釜——fǔ，古代量名，容当时的量器六斗四升，约合今天的容量一斗二升八合。⑹庾——yǔ，古代量名，容当日的二斗四升，约合今日的四升八合。⑺秉——音丙，bǐng，古代量名，十六斛。五秉则是八十斛。古代以十斗为斛，所以译为八十石。南宋的贾似道才改为五斗一斛，一石两斛，沿用到民国初年，现今已经废除这一量名了。周秦的八十斛合今天的十六石。⑻乘肥马——不能解释为“骑肥马”，因为孔子时穿着大袖子宽腰身的衣裳，是不便于骑马的。直到战国时的赵武灵王才改穿少数民族服装，学习少数民族的骑着马射箭，以便利于作战。在所有“经书”中找不到骑马的文字，只有《曲礼》有“前有车骑”一语，但《曲礼》的成书在战国以后。⑼衣——去声，动词，当“穿”字解。⑽周——后人写作“赒”，救济。&lt;/p>
&lt;p>6.5原思⑴为之⑵宰，与之粟九百⑶，辞。子曰：“毋！以与尔邻里乡党⑷乎！”&lt;/p>
&lt;p>【译文】原思任孔子家的总管，孔子给他小米九百，他不肯受。孔子道：“别辞，有多的，给你地方上［的穷人］吧！”&lt;/p>
&lt;p>【注释】⑴原思——孔子弟子原宪，字子思。⑵之——用法同“其”，他的，指孔子而言。⑵九百——下无量名，不知是斛是斗，还是别的。习惯上常把最通用的度、量、衡的单位省畧不说，古今大致相同。不过这一省畧，可把我们迷胡了。⑷邻里乡党——都是古代地方单位的名称，五家为邻，二十五家为里，万二千五百家为乡，五百家为党。&lt;/p>
&lt;p>6.6子谓仲弓，曰：“犂牛⑴之子骍⑵且角⑶；虽欲勿用⑷，山川其⑸舍诸⑹？”&lt;/p>
&lt;p>【译文】孔子谈到冉雍，说：“耕牛的儿子长着赤色的毛，整齐的角，虽然不想用它作牺牲来祭祀，山川之神难道会舍弃它吗？”&lt;/p>
&lt;p>【注释】⑴犂牛——耕牛。古人的名和字，意义一定互相照应。从孔子学生冉耕字伯牛、司马耕字子牛的现象看来，足以知道生牛犂田的方法当时已经普遍实行。从前人说，耕牛制度开始于汉武帝时的赵过，那是由于误解《汉书·食货志》的缘故。⑵骍——赤色。周朝以赤色为贵，所以祭祀的时候也用赤色的牲畜。⑶角——意思是两角长得周正。这是古人用词的简略处。⑷用——义同《左传》“用牲于社”之“用”，杀之以祭也。据《史记·仲尼弟子列传》说，仲弓的父亲是贱人，仲弓却是“可使南面”的人才，因此孔子说了这番话。古代供祭祀的牺牲不用耕牛，而且认为耕牛之子也不配作牺牲。孔子的意思是，耕牛所产之子如果够得上作牺牲的条件，山川之神一定会接受这种祭享。那么，仲弓这样的人才，为什么因为他父亲“下贱”而舍弃不用呢？⑸其——意义同“岂”。⑹诸——“之乎”两字的合音字。&lt;/p>
&lt;p>6.7子曰：“回也，其心三月⑴不违仁，其余则日月⑵至焉而已矣。”&lt;/p>
&lt;p>【译文】孔子说：“颜回呀，他的心长久地不离开仁德，别的学生么，只是短时期偶然想起一下罢了。”&lt;/p>
&lt;p>【注释】⑴三月，日月——这种词语必须活看，不要被字面所拘束，因此译文用“长久地”译“三月”，用“短时期”“偶然”来译“日月”。&lt;/p>
&lt;p>6.8季康子问：“仲由可使从政也与？”子曰：“由也果，于从政乎何有？”&lt;/p>
&lt;p>曰：“赐也可使从政也与？”曰：“赐也达，于从政乎何有？”&lt;/p>
&lt;p>曰：“求也可使从政也与？”曰：“求也艺，于从政乎何有？”&lt;/p>
&lt;p>【译文】季康子问孔子：“仲由这人，可以使用他治理政事么？”孔子道：“仲由果敢决断，让他治理政事有什么困难呢？”&lt;/p>
&lt;p>又问：“端木赐可以使用他治理政事么？”孔子道：“端木赐通情达理，让他治理政事有什么困难呢？”&lt;/p>
&lt;p>又问：“冉求可以使用他治理政事么？”孔子道：“冉求多才多艺，让他治理政事有什么困难呢？”&lt;/p>
&lt;p>6.9季氏使闵子骞⑴为费⑵宰。闵子骞曰：“善为我辞焉！如有复我者，则吾必在汶上⑶矣。”&lt;/p>
&lt;p>【译文】季氏叫闵子骞作他采邑费地的县长。闵子骞对来人说道：“好好地替我辞掉吧！若是再来找我的话，那我一定会逃到汶水之北去了。”&lt;/p>
&lt;p>【注释】⑴闵子骞——孔子学生闵损，字子骞，比孔子小十五岁。（公元前515——？）⑵费——旧音秘，故城在今山东费县西北二十里。⑶汶上——汶音问，wèn，水名，就是山东的大汶河。桂馥《札朴》云：“水以阳为北，凡言某水上者，皆谓水北。”“汶上”暗指齐国之地。&lt;/p>
&lt;p>6.10伯牛⑴有疾，子问之，自牖执其手，曰：“亡之⑵，命矣夫！斯人也而有斯疾也！斯人也而有斯疾也！”&lt;/p>
&lt;p>【译文】伯牛生了病，孔子去探问他，从窗户里握着他的手，道：“难得活了，这是命呀，这样的人竟有这样的病！这样的人竟有这样的病！”&lt;/p>
&lt;p>【注释】⑴伯牛——孔子学生冉耕字伯牛。⑵亡之——这“之”字不是代词，不是“亡”（死亡之意）的宾语，因为“亡”字在这里不应该有宾语，只是凑成一个音节罢了。古代常有这种形似宾语而实非宾语的“之”字，详拙著《文言语法》。&lt;/p>
&lt;p>6.11子曰：“贤哉，回也！一箪⑴食，一瓢饮，在陋巷，人不堪其忧，回也不改其乐。贤哉，回也！”&lt;/p>
&lt;p>【译文】孔子说：“颜回多么有修养呀，一竹筐饭，一瓜瓢水，住在小巷子里，别人都受不了那穷苦的忧愁，颜回却不改变他自有的快乐。颜回多么有修养呀！”&lt;/p>
&lt;p>【注释】⑴箪——音单，dān，古代盛饭的竹器，圆形。&lt;/p>
&lt;p>6.12冉求曰：“非不说子之道，力不足也。”子曰：“力不足者⑴，中道而废。今女画⑵。”&lt;/p>
&lt;p>【译文】冉求道：“不是我不喜欢您的学说，是我力量不够。”孔子道：“如果真是力量不够，走到半道会再走不动了。现在你却没有开步走。”&lt;/p>
&lt;p>【注释】⑴力不足者——“者”这一表示停顿的语气词，有时兼表假设语气，详《文言语法》。⑵画——停止。&lt;/p>
&lt;p>6.13子谓子夏曰：“女为君子儒！无为小人儒！”&lt;/p>
&lt;p>【译文】孔子对子夏道：“你要去做个君子式的儒者，不要去做那小人式的儒者！”&lt;/p>
&lt;p>6.14子游为武城⑴宰。子曰：“女得人焉耳⑵乎？”曰：“有澹台灭明者⑶，行不由径，非公事，未尝至于偃之室也。”&lt;/p>
&lt;p>【译文】子游做武城县县长。孔子道：“你在这儿得到什么人才没有？”他道：“有一个叫澹台灭明的人，走路不插小道，不是公事，从不到我屋里来。”&lt;/p>
&lt;p>【注释】⑴武城——鲁国的城邑，在今山东费县西南。⑵耳——通行本作“尔”，兹依《唐石经》、《宋石经》、皇侃《义疏》本作“耳”。⑶有澹台灭明者——澹台灭明字子羽，《史记·仲尼弟子列传》也把他列入弟子。但从这里子游的答话语气来看，说这话时还没有向孔子受业。因为“有……者”的提法，是表示这人是听者以前所不知道的。若果如《史记》所记，澹台灭明在此以前便已经是孔子学生，那子游这时的语气应该与此不同。&lt;/p>
&lt;p>6.15子曰：“孟之反⑴不伐，奔而殿，将入门，策其马，曰：‘非敢后也，马不进也。’”&lt;/p>
&lt;p>【译文】孔子说：“孟之反不夸耀自己，［在抵御齐国的战役中，右翼的军队溃退了，］他走在最后，掩护全军，将进城门，便鞭打着马匹，一面说道：‘不是我敢于殿后，是马匹不肯快走的缘故。’”&lt;/p>
&lt;p>【注释】⑴孟之反——《左传》哀公十一年作“孟之侧”，译文参照《左传》所叙述的事实有所增加。&lt;/p>
&lt;p>6.16子曰：“不有⑴祝鮀⑵之佞，而⑶有宋朝⑷之美，难乎免于今之世矣。”&lt;/p>
&lt;p>【译文】孔子说：“假使没有祝鮀的口才，而仅有宋朝的美丽，在今天的社会里怕不易避免祸害了。”&lt;/p>
&lt;p>【注释】⑴不有——这里用以表示假设语气，“假若没有”的意思。⑵祝鮀——卫国的大夫，字子鱼，《左传》定公四年曾记载着他的外交词令。⑶而——王引之《经义述闻》云：“而犹与也，言有祝鮀之佞与有宋朝之美也。”很多人同意这种讲法，但我终嫌“不有祝鮀之佞，与有宋朝之美”为语句不顺，王氏此说恐非原意。⑷宋朝——宋国的公子朝，《左传》昭公二十年和定公十四年都曾记载着他因为美丽而惹起乱子的事情。&lt;/p>
&lt;p>6.17子曰：“谁能出不由户？何莫由斯道也？”&lt;/p>
&lt;p>【译文】孔子说：“谁能够走出屋外不从房门经过？为什么没有人从我这条路行走呢？”&lt;/p>
&lt;p>6.18子曰：“质胜文则野，文胜质则史。文质彬彬⑴，然后君子。”&lt;/p>
&lt;p>【译文】孔子说：“朴实多于文采，就未免粗野；文采多于朴实，又未免虚浮。文采和朴实，配合适当，这才是个君子。”&lt;/p>
&lt;p>【注释】⑴文质彬彬——此处形容人既文雅又朴实，后来多用来指人文雅有礼貌。&lt;/p>
&lt;p>6.19子曰：“人之生也⑴直，罔⑵之生也幸而免。”&lt;/p>
&lt;p>【译文】孔子说：“人的生存由于正直，不正直的人也可以生存，那是他侥幸地免于祸害。”&lt;/p>
&lt;p>【注释】⑴也——语气词，表“人之生”是一词组作主语，这里无妨作一停顿，下文“直”是谓语。⑵罔——诬罔的人，不直的人。&lt;/p>
&lt;p>6.20子曰：“知之者不如好之者，好之者不如乐之者。”&lt;/p>
&lt;p>【译文】孔子说：“［对于任何学问和事业，］懂得它的人不如喜爱它的人，喜爱它的人又不如以它为乐的人。”&lt;/p></description></item><item><title>20尧曰篇第二十</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/20%E5%B0%A7%E6%9B%B0%E7%AF%87%E7%AC%AC%E4%BA%8C%E5%8D%81/</link><pubDate>Sat, 11 Jan 2025 19:53:36 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/20%E5%B0%A7%E6%9B%B0%E7%AF%87%E7%AC%AC%E4%BA%8C%E5%8D%81/</guid><description>&lt;h1 id="尧曰篇第二十">
 尧曰篇第二十
 &lt;a class="anchor" href="#%e5%b0%a7%e6%9b%b0%e7%af%87%e7%ac%ac%e4%ba%8c%e5%8d%81">#&lt;/a>
&lt;/h1>
&lt;p>(共三章)&lt;/p>
&lt;p>20.1尧曰：“咨！尔舜！天之历数在尔躬，允执其中。四海困穷，天禄永终。”&lt;/p>
&lt;p>舜亦以命禹⑴。&lt;/p>
&lt;p>【译文】尧［让位给舜的时候，］说道：“啧啧！你这位舜！上天的大命已经落到你的身上了，诚实地保持着那正确罢！假若天下的百姓都陷于困苦贫穷，上天给你的禄位也会永远地终止了。”&lt;/p>
&lt;p>舜［让位给禹的时候，］也说了这一番话。&lt;/p>
&lt;p>【注释】⑴这一章的文字前后不相连贯，从宋朝苏轼以来便有许多人疑心它有脱落。我只得把它分为若干段落，逐段译注，以便观览。&lt;/p>
&lt;p>曰：“予小子履⑴敢用玄牡，敢昭告于皇皇后帝：有罪不敢赦。帝臣不蔽⑵，简在帝心。朕躬有罪，无以万方；万方有罪，罪在朕躬。”&lt;/p>
&lt;p>【译文】［汤］说：“我履谨用黑色牡牛作牺牲，明明白白地告于光明而伟大的天帝：有罪的人［我］不敢擅自去赦免他。您的臣仆［的善恶］我也不隐瞒掩盖，您心里也是早就晓得的。我本人若有罪，就不要牵连天下万方；天下万方若有罪，都归我一个人来承担。”&lt;/p>
&lt;p>【注释】⑴予小子履——“予小子”和“予一人”都是上古帝王自称之词。从《史记·殷本记》中知道汤名天乙，甲骨卜辞作“大乙”，相传汤又名履。⑵帝臣不蔽——《墨子·兼爱下篇》此句作“有善不敢蔽”，但郑玄注此句云：“言天简阅其善恶也。”译文从郑。《墨子·兼爱下篇》和《吕氏春秋·顺民篇》都说这是成汤战胜夏桀以后，遭逢大旱，向上天祈祷求雨之词。《国语·周语上》引汤誓“余一人有罪，无以万夫”，和这“朕躬有罪，无以万方”义近。&lt;/p>
&lt;p>周有大赉，善人是富。“虽有周亲，不如仁人。百姓有过，在予一人⑴。”&lt;/p>
&lt;p>【译文】周朝大封诸侯，使善人都富贵起来。“我虽然有至亲，却不如有仁德之人。百姓如果有罪过，应该由我来担承。”&lt;/p>
&lt;p>【注释】⑴虽有周亲……一人——刘宝楠《论语正义》引宋翔凤说，“虽有周亲”四句是周武王封诸侯之辞，尤其像封姜太公于齐之辞。&lt;/p>
&lt;p>谨权量，审法度⑴，修废官⑵，四方之政行焉。兴灭国，继绝世，举逸民，天下之民归心焉。&lt;/p>
&lt;p>【译文】检验并审定度量衡，修复已废弃的机关工作，全国的政令就都会通行了。恢复被灭亡的国家，承续已断绝的后代，提拔被遗落的人才，天下的百姓就都会心悦诚服了。&lt;/p>
&lt;p>【注释】⑴谨权量，审法度——权就是量轻重的衡量，量就是容量，度就是长度。“法度”不是法律制度之意。《史记·秦始皇本纪》和秦权、秦量的刻辞中都有“法度”一词，都是指长度的分、寸、尺、丈、引而言。所以“谨权量，审法度”两句只是“齐一度量衡”一个意思。这一说法，清初阎若璩的《四书释地》又续已发其端。⑵废官——赵佑《四书温故録》云：“或有职而无其官，或有官而不举其职，皆曰废。”这以下都是孔子的话。从文章的风格来看，也和尧告舜、成汤求雨、武王封诸侯的文诰体不同。历代注释家多以为是孔子的话，大致可信。但是刘宝楠《正义》引《汉书·律历志》“孔子陈后王之法曰，谨权量，审法度，修废官，举逸民，四方之政行矣”说：“据《志》此文，是‘谨权量’以下皆孔子语，故何休《公羊》昭三十二年注引此节文冠以孔子曰”云云，则不足为证。因为汉人引《论语》，不论是否孔子之言，多称“孔子曰”。《困学纪闻》曾举出《汉书·艺文志》引“小道可观”（19.4），《后汉书·蔡邕传》引“致远恐泥”（同上）皆以子夏之言为孔子，其实不止于此，如后汉章帝长水校尉樊鯈奏言引“博学而笃志”三句（19.6），也以子夏之言为孔子之言，《史记·田叔传》赞曰“孔子称居是国必闻其政”，又以子禽之问（1.10）为孔子之言；刘向《说苑》引“孔子曰，君子务本”，又引“孔子曰，恭近于礼”，则以有子之言为孔子之言。甚至郑玄注《曲礼》、《玉藻》，以及王充着《论衡》，引乡党篇之文，都冠以“孔子曰”。则可见《论语》之书当时似别称“孔子”，如“孟子书”之称孟子者然。翟灏《四书考异》据《尸子·广泽篇》、“墨子贵兼，孔子贵公，皇子贵衷”云云，以为先儒以孔子杂诸子中；又据《论衡·率性篇》云“孔子道德之祖，诸子中最卓者也”谓当时等孔子于诸子，其言不为无据（说本《诂经精舍三集》吴承志〈汉人引孔门诸子言皆称孔子说〉）。若此，则刘氏所举不足为证矣。&lt;/p>
&lt;p>所重：民、食、丧、祭。&lt;/p>
&lt;p>【译文】所重视的：人民、粮食、丧礼、祭祀。&lt;/p>
&lt;p>宽则得众，信则民任焉此五字衍文⑴，敏则有功，公则说。&lt;/p>
&lt;p>【译文】宽厚就会得到羣众的拥护，勤敏就会有功绩，公平就会使百姓高兴。&lt;/p>
&lt;p>【注释】⑴信则民任焉——《汉石经》无此五字，《天文本校勘记》云：“皇本、唐本、津藩本、正平本均无此句。”足见这一句是因阳货篇“信则人任焉”而误增的。阳货篇作“人”，“人”是领导。此处误作“民”。“民”指百姓。有信实，就会被百姓任命，这种思想绝非孔子所能有，尤其可见此句不是原文。&lt;/p>
&lt;p>20.2子张问于孔子曰：“何如斯可以从政矣？”&lt;/p>
&lt;p>子曰：“尊五美，屏⑴四恶，斯可以从政矣。”&lt;/p>
&lt;p>子张曰：“何谓五美？”&lt;/p>
&lt;p>子曰：“君子惠而不费，劳而不怨，欲而不贪⑵，泰而不骄，威而不猛。”&lt;/p>
&lt;p>子张曰：“何谓惠而不费？”&lt;/p>
&lt;p>子曰：“因民之所利而利之，斯不亦惠而不费乎？择可劳而劳之，又谁怨？欲仁而得仁，又焉贪？君子无众寡，无小大，无敢慢，斯不亦泰而不骄乎？君子正其衣冠，尊其瞻视，俨然人望而畏之，斯不亦威而不猛乎？”&lt;/p>
&lt;p>子张曰：“何谓四恶？”&lt;/p>
&lt;p>子曰：“不教而杀谓之虐；不戒视成谓之暴；慢令致期谓之贼；犹之⑶与人也，出纳⑷之吝谓之有司⑸。”&lt;/p>
&lt;p>【译文】子张向孔子问道：“怎样就可以治理政事呢？”&lt;/p>
&lt;p>孔子道：“尊贵五种美德，排除四种恶政，这就可以治理政事了。”&lt;/p>
&lt;p>子张道：“五种美德是些什么？”&lt;/p>
&lt;p>孔子道：“君子给人民以好处，而自己却无所耗费；劳动百姓，百姓却不怨恨；自己欲仁欲义，却不能叫做贪；安泰矜持却不骄傲；威严却不凶猛。”&lt;/p>
&lt;p>子张道：“给人民以好处，自己却无所耗费，这应该怎么办呢？”&lt;/p>
&lt;p>孔子道：“就着人民能得利益之处因而使他们有利，这也不是给人民以好处而自己却无所耗费吗？选择可以劳动的［时间、情况和人民］再去劳动他们，又有谁来怨恨呢？自己需要仁德便得到了仁德，又贪求什么呢？无论人多人少，无论势力大小，君子都不敢怠慢他们，这不也是安泰矜持却不骄傲吗？君子衣冠整齐，目不邪视，庄严地使人望而有所畏惧，这也不是威严却不凶猛吗？”&lt;/p>
&lt;p>子张道：“四种恶政又是些什么呢？”&lt;/p>
&lt;p>孔子道：“不加教育便加杀戮叫做虐；不加申诫便要成绩叫做暴；起先懈怠，突然限期叫做贼；同是给人以财物，出手悭吝，叫做小家子气。”&lt;/p>
&lt;p>【注释】⑴屏——音丙，又去声音并，bíng，屏除。⑵欲而不贪——下文云：“欲仁而得仁，又焉贪？”可见此“欲”字是指欲仁欲义而言，因之皇侃《义疏》云：“欲仁义者为廉，欲财色者为贪。”译文本此。⑶犹之——王引之《释词》云：“犹之与人，均之与人也。”⑷出纳——出和纳（入）是两个意义相反的词，这里虽然在一起连用，却只有“出”的意义，没有“纳”的意义。说本俞樾《羣经平议》。⑸有司——古代管事者之称，职务卑微，这里意译为“小家子气”。&lt;/p>
&lt;p>20.3孔子曰：“不知命，无以为君子也；不知礼，无以立也；不知言⑴，无以知人也。”&lt;/p>
&lt;p>【译文】孔子说：“不懂得命运，没有可能作为君子；不懂得礼，没有可能立足于社会；不懂得分辨人家的言语，没有可能认识人。”&lt;/p>
&lt;p>【注释】⑴知言——这里“知言”的意义和《孟子·公孙丑上》的“我知言”的“知言”相同，善于分析别人的言语，辨其是非善恶的意思。&lt;/p></description></item><item><title>17阳货篇第十七</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/17%E9%98%B3%E8%B4%A7%E7%AF%87%E7%AC%AC%E5%8D%81%E4%B8%83/</link><pubDate>Sat, 11 Jan 2025 19:53:35 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/17%E9%98%B3%E8%B4%A7%E7%AF%87%E7%AC%AC%E5%8D%81%E4%B8%83/</guid><description>&lt;h1 id="阳货篇第十七">
 阳货篇第十七
 &lt;a class="anchor" href="#%e9%98%b3%e8%b4%a7%e7%af%87%e7%ac%ac%e5%8d%81%e4%b8%83">#&lt;/a>
&lt;/h1>
&lt;p>(共二十六章（《汉石经》同。何晏《集解》把第二、第三两章以及第九、第十两章各并为一章，所以只二十四章。）)&lt;/p>
&lt;p>17.1阳货⑴欲见孔子，孔子不见，归孔子豚⑵。&lt;/p>
&lt;p>孔子时其亡也，而往拜之。&lt;/p>
&lt;p>遇诸涂。&lt;/p>
&lt;p>谓孔子曰：“来！予与尔言。”曰⑶：“怀其宝而迷其邦，可谓仁乎？”曰：“不可。——好从事而亟⑷失时，可谓知乎？”曰：“不可。——日月逝矣，岁不我与。”&lt;/p>
&lt;p>孔子曰：“诺；吾将仕矣⑸。”&lt;/p>
&lt;p>【译文】阳货想要孔子来拜会他，孔子不去，他便送孔子一个［蒸熟了的］小猪，［使孔子到他家来道谢。］&lt;/p>
&lt;p>孔子探听他不在家的时候，去拜谢。&lt;/p>
&lt;p>两人在路上碰着了。&lt;/p>
&lt;p>他叫着孔子道：“来，我同你说话。”［孔子走了过去。］他又道：“自己有一身的本领，却听任着国家的事情糊里胡涂，可以叫做仁爱吗？”［孔子没吭声。］他便自己接口道：“不可以；——一个人喜欢做官，却屡屡错过机会，可以叫做聪明吗？”［孔子仍然没吭声。］他又自己接口道：“不可以；——时光一去，就不再回来了呀。”&lt;/p>
&lt;p>孔子这才说道：“好吧；我打算做官了。”&lt;/p>
&lt;p>【注释】⑴阳贷——又叫阳虎，季氏的家臣。季氏几代以来把持鲁国的政治，阳货这时正又把持季氏的权柄。最后因企图削除三桓而未成，逃往晋国。⑵归孔子豚——“归”同“馈”，赠送也。《孟子·滕文公下》对这事有一段说明，他说，当时，“大夫有赐于士，不得受于其家，则往拜其门。”阳货便利用这一礼俗，趁孔子不在家，送一个蒸熟了的小猪去。孔子也就趁阳货不在家才去登门拜谢。⑵曰——自此以下的几个“曰”字，都是阳贷的自为问答。说本毛奇龄《论语稽求篇》引明人郝敬之说。俞樾《古书疑义举例》卷二有“一人之辞而加曰字例”，对这种修辞方式更有详细引证。⑷亟——去声，音气，qì，屡也。⑸吾将仕矣——孔子于阳虎当权之时，并未仕于阳虎。可参《左传》定公八、九年传。&lt;/p>
&lt;p>17.2子曰：“性相近也，习相远也。”&lt;/p>
&lt;p>【译文】孔子说：“人性情本相近，因为习染不同，便相距悬远。”&lt;/p>
&lt;p>17.3子曰：“唯上知与下愚⑴不移。”&lt;/p>
&lt;p>【译文】孔子说：“只有上等的智者和下等的愚人是改变不了的。”&lt;/p>
&lt;p>【注释】⑴上知下愚——关于“上知”下愚”的解释，古今颇有异说。《汉书·古今人表》说：“可与为善，不可与为恶，是谓上智。可与为恶，不可与为善，是谓下愚。”则是以其品质言。孙星衍《问字堂集》说：“上知谓生而知之，下愚谓困而不学。”则是兼以其知识与质量而言。译文仅就字面译出。但孔子说过“生而知之者上也”（16.9），这里的“上知”可能就是“生而知之”的人。当然这种人是不会有的。可是当时的人却以为一定有，甚至孔子都曾否认地说过“我非生而知之者”（7.20）。&lt;/p>
&lt;p>17.4子之武城，闻弦歌之声。夫子莞尔而笑，曰：“割鸡焉用牛刀？”&lt;/p>
&lt;p>子游对曰：“昔者偃也闻诸夫子曰：‘君子学道则爱人，小人学道则易使也。’”&lt;/p>
&lt;p>子曰：“二三子！偃之言是也。前言戏之耳。”&lt;/p>
&lt;p>【译文】孔子到了［子游作县长］的武城，听到了弹琴瑟唱诗歌的声音。孔子微微笑着，说道：“宰鸡，何必用宰牛的刀？［治理这个小地方，用得着教育吗？］”&lt;/p>
&lt;p>子游答道：“以前我听老师说过，做官的学习了，就会有仁爱之心；老百姓学习了，就容易听指挥，听使唤。［教育总是有用的。］”&lt;/p>
&lt;p>孔子便向学生们道：“二三子！言偃的这话是正确的。我刚才那句话不过同他开顽笑吧了。”&lt;/p>
&lt;p>17.5公山弗扰⑴以费畔⑵，召，子欲往。&lt;/p>
&lt;p>子路不说，曰：“末之也，已⑶，何必公山氏之之⑷也？”&lt;/p>
&lt;p>子曰：“夫召我者，而岂徒哉⑸？如有用我者，吾其为东周乎？”&lt;/p>
&lt;p>【译文】公山弗扰盘踞在费邑图谋造反，叫孔子去，孔子准备去。子路很不高兴，说道：“没有地方去便算了，为什么一定要去公山氏那里呢？”&lt;/p>
&lt;p>孔子道：“那个叫我去的人，难道是白白召我吗？假若有人用我，我将使周文王武王之道在东方复兴。”&lt;/p>
&lt;p>【注释】⑴公山弗扰——疑卽《左传》定公五年、八年、十二年及哀公八年之公山不狃（唯陈天祥的《四书辨疑》认为是两人）。不过《论语》所叙之事不见于《左传》，而《左传》定公十二年所叙的公山不狃反叛鲁国的事，不但没有叫孔子去，而且孔子当时正为司寇，命人打败了他。因此赵翼的《陔余丛考》、崔述的《洙泗考信録》都疑心这段文字不可信。但是其后又有一些人，如刘宝楠《论语正义》，则说赵、崔不该信《左传》而疑《论语》。我们于此等处只能存疑。⑵畔——毛奇龄说，“畔是谋逆”，译文取这一义。⑶末之也已——旧作一句读，此依武亿《经读考异》作两句读。“末”，没有地方的意思；“之”，动词，往也；“已”，止也。⑷何必公山氏之之也——“何必之公山氏也”的倒装。“之之”的第一个“之”字只是帮助倒装用的结构助词，第二个“之”字是动词。⑸而岂徒哉——“徒”下省略动宾结构，说完全是“而岂徒召我哉”。&lt;/p>
&lt;p>17.6子张问仁于孔子。孔子曰：“能行五者于天下为仁矣。”&lt;/p>
&lt;p>“请问之。”曰：“恭，宽，信，敏，惠。恭则不侮，宽则得众，信则人任焉，敏则有功，惠则足以使人。”&lt;/p>
&lt;p>【译文】子张向孔子问仁。孔子道：“能够处处实行五种品德，便是仁人了。”&lt;/p>
&lt;p>子张道：“请问哪五种。”孔子道：“庄重，宽厚，诚实，勤敏，慈惠。庄重就不致遭受侮辱，宽厚就会得到大众的拥护，诚实就会得到别人的任用，勤敏就会工作效率高、贡献大，慈惠就能够使唤人。”&lt;/p>
&lt;p>17.7佛肸⑴召，子欲往。&lt;/p>
&lt;p>子路曰：“昔者由也闻诸夫子曰：‘亲于其身为不善者，君子不入也。’佛肸以中牟⑵畔，子之往也，如之何？”&lt;/p>
&lt;p>子曰：“然，有是言也。不曰坚乎，磨而不磷⑶；不曰白乎，湼⑷而不缁。吾岂匏瓜⑸也哉？焉能系而不食？”&lt;/p>
&lt;p>【译文】佛肸叫孔子，孔子打算去。&lt;/p>
&lt;p>子路道：“从前我听老师说过，‘亲自做坏事的人那里，君子不去的。’如今佛肸盘踞中牟谋反，您却要去，怎么说得过去呢？”&lt;/p>
&lt;p>孔子道：“对，我有过这话。但是，你不知道吗？最坚固的东西，磨也磨不薄；最白的东西，染也染不黑。我难道是匏瓜吗？哪里能够只是被悬挂着而不给人吃食呢？”&lt;/p>
&lt;p>【注释】⑴佛肸——晋国赵简子攻打范中行，佛肸是范中行的家臣，为中牟的县长，因此依据中牟来抗拒赵简子。⑵中牟——春秋时晋邑，故址当在今日河北省邢台和邯郸之间，跟河南的中牟了不相涉。⑶磷——音吝，lìn，薄也。⑷湼——niè，本是一种矿物，古人用作黑色染料，这里作动词，染黑之意。⑹匏瓜——卽匏子，古有甘、苦两种，苦的不能吃，但因它比水轻，可以系于腰，用以泅渡。《国语·鲁语》“苦瓠不材，于人共济而已。”《庄子·逍遥游》：“今子有五石之匏，何不虑以为大樽，而浮乎江湖。”皆可以为证。&lt;/p>
&lt;p>17.8子曰：“由也！女闻六言⑴六蔽矣乎？”对曰：“未也。”&lt;/p>
&lt;p>“居！吾语女。好仁不好学⑵，其蔽也愚⑶；好知不好学，其蔽也荡⑷；好信不好学，其蔽也贼⑸；好直不好学，共蔽也绞；好勇不好学，其蔽也乱；好刚不好学，其蔽也狂。”&lt;/p>
&lt;p>【译文】孔子说：“仲由，你听过有六种品德便会有六种弊病吗？”子路答道：“没有。”&lt;/p>
&lt;p>孔子道：“坐下！我告诉你。爱仁德，却不爱学问，那种弊病就是容易被人愚弄；爱耍聪明，却不爱学问，那种弊病就是放荡而无基础；爱诚实，却不爱学问，那种弊病就是［容易被人利用，反而］害了自己；爱直率，却不爱学问，那种弊病就是说话尖刻，刺痛人心；爱勇敢，却不爱学问，那种弊病就是捣乱闯祸；爱刚强，却不爱学问，那种弊病就是胆大妄为。”&lt;/p>
&lt;p>【注释】⑴言——这个“言”字和“有一言而可以终身行之”（15.24）的“言”相同，名曰“言”，实是指“德”。“一言”，孔子拈出“恕”字；“六言”，孔子拈出“仁”、“知”、“信”、“直”、“勇”、“刚”六宇。后代“五言诗”、“七言诗”以一字为“言”之义盖本于此。⑵不好学——不学则不能明其理。⑶愚——朱熹《集注》云：“愚若可陷可罔之类。”译文取之。⑷荡——孔安国云：“荡，无所适守也。”译文取之。⑹贼——管同《四书纪闻》云：“大人之所以不必信者，惟其为学而知义之所在也。苟好信不好学，则惟知重然诺而不明事理之是非，谨厚者则硁硁为小人；苟又挟以刚勇之气，必如周汉刺客游侠，轻身殉人，扞文网而犯公义，自圣贤观之，非贼而何？”这是根据春秋侠勇之士的事实，又根据儒家明哲保身的理论所发的议论，似乎近于孔子本意。&lt;/p>
&lt;p>17.9子曰：“小子何莫学夫诗？诗，可以兴，可以观，可以羣，可以怨。迩之事父，远之事君；多识于鸟兽草木之名。”&lt;/p>
&lt;p>【译文】孔子说：“学生们为什么没有人研究诗？读诗，可以培养联想力，可以提高观察力，可以锻炼合羣性，可以学得讽刺方法。近呢，可以运用其中道理来事奉父母；远呢，可以用来服事君上；而且多多认识鸟兽草木的名称。”&lt;/p>
&lt;p>17.10子谓伯鱼曰：“女为《周南》、《召南》⑴矣乎？人而不为《周南》、《召南》，其犹正墙面而立⑵也与？”&lt;/p>
&lt;p>【译文】孔子对伯鱼说道：“你研究过《周南》和《召南》了吗？人假若不研究《周南》和《召南》，那会像面正对着墙壁而站着罢！”&lt;/p>
&lt;p>【注释】⑴《周南》、《召南》——现存《诗经·国风》中。但沈括《梦溪笔谈》卷三说：“《周南》、《召南》，乐名也。……有乐有舞焉，学者之事。……所谓为《周南》、《召南》者，不独诵其诗而已。”⑵正墙面而立——朱熹云：“言卽其至近之地，而一物无所见，一步不可行。”&lt;/p>
&lt;p>17.11子曰：“礼云礼云，玉帛云乎哉？乐云乐云，钟鼓云乎哉？”&lt;/p>
&lt;p>【译文】孔子说：“礼呀礼呀，仅是指玉帛等等礼物而说的吗？乐呀乐呀，仅是指钟鼓等等乐器而说的吗？”&lt;/p>
&lt;p>17.12子曰：“色厉而内荏，譬诸小人，其犹穿窬之盗也与？”&lt;/p>
&lt;p>【译文】孔子说：“颜色严厉，内心怯弱，若用坏人作比喻，怕像个挖洞跳墙的小偷罢！”&lt;/p>
&lt;p>17.13子曰：“乡愿⑴，德之贼也。”&lt;/p>
&lt;p>【译文】孔子说：“没有真是非的好好先生是足以败坏道德的小人。”&lt;/p>
&lt;p>【注释】⑴乡愿——愿音愿，yuàn，孟子作“原”。《孟子·尽心下》对“乡愿”有一段最具体的解释：“何以是嘐嘐也？言不顾行，行不顾言，则曰：‘古之人，古之人，行何为踽踽凉凉？生斯世也，为斯世也，善斯可矣。’阉然媚于世也者，是乡原也。”又说；“非之无举也，刺之无刺也。同乎流俗，合乎污世。居之似忠信，行之似廉洁。众皆悦之，自以为是，而不可与入尧舜之道。故曰‘德之贼’也。”&lt;/p>
&lt;p>17.14子曰：“道听而涂说，德之弃也。”&lt;/p>
&lt;p>【译文】孔子说：“听到道路传言就四处传播，这是应该革除的作风。”&lt;/p>
&lt;p>17.15子曰：“鄙夫可与⑴事君也与哉？其未得之也，患得之当作患不得之⑵。既得之，患失之。苟患失之，无所不至矣。”&lt;/p>
&lt;p>【译文】孔子说：“鄙夫，难道能同他共事吗？当他没有得到职位的时候，生怕得不着；已经得着了，又怕失去。假若生怕失去，会无所不用其极了。”&lt;/p>
&lt;p>【注释】⑴可与——王引之《释词》谓卽“可以”，今不取。⑵患得之——王符《潜夫论·爱日篇》云：“孔子疾夫未之得也，患不得之，既得之，患失之者。”可见东汉人所据的本子有“不”字。《荀子·子道篇》说：“孔子曰，……小人者，其未得也，则忧不得；既已得之，又恐失之。”（《说苑·杂言篇》同）此虽是述意，“得”上也有“不”字。宋人沈作喆寓简云：“东坡解云，‘患得之’当作‘患不得之’”，可见宋人所见的本子已脱此“不”字。&lt;/p>
&lt;p>17.16子曰：“古者民有三疾，今也或是之亡也。古之狂也肆，今之狂也荡；古之矜也廉⑴，今之矜也忿戾；古之愚也直，今之愚也诈而已矣。”&lt;/p>
&lt;p>【译文】孔子说：“古代的人民还有三种［可贵的］毛病，现在呢，或许都没有了。古代的狂人肆意直言，现在的狂人便放荡无羁了；古代自己矜持的人还有些不能触犯的地方，现在自己矜持的人却只是一味老羞成怒，无理取闹罢了；古代的愚人还直率，现在的愚人却只是欺诈耍手段罢了。”&lt;/p>
&lt;p>【注释】⑴廉——“廉隅”的“廉”，本义是器物的棱角，人的行为方正有威也叫“廉”。&lt;/p>
&lt;p>17.17子曰：“巧言令色，鲜矣仁⑴。”&lt;/p>
&lt;p>【注释】⑴见学而篇（1.3）。&lt;/p></description></item><item><title>12颜渊篇第十二</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/12%E9%A2%9C%E6%B8%8A%E7%AF%87%E7%AC%AC%E5%8D%81%E4%BA%8C/</link><pubDate>Sat, 11 Jan 2025 19:53:34 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/12%E9%A2%9C%E6%B8%8A%E7%AF%87%E7%AC%AC%E5%8D%81%E4%BA%8C/</guid><description>&lt;h1 id="颜渊篇第十二">
 颜渊篇第十二
 &lt;a class="anchor" href="#%e9%a2%9c%e6%b8%8a%e7%af%87%e7%ac%ac%e5%8d%81%e4%ba%8c">#&lt;/a>
&lt;/h1>
&lt;p>(共二十四章)&lt;/p>
&lt;p>12.1颜渊问仁。子曰：“克己复礼为仁⑴。一日克己复礼，天下归仁⑵焉。为仁由己，而由人乎哉？”&lt;/p>
&lt;p>颜渊曰：“请问其目。”子曰：“非礼勿视，非礼勿听，非礼勿言，非礼勿动。”&lt;/p>
&lt;p>颜渊曰：“回虽不敏，请事斯语矣。”&lt;/p>
&lt;p>【译文】颜渊问仁德。孔子道：“抑制自己，使言语行动都合于礼，就是仁。一旦这样做到了，天下的人都会称许你是仁人。实践仁德，全凭自己，还凭别人吗？”&lt;/p>
&lt;p>颜渊道：“请问行动的纲领。”孔子道：“不合礼的事不看，不合礼的话不听，不合礼的话不说，不合礼的事不做。”&lt;/p>
&lt;p>颜渊道：“我虽然迟钝，也要实行您这话。”&lt;/p>
&lt;p>【注释】⑴克己复礼——《左传》昭公十二年说：“仲尼曰：‘古也有志：克己复礼，仁也。’”那么，“克己复礼为仁”是孔子用前人的话赋予新的含义。⑵归仁——“称仁”的意思，说见毛奇龄《论语稽求篇》。朱熹《集注》谓“归，犹与也”，也是此意。&lt;/p>
&lt;p>12.2仲弓问仁。子曰：“出门如见大宾，使民如承大祭。己所不欲，勿施于人。在邦无怨，在家⑴无怨。”&lt;/p>
&lt;p>仲弓曰：“雍虽不敏，请事斯语矣。”&lt;/p>
&lt;p>【译文】仲弓问仁德。孔子道：“出门［工作］好像去接待贵宾，役使百姓好像去承当大祀典，［都得严肃认真，小心谨慎。］自己所不喜欢的事物，就不强加于别人。在工作岗位上不对工作有怨恨，就是不在工作岗位上也没有怨恨。”&lt;/p>
&lt;p>仲弓道：“我虽然迟钝，也要实行您这话。”&lt;/p>
&lt;p>【注释】⑴在家——刘宝楠《论语正义》说：“在邦谓仕于诸侯之邦，在家谓仕于卿大夫之家也。”把“家”字拘泥于“大夫曰家”的一个意义，不妥当。&lt;/p>
&lt;p>12.3司马牛⑴问仁。子曰：“仁者，其言也讱。”&lt;/p>
&lt;p>曰：“其言也讱，斯谓之仁已乎？”子曰：“为之难，言之得无讱乎？”&lt;/p>
&lt;p>【译文】司马牛问仁德。孔子道：“仁人，他的言语迟钝。”&lt;/p>
&lt;p>司马牛道：“言语迟钝，造就叫做仁了吗？”孔子道：“做起来不容易，说话能够不迟钝吗？”&lt;/p>
&lt;p>【注释】⑴司马牛——《史记·仲尼弟子列传》云：“司马耕，字子牛。牛多言而躁，问仁于孔子。孔子曰：‘仁者其言也讱。’”根据司马迁的这一说法，孔子的答语是针对问者“多言而躁”的缺点而说的。&lt;/p>
&lt;p>12.4司马牛问君子。子曰：“君子不忧不惧。”&lt;/p>
&lt;p>曰：“不忧不惧，斯谓之君子已乎？”子曰：“内省不疚，夫何忧何惧？”&lt;/p>
&lt;p>【译文】司马牛问怎样去做一个君子。孔子道：“君子不忧愁，不恐惧。”司马牛道：“不忧愁，不恐惧，这样就可以叫做君子了吗？”孔子道：“自己问心无愧，那有什么可以忧愁和恐惧的呢？”&lt;/p>
&lt;p>12.5司马牛忧曰：“人皆有兄弟，我独亡⑴。”子夏曰：“商闻之矣：死生有命，富贵在天。君子敬而无失，与人恭而有礼。四海之内，皆兄弟也——君子何患乎无兄弟也？”&lt;/p>
&lt;p>【译文】司马牛忧愁地说道：“别人都有好兄弟，单单我没有。”子夏道：“我听说过：死生听之命运，富贵由天安排。君子只是对待工作严肃认真，不出差错，对待别人词色恭谨，合乎礼节，天下之大，到处都是好兄弟——君子又何必着急没有好兄弟呢？”&lt;/p>
&lt;p>【注释】⑴人皆有兄弟，我独亡——自来的注释家都说这个司马牛就是宋国桓魋的兄弟。桓魋为人很坏，结果是谋反失败，他的几个兄弟也都跟着失败了。其中只有司马牛不赞同他这些兄弟的行为。但结果也是逃亡在外，死于道路（事见《左传》哀公十四年）。译文姑且根据这种说法。但我却认为，孔子的学生司马牛和宋国桓魋的弟弟司马牛可能是两个不同的人，难于混为一谈。第一，《史记·仲尼弟子列传》既不说这一个司马牛是宋人，更没有把《左传》上司马牛的事情记载上去，太史公如果看到了这类史料而不采取，可见他是把两个司马牛作不同的人看待的。第二，说《论语》的司马牛就是《左传》的司马牛者始于孔安国。孔安国又说司马牛名犂，又和《史记·仲尼弟子列传》说司马牛名耕的不同。如果孔安国之言有所本，那么，原本就有两个司马牛，一个名耕，孔子弟子；一个名犂，桓魋之弟。但自孔安国以后的若干人却误把名犂的也当作孔子学生了。姑识于此，以供参考。&lt;/p>
&lt;p>12.6子张问明。子曰：“浸润之谮，肤受之愬，不行焉，可谓明也已矣。浸润之谮，肤受之愬，不行焉，可谓远也已矣。”&lt;/p>
&lt;p>【译文】子张问怎样才叫做见事明白。孔子道：“点滴而来，日积月累的谗言和肌肤所受、急迫切身的诬告都在你这里行不通，那你可以说是看得明白的了。点滴而来，日积月累的谗言和肌肤所受、急迫切身的诬告也都在你这里行不通，那你可以说是看得远的了。”&lt;/p>
&lt;p>12.7子贡问政。子曰：“足食，足兵⑴，民信之矣。”&lt;/p>
&lt;p>子贡曰：“必不得已而去，于斯三者何先？”曰：“去兵。”&lt;/p>
&lt;p>子贡曰：“必不得已而去，于斯二者何先？”曰：“去食。自古皆有死，民无信不立。”&lt;/p>
&lt;p>【译文】子贡问怎样去治理政事。孔子道：“充足粮食，充足军备，百姓对政府就有信心了。”&lt;/p>
&lt;p>子贡道：“如果迫于不得已，在粮食、军备和人民的信心三者之中一定要去掉一项，先去掉哪一项？”孔子道：“去掉军备。”&lt;/p>
&lt;p>子贡道：“如果迫于不得已，在粮食和人民的信心两者之中一定要去掉一项，先去掉哪一项？”孔子道：“去掉粮食。［没有粮食，不过死亡，但］自古以来谁都免不了死亡。如果人民对政府缺乏信心，国家是站不起来的。”&lt;/p>
&lt;p>【注释】⑴兵——在五经和《论语》、《孟子》中，“兵”字多指兵器而言，但也偶有解作兵士的。如《左传》隐公四年“诸侯之师败郑徒兵”，襄公元年“败其徒兵于洧上”。顾炎武、阎若璩都以为五经中的“兵”字无作士兵解者，恐未谛（刘宝楠说）。但此“兵”字仍以解为军器为宜，故以军备译之。&lt;/p>
&lt;p>12.8棘子成⑴曰：“君子质而已矣，何以文为？”子贡曰：“惜乎，夫子之说君子也⑵！驷不及舌。文犹质也，质犹文也。虎豹之鞟犹犬羊之鞟。”&lt;/p>
&lt;p>【译文】棘子成道：“君子只要有好的本质便够了，要那些文彩［那些仪节、那些形式］干什么？”子贡道：“先生这样地谈论君子，可惜说错了。一言既出，驷马难追。本质和文彩，是同等重要的。假若把虎豹和犬羊两类兽皮拔去有文彩的毛，那这两类皮革就很少区别了。”&lt;/p>
&lt;p>【注释】⑴棘子成——卫国大夫。古代大夫都可以被尊称为“夫子”，所以子贡这样称呼他。⑵惜乎夫子之说君子也——朱熹《集注》把它作两句读：“惜乎！夫子之说，君子也。”便应该这样翻译：“先生的话，是出自君子之口，可惜说错了。”我则以为“夫子之说君子也”为主语，“惜乎”为谓语，此为倒装句。&lt;/p>
&lt;p>12.9哀公问于有若曰：“年饥，用不足，如之何？”&lt;/p>
&lt;p>有若对曰：“盍彻乎？”&lt;/p>
&lt;p>曰：“二，吾犹不足，如之何其彻也？”&lt;/p>
&lt;p>对曰：“百姓足，君孰与不足？百姓不足，君孰与足？”&lt;/p>
&lt;p>【译文】鲁哀公向有若问道：“年成不好，国家用度不够，应该怎么办？”&lt;/p>
&lt;p>有若答道：“为什么不实行十分抽一的税率呢？”&lt;/p>
&lt;p>哀公道：“十分抽二，我还不够，怎么能十分抽一呢？”&lt;/p>
&lt;p>答道：“如果百姓的用度够，您怎么会不够？如果百姓的用度不够，您又怎么会够？”&lt;/p>
&lt;p>12.10子张问崇德辨惑。子曰：“主忠信，徙义，崇德也。爱之欲其生，恶之欲其死。既欲其生，又欲其死，是惑也。‘诚不以富，亦祗以异⑴。’”&lt;/p>
&lt;p>【译文】子张问如何去提高品德，辨别迷惑。孔子道：“以忠诚信实为主，唯义是从，这就可以提高品德。爱一个人，希望他长寿；厌恶起来，恨不得他马上死去。既要他长寿，又要他短命，这便是迷惑。这样，的确对自己毫无好处，只是使人奇怪罢了。”&lt;/p>
&lt;p>【注释】⑴诚不以富，亦祗以异——《诗经·小雅·我行其野篇》诗句，引在这里，很难解释。程颐说是“错简”（别章的文句，因为书页次序错了，误在此处），但无证据。我这里姑且依朱熹《集注》的解释而意译之。&lt;/p>
&lt;p>12.11齐景公问政于孔子。孔子对曰：“君君，臣臣，父父，子子。”公曰：“善哉！信如君不君，臣不臣，父不父，子不子，虽有粟，吾得而食诸？”&lt;/p>
&lt;p>【译文】齐景公向孔子问政治。孔子答道：“君要像个君，臣要像个臣，父亲要像父亲，儿子要像儿子。”景公道：“对呀！若是君不像君，臣不像臣，父不像父，子不像子，卽使粮食很多，我能吃得着吗？”&lt;/p>
&lt;p>12.12子曰：“片言可以折狱⑴者，其由也与？”&lt;/p>
&lt;p>子路无宿诺⑵。&lt;/p>
&lt;p>【译文】孔子说：“根据一方面的语言就可以判决案件的，大概只有仲由吧！”&lt;/p>
&lt;p>子路从不拖延诺言。&lt;/p>
&lt;p>【注释】⑴片言折狱——“片言”古人也叫做“单辞”。打官司一定有原告和被告两方面的人，叫做两造。自古迄今从没有只根据一造的言辞来判决案件的（除掉被告缺席裁判）。孔子说子路“片言可以折狱”，不过表示他的为人诚实直率，别人不愿欺他罢了。⑵子路无宿诺——这句话与上文有什么逻辑关系，从来没有人说得明白（焦循《论语补疏》的解释也不可信）。唐陆德明《经典释文》云：“或分此为别章。”&lt;/p>
&lt;p>12.13子曰：“听讼⑴，吾犹人也。必也使无讼乎！”&lt;/p>
&lt;p>【译文】孔子说：“审理诉讼，我同别人差不多。一定要使诉讼的事件完全消灭才好。”&lt;/p>
&lt;p>【注释】⑴听讼——据《史记·孔子世家》，孔子在鲁定公时，曾为大司寇，司寇为治理刑事的官，孔子这话或许是刚作司寇时所说。&lt;/p>
&lt;p>12.14子张问政。子曰：“居之无倦，行之以忠。”&lt;/p>
&lt;p>【译文】子张问政治。孔子道：“在位不要疲倦懈怠，执行政令要忠心。”&lt;/p>
&lt;p>12.15子曰：“博学于文，约之以礼，亦可以弗畔矣夫！”&lt;/p>
&lt;p>【注释】⑴见雍也篇第六。&lt;/p>
&lt;p>12.16子曰：“君子成人之美，不成人之恶。小人反是。”&lt;/p>
&lt;p>【译文】孔子说：“君子成全别人的好事，不促成别人的坏事。小人却和这相反。”&lt;/p>
&lt;p>12.17季康子问政于孔子。孔子对曰：”政者，正也。子帅以正，孰敢不正？”&lt;/p>
&lt;p>【译文】季康子向孔子问政治。孔子答道：“政字的意思就是端正。您自己带头端正，谁敢不端正呢？”&lt;/p>
&lt;p>12.18季康子患盗，问于孔子。孔子对曰：“苟子之不欲，虽赏之不窃。”&lt;/p>
&lt;p>【译文】季康子苦于盗贼太多，向孔子求教。孔子答道：“假若您不贪求太多的财货，就是奖励偷抢，他们也不会干。”&lt;/p></description></item><item><title>01学而篇第一</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/01%E5%AD%A6%E8%80%8C%E7%AF%87%E7%AC%AC%E4%B8%80/</link><pubDate>Sat, 11 Jan 2025 19:53:33 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/01%E5%AD%A6%E8%80%8C%E7%AF%87%E7%AC%AC%E4%B8%80/</guid><description>&lt;h1 id="学而篇第一">
 学而篇第一
 &lt;a class="anchor" href="#%e5%ad%a6%e8%80%8c%e7%af%87%e7%ac%ac%e4%b8%80">#&lt;/a>
&lt;/h1>
&lt;p>(共十六章)&lt;/p>
&lt;p>&lt;strong>1.1子⑴曰：“学而时⑵习⑶之，不亦说⑷乎？有朋⑸自远方来，不亦乐乎？人不知⑹，而不愠⑺，不亦君子⑻乎？”&lt;/strong>&lt;/p>
&lt;p>【译文】孔子说：“学了，然后按一定的时间去实习它，不也高兴吗？有志同道合的人从远处来，不也快乐吗？人家不了解我，我却不怨恨，不也是君子吗？”&lt;/p>
&lt;p>【注释】⑴子——《论语》“子曰”的“子”都是指孔子而言。⑵时——“时”字在周秦时候若作副词用，等于《孟子·梁惠王上》“斧斤以时入山林”的“以时”，“在一定的时候”或者“在适当的时候”的意思。王肃的《论语注》正是这样解释的。朱熹的《论语集注》把它解为“时常”，是用后代的词义解释古书。⑶习——一般人把习解为“温习”，但在古书中，它还有“实习”、“演习”的意义，如《礼记·射义》的“习礼乐”、“习射”。《史记·孔子世家》：“孔子去曹适宋，与弟子习礼大树下。”这一“习”字，更是演习的意思。孔子所讲的功课，一般都和当时的社会生活和政治生活密切结合。像礼（包括各种仪节）、乐（音乐）、射（射箭）、御（驾车）这些，尤其非演习、实习不可。所以这“习”字以讲为实习为好。⑷说——音读和意义跟“悦”字相同，高兴、愉快的意思。⑸有朋——古本有作“友朋”的。旧注说：“同门曰朋。”宋翔凤《朴学斋札记》说，这里的“朋”字卽指“弟子”，就是《史记·孔子世家》的“故孔子不仕，退而修诗、书、礼乐，弟子弥众，至自远方”译文用“志同道合之人”卽本此义。⑹人不知——这一句，“知”下没有宾语，人家不知道什么呢？当时因为有说话的实际环境，不需要说出便可以了解，所以未给说出。这却给后人留下一个谜。有人说，这一句是接上一句说的，从远方来的朋友向我求教，我告诉他，他还不懂，我却不怨恨。这样，“人不知”是“人家不知道我所讲述的”了。这种说法我嫌牵强，所以仍照一般的解释。这一句和宪问篇的“君子病无能焉，不病人之不己知也”的精神相同。⑺愠——yùn，怨恨。⑻君子——《论语》的“君子”，有时指“有德者”，有时指“有位者”，这里是指“有德者”。&lt;/p>
&lt;p>&lt;strong>1.2有子⑴曰：“其为人也孝弟⑵，而好犯⑶上者，鲜⑷矣；不好犯上，而好作乱者，未之有也⑸。君子务本，本立而道生。孝弟也者，其为仁之本⑹与⑺！”&lt;/strong>&lt;/p>
&lt;p>【译文】有子说：“他的为人，孝顺爹娘，敬爱兄长，却喜欢触犯上级，这种人是很少的；不喜欢触犯上级，却喜欢造反，这种人从来没有过。君子专心致力于基础工作，基础树立了，‘道’就会产生。孝顺爹娘，敬爱兄长，这就是‘仁’的基础吧！”&lt;/p>
&lt;p>【注释】⑴有子——孔子学生，姓有，名若，比孔子小十三岁，一说小三十三岁，以小三十三岁之说较可信。《论语》记载孔子的学生一般称字，独曾参和有若称“子”（另外，冉有和闵子骞偶一称子，又当别论），因此很多人疑心《论语》就是由他们两人的学生所纂述的。但是有若称子，可能是由于他在孔子死后曾一度为孔门弟子所尊重的缘故（这一史实可参阅《礼记·檀弓上》、《孟子·滕文公上》和《史记·仲尼弟子列传》）。至于《左传》哀公八年说有若是一个“国士”，还未必是足以使他被尊称为“子”的原因。⑵孝弟——孝，奴隶社会时期所认为的子女对待父母的正确态度；弟，音读和意义跟“悌”相同，音替，tì，弟弟对待兄长的正确态度。封建时代也把“孝弟”作为维持它那时候的社会制度、社会秩序的一种基本道德力量。⑶犯——抵触，违反，冒犯。⑷鲜——音显，xiǎn，少。《论语》的“鲜”都是如此用法。⑸未之有也——“未有之也”的倒装形式。古代句法有一条这样的规律：否定句，宾语若是指代词，这指代词的宾语一般放在动词前。⑹孝弟为仁之本——“仁”是孔子的一种最高道德的名称。也有人说（宋人陈善的《扪虱新语》开始如此说，后人赞同者很多），这“仁”字就是“人”字，古书“仁”“人”两字本有很多写混了的。这里是说“孝悌是做人的根本”。这一说虽然也讲得通，但不能和“本立而道生”一句相呼应，未必符合有子的原意。《管子·戒篇》说，“孝弟者，仁之祖也”，也是这意。⑺与——音读和意义跟“欤”字一样，《论语》的“欤”字都写作“与”。&lt;/p>
&lt;p>&lt;strong>1.3子曰：“巧言令色⑴，鲜矣仁！”&lt;/strong>&lt;/p>
&lt;p>【译文】孔子说：“花言巧语，伪善的面貌，这种人，‘仁德’是不会多的。”&lt;/p>
&lt;p>【注释】⑴巧言令色——朱注云：“好其言，善其色，致饰于外，务以说人。”所以译文以“花言巧语”译巧言，“伪善的面貌”译令色。&lt;/p>
&lt;p>&lt;strong>1.4曾子⑴曰：“吾日三省⑵吾身——为人谋而不忠乎？与朋友交而不信⑶乎？传⑷不习⑸乎？”&lt;/strong>&lt;/p>
&lt;p>【译文】曾子说：“我每天多次自己反省：替别人办事是否尽心竭力了呢？同朋友往来是否诚实呢？老师传授我的学业是否复习了呢？”&lt;/p>
&lt;p>【注释】⑴曾子——孔子学生，名参（音森，sēn），字子舆，南武城（故城在今天的山东枣庄市附近）人，比孔子小四十六岁（公元前505—435）。⑵三省——“三”字有读去声的，其实不破读也可以。“省”音醒，xǐng，自我检查，反省，内省。“三省”的“三”表示多次的意思。古代在有动作性的动词上加数字，这数字一般表示动作频率。而“三”“九”等字，又一般表示次数的多，不要着实地去看待。说详汪中《述学·释三九》。这里所反省的是三件事，和“三省”的“三”只是巧合。如果这“三”字是指以下三件事而言，依《论语》的句法便应该这样说：“吾日省者三。”和宪问篇的“君子道者三”一样。⑶信——诚也。⑷传——平声，chuán，动词作名词用，老师的传授。⑸习——这“习”字和“学而时习之”的“习”一样，包括温习、实习、演习而言，这里概括地译为“复习”。&lt;/p>
&lt;p>&lt;strong>1.5子曰：“道⑴千乘之国⑵，敬事⑶而信，节用而爱人⑷，使民以时⑸。”&lt;/strong>&lt;/p>
&lt;p>【译文】孔子说：“治理具有一千辆兵车的国家，就要严肃认真地对待工作，信实无欺，节约费用，爱护官吏，役使老百姓要在农闲时间。”&lt;/p>
&lt;p>【注释】⑴道——动词，治理的意思。⑵千乘之国——乘音剩，shèng，古代用四匹马拉着的兵车。春秋时代，打仗用车子，所以国家的强弱都用车辆的数目来计算。春秋初期，大国都没有千辆兵车。像《左传》僖公二十八年所记载的城濮之战，晋文公还只七百乘。但是在那时代，战争频繁，无论侵略者和被侵略者都必须扩充军备。侵略者更因为兼并的结果，兵车的发展速度更快；譬如晋国到平丘之会，据叔向的话，已有四千乘了（见《左传》昭公十三年）。千乘之国，在孔子之时已经不是大国，因此子路也说“千乘之国摄乎大国之间”（11.26）的话了。⑶敬事——“敬”字一般用于表示工作态度，因之常和“事”字连用，如卫灵公篇的“事君敬其事而后其食”。⑷爱人——古代“人”字有广狭两义。广义的“人”指一切人羣，狭义的人只指士大夫以上各阶层的人。这里和“民”（使“民”以时）对言，用的是狭义。⑸使民以时——古代以农业为主，“使民以时”卽是《孟子·梁惠王上》的“不违农时”，因此用意译。&lt;/p>
&lt;p>&lt;strong>1.6子曰：“弟子⑴入⑵则孝，出⑵则悌，谨⑶而信，泛爱众，而亲仁⑷。行有余力，则以学文。”&lt;/strong>&lt;/p>
&lt;p>【译文】孔子说：“后生小子，在父母跟前，就孝顺父母；离开自己房子，便敬爱兄长；寡言少语，说则诚实可信，博爱大众，亲近有仁德的人。这样躬行实践之后，有剩余力量，就再去学习文献。”&lt;/p>
&lt;p>【注释】⑴弟子——一般有两种意义：（甲）年纪幼小的人，（乙）学生。这里用的是第一种意义。⑵入、出——《礼记·内则》：“由命士以上，父子皆异宫”，则知这里的“弟子”是指“命士”以上的人物而言。“入”是“入父宫”，“出”是“出己宫”。⑶谨——寡言叫做谨。详见杨遇夫先生的《积微居小学金石论丛》卷一。⑷仁——“仁”卽“仁人”，和雍也篇第六的“井有仁焉”的“仁”一样。古代的词汇经常运用这样一种规律：用某一具体人和事物的性质、特征甚至原料来代表那一具体的人和事物。&lt;/p>
&lt;p>1.7子夏⑴曰：“贤贤易色⑵；事父母，能竭其力；事君，能致⑶其身；与朋友交，言而有信。虽曰未学，吾必谓之学矣。”&lt;/p>
&lt;p>【译文】子夏说：“对妻子，重品德，不重容貌；侍奉爹娘，能尽心竭力；服事君上，能豁出生命；同朋友交往，说话诚实守信。这种人，虽说没学习过，我一定说他已经学习过了。”&lt;/p>
&lt;p>【注释】⑴子夏——孔子学生，姓卜，名商，字子夏，比孔子小四十四岁。（公元前507—？）⑵贤贤易色——这句话，一般的解释是：“用尊贵优秀品德的心来交换（或者改变）爱好美色的心。”照这种解释，这句话的意义就比较空泛。陈祖范的《经咫》、宋翔凤的《朴学斋札记》等书却说，以下三句，事父母、事君、交朋友，各指一定的人事关系；那么，“贤贤易色”也应该是指某一种人事关系而言，不能是一般的泛指。奴隶社会和封建社会把夫妻间关系看得极重，认为是“人伦之始”和“王化之基”，这里开始便谈到它，是不足为奇的。我认为这话很有道理。“易”有交换、改变的意义，也有轻视（如言“轻易”）、简慢的意义。因之我便用《汉书》卷七十五《李寻传》颜师古注的说法，把“易色”解为“不重容貌”。⑵致——有“委弃”、“献纳”等意义，所以用“豁出生命”来译它。&lt;/p>
&lt;p>1.8子曰：“君子⑴不重，则不威；学则不固。主忠信⑵。无友不如己者⑶。过，则勿惮改。”&lt;/p>
&lt;p>【译文】孔子说：“君子，如果不庄重，就没有威严；卽使读书，所学的也不会巩固。要以忠和信两种道德为主。不要跟不如自己的人交朋友。有了过错，就不要怕改正。”&lt;/p>
&lt;p>【注释】⑴君子——这一词一直贯串到末尾，因此译文将这两字作一停顿。⑵主忠信——颜渊篇（12.10）也说，“主忠信，徙义，崇德也”，可见“忠信”是道德。⑶无友不如己者——古今人对这一句发生不少怀疑，因而有一些不同的解释。译文只就字面译出。&lt;/p>
&lt;p>1.9曾子曰：“慎终⑴，追远⑵，民德归厚矣。”&lt;/p>
&lt;p>【译文】曾子说：“谨慎地对待父母的死亡，追念远代祖先，自然会导致老百姓归于忠厚老实了。”&lt;/p>
&lt;p>【注释】⑴慎终——郑玄的注：“老死曰终。”可见这“终”字是指父母的死亡。慎终的内容，刘宝楠《论语正义》引《檀弓》曾子的话是指附身（装殓）、附棺（埋葬）的事必诚必信，不要有后悔。⑵追远——具体地说是指“祭祀尽其敬”。两者译文都只就字面译出。&lt;/p>
&lt;p>1.10子禽⑴问于子贡⑵曰：“夫子⑶至于是邦也，必闻其政，求之与？抑与之与？”子贡曰：“夫子温、良、恭、俭、让以得之。夫子之求之也，其诸⑷异乎人之求之与？”&lt;/p>
&lt;p>【译文】子禽向子贡问道：“他老人家一到哪个国家，必然听得到那个国家的政事，求来的呢？还是别人自动告诉他的呢？”子贡道：“他老人家是靠温和、善良、严肃、节俭、谦逊来取得的。他老人家获得的方法，和别人获得的方法，不相同吧？”&lt;/p>
&lt;p>【注释】⑴子禽——陈亢（kàng）字子禽。从子张篇所载的事看来，恐怕不是孔子的学生。《史记·仲尼弟子列传》也不载此人。但郑玄注《论语》和《檀弓》都说他是孔子学生，不晓得有什么根据。（臧庸的《拜经日记》说子禽就是仲尼弟子列传的原亢禽，简朝亮的《论语集注补疏》曾加以辩驳。）⑵子贡——孔子学生，姓端木，名赐，字子贡，卫人，比孔子小三十一岁。（公元前520—？）⑶夫子——这是古代的一种敬称，凡是做过大夫的人，都可以取得这一敬称。孔子曾为鲁国的司寇，所以他的学生称他为夫子，后来因此沿袭以称呼老师。在一定的场合下，也用以特指孔子。⑷其诸——洪颐煊《读书丛録》云：“公羊桓六年传，‘其诸以病桓与？’闵元年传，‘其诸吾仲孙与？’僖二十四年传，‘其诸此之谓与？’宣五年传，‘其诸为其双双而俱至者与？’十五年传，‘其诸则宜于此焉变矣。’‘其诸’是齐鲁间语。”案，总上诸例，皆用来表示不肯定的语气。黄家岱《嬹艺轩杂着》说“其诸”意为“或者”，大致得之。&lt;/p>
&lt;p>1.11子曰：“父在，观其⑴志；父没，观其⑴行⑵；三年⑶无改于父之道⑷，可谓孝矣。”&lt;/p>
&lt;p>【译文】孔子说：“当他父亲活着，［因为他无权独立行动，］要观察他的志向;他父亲死了，要考察他的行为；若是他对他父亲的合理部分，长期地不加改变，可以说做到孝了。”&lt;/p>
&lt;p>【注释】⑴其——指儿子，不是指父亲。⑵行——去声，xìng。⑶三年——古人这种数字，有时不要看得太机械。它经常只表示一种很长的期间。⑷道——有时候是一般意义的名词，无论好坏、善恶都可以叫做道。但更多时候是积极意义的名词，表示善的好的东西。这里应该这样看，所以译为“合理部分”。&lt;/p>
&lt;p>1.12有子曰：“礼之用，和⑴为贵。先王之道，斯为美；小大由之。有所不行⑵，知和而和，不以礼节之，亦不可行也。”&lt;/p>
&lt;p>【译文】有子说：“礼的作用，以遇事都做得恰当为可贵。过去圣明君王的治理国家，可宝贵的地方就在这里；他们小事大事都做得恰当。但是，如有行不通的地方，便为恰当而求恰当，不用一定的规矩制度来加以节制，也是不可行的。”&lt;/p>
&lt;p>【注释】⑴和——《礼记·中庸》：“喜怒哀乐之未发谓之中，发而皆中节谓之和。”杨遇夫先生《论语疏证》说：“事之中节者皆谓之和，不独喜怒哀乐之发一事也。说文云：‘龢，调也。’‘盉，调味也。’乐调谓之龢，味调谓之盉，事之调适者谓之和，其义一也。和今言适合，言恰当，言恰到好处。”⑵有所不行——皇侃《义疏》把这句属上，全文便如此读：“礼之用，和为贵。先王之道，斯为美。小大由之，有所不行。……”他把“和”解为音乐，说：“此以下明人君行化必礼乐相须。……变乐言和，见乐功也。……小大由之有所不行者，言每事小大皆用礼，而不以乐和之，则其政有所不行也。”这种句读法值得考虑，但把“和”解释为音乐，而且认为“小大由之”的“之”是指“礼”而言，都觉牵强。特为注出，以供大家考虑。&lt;/p>
&lt;p>1.13有子曰：“信近于义，言可复⑴也。恭近于礼，远⑵耻辱也。因⑶不失其亲，亦可宗⑷也。”&lt;/p>
&lt;p>【译文】有子说：“所守的约言符合义，说的话就能兑现。态度容貌的庄矜合于礼，就不致遭受侮辱。依靠关系深的人，也就可靠了。”&lt;/p>
&lt;p>【注释】⑴复——《左传》僖公九年荀息说：“吾与先君言矣，不可以贰，能欲复言而爱身乎？”又哀公十六年叶公说：“吾闻胜也好复言，……复言非信也。”这“复言”都是实践诺言之义。《论语》此义当同于此。朱熹《集注》云：“复，践言也。”但未举论证，因之后代训诂家多有疑之者。童第德先生为我举出《左传》为证，足补古今字书之所未及。⑵远——去声，音院，yuàn，动词，使动用法，使之远离的意思。此处亦可以译为避免。⑶因——依靠，凭借。有人读为“姻”字，那“因不失其亲”便当译为“所与婚姻的人都是可亲的”，恐未必如此。⑷宗——主，可靠。一般解释为“尊敬”，不妥。&lt;/p>
&lt;p>1.14子曰：“君子⑴食无求饱，居无求安，敏于事而慎于言，就有道而正⑵焉，可谓好学也已。”&lt;/p>
&lt;p>【译文】孔子说：“君子，吃食不要求饱足，居住不要求舒适，对工作勤劳敏捷，说话却谨慎，到有道的人那里去匡正自己，这样，可以说是好学了。”&lt;/p>
&lt;p>【注释】⑴君子——《论语》的“君子”有时指“有位之人”，有时指“有德之人”。但有的地方究竟是指有位者，还是指有德者，很难分别。此处大概是指有德者。⑵正——《论语》“正”字用了很多次。当动词的，都作“匡正”或“端正”讲，这里不必例外。一般把“正”字解为“正其是非”、“判其得失”，我所不取。&lt;/p>
&lt;p>1.15子贡曰：“贫而无谄，富而无骄，何如⑴？”子曰：“可也；未若贫而乐⑵，富而好礼者也。”子贡曰：“《诗》云：‘如切如磋，如琢如磨⑶’其斯之谓与？”子曰：“赐⑷也，始可与言诗已矣，告诸往而知来者⑸。”&lt;/p>
&lt;p>【译文】子贡说：“贫穷却不巴结奉承，有钱却不骄傲自大，怎么样？”孔子说：“可以了；但是还不如虽贫穷却乐于道，纵有钱却谦虚好礼哩。”子贡说：“《诗经》上说：‘要像对待骨、角、象牙、玉石一样，先开料，再糙锉，细刻，然后磨光。’那就是这样的意思吧？”孔子道：“赐呀，现在可以同你讨论《诗经》了，告诉你一件，你能有所发挥，举一反三了。”&lt;/p>
&lt;p>【注释】⑴何如——《论语》中的“何如”，都可以译为“怎么样”。⑵贫而乐——皇侃本“乐”下有“道”字。郑玄注云：“乐谓志于道，不以贫为忧苦。”所以译文增“于道”两字。⑶如切如磋，如琢如磨——两语见于《诗经·卫风·淇奥篇》。⑷赐——子贡名。孔子对学生都称名。⑸告诸往而知来者——“诸”，在这里用法同“之”一样。“往”，过去的事，这里譬为已知的事；“来者”，未来的事，这里譬为未知的事。译文用意译法。孔子赞美子贡能运用《诗经》作譬，表示学问道德都要提高一步看。&lt;/p>
&lt;p>1.16子曰：“不患人之不己知，患不知人也。”&lt;/p>
&lt;p>【译文】孔子说：“别人不了解我，我不急；我急的是自己不了解别人。”&lt;/p></description></item><item><title>10乡党篇第十</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/10%E4%B9%A1%E5%85%9A%E7%AF%87%E7%AC%AC%E5%8D%81/</link><pubDate>Sat, 11 Jan 2025 19:53:32 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/10%E4%B9%A1%E5%85%9A%E7%AF%87%E7%AC%AC%E5%8D%81/</guid><description>&lt;h1 id="乡党篇第十">
 乡党篇第十
 &lt;a class="anchor" href="#%e4%b9%a1%e5%85%9a%e7%af%87%e7%ac%ac%e5%8d%81">#&lt;/a>
&lt;/h1>
&lt;p>(本是一章，今分为二十七节。)&lt;/p>
&lt;p>10.1孔子于乡党，恂恂⑴如也，似不能言者。其在宗庙朝廷，便便⑵言，唯谨尔。&lt;/p>
&lt;p>【译文】孔子在本乡的地方上非常恭顺，好像不能说话的样子。他在宗庙里、朝廷上，有话便明白而流畅地说出，只是说得很少。&lt;/p>
&lt;p>【注释】⑴恂恂——恂音旬，xún，恭顺貌。⑵便便——便旧读骈，pián。&lt;/p>
&lt;p>10.2朝，与下大夫言，侃侃如也；与上大夫言，誾誾⑴如也。君在，踧踖如也，与与如也。&lt;/p>
&lt;p>【译文】上朝的时候，［君主还没有到来，］同下大夫说话，温和而快乐的样子；同上大夫说话，正直而恭敬的样子。君主已经来了，恭敬而心中不安的样子，行步安祥的样子。&lt;/p>
&lt;p>【注释】⑴誾——音银，yín。&lt;/p>
&lt;p>10.3君召使摈，色勃如也，足躩⑴如也。揖所与立，左右手，衣前后⑵，襜⑶如也。趋进⑷，翼如也。宾退，必复命曰：“宾不顾矣。”&lt;/p>
&lt;p>【译文】鲁君召他去接待外国的贵宾，面色矜持庄重，脚步也快起来。向两旁的人作揖，或者向左拱手，或者向右拱手，衣裳一俯一仰，却很整齐。快步向前，好像鸟儿舒展了翅膀。贵宾辞别后一定向君主回报说：“客人已经不回头了。”&lt;/p>
&lt;p>【注释】⑴躩——音矍，jué，皇侃《义疏》引江熙云：“不暇闲步，躩，速貌也。”⑵前后——俯仰的意思。⑵襜——音幨，chān，整齐之貌。⑷趋进——在行步时一种表示敬意的行动。&lt;/p>
&lt;p>10.4入公门，鞠躬如⑴也，如不容。&lt;/p>
&lt;p>立不中门，行不履阈。&lt;/p>
&lt;p>过位⑵，色勃如也，足躩如也，其言似不足者。&lt;/p>
&lt;p>摄齐⑶升堂，鞠躬如也，屏气⑷似不息者。&lt;/p>
&lt;p>出，降一等，逞颜色，怡怡如也。&lt;/p>
&lt;p>没阶，趋进⑸，翼如也。&lt;/p>
&lt;p>复其位，踧踖如也。&lt;/p>
&lt;p>【译文】孔子走进朝廷的门，害怕而谨慎的样子，好像没有容身之地。&lt;/p>
&lt;p>站，不站在门的中间；走，不踩门坎。&lt;/p>
&lt;p>经过国君的坐位，面色便矜庄，脚步也快，言语也好像中气不足。&lt;/p>
&lt;p>提起下襬向堂上走，恭敬谨慎的样子，憋住气好像不呼吸一般。&lt;/p>
&lt;p>走出来，降下台阶一级，面色便放松，怡然自得。&lt;/p>
&lt;p>走完了台阶，快快地向前走几步，好像鸟儿舒展翅膀。&lt;/p>
&lt;p>回到自己的位置，恭敬而内心不安的样子。&lt;/p>
&lt;p>【注释】⑴鞠躬如——这“鞠躬”两字不能当“曲身”讲。这是双声字，用以形容谨慎恭敬的样子。《论语》所有“□□如”的区别词（区别词是形容词、副词的合称），都不用动词结构。清人卢文弨《龙城札记》说：“……且曲身乃实事，而云曲身如，更无此文法。”⑵过位——过旧音戈，平声。位是人君的坐位，经过之时，人君并不在，坐位是空的。⑶摄齐——齐音咨，zī，衣裳缝了边的下襬；摄，提起。⑷屏——音丙，又音并，bìng，屏气卽屏息，压抑呼吸。⑸趋进——有些本子无“进”字，不对。自汉以来所有引《论语》此文的都有“进”字，《唐石经》也有“进”字，《太平御览》居处部、人事部引文，张子《正蒙》引文也都有“进”字。&lt;/p>
&lt;p>10.5执圭⑴，鞠躬如也，如不胜⑵。上如揖，下如授。勃如战色，足蹜蹜如有循⑶。&lt;/p>
&lt;p>享礼⑷，有容色⑸。&lt;/p>
&lt;p>私觌⑹，愉愉如也。&lt;/p>
&lt;p>【译文】［孔子出使到外国，举行典礼，］拿着圭，恭敬谨慎地，好像举不起来。向上举好像在作揖，向下拿好像在交给别人。面色矜庄好像在作战。脚步也紧凑狭窄，好像在沿着［一条线］走过。&lt;/p>
&lt;p>献礼物的时候，满脸和气。&lt;/p>
&lt;p>用私人身分和外国君臣会见，显得轻松愉快。&lt;/p>
&lt;p>【注释】⑴圭——一种玉器，上圆，或者作剑头形，下方，举行典礼的时候，君臣都拿着。⑵胜——音升，shēng，能担负得了。⑶足蹜蹜如有循——蹜音缩，“蹜蹜”，举脚密而狭的样子。“如有循”，所沿循的应当是很窄狭的东西，所以译文加了“一条线”诸字以示意。⑷享礼——古代出使外国，初到所聘问的国家，便行聘问礼。“执圭”一段所写的正是行聘问礼时孔子的情貌。聘问之后，便行享献之礼。“享礼”就是享献礼，使臣把所带来的各种礼物罗列满庭。⑸有容色——《仪礼·聘礼》：“及享，发气焉盈容。”“有容色”就是“发气焉盈容”。⑹觌——音狄，dí，相见。&lt;/p>
&lt;p>10.6君子不以绀緅饰⑴，红紫不以为亵服⑵。&lt;/p>
&lt;p>当暑，袗絺绤⑶，必表而出之。&lt;/p>
&lt;p>缁衣，羔裘；素衣，麑裘；黄衣，狐裘⑷。&lt;/p>
&lt;p>亵裘长⑸，短右袂⑹。&lt;/p>
&lt;p>必有寝衣⑺，长一身有半。&lt;/p>
&lt;p>狐貉之厚以居。&lt;/p>
&lt;p>去丧，无所不佩。&lt;/p>
&lt;p>非帷裳⑻，必杀之⑼。&lt;/p>
&lt;p>羔裘玄冠不以吊⑽。&lt;/p>
&lt;p>吉月⑾，必朝服而朝。&lt;/p>
&lt;p>【译文】君子不用［近乎黑色的］天青色和铁灰色作镶边，［近乎赤色的］浅红色和紫色不用来作平常居家的衣服。&lt;/p>
&lt;p>暑天，穿着粗的或者细的葛布单衣，但一定裹着衬衫，使它露在外面。&lt;/p>
&lt;p>黑色的衣配紫羔，白色的衣配麑裘，黄色的衣配狐裘。&lt;/p>
&lt;p>居家的皮袄身材较长，可是右边的袖子要做得短些。&lt;/p>
&lt;p>睡觉一定有小被，长度合本人身长的一又二分之一。&lt;/p>
&lt;p>用狐貉皮的厚毛作坐垫。&lt;/p>
&lt;p>丧服满了以后，什么东西都可以佩带。&lt;/p>
&lt;p>不是［上朝和祭祀穿的］用整幅布做的裙子，一定裁去一些布。&lt;/p>
&lt;p>紫羔和黑色礼帽都不穿戴着去吊丧。&lt;/p>
&lt;p>大年初一，一定穿着上朝的礼服去朝贺。&lt;/p>
&lt;p>【注释】⑴绀緅饰——绀音赣，gàn；緅音邹，zōu；都是表示颜色的名称。“绀”是深青中透红的颜色，相当今天的“天青”；“緅”是青多红少，比绀更暗的颜色，这里用“铁灰色”来表明它。“饰”是滚边，镶边，缘边。古代，黑色是正式礼服的颜色，而这两种颜色都近于黑色，所以不用来镶边，为别的颜色作装饰。⑵红紫不以为亵服——古代大红色叫“朱”，这是很贵重的颜色。“红”和“紫”都属此类，也连带地被重视，不用为平常家居衣服的颜色。⑶袗絺绤——袗音轸，zhěn，单也。此处用为动词。絺音痴，chī，细葛布；绤音隙，xì，粗葛布。⑷缁衣羔裘等三句——这三句表示衣服里外的颜色应该相称。古代穿皮衣，毛向外，因之外面一定要用罩衣，这罩衣就叫做裼（音锡）衣。这里“缁衣”、“素衣”、“黄衣”的“衣”指的正是裼衣。缁，黑色。古代所谓“羔裘”都是黑色的羊毛，就是今天的紫羔。麑音倪，ní，小鹿，它的毛是白色。⑸亵裘长——亵裘长为着保暖。古代男子上面穿衣，下面穿裳（裙），衣裳不相连。因之孔子在家的皮袄就做得比较长。⑹短右袂——袂，mèi，袖子。右袖较短，为着做事方便。有人认为衣袖一长一短，不大好看，孔子不会如此，于是对这一句别生解释，我认为那些解释都不可信。⑺寝衣——卽被。古代大被叫“衾”，小被叫“被”。⑻帷裳——礼服，上朝和祭祀时穿，用整幅布做，不加翦裁，多余的布作褶迭（褶迭古代叫做襞积），犹如今天的百褶裙。古代男子上衣下裙。⑼杀——去声，shài，减少，裁去。“杀之”就是缝制之先裁去多余的布，不用褶迭，省工省料。⑽羔裘玄冠不以吊——玄冠，一种礼帽。“羔裘玄冠”都是黑色的，古代都用作吉服。丧事是凶事，因之不能穿戴着去吊丧。⑾吉月——这两个字有各种解释：（甲）每月初一（旧注都如此）；（乙）“吉”字误，应该作“告”。“告月”就是每月月底，司历者以下月初一告之于君（王引之《经义述闻》、俞樾《羣经平议》）；两说都不可信。今从程树德《论语集释》之说。&lt;/p>
&lt;p>10.7齐，必有明衣，布⑴。&lt;/p>
&lt;p>齐必变食⑵，居必迁坐⑶。&lt;/p>
&lt;p>【译文】斋戒沐浴的时候，一定有浴衣，用布做的。&lt;/p>
&lt;p>斋戒的时候，一定改变平常的饮食；居住也一定搬移地方［不和妻妾同房］。&lt;/p>
&lt;p>【注释】⑴布——现在的布一般是用草棉（棉花）纺织的，但古代没有草棉，布的质料，王夫之《四书稗疏》说：“古之言布者，兼丝麻枲葛而言之。练丝为帛，未练为布，盖今之生丝绢也。清商曲有云：‘丝布涩难缝’，则晋宋间犹有丝布之名。唯孔丛子谓麻苎葛曰布，当亦一隅之论。”赵翼《陔余丛考》说：“古时未有棉布，凡布皆麻为之。记曰：‘治其丝麻，以为布帛’是也。”⑵变食——变食的内容，古人有三种说法：（甲）《庄子·人间世篇》说：“颜回曰：‘回之家贫，惟不饮酒不茹荤者数月矣。如此，则可以为齐乎？’曰：‘是祭祀之齐，非心齐也。’”有人据此，便把“不饮酒，不茹荤（荤是有浓厚气味的蔬菜，如蒜、韭、葱之属）”来解释“变食”。（乙）《周礼·天官·膳夫》：“王日一举……王齐，日三举。”这意思是王每天虽然吃饭三顿，却只在第一顿饭时杀牲，其余两顿，只把第一顿的剩菜回锅罢了。天子如此，其它的人更不会顿顿吃新鲜的。若在斋戒之时那就顿顿吃新鲜的，不吃回锅的剩菜，取其洁净，这便是“变食”。（丙）金鹗《求古録·礼说补遗》说，变食不但不饮酒、不食葱蒜等，也不食鱼肉。⑶迁坐——等于说改变卧室。古代的上层人物平常和妻室居于“燕寝”；斋戒之时则居于“外寝”（也叫“正寝”），和妻室不同房。唐朝的法律还规定着举行大祭，在斋戒之时官吏不宿于正寝的，每一晚打五十竹板。这或者犹是古代风俗的残余。&lt;/p>
&lt;p>10.8食不厌精，脍不厌细。&lt;/p>
&lt;p>食饐而餲⑴，鱼馁而肉败⑵，不食。色恶，不食。臭恶，不食。失饪，不食。不时⑶，不食。割不正⑷，不食。不得其酱，不食。&lt;/p>
&lt;p>肉虽多，不使胜食气⑸。&lt;/p>
&lt;p>唯酒无量，不及乱⑹。&lt;/p>
&lt;p>沽酒市脯不食。&lt;/p>
&lt;p>不撤姜食，不多食。&lt;/p>
&lt;p>【译文】粮食不嫌舂得精，鱼和肉不嫌切得细。粮食霉烂发臭，鱼和肉腐烂，都不吃。食物颜色难看，不吃。气味难闻，不吃。烹调不当，不吃。不到该当吃食时候，不吃。不是按一定方法砍割的肉，不吃。没有一定调味的酱醋，不吃。&lt;/p>
&lt;p>席上肉虽然多，吃它不超过主食。&lt;/p>
&lt;p>只有酒不限量，却不至醉。&lt;/p></description></item><item><title>14宪问篇第十四</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/14%E5%AE%AA%E9%97%AE%E7%AF%87%E7%AC%AC%E5%8D%81%E5%9B%9B/</link><pubDate>Sat, 11 Jan 2025 19:53:31 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/14%E5%AE%AA%E9%97%AE%E7%AF%87%E7%AC%AC%E5%8D%81%E5%9B%9B/</guid><description>&lt;h1 id="宪问篇第十四">
 宪问篇第十四
 &lt;a class="anchor" href="#%e5%ae%aa%e9%97%ae%e7%af%87%e7%ac%ac%e5%8d%81%e5%9b%9b">#&lt;/a>
&lt;/h1>
&lt;p>(共四十四章（朱熹《集注》把第一章自“克、伐、怨、欲”以下别为一章，把第二十章自“曾子曰”以下别为一章，又把第三十七章自“子曰作者”以下别为一章，所以题为四十七章。）)&lt;/p>
&lt;p>14.1宪问耻。子曰：“邦有道，谷；邦无道，谷，耻也。”&lt;/p>
&lt;p>“克、伐、怨、欲不行焉，可以为仁矣？⑴”子曰：“可以为难矣，仁则吾不知也。”&lt;/p>
&lt;p>【译文】原宪问如何叫耻辱。孔子道：“国家政治清明，做官领薪俸；国家政治黑暗，做官领薪俸，这就是耻辱。”&lt;/p>
&lt;p>原宪又道：“好胜、自夸、怨恨和贪心四种毛病都不曾表现过，这可以说是仁人了吗？”孔子道：“可以说是难能可贵的了，若说是仁人，那我不能同意。”&lt;/p>
&lt;p>【注释】⑴可以为仁矣——这句话从形式上看应是肯定句，但从上下文看，实际应是疑问句，不过疑问只从说话者的语势来表示，不藉助于别的表达形式而已。这一段可以和“邦有道，贫且贱焉，耻也；邦无道，富且贵焉，耻也。”（8.13）互相发明。&lt;/p>
&lt;p>14.2子曰：“士而怀居⑴，不足以为士矣。”&lt;/p>
&lt;p>【译文】孔子说：“读书人而留恋安逸，便不配做读书人了。”&lt;/p>
&lt;p>【注释】⑴怀居——怀，怀思，留恋；居，安居。《左传》僖公二十三年记载着晋文公的流亡故事，说他在齐国安居下来，有妻妾，有家财，便不肯再移动了。他老婆姜氏便对他说：“行也！怀与安，实败名。”便和此意相近。&lt;/p>
&lt;p>14.3子曰：“邦有道，危⑴言危行；邦无道，危行言孙⑵。”&lt;/p>
&lt;p>【译文】孔子说：“政治清明，言语正直，行为正直；政治黑暗，行为正直，言语谦顺。”&lt;/p>
&lt;p>【注释】⑴危——《礼记·缁衣》注：“危，高峻也。”意谓高于俗，朱熹《集注》用之，固然可通。但《广雅》云：“危，正也。”王念孙《疏证》卽引《论语》此文来作证，更为恰当，译文卽用此解。⑵孙——同逊。&lt;/p>
&lt;p>14.4子曰：“有德者必有言，有言者不必有德。仁者必有勇，勇者不必有仁。”&lt;/p>
&lt;p>【译文】孔子说：“有道德的人一定有名言，但有名言的人不一定有道德。仁人一定勇敢，但勇敢的人不一定仁。”&lt;/p>
&lt;p>14.5南宫适⑴问于孔子曰：“羿⑵善射，奡⑶荡舟⑷，俱不得其死然。禹稷躬稼而有天下。”夫子不答。&lt;/p>
&lt;p>南宫适出，子曰：“君子哉若人！尚德哉若人⑸！”&lt;/p>
&lt;p>【译文】南宫适向孔子问道：“羿擅长射箭，奡擅长水战，都没有得到好死。禹和稷自己下地种田，却得到了天下。［怎样解释这些历史？］”孔子没有答复。&lt;/p>
&lt;p>南宫适退了出来。孔子道：“这个人，好一个君子！这个人，多么尊尚道德！”&lt;/p>
&lt;p>【注释】⑴南宫适——孔子学生南容。⑵羿——音诣，yì。在古代传说中有三个羿，都是射箭能手。一为帝喾的射师，见于说文；二为唐尧时人，传说当时十个太阳同时出现，羿射落了九个，见《淮南子·本经训》；三为夏代有穷国的君主，见《左传》襄公四年。这里所指的和《孟子·离娄篇》所载的“逢蒙学射于羿”的羿，据说都是夏代的羿。⑶奡——音傲，aò。也是古代传说中的人物，夏代寒浞的儿子。字又作“浇”。⑷荡舟——顾炎武《日知録》云：“古人以左右冲杀为荡。陈其锐卒，谓之跳荡；别帅谓之荡主。荡舟盖兼此义。”译成现代汉语，就是用舟师冲锋陷阵。⑸君子……尚德哉若人——南宫适托古代的事来问孔子，中心思想是当今尚力不尚德，但按之历史，尚力者不得善终，尚德者终有天下。因之孔子称赞他。&lt;/p>
&lt;p>14.6子曰：“君子⑴而不仁者有矣夫，未有小人⑵而仁者也。”&lt;/p>
&lt;p>【译文】孔子说：“君子之中不仁的人有的罢，小人之中却不会有仁人。”&lt;/p>
&lt;p>【注释】⑴君子，小人——这个“君子”“小人”的含义不大清楚。“君子”“小人”若指有德者无德者而言，则第二句可以不说；看来，这里似乎是指在位者和老百姓而言。&lt;/p>
&lt;p>14.7子曰：“爱之，能勿劳乎⑴？忠焉，能勿诲乎？”&lt;/p>
&lt;p>【译文】孔子说：“爱他，能不叫他劳苦吗？忠于他，能够不教诲他吗？”&lt;/p>
&lt;p>【注释】⑴能勿劳乎——《国语·鲁语下》说：“夫民劳则思，思则善心生；逸则淫，淫则忘善，忘善则恶心生。”可以为“能勿劳乎”的注脚。&lt;/p>
&lt;p>14.8子曰：“为命⑴，裨谌⑵草创之，世叔⑶讨论⑷之，行人子羽⑸修饰之，东里子产⑹润色之。”&lt;/p>
&lt;p>【译文】孔子说：“郑国外交辞令的创制，裨谌拟稿，世叔提意见，外交官子羽修改，子产作文词上的加工。”&lt;/p>
&lt;p>【注释】⑴为命——《左传》襄公三十一年云：“郑国将有诸侯之事，子产乃问四国之为于子羽，且使多为辞令，与裨谌乘以适野，使谋可否，而告冯简子使断之。事成，乃授子太叔使行之，以应对宾客，是以鲜有败事。”可与《论语》此文相参校。《左传》所讲的过程和《论语》此文虽然有些出入，但主题是相同的，因此我把“命”译为“外交辞令”，不作一般的政令讲。⑵裨谌——音庇臣，bìchén，郑国大夫，见《左传》。⑶世叔——卽《左传》的子太叔（古代，“太”和“世”两字通用），名游吉。⑷讨论——意义和今天的“讨论”不同，这是一个人去研究而后提意见的意思。⑸行人子羽——行人，官名，卽古代的外交官。子羽，公孙挥的字。⑹东里子产——东里，地名，今在郑州市，子产所居。&lt;/p>
&lt;p>14.9或问子产。子曰：“惠人也。”&lt;/p>
&lt;p>问子西⑴。曰：“彼哉！彼哉⑵！”&lt;/p>
&lt;p>问管仲。曰：“人也。夺伯氏⑶骈邑⑷三百，饭疏食，没齿无怨言。”&lt;/p>
&lt;p>【译文】有人向孔子问子产是怎样的人物。孔子道：“是宽厚慈惠的人。”&lt;/p>
&lt;p>又问到子西。孔子道：“他呀，他呀！”&lt;/p>
&lt;p>又问到管仲。孔子道：“他是人才。剥夺了伯氏骈邑三百户的采地，使伯氏只能吃粗粮，到死没有怨恨的话。”&lt;/p>
&lt;p>【注释】⑴子西——春秋时有三个子西，一是郑国的公孙夏，生当鲁襄公之世，为子产的同宗兄弟，子产便是继他而主持郑国政治的。二是楚国的鬬宜申，生当鲁僖公、文公之世。三是楚国的公子申，和孔子同时。鬬宜申去孔子太远，公子申又太近，这人所问的当是公孙夏。⑵彼哉彼哉——《公羊传》定公八年记载阳虎谋杀季孙的事，说阳虎谋杀未成，在郊外休息，忽然望见公敛处父领着追兵而来，便道：“彼哉彼哉！”毛奇龄《论语稽求篇》因云：“此必古成语，而夫子引以作答者。”案：这是当时表示轻视的习惯语。⑶伯氏——齐国的大夫，皇侃《义疏》云：“伯氏名偃。”不知何据。⑷骈邑——地名。阮元曾得伯爵彝，说是乾隆五十六年出土于山东临朐县柳山寨。他在《积古斋锺鼎彝器款识》里说，柳山寨有古城的城基，卽春秋的骈邑。用《水经·巨洋水注》证之，阮氏之言很可信。&lt;/p>
&lt;p>14.10子曰：“贫而无怨难，富而无骄易。”&lt;/p>
&lt;p>【译文】孔子说：“贫穷却没有怨恨，很难；富贵却不骄傲，倒容易做到”&lt;/p>
&lt;p>14.11子曰：“孟公绰⑴为赵魏老⑵则优⑶，不可以为滕、薛⑷大夫。”&lt;/p>
&lt;p>【译文】孔子说：“孟公绰，若是叫他做晋国诸卿赵氏、魏氏的家臣，那是力有余裕的；却没有才能来做滕、薛这样小国的大夫。”&lt;/p>
&lt;p>【注释】⑴孟公绰——鲁国大夫，《左传》襄公二十五年记载着他的一段事。《史记·仲尼弟子列传》说他是孔子所尊敬的人。⑵老——古代，大夫的家臣称老，也称室老。⑶优——本意是“优裕”，所以用“力有余裕”来译它。⑷滕、薛——当时的小国，都在鲁国附近。滕的故城在今山东滕县西南十五里，薛的故城在今滕县南四十四里官桥公社处。&lt;/p>
&lt;p>14.12子路问成人。子曰：“若臧武仲⑴之知，公绰之不欲，卞庄子⑵之勇，冉求之艺，文之以礼乐，亦可以为成人矣。”曰：“今之成人者何必然？见利思义，见危授命，久要⑶不忘平生之言，亦可以为成人矣。”&lt;/p>
&lt;p>【译文】子路问怎样才是全人。孔子道：“智慧像臧武仲，清心寡欲像孟公绰，勇敢像卞庄子，多才多艺像冉求，再用礼乐来成就他的文采，也可以说是全人了。”等了一会，又道：“现在的全人哪里一定要这样？看见利益便能想起该得不该得，遇到危险便肯付出生命，经过长久的穷困日子都不忘记平日的诺言，也可以说是全人了。”&lt;/p>
&lt;p>【注释】⑴臧武仲——鲁大夫臧孙纥。他很聪明，逃到齐国之后，能预见齐庄公的被杀而设法辞去庄公给他的田。事见《左传》襄公二十三年。⑵卞庄子——鲁国的勇士。《荀子·大略篇》和《韩诗外传》卷十都载有他的勇敢故事。⑵久要——“要”为“约”的借字，“约”，穷困之意。说见杨遇夫先生的《积微居小学述林》。&lt;/p>
&lt;p>14.13子问公叔文子⑴于公明贾⑵曰：“信乎，夫子不言，不笑，不取乎？”&lt;/p>
&lt;p>公明贾对曰：“以⑶告者过也。夫子时然后言，人不厌其言；乐然后笑，人不厌其笑；义然后取，人不厌其取。”&lt;/p>
&lt;p>子曰：“其然？岂其然乎？”&lt;/p>
&lt;p>【译文】孔子向公明贾问到公叔文子，说：“他老人家不言语，不笑，不取，是真的吗？”&lt;/p>
&lt;p>公明贾答道：“这是传话的人说错了。他老人家到应说话的时候才说话，别人不厌恶他的话；高兴了才笑，别人不厌恶他的笑；应该取才取，别人不厌恶他的取。”&lt;/p>
&lt;p>孔子道：“如此的吗？难道真是如此的吗？”&lt;/p>
&lt;p>【注释】⑴公叔文子——卫国大夫，《檀弓》载有他的故事。⑵公明贾——卫人，姓公明，名贾。贾音假，jiǎ。《左传》哀公十四年楚有蔿贾也音假。⑶以——代词，此也。例证可参考杨遇夫先生的《词诠》。&lt;/p>
&lt;p>14.14子曰：“臧武仲以防求为后于鲁⑴，虽曰不要⑵君，吾不信也。”&lt;/p>
&lt;p>【译文】孔子说：“臧武仲［逃到齐国之前，］凭借着他的采邑防城请求立其子弟嗣为鲁国卿大夫，纵然有人说他不是要挟，我是不相信的。”&lt;/p>
&lt;p>【注释】⑴臧武仲以防求为后于鲁——事见《左传》襄公二十三年。防，臧武仲的封邑，在今山东费县东北六十里之华城，离齐国边境很近。⑵要——平声，音腰，yāo。&lt;/p>
&lt;p>14.15子曰：“晋文公⑴谲⑵而不正，齐桓公⑴正而不谲。”&lt;/p>
&lt;p>【译文】孔子说：“晋文公诡诈好耍手段，作风不正派；齐桓公作风正派，不用诡诈，不耍手段。”&lt;/p>
&lt;p>【注释】⑴晋文公、齐桓公——晋文公名重耳，齐桓公名小白。齐桓、晋文是春秋时五霸中最有名声的两个霸主。⑵谲——音决，jué，欺诈，玩弄权术阴谋。&lt;/p>
&lt;p>14.16子路曰：“桓公杀公子纠，召忽死之，管仲不死⑴。”曰：“未仁乎？”子曰：“桓公九合⑵诸侯，不以兵车，管仲之力也。如其仁，如其仁⑶。”&lt;/p>
&lt;p>【译文】子路道：“齐桓公杀了他哥哥公子纠，［公子纠的师傅］召忽因此自杀，［但是他的另一师傅］管仲却活着。”接着又道：“管仲该不是有仁德的罢？”孔子道：“齐桓公多次地主持诸侯间的盟会，停止了战争，都是管仲的力量。这就是管仲的仁德，这就是管仲的仁德。”&lt;/p>
&lt;p>【注释】⑴管仲不死——齐桓公和公子纠都是齐襄公的弟弟。齐襄公无道，两人都怕牵累，桓公便由鲍叔牙侍奉逃往莒国，公子纠也由管仲和召忽侍奉逃往鲁国。襄公被杀以后，桓公先入齐国，立为君，便兴兵伐鲁，逼迫鲁国杀了公子纠，召忽自杀以殉，管仲却做了桓公的宰相。这段历史可看《左传》庄公八年和九年。⑵九合——齐桓公纠合诸侯共计十一次。这一“九”字实是虚数，不过表示其多罢了。⑶如其仁——王引之《经传释词》云：“如犹乃也。”扬雄《法言》三次仿用这种句法，义同。&lt;/p>
&lt;p>14.17子贡曰：“管仲非仁者与？桓公杀公子纠，不能死，又相之。”子曰：“管仲相桓公，霸诸侯，一匡天下，民到于今受其赐。微⑴管仲，吾其被⑵发左衽矣。岂若匹夫匹妇之为谅也，自经⑶于沟渎⑷而莫之知也？”&lt;/p>
&lt;p>【译文】子贡道：“管仲不是仁人罢？桓公杀掉了公子纠，他不但不以身殉难，还去辅相他。”孔子道：“管仲辅相桓公，称霸诸侯，使天下一切得到匡正，人民到今天还受到他的好处。假若没有管仲，我们都会披散着头发，衣襟向左边开，［沦为落后民族］了。他难道要像普通老百姓一样守着小节小信，在山沟中自杀，还没有人知道的吗？”&lt;/p>
&lt;p>【注释】⑴微——假若没有的意思，只用于和既成事实相反的假设句之首。⑵被——同“披”。⑶自经——自缢。⑷沟渎——犹《孟子·梁惠王》的“沟壑”。王夫之《四书稗疏》认为它是地名，就是《左传》的“句渎”，《史记》的“笙渎”，那么，孔子的匹夫匹妇就是指召忽而言，恐不可信。&lt;/p>
&lt;p>14.18公叔文子之臣大夫⑴僎与文子同升诸⑵公。子闻之，曰：“可以为‘文’⑶矣。”&lt;/p>
&lt;p>【译文】公叔文子的家臣大夫僎，［由于文子的推荐，］和文子一道做了国家的大臣。孔子知道这事，便道：“这便可以谥为‘文’了。”&lt;/p>
&lt;p>【注释】⑴毛奇龄《四书剩言》云：“臣大夫卽家大夫也。”把“臣大夫”三字不分，今不取。《后汉书·吴良传》李贤注说：“文子家臣名僎”云云，也可见唐初人不以“臣大夫”为一词。⑵诸——用法同“于”。⑶据《礼记·檀弓》，公叔文子实谥为贞惠文子。郑玄《礼记》注说：“不言‘贞惠’者？‘文’足以兼之。”&lt;/p>
&lt;p>14.19子言卫灵公之无道也，康子曰：“夫如是，奚而⑴不丧？”孔子曰：“仲叔圉⑵治宾客，祝鮀治宗庙，王孙贾治军旅。夫如是，奚其丧？”&lt;/p>
&lt;p>【译文】孔子讲到卫灵公的昏乱，康子道：“既然这样，为什么不败亡？”孔子道：“他有仲叔圉接待宾客，祝鮀管理祭祀，王孙贾统率军队，像这样，怎么会败亡？”&lt;/p></description></item><item><title>11先进篇第十一</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/11%E5%85%88%E8%BF%9B%E7%AF%87%E7%AC%AC%E5%8D%81%E4%B8%80/</link><pubDate>Sat, 11 Jan 2025 19:53:30 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/11%E5%85%88%E8%BF%9B%E7%AF%87%E7%AC%AC%E5%8D%81%E4%B8%80/</guid><description>&lt;h1 id="先进篇第十一">
 先进篇第十一
 &lt;a class="anchor" href="#%e5%85%88%e8%bf%9b%e7%af%87%e7%ac%ac%e5%8d%81%e4%b8%80">#&lt;/a>
&lt;/h1>
&lt;p>(共二十六章（朱熹《集注》把第二、第三两章合并为一章。刘宝楠正义则把第十八、第十九和第二十、第二十一各并为一章。）)&lt;/p>
&lt;p>11.1子曰：“先进⑴于礼乐，野人也；后进⑴于礼乐，君子也。如用之，则吾从先进。”&lt;/p>
&lt;p>【译文】孔子说：“先学习礼乐而后做官的是未曾有过爵禄的一般人，先有了官位而后学习礼乐的是卿大夫的子弟。如果要我选用人才，我主张选用先学习礼乐的人。”&lt;/p>
&lt;p>【注释】⑴先进，后进——这两个术语的解释很多，都不恰当。译文本刘宝楠《论语正义》之说而略有取舍。孔子是主张“学而优则仕”的人，对于当时的卿大夫子弟，承袭父兄的庇荫，在做官中去学习的情况可能不满意。《孟子·告子下》引葵丘之会盟约说，“士无世官”，又说，“取士必得”，那么，孔子所谓“先进”一般指“士”。&lt;/p>
&lt;p>11.2子曰：“从我于陈、蔡⑴者，皆不及门⑵也。”&lt;/p>
&lt;p>【译文】孔子说：“跟着我在陈国、蔡国之间忍饥受饿的人，都不在我这里了。”&lt;/p>
&lt;p>【注释】⑴从我于陈、蔡——“从”读去声，zòng。《史记·孔子世家》云：“吴伐陈，楚救陈，军于城父。闻孔子在陈、蔡之间，楚使人聘孔子，孔子将往拜礼。陈、蔡大夫谋曰：‘孔子贤者，所刺讥皆中诸侯之疾，今者久留陈、蔡之间，诸大夫所设行皆非仲尼之意。今楚，大国也，来聘孔子。孔子用于楚，则陈、蔡用事大夫危矣。’乃相与发徒役围孔子于野。不得已，绝粮。从者病，莫能兴。……于是使子贡至楚。楚昭王兴师迎孔子，然后得免。”⑵不及门——汉唐旧解“不及门”为“不及仕进之门”或“不仕于卿大夫之门”，刘宝楠因而傅会孟子的“无上下之交”，解为“孔子弟子无仕陈蔡者”，我则终嫌与文意不甚密合，故不取，而用朱熹之说。郑珍《巢经巢文集》卷二〈驳朱竹垞孔子门人考〉有云：“古之教者家有塾，塾在门堂之左右，施教受业者居焉。所谓‘皆不及门’，及此门也。‘奚为于丘（原作某，由于避讳故，今改）之门’，于此门也。滕更之‘在门’，在此门也，故曰‘愿留而受业于门’（按上两句俱见《孟子》）。”亦见朱熹此说之有据。&lt;/p>
&lt;p>11.3德行：颜渊，闵子骞，冉伯牛，仲弓。言语：宰我，子贡。政事：冉有，季路。文学⑴：子游，子夏。&lt;/p>
&lt;p>【译文】［孔子的学生各有所长。］德行好的：颜渊，闵子骞，冉伯牛，仲弓。会说话的：宰我，子贡。能办理政事的：冉有，季路。熟悉古代文献的：子游，子夏。&lt;/p>
&lt;p>【注释】⑴文学——指古代文献，卽孔子所传的《诗》、《书》、《易》等。皇侃《义疏》引范宁说如此。《后汉书·徐防传》说：“防上疏云：‘经书礼乐，定自孔子；发明章句，始于子夏”。似亦可为证。又这一章和上一章“从我于陈蔡者”不相连。朱熹《四书集注》说这十人卽当在陈、蔡之时随行的人，是错误的。根据《左传》，冉有其时在鲁国为季氏之臣，未必随行。根据《史记·仲尼弟子列传》，当时随行的还有子张，何以这里不说及？根据各种史料，确知孔子在陈绝粮之时为鲁哀公四年，时孔子六十一岁。又据《史记·仲尼弟子列传》，子游小于孔子四十五岁，子夏小于孔子四十四岁，那么，孔子在陈、蔡受困时，子游不过十六岁，子夏不过十七岁，都不算成人。这么年幼的人卽使已经在孔子门下受业，也未必都跟去了。可见这几句话不过是孔子对这十个学生的一时的叙述，由弟子转述下来的记载而已。&lt;/p>
&lt;p>11.4子曰：“回也非助我者也，于吾言无所不说。”&lt;/p>
&lt;p>【译文】孔子说：“颜回不是对我有所帮助的人，他对我的话没有不喜欢的。”&lt;/p>
&lt;p>11.5子曰：“孝哉闵子骞！人不间于其父母昆弟之言。”&lt;/p>
&lt;p>【译文】孔子说：“闵子骞真是孝顺呀，别人对于他爹娘兄弟称赞他的言语并无异议。”&lt;/p>
&lt;p>11.6南容三复白圭⑴，孔子以其兄之子妻之。&lt;/p>
&lt;p>【译文】南容把“白圭之玷，尚可磨也；斯言之玷，不可为也”的几句诗读了又读，孔子便把自己的侄女嫁给他。&lt;/p>
&lt;p>【注释】⑴白圭——白圭的诗四句见于《诗经·大雅·抑篇》，意思是白圭的污点还可以磨掉；我们言语中的污点便没有办法去掉。大概南容是一个谨小慎微的人，所以能做到“邦有道，不废；邦无道，免于刑戮”。（5.2）&lt;/p>
&lt;p>11.7季康子问⑴：“弟子孰为好学？”孔子对曰：“有颜回者好学，不幸短命死矣，今也则亡。”&lt;/p>
&lt;p>【译文】季康子问道：“你学生中谁用功？”孔子答道：“有一个叫颜回的用功，不幸短命死了，现在就再没有这样的人了。”&lt;/p>
&lt;p>【注释】⑴季康子问——鲁哀公曾经也有此问（6.3），孔子的回答较为详细。有人说，从此可见孔子与鲁君的问答和与季氏的问答有繁简之不同。&lt;/p>
&lt;p>11.8颜渊死，颜路⑴请子之车以为之⑵椁⑶。子曰：“才不才，亦各言其子也。鲤⑷也死，有棺而无椁。吾不徒行以为之椁。以吾从大夫之后⑸，不可徒行也。”&lt;/p>
&lt;p>【译文】颜渊死了，他父亲颜路请求孔子卖掉车子来替颜渊办外椁。孔子道：“不管有才能或者没有才能，但总是自己的儿子。我的儿子鲤死了，也只有内棺，没有外椁。我不能［卖掉车子］步行来替他买椁。因为我也曾做过大夫，是不可以步行的。”&lt;/p>
&lt;p>【注释】⑴颜路——颜回的父亲，据《史记·仲尼弟子列传》，名无繇，字路，也是孔子学生。⑵之——用法同“其”。⑶椁——也作“椁”，音果，guǒ。古代大官棺木至少用两重，里面的一重叫棺，外面又一重大的叫椁，平常我们说“内棺外椁”就是这个意思。⑷鲤也死——鲤，字伯鱼，年五十死，那时孔子年七十。⑹从大夫之后——孔子在鲁国曾经做过司寇的官，是大夫之位。不过此时孔子已经去位多年。他不说“我曾为大夫”，而说“吾从大夫之后”（在大夫行列之后随行的意思）只是一种谦逊的口气罢了。&lt;/p>
&lt;p>11.9颜渊死。子曰：“噫！天丧予！天丧予⑴！”&lt;/p>
&lt;p>【译文】颜渊死了，孔子道：“咳！天老爷要我的命呀！天老爷要我的命呀！”&lt;/p>
&lt;p>【注释】⑴天丧予——译文只就字面译出。&lt;/p>
&lt;p>11.10颜渊死，子哭之恸⑴。从者曰：“子恸矣！”曰：“有恸乎？非夫人之为恸⑵而谁为？”&lt;/p>
&lt;p>【译文】颜渊死了，孔子哭得很伤心。跟着孔子的人道：“您太伤心了！”孔子道：“真的太伤心了吗？我不为这样的人伤心，还为什么人伤心呢！”&lt;/p>
&lt;p>【注释】⑴恸——郑注：“恸，变动容貌”。马融注：“恸，哀过也”。译文从马。⑵非夫人之为恸而谁为——“非夫人之为恸”是“非为夫人恸”的倒装形式。“夫人”的“夫”读阳平，音扶，指示形容词，“那”的意思。“之为”的“之”是专作帮助倒装用的，无实际意义。这一整句下文的“谁为”，依现代汉语的格式说也是倒装，不过在古代，如果介词或者动词的宾语是疑问代词，一般都放在介词或者动词之上。&lt;/p>
&lt;p>11.11颜渊死，门人欲厚葬⑴之。子曰：“不可。”门人厚葬之。子曰：“回也视予犹父也，予不得视犹子也。非我也，夫二三子也。”&lt;/p>
&lt;p>【译文】颜渊死了，孔子的学生们想要很丰厚地埋葬他。孔子道：“不可以。”学生们仍然很丰厚地埋葬了他。孔子道：“颜回呀，你看待我好像看待父亲，我却不能够像对待儿子一般地看待你。这不是我的主意呀，是你那班同学干的呀。”&lt;/p>
&lt;p>【注释】⑴厚葬——根据《檀弓》所记载孔子的话，丧葬应该“称家之有亡，有，毋过礼。苟亡矣，敛首足形，还葬，县棺而封。”颜子家中本穷，而用厚葬，从孔子看来，是不应该的。孔子的叹，实是责备那些主持厚葬的学生。&lt;/p>
&lt;p>11.12季路问事鬼神。子曰：“未能事人，焉能事鬼？”&lt;/p>
&lt;p>曰：“敢⑴问死。”曰：“未知生，焉知死？”&lt;/p>
&lt;p>【译文】子路问服事鬼神的方法。孔子道：“活人还不能服事，怎么能去服事死人？”&lt;/p>
&lt;p>子路又道：“我大胆地请问死是怎么回事。”孔子道：“生的道理还没有弄明白，怎么能够懂得死？”&lt;/p>
&lt;p>【注释】⑴敢——表敬副词，无实际意义。《仪礼·士虞礼》郑玄注云：“敢，冒昧之词。”贾公彦疏云：“凡言‘敢’者，皆是以卑触尊不自明之意。”&lt;/p>
&lt;p>11.13闵子侍侧，誾誾如也；子路，行行⑴如也；冉有、子贡，侃侃如也。子乐。“若由也，不得其死然⑵。”&lt;/p>
&lt;p>【译文】闵子骞站在孔子身旁，恭敬而正直的样子；子路很刚强的样子；冉有、子贡温和而快乐的样子。孔子高兴起来了。［不过，又道：］“像仲由吧，怕得不到好死。”&lt;/p>
&lt;p>【注释】⑴行行——旧读去声，hàng。⑵不得其死然——得死，当时俗语，谓得善终。《左传》僖公十九年“得死为幸”；哀公十六年“得死，乃非我”。然，语气词，用法同“焉”。&lt;/p>
&lt;p>11.14鲁人⑴为长府。闵子骞曰：“仍旧贯，如之何？何必改作？”子曰：“夫人不言，言必有中。”&lt;/p>
&lt;p>【译文】鲁国翻修叫长府的金库。闵子骞道：“照着老样子下去怎么样？为什么一定要翻造呢？”孔子道：“这个人平日不大开口，一开口一定中肯。”&lt;/p>
&lt;p>【注释】⑴鲁人——“鲁人”的“人”指其国的执政大臣而言。此“人”和“民”的区别。&lt;/p>
&lt;p>11.15子曰：“由之瑟⑴奚为于丘之门？”门人不敬子路。子曰：“由也升堂矣，未入于室⑵也。”&lt;/p>
&lt;p>【译文】孔子道：“仲由弹瑟，为什么在我这里来弹呢？”因此孔子的学生们瞧不起子路。孔子道：“由么，学问已经不错了，只是还不够精深罢了。”&lt;/p>
&lt;p>【注释】⑴瑟——音涩，sè，古代的乐器，和琴同类。这里孔子不是不高兴子路弹瑟，而是不高兴他所弹的音调。《说苑·修文篇》对这段文字曾有所发挥。⑵升堂入室——这是比喻话。“堂”是正厅，“室”是内室。先入门，次升堂，最后入室，表示做学问的几个阶段。“入室”犹如今天的俗语“到家”。我们说，“这个人的学问到家了”，正是表示他的学问极好。&lt;/p>
&lt;p>11.16子贡问：“师与商也孰贤？”子曰：“师也过，商也不及。”&lt;/p>
&lt;p>曰：“然则师愈与？”子曰：“过犹不及。”&lt;/p>
&lt;p>【译文】子贡问孔子：“颛孙师（子张）和卜商（子夏）两个人，谁强一些？”孔子道：“师呢，有些过分；商呢，有些赶不上。”子贡道：“那么，师强一些吗？”孔子道：“过分和赶不上同样不好。”&lt;/p>
&lt;p>11.17季氏富于周公⑴，而求也为之聚敛而附益之⑵。子曰：“非吾徒也。小子鸣鼓而攻之，可也。”&lt;/p>
&lt;p>【译文】季氏比周公还有钱，冉求却又替他搜括，增加更多的财富。孔子道：“冉求不是我们的人，你们学生很可以大张旗鼓地来攻击他。”&lt;/p>
&lt;p>【注释】⑴周公——有两说：（甲）周公旦；（乙）泛指在周天子左右作卿士的人，如周公黑肩、周公阅之类。⑵聚敛而附益之——事实可参阅《左传》哀公十一年和十二年文。季氏要用田赋制度，增加赋税，使冉求征求孔子的意见，孔子则主张“施取其厚，事举其中，敛从其薄”。结果冉求仍旧听从季氏，实行田赋制度。聚敛，《礼记·大学》说：“百乘之家，不畜聚敛之臣。与其有聚敛之臣，宁有盗臣。”可见儒家为了维护统治，反对对人民的过分剥削。其思想渊源或者本于此章。&lt;/p>
&lt;p>11.18柴⑴也愚，参也鲁，师也辟⑵，由也喭。&lt;/p>
&lt;p>【译文】高柴愚笨，曾参迟钝，颛孙师偏激，仲由卤莽。&lt;/p>
&lt;p>【注释】⑴柴——高柴，字子羔，孔子学生，比孔子小三十岁（公元前521—？）。⑵辟——音辟，pì。黄式三《论语后案》云：“辟读若《左传》‘阙西辟’之辟，偏也。以其志过高而流于一偏也”。&lt;/p>
&lt;p>11.19子曰：“回也其庶⑴乎，屡空⑵。赐不受命⑶，而货殖焉，亿则屡中。”&lt;/p>
&lt;p>【译文】孔子说：“颜回的学问道德差不多了罢，可是常常穷得没有办法。端木赐不安本分，去囤积投机，猜测行情，竟每每猜对了。”&lt;/p>
&lt;p>【注释】⑴庶——庶几，差不多。一般用在称赞的场合。⑵空——世俗把“空”字读去声，不但无根据，也无此必要。“贫”和“穷”两字在古代有时有些区别，财货的缺少叫贫，生活无着落，前途无出路叫穷。“空”字却兼有这两方面的意思，所以用“穷得没有办法”来译它。⑶赐不受命——此语古今颇有不同解释，关键在于“命”字的涵义。有把“命”解为“教命”的，则“不受命”为“不率教”，其为错误甚明显。王弼、江熙把“命”解为“爵命”“禄命”，则“不受命”为“不做官”，自然很讲得通，可是子贡并不是不曾做官。《史记·仲尼弟子列传》说他“常相鲁卫”，《货殖列传》又说他“既学于仲尼，退而仕于卫，废着鬻财于曹鲁之间”，则子贡的经商和做官是不相先后的。那么，这一说既不合事实，也就不合孔子原意了。又有人把“命”讲为“天命”（皇《疏》引或说，朱熹《集注》），俞樾《羣经平议》则以为古之经商皆受命于官，“若夫不受命于官而自以其财市贱鬻贵，逐什一之利，是谓不受命而货殖。”两说皆言之成理，而未知孰是，故译文仅以“不安本分”言之。&lt;/p>
&lt;p>11.20子张问善人之道。子曰：“不践迹，亦不入于室⑴。”&lt;/p>
&lt;p>【译文】子张问怎样才是善人。孔子道：“善人不踩着别人的脚印走，学问道德也难以到家。”&lt;/p>
&lt;p>【注释】⑴善人——孔子曾三次论到“善人”，这章可和（7.26）（13.11）两章合看。&lt;/p>
&lt;p>11.21子曰：“论笃是与⑴，君子者乎？色庄者乎？”&lt;/p>
&lt;p>【译文】孔子说：“总是推许言论笃实的人，这种笃实的人是真正的君子呢？还是神情上伪装庄重的人呢？”&lt;/p>
&lt;p>【注释】⑴论笃是与——这是“与论笃”的倒装形式，“是”是帮助倒装之用的词，和“唯你是问”的“是”用法相同。“与”，许也。“论笃”就是“论笃者”的意思。&lt;/p>
&lt;p>11.22子路问：“闻斯行诸？”子曰：“有父兄在，如之何其闻斯行之？”&lt;/p>
&lt;p>冉有问：“闻斯行诸？”子曰：“闻斯行之。”&lt;/p>
&lt;p>公西华曰：“由也问闻斯行诸，子曰，‘有父兄在’，求也问闻斯行诸，子曰，‘闻斯行之’。赤也惑，敢问。”子曰：“求也退，故进之；由也兼人⑴，故退之。”&lt;/p></description></item><item><title>18微子篇第十八</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/18%E5%BE%AE%E5%AD%90%E7%AF%87%E7%AC%AC%E5%8D%81%E5%85%AB/</link><pubDate>Sat, 11 Jan 2025 19:53:29 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/18%E5%BE%AE%E5%AD%90%E7%AF%87%E7%AC%AC%E5%8D%81%E5%85%AB/</guid><description>&lt;h1 id="微子篇第十八">
 微子篇第十八
 &lt;a class="anchor" href="#%e5%be%ae%e5%ad%90%e7%af%87%e7%ac%ac%e5%8d%81%e5%85%ab">#&lt;/a>
&lt;/h1>
&lt;p>(共十一章)&lt;/p>
&lt;p>18.1微子⑴去之，箕子为之奴⑵，比干谏而死⑶。孔子曰：“殷有三仁焉。”&lt;/p>
&lt;p>【译文】［纣王昏乱残暴，］微子便离开了他，箕子做了他的奴隶，比干谏劝而被杀。孔子说：“殷商末年有三位仁人。”&lt;/p>
&lt;p>【注释】⑴微子——名启，纣王的同母兄，不过当他出生时，他的母亲尚为帝乙之妾，其后才立为妻，然后生了纣，所以帝乙死后，纣得嗣立，而微子不得立。事见《吕氏春秋·仲冬纪》。古书中唯《孟子·告子篇》认为微子是纣的叔父。⑵箕子为之奴——箕子，纣王的叔父。纣王无道，他曾进谏而不听，便披发佯狂，降为奴隶。⑶比干谏而死——比干也是纣的叔父，力谏纣王，纣王说，我听说圣人的心有七个孔，便剖开他的心而死。&lt;/p>
&lt;p>18.2柳下惠为士师，三黜。人曰：“子未可以去乎？”曰：“直道而事人，焉往而不三黜？枉道而事人，何必去父母之邦？”&lt;/p>
&lt;p>【译文】柳下惠做法官，多次地被撤职。有人对他说：“您不可以离开鲁国吗？”他道：“正直地工作，到哪里去不多次被撤职？不正直地工作，为什么一定要离开祖国呢？”&lt;/p>
&lt;p>18.3齐景公待孔子曰：“若季氏，则吾不能；以季孟之间待之。”曰：“吾老矣，不能用也。”孔子行。&lt;/p>
&lt;p>【译文】齐景公讲到对待孔子的打算时说：“用鲁君对待季氏的模样对待孔子，那我做不到；我要用次于季氏而高于孟氏的待遇来对待他。”不久，又说道：“我老了，没有什么作为了。”孔子离开了齐国。&lt;/p>
&lt;p>18.4齐人归女乐⑴，季桓子⑵受之，三日不朝，孔子行。&lt;/p>
&lt;p>【译文】齐国送了许多歌姬舞女给鲁国，季桓子接受了，三天不问政事，孔子就离职走了。&lt;/p>
&lt;p>【注释】⑴齐人归女乐——“归”同“馈”。此事可参阅《史记·孔子世家》和《韩非子·内储说》。⑵季桓子——季孙斯，鲁国定公以至哀公初年时的执政上卿，死于哀公三年。&lt;/p>
&lt;p>18.5楚狂接舆⑴歌而过孔子曰：“凤兮凤兮！何德之衰？往者不可谏，来者犹可追⑵。已而，已而！今之从政者殆而！”&lt;/p>
&lt;p>孔子下，欲与之言。趋而辟之，不得与之言。&lt;/p>
&lt;p>【译文】楚国的狂人接舆一面走过孔子的车子，一面唱着歌，道：“凤凰呀，凤凰呀！为什么这么倒霉？过去的不能再挽回，未来的还可不再着迷。算了吧，算了吧！现在的执政诸公危乎其危！”&lt;/p>
&lt;p>孔子下车，想同他谈谈，他却赶快避开，孔子没法同他谈。&lt;/p>
&lt;p>【注释】⑴接舆——曹之升《四书摭余说》云：“《论语》所记隐士皆以其事名之。门者谓之‘晨门’，杖者谓之‘丈人’，津者谓之‘沮’、‘溺’，接孔子之舆者谓之‘接舆’，非名亦非字也。”⑵犹可追——赶得上、来得及的意思，译文因图押韵，故用意译法。&lt;/p>
&lt;p>18.6长沮、桀溺耦而耕⑴，孔子过之，使子路问津焉。&lt;/p>
&lt;p>长沮曰：“夫执舆⑵者为谁？”&lt;/p>
&lt;p>子路曰：“为孔丘。”&lt;/p>
&lt;p>曰：“是鲁孔丘与？”&lt;/p>
&lt;p>曰：“是也。”&lt;/p>
&lt;p>曰：“是知津矣。”&lt;/p>
&lt;p>问于桀溺。&lt;/p>
&lt;p>桀溺曰：“子为谁？”&lt;/p>
&lt;p>曰：“为仲由。”&lt;/p>
&lt;p>曰：“是鲁孔丘之徒与？”&lt;/p>
&lt;p>对曰：“然。”&lt;/p>
&lt;p>曰：“滔滔者天下皆是也，而谁以⑶易之？且而⑷与其从辟⑸人之士也，岂若从辟世之士哉？”耰⑹而不辍。&lt;/p>
&lt;p>子路行以告。&lt;/p>
&lt;p>夫子怃⑺然曰：“鸟兽不可与同羣，吾非斯人之徒与而谁与？天下有道，丘不与易也。”&lt;/p>
&lt;p>【译文】长沮、桀溺两人一同耕田，孔子在那儿经过，叫子路去问渡口。&lt;/p>
&lt;p>长沮问子路道：“那位驾车子的是谁？”&lt;/p>
&lt;p>子路道：“是孔丘。”&lt;/p>
&lt;p>他又道：“是鲁国的那位孔丘吗？”&lt;/p>
&lt;p>子路道：“是的。”&lt;/p>
&lt;p>他便道：“他么，早晓得渡口在哪儿了。”&lt;/p>
&lt;p>去问桀溺。&lt;/p>
&lt;p>桀溺道：“您是谁？”&lt;/p>
&lt;p>子路道：“我是仲由。”&lt;/p>
&lt;p>桀溺道：“您是鲁国孔丘的门徒吗？”&lt;/p>
&lt;p>答道：“对的。”&lt;/p>
&lt;p>他便道：“像洪水一样的坏东西到处都是，你们同谁去改革它呢？你与其跟着［孔丘那种］逃避坏人的人，为什么不跟着［我们这些］逃避整个社会的人呢？”说完，仍旧不停地做田里工夫。&lt;/p>
&lt;p>子路回来报告给孔子。&lt;/p>
&lt;p>孔子很失望地道：“我们既然不可以同飞禽走兽合羣共处，若不同人羣打交道，又同什么去打交道呢？如果天下太平，我就不会同你们一道来从事改革了。”&lt;/p>
&lt;p>【注释】⑴长沮、桀溺耦而耕——“长溺”“桀溺”不是真姓名。其姓名当时已经不暇询问，后世更无由知道了。耦耕是古代耕田的一种方法。春秋时代已经用牛耕田，不但由冉耕字伯牛、司马耕字子牛的现象可以看出，《国语·晋语》云：“其子孙将耕于齐，宗庙之牺为畎亩之勤”，尤为确证。耦耕的方法说法不少，都难说很精确。下文又说“耰而不辍”，则这耦耕未必是执耒，像夏炘学《礼管释·释二耜为耦》所说的。估计这个耦耕不过说二人做庄稼活罢了。1959年科学出版社《农史研究集刊》万国钧〈耦耕考〉对此有解释。上海中华书局《中华文史论丛》第三辑何兹全〈谈耦耕〉对万说有补充，也只能作参考。⑵执舆——就是执辔（拉马的缰绳）。本是子路做的，因子路已下车，所以孔子代为驾御。⑶以——与也，和下文“不可与同羣”，“斯人之徒与而谁与”，“丘不与易也”诸“与”字同义。⑷而——同“尔”。⑸辟——同“避”。⑹耰——音忧，yōu，播种之后，再以土覆之，摩而平之，使种入土，鸟不能啄，这便叫耰。⑺怃——音舞。wǔ，怃然，怅惘失意之貌。&lt;/p>
&lt;p>18.7子路从而后，遇丈人，以杖荷筱⑴。&lt;/p>
&lt;p>子路问曰：“子见夫子乎？”&lt;/p>
&lt;p>丈人曰：“四体不勤，五谷不分⑵。孰为夫子？”植其杖而芸。&lt;/p>
&lt;p>子路拱而立。&lt;/p>
&lt;p>止子路宿，杀鸡为黍⑶而食之，见其二子焉。&lt;/p>
&lt;p>明日，子路行以告。&lt;/p>
&lt;p>子曰：“隐者也。”使子路反见之。至，则行矣。&lt;/p>
&lt;p>子路曰：“不仕无义。长幼之节，不可废也；君臣之义，如之何其废之？欲洁其身，而乱大伦。君子之仕也，行其义也。道之不行，已知之矣。”&lt;/p>
&lt;p>【译文】子路跟随着孔子，却远落在后面，碰到一个老头，用拐杖挑着除草用的工具。&lt;/p>
&lt;p>子路问道：“您看见我的老师吗？”&lt;/p>
&lt;p>老头道：“你这人，四肢不劳动，五谷不认识，谁晓得你的老师是什么人？”说完，便扶着拐杖去锄草。&lt;/p>
&lt;p>子路拱着手恭敬地站着。&lt;/p>
&lt;p>他便留子路到他家住宿，杀鸡、作饭给子路吃，又叫他两个儿子出来相见。&lt;/p>
&lt;p>第二天，子路赶上了孔子，报告了这件事。&lt;/p>
&lt;p>孔子道：“这是位隐士。”叫子路回去再看看他。子路到了那里，他却走开了。&lt;/p>
&lt;p>子路便道：“不做官是不对的。长幼间的关系，是不可能废弃的；君臣间的关系，怎么能不管呢？你原想不沾污自身，却不知道这样隐居便是忽视了君臣间的必要关系。君子出来做官，只是尽应尽之责。至于我们的政治主张行不通，早就知道了。”&lt;/p>
&lt;p>【注释】⑴筱——音掉，diào，古代除田中草所用的工具。说文作“莜”。⑵四体不勤，五谷不分——这二句，宋吕本中《紫微杂说》以至清朱彬《经传考证》、宋翔凤《论语发微》都说是丈人说自己。其余更多人主张说是丈人责子路。译文从后说。⑶为黍——黍就是现在的黍子，也叫黄米。它比当时的主要食粮稷（小米）的收获量小，因此在一般人中也算是比较珍贵的主食。杀鸡做菜，为黍做饭，这在当时是很好的招待了。&lt;/p>
&lt;p>18.8逸⑴民：伯夷、叔齐、虞仲、夷逸、朱张、柳下惠、少连⑵。子曰：“不降其志，不辱其身，伯夷、叔齐与！”谓“柳下惠、少连，降志辱身矣，言中伦，行中虑，其斯而已矣。”谓“虞仲、夷逸，隐居放言，身中清，废中权。我则异于是，无可无不可。”&lt;/p>
&lt;p>【译文】古今被遗落的人才有伯夷、叔齐、虞仲、夷逸、朱张、柳下惠、少连。孔子道：“不动摇自己意志，不辱没自己身份，是伯夷、叔齐罢！”又说，“柳下惠、少连降低自己意志，屈辱自己身份了，可是言语合乎法度，行为经过思虑，那也不过如此罢了。”又说：“虞仲、夷逸逃世隐居，放肆直言。行为廉洁，被废弃也是他的权术。我就和他们这些人不同，没有什么可以，也没有什么不可以。”&lt;/p>
&lt;p>【注释】⑴逸——同“佚”，《论语》两用“逸民”，义都如此。《孟子·公孙丑上》云：“柳下惠……遗佚而不怨，阨穷而不闵。”这一“逸”正是《孟子》“遗佚”之义。说本黄式三《论语后案》。⑵虞仲、夷逸、朱张、少连——四人言行多已不可考。虞仲前人认为就是吴太伯之弟仲雍，不可信。夷逸曾见《尸子》，有人劝他做官，他不肯。少连曾见《礼记·杂记》，孔子说他善于守孝。夏炘《景紫堂文集》卷三有〈逸民虞仲、夷逸、朱张皆无考说〉，于若干附会之说有所驳正。&lt;/p>
&lt;p>18.9大师挚⑴适齐，亚饭干适楚，三饭缭适蔡，四饭缺适秦⑵，鼓方叔入于河，播鼗武入于汉，少师阳、击磬襄入于海。&lt;/p>
&lt;p>【译文】太师挚逃到了齐国，二饭乐师干逃到了楚国，三饭乐师缭逃到了蔡国，四饭乐师缺逃到了秦国，打鼓的方叔入居黄河之滨，摇小鼓的武入居汉水之涯，少师阳和击磬的襄入居海边。&lt;/p></description></item><item><title>02为政篇第二</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/02%E4%B8%BA%E6%94%BF%E7%AF%87%E7%AC%AC%E4%BA%8C/</link><pubDate>Sat, 11 Jan 2025 19:53:28 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/02%E4%B8%BA%E6%94%BF%E7%AF%87%E7%AC%AC%E4%BA%8C/</guid><description>&lt;h1 id="为政篇第二">
 为政篇第二
 &lt;a class="anchor" href="#%e4%b8%ba%e6%94%bf%e7%af%87%e7%ac%ac%e4%ba%8c">#&lt;/a>
&lt;/h1>
&lt;p>(共二十四章)&lt;/p>
&lt;p>2.1子曰：“为政以德，譬如北辰⑴居其所而众星共⑵之。”&lt;/p>
&lt;p>【译文】孔子说：“用道德来治理国政，自己便会像北极星一般，在一定的位置上，别的星辰都环绕着它。”&lt;/p>
&lt;p>【注释】⑴北辰——由于地球自转轴正对天球北极，在地球自转和公转所反映出来的恒星周日和周年视运动中，天球北极是不动的，其它恒星则绕之旋转。我国黄河中、下游流域，约为北纬36度，因之天球北极也高出北方地平线上36度。孔子所说的北辰，不是指天球北极，而是指北极星。天球北极虽然不动，其它星辰都环绕着它动，但北极星也是动的，而且转动非常快。祗是因为它距离地球太远，约782光年，人们不觉得它移动罢了。距今四千年前北极在右枢（天龙座α）附近，今年则在勾陈一（小熊座α）。⑵共——同拱，与《左传》僖公三十二年“尔墓之木拱矣”的“拱”意义相近，环抱、环绕之意。&lt;/p>
&lt;p>2.2子曰：“诗三百⑴，一言以蔽之，曰：‘思无邪⑵’。”&lt;/p>
&lt;p>【译文】孔子说：“《诗经》三百篇，用一句话来概括它，就是‘思想纯正’。”&lt;/p>
&lt;p>【注释】⑴诗三百——《诗经》实有三百五篇，“三百”只是举其整数。⑵思无邪——“思无邪”一语本是《诗经·鲁颂·駉篇》之文，孔子借它来评论所有诗篇。思字在《駉篇》本是无义的语首词，孔子引用它却当思想解，自是断章取义。俞樾《曲园杂纂》说项说这也是语辞，恐不合孔子原意。&lt;/p>
&lt;p>2.3子曰：“道⑴之以政，齐之以刑，民免⑵而无耻；道之以德，齐之以礼，有耻且格⑶。”&lt;/p>
&lt;p>【译文】孔子说：“用政法来诱导他们，使用刑罚来整顿他们，人民只是暂时地免于罪过，却没有廉耻之心。如果用道德来诱导他们，使用礼教来整顿他们，人民不但有廉耻之心，而且人心归服。”&lt;/p>
&lt;p>【注释】⑴道——有人把它看成“道千乘之国”的“道”一样，治理的意思。也有人把它看成“导”字，引导的意思，我取后一说。⑵免——先秦古书若单用一个“免”字，一般都是“免罪”、“免刑”、“免祸”的意思。⑶格——这个字的意义本来很多，在这里有把它解为“来”的，也有解为“至”的，还有解为“正”的，更有写作“恪”，解为“敬”的。这些不同的讲解都未必符合孔子原意。《礼记·缁衣篇》：“夫民，教之以德，齐之以礼，则民有格心；教之以政，齐之以刑，则民有遯心。”这话可以看作孔子此言的最早注释，较为可信。此处“格心”和“遯心”相对成文，“遯”卽“遁”字，逃避的意思。逃避的反面应该是亲近、归服、向往，所以用“人心归服”来译它。&lt;/p>
&lt;p>2.4子曰：“吾十有⑴五而志于学，三十而立⑵，四十而不惑⑶，五十而知天命⑷，六十而耳顺⑸，七十而从心所欲，不踰矩⑹。”&lt;/p>
&lt;p>【译文】孔子说：“我十五岁，有志于学问；三十岁，［懂礼仪，］说话做事都有把握；四十岁，［掌握了各种知识，］不致迷惑；五十岁，得知天命；六十岁，一听别人言语，便可以分别真假，判明是非；到了七十岁，便随心所欲，任何念头不越出规矩。”&lt;/p>
&lt;p>【注释】⑴有——同又。古人在整数和小一位的数字之间多用“有”字，不用“又”字。⑵立——泰伯篇说：“立于礼。”季氏篇又说：“不学礼，无以立。”因之译文添了“懂得礼仪”几个字。“立”是站立的意思，这里是“站得住”的意思，为求上下文的流畅，意译为遇事“都有把握”。⑶不惑——子罕篇和宪问篇都有“知者不惑”的话，所以译文用“掌握了知识”来说明“不惑”。⑷天命——孔子不是宿命论者，但也讲天命。孔子的天命，我已有文探讨。后来的人虽然谈得很多，未必符合孔子本意。因此，这两个字暂不译出。⑸耳顺——这两个字很难讲，企图把它讲通的也有很多人，但都觉牵强。译者姑且作如此讲解。⑷从心所欲不踰矩——“从”字有作“纵”字的，皇侃《义疏》也读为“纵”，解为放纵。柳宗元〈与杨晦之书〉说“孔子七十而纵心”，不但“从”字写作“纵”，而且以“心”字绝句，“所欲”属下读。“七十而纵心，所欲不踰矩”。但“纵”字古人多用于贬义，如《左传》昭公十年“我实纵欲”，柳读难从。&lt;/p>
&lt;p>2.5孟懿子⑴问孝。子曰：“无违⑵。”&lt;/p>
&lt;p>樊迟⑶御，子告之曰：“孟孙问孝于我，我对曰，无违。”樊迟曰：“何谓也？”子曰：“生，事之以礼⑷；死，葬之以礼，祭之以礼。”&lt;/p>
&lt;p>【译文】孟懿子向孔子问孝道。孔子说：“不要违背礼节。”不久，樊迟替孔子赶车子，孔子便告诉他说：“孟孙向我问孝道，我答复说，不要违背礼节。”樊迟道：“这是什么意思？”孔子道：“父母活着，依规定的礼节侍奉他们；死了，依规定的礼节埋葬他们，祭祀他们。”&lt;/p>
&lt;p>【注释】⑴孟懿子——鲁国的大夫，三家之一，姓仲孙，名何忌，“懿”是谥号。他父亲是孟僖子仲孙貜。《左传》昭公七年说，孟僖子将死，遗嘱要他向孔子学礼。⑵无违——黄式三《论语后案》说：“《左传》桓公二年云，‘昭德塞违’，‘灭德立违’，‘君违，不忘谏之以德’；六年传云：‘有嘉德而无违心’，襄公二十六年传云，‘正其违而治其烦’……古人凡背礼者谓之违。”因此，我把“违”译为“违礼”。王充《论衡·问孔篇》曾经质问孔子，为什么不讲“无违礼”，而故意省略讲为“无违”，难道不怕人误会为“毋违志”吗？由此可见“违”字的这一含义在后汉时已经不被人所了解了。⑶樊迟——孔子学生，名须，字子迟，比孔子小四十六岁。［《史记·仲尼弟子列传》作小三十六岁，《孔子家语》作小四十六岁。若从《左传》哀公十一年所记载的樊迟的事考之，可能《史记》的“三”系“亖”（古四字）之误。］⑷生，事之以礼——“生”和下句“死”都是表示时间的节缩语，所以自成一逗。古代的礼仪有一定的差等，天子、诸侯、大夫、士、庶人各不相同。鲁国的三家是大夫，不但有时用鲁公（诸侯）之礼，甚至有时用天子之礼。这种行为当时叫做“僭”，是孔子所最痛心的。孔子这几句答语，或者是针对这一现象发出的。&lt;/p>
&lt;p>2.6孟武伯⑴问孝。子曰：“父母唯其⑵疾之忧。”&lt;/p>
&lt;p>【译文】孟武伯向孔子请教孝道。孔子道：“做爹娘的只是为孝子的疾病发愁。”&lt;/p>
&lt;p>【注释】⑴孟武伯——仲孙彘，孟懿子的儿子，“武”是谥号。⑵其——第三人称表示领位的代名词，相当于“他的”、“他们的”。但这里所指代的是父母呢，还是儿女呢？便有两说。王充《论衡·问孔篇》说：“武伯善忧父母，故曰，唯其疾之忧。”《淮南子·说林训》说：“忧父之疾者子，治之者医。”高诱注云：“父母唯其疾之忧，故曰忧之者子。”可见王充、高诱都以为“其”字是指代父母而言。马融却说：“言孝子不妄为非，唯疾病然后使父母忧。”把“其”字代孝子。两说都可通，而译文采取马融之说。&lt;/p>
&lt;p>2.7子游⑴问孝。子曰：“今之孝者，是谓能养⑵。至于⑶犬马，皆能有养⑷；不敬，何以别乎？”&lt;/p>
&lt;p>【译文】子游问孝道。孔子说：“现在的所谓孝，就是说能够养活爹娘便行了。对于狗马都能够得到饲养；若不存心严肃地孝顺父母，那养活爹娘和饲养狗马怎样去分别呢？”&lt;/p>
&lt;p>【注释】⑴子游——孔子学生，姓言，名偃，字子游，吴人，小于孔子四十五岁。⑵养——“养父母”的“养”从前人都读去声，音漾，yàng。⑶至于——张相的《诗词曲语词汇释》把“至于”解作“卽使”、“就是”。在这一段中固然能够讲得文从字顺，可是“至于”的这一种用法，在先秦古书中仅此一见，还难于据以肯定。我认为这一“至于”和《孟子·告子上》的“惟耳亦然。至于声，天下期于师旷，是天下之耳相似也。惟目亦然。至于子都，天下莫不知其姣也。”的“至于”用法相似。都可用“谈到”、“讲到”来译它。不译也可。⑷至于犬马皆能有养——这一句很有些不同的讲法。一说是犬马也能养活人，人养活人，若不加以敬，便和犬马的养活人无所分别。这一说也通。还有一说是犬马也能养活它自己的爹娘（李光地《论语剳记》、翟灏《四书考异》），可是犬马在事实上是不能够养活自己爹娘的，所以这说不可信。还有人说，犬马是比喻小人之词（刘宝楠《论语正义》引刘宝树说），可是用这种比喻的修辞法，在《论语》中找不出第二个相似的例子，和《论语》的文章风格不相侔，更不足信。&lt;/p>
&lt;p>2.8子夏问孝。子曰：“色难⑴。有事，弟子⑵服其劳；有酒食⑶，先生馔⑷，曾⑸是以为孝乎？”&lt;/p>
&lt;p>【译文】子夏问孝道。孔子道：“儿子在父母前经常有愉悦的容色，是件难事。有事情，年轻人效劳；有酒有肴，年长的人吃喝，难道这竟可认为是孝么？”&lt;/p>
&lt;p>【注释】⑴色难——这句话有两说，一说是儿子侍奉父母时的容色。《礼记·祭义篇》说：“孝子之有深爱者必有和气，有和气者必有愉色，有愉色者必有婉容。”可以做这两个字的注脚。另一说是侍奉父母的容色，后汉的经学家包咸、马融都如此说。但是，若原意果如此的话，应该说为“侍色为难”，不该简单地说为“色难”，因之我不采取。⑵弟子、先生——刘台拱《论语骈枝》云：“《论语》言‘弟子’者七，其二皆年幼者，其五谓门人。言‘先生’者二、皆谓年长者。”马融说：“先生谓父兄也。”亦通。⑶食——旧读去声，音嗣，sì，食物。不过现在仍如字读shí，如“主食”、“副食”、“面食”。⑷馔——zhuàn，吃喝。《鲁论》作“馂”。馂，食余也。那么这句便当如此读：“有酒，食先生馂”，而如此翻译：“有酒，幼辈吃其剩余。”⑸曾——音层，céng，副词，竟也。&lt;/p>
&lt;p>2.9子曰：“吾与回⑴言终日，不违，如愚。退而省其私⑵，亦足以发，回也不愚。”&lt;/p>
&lt;p>【译文】孔子说：“我整天和颜回讲学，他从不提反对意见和疑问，像个蠢人。等他退回去自己研究，却也能发挥，可见颜回并不愚蠢。”&lt;/p>
&lt;p>【注释】⑴回——颜回，孔子最得意的学生，鲁国人，字子渊，小孔子三十岁（《史记·仲尼弟子列传》如此。但根据毛奇龄《论语稽求篇》和崔适《论语足征记》的考证，《史记》的“三十”应为“四十”之误，颜渊实比孔子小四十岁，公元前511—480）。⑵退而省其私——朱熹的《集注》以为孔子退而省颜回的私，“则见其日用动静语默之间皆足以发明夫子之道。”用颜回的实践来证明他能发挥孔子之道，说也可通。&lt;/p>
&lt;p>2.10子曰：“视其所以⑴，观其所由⑵，察其所安⑶。人焉廋哉⑷？人焉廋哉？”&lt;/p>
&lt;p>【译文】孔子说：“考查一个人所结交的朋友；观察他为达到一定目的所采用的方式方法；了解他的心情，安于什么，不安于什么。那么，这个人怎样隐藏得住呢？这个人怎样隐藏得住呢？”&lt;/p>
&lt;p>【注释】⑴所以——“以”字可以当“用”讲，也可以当“与”讲。如果解释为“用”，便和下句“所由”的意思重复，因此我把它解释为“与”，和微子篇第十八“而谁以易之”的“以”同义。有人说“以犹为也”。“视其所以”卽《大戴礼·文王官人篇》的“考其所为”，也通。⑵所由——“由”，“由此行”的意思。学而篇第一的“小大由之”，雍也篇第六的“行不由径”，泰伯篇第八的“民可使由之”的“由”都如此解。“所由”是指所从由的道路，因此我用方式方法来译述。⑶所安——“安”就是阳货篇第十七孔子对宰予说的“女安，则为之”的“安”。一个人未尝不错做一两件坏事，如果因此而心不安，仍不失为好人。因之译文多说了几句。⑷人焉廋哉——焉，何处；廋，音搜，sōu，隐藏，藏匿。这句话机械地翻译，便是：“这个人到哪里去隐藏呢。”《史记·魏世家》述说李克的观人方法是“居视其所亲，富视其所与，达视其所举，穷视其所不为，贫视其所不取”。虽较具体，却无此深刻。&lt;/p>
&lt;p>2.11子曰：“温故而知新⑴，可以为师矣。”&lt;/p>
&lt;p>【译文】孔子说：“在温习旧知识时，能有新体会、新发现，就可以做老师了。”&lt;/p>
&lt;p>【注释】⑴温故而知新——皇侃《义疏》说，“温故”就是“月无忘其所能”，“知新”就是“日知其所亡”（19.5），也通。&lt;/p>
&lt;p>2.12子曰：“君子不器⑴。”&lt;/p>
&lt;p>【译文】孔子说：“君子不像器皿一般，［只有一定的用途。］”&lt;/p>
&lt;p>【注释】⑴古代知识范围狭窄，孔子认为应该无所不通。后人还曾说，一事之不知，儒者之耻。虽然有人批评孔子“博学而无所成名”（9.2），但孔子仍说“君子不器”。&lt;/p>
&lt;p>2.13子贡问君子。子曰：“先行其言而后从之。”&lt;/p>
&lt;p>【译文】子贡问怎样才能做一个君子。孔子道：“对于你要说的话，先实行了，再说出来［这就够说是一个君子了］。”&lt;/p>
&lt;p>2.14子曰：“君子周而不比⑴，小人比而不周。”&lt;/p>
&lt;p>【译文】孔子说：“君子是团结，而不是勾结；小人是勾结，而不是团结。”&lt;/p>
&lt;p>【注释】⑴周、比——“周”是以当时所谓道义来团结人，“比”则是以暂时共同利害互相勾结。“比”旧读去声bì。&lt;/p>
&lt;p>2.15子曰：“学而不思则罔⑴，思而不学则殆⑵。”&lt;/p>
&lt;p>【译文】孔子说：“只是读书，却不思考，就会受骗；只是空想，却不读书，就会缺乏信心。”&lt;/p>
&lt;p>【注释】⑴罔——诬罔的意思。“学而不思”则受欺，似乎是《孟子·尽心下》“尽信书，不如无书”的意思。⑵殆——《论语》的“殆”（dài）有两个意义。下文第十八章“多见阙殆”的“殆”当“疑惑”解（说本王引之《经义述闻》），微子篇“今之从政者殆而”的“殆”当危险解。这里两个意义都讲得过去，译文取前一义。古人常以“罔”“殆”对文，如《诗经·小雅·节南山》云：“弗问弗仕，勿罔君子，式夷式己，无小人殆。”（“无小人殆”卽“无殆小人”，因韵脚而倒装。）旧注有以“罔然无所得”释“罔”，以“精神疲殆”释“殆”的，似乎难以圆通。&lt;/p>
&lt;p>2.16子曰：“攻⑴乎异端⑵，斯⑶害也已⑷。”&lt;/p>
&lt;p>【译文】孔子说：“批判那些不正确的议论，祸害就可以消灭了。”&lt;/p>
&lt;p>【注释】⑴攻——《论语》共享四次“攻”字，像先进篇的“小子鸣鼓而攻之”，颜渊篇的“攻其恶，无攻人之恶”的三个“攻”字都当“攻击”解，这里也不应例外。很多人却把它解为“治学”的“治”。⑵异端——孔子之时，自然还没有诸子百家，因之很难译为“不同的学说”，但和孔子相异的主张、言论未必没有，所以译为“不正确的议论”。⑶斯——连词，“这就”的意思。⑷已——应该看为动词，止也。因之我译为“消灭”。如果把“攻”字解为“治”，那么“斯”字得看作指代词，“这”的意思；“也已”得看作语气词。全文便如此译：“从事于不正确的学术研究，这是祸害哩。”一般的讲法是如此的，虽能文从字顺，但和《论语》词法和句法都不合。&lt;/p>
&lt;p>2.17子曰：“由⑴！诲女知之乎！知之为知之，不知为不知，是知也⑵。”&lt;/p>
&lt;p>【译文】孔子说：“由！教给你对待知或不知的正确态度吧！知道就是知道，不知道就是不知道，这就是聪明智慧。”&lt;/p>
&lt;p>【注释】⑴由——孔子学生，仲由，字子路，卞（故城在今山东泗水县东五十里）人，小于孔子九岁。（公元前542—480）⑵是知也——《荀子·子道篇》也载了这一段话，但比这详细。其中有两句道：“言要则知，行至则仁。”因之读“知”为“智”。如果“知”如字读，便该这样翻译：这就是对待知或不知的正确态度。&lt;/p>
&lt;p>2.18子张⑴学干禄⑵。子曰：“多闻阙疑，慎言其余，则寡尤；多见阙殆⑶，慎行其余，则寡悔。言寡尤，行⑷寡悔，禄在其中矣。”&lt;/p>
&lt;p>【译文】子张向孔子学求官职得俸禄的方法。孔子说：“多听，有怀疑的地方，加以保留；其余足以自信的部分，谨慎地说出，就能减少错误。多看，有怀疑的地方，加以保留；其余足以自信的部分，谨慎地实行，就能减少懊悔。言语的错误少，行动的懊悔少，官职俸禄就在这里面了。”&lt;/p>
&lt;p>【注释】⑴子张——孔子学生颛孙师，字子张，陈人，小于孔子四十八岁。（公元前503—？）⑵干禄——干，求也，禄，旧时官吏的俸给。⑶阙殆——和“阙疑”同意。上文作“阙疑”，这里作“阙殆”。“疑”和“殆”是同义词，所谓“互文”见义。⑷行——名词，去声，xìng。&lt;/p>
&lt;p>2.19哀公⑴问曰：“何为则民服？”孔子对曰⑵：“举直错诸枉⑶，则民服；举枉错诸直，则民不服。”&lt;/p>
&lt;p>【译文】鲁哀公问道：“要做些甚么事才能使百姓服从呢？”，孔子答道：“把正直的人提拔出来，放在邪曲的人之上，百姓就服从了；若是把邪曲的人提拔出来，放在正直的人之上，百姓就会不服从。”&lt;/p>
&lt;p>【注释】⑴哀公——鲁君，姓姬，名蒋，定公之子，继定公而卽位，在位二十七年。（公元前494—466）“哀”是谥号。⑵孔子对曰——《论语》的行文体例是，臣下对答君上的询问一定用“对曰”，这里孔子答复鲁君之问，所以用“孔子对曰”。⑶错诸枉——“错”有放置的意思，也有废置的意思。一般人把它解为废置，说是“废置那些邪恶的人”（把“诸”字解为“众”）。这种解法和古汉语语法规律不相合。因为“枉”、“直”是以虚代实的名词，古文中的“众”、“诸”这类数量形容词，一般只放在真正的实体词之上，不放在这种以虚代实的词之上。这一规律，南宋人孙季和（名应时）便已明白。王应麟《困学纪闻》曾引他的话说：“若诸家解，何用二‘诸’字？”这二“诸”字只能看做“之于”的合音，“错”当“放置”解。“置之于枉”等于说“置之于枉人之上”，古代汉语“于”字之后的方位词有时可以省略。朱亦栋《论语札记》解此句不误。&lt;/p>
&lt;p>2.20季康子⑴问：“使民敬、忠以⑵劝，如之何？”子曰：“临之以庄，则敬；孝慈，则忠；举善而教不能，则劝。”&lt;/p>
&lt;p>【译文】季康子问道：“要使人民严肃认真，尽心竭力和互相勉励，应该怎么办呢？”孔子说：“你对待人民的事情严肃认真，他们对待你的政令也会严肃认真了；你孝顺父母，慈爱幼小，他们也就会对你尽心竭力了；你提拔好人，教育能力弱的人，他们也就会劝勉了。”&lt;/p>
&lt;p>【注释】⑴季康子——季孙肥，鲁哀公时正卿，当时政治上最有权力的人。“康”是谥号。⑵以——连词，与“和”同。&lt;/p>
&lt;p>2.21或谓孔子曰：“子奚不为政？”子曰：“《书》⑴云：‘孝乎惟孝，友于兄弟，施⑵于有政⑶。’是亦为政，奚其为为政？”&lt;/p>
&lt;p>【译文】有人对孔子道：“你为什么不参与政治？”孔子道：“《尚书》上说，‘孝呀，只有孝顺父母，友爱兄弟，把这种风气影响到政治上去。’这也就是参与政治了呀，为什么定要做官才算参与政治呢？”&lt;/p>
&lt;p>【注释】⑴书云——以下三句是《尚书》的逸文，作《伪古文尚书》的便从这里采入《君陈篇》。⑵施——这里应该当“延及”讲，从前人解为“施行”，不妥。⑶施于有政——“有”字无义，加于名词之前，这是古代构词法的一种形态，详拙著《文言语法》。杨遇夫先生说：“政谓卿相大臣，以职言，不以事言。”（说详增订《积微居小学金石论丛·〈论语〉子奚不为政解》）那么。这句话便当译为“把这种风气影响到卿相大臣上去”。&lt;/p>
&lt;p>2.22子曰：“人而无信⑴，不知其可也。大车无輗，小车无軏⑵，其何以行之哉？”&lt;/p>
&lt;p>【译文】孔子说：“做为一个人，却不讲信誉，不知那怎么可以。譬如大车子没有安横木的輗，小车子没有安横木的軏，如何能走呢？”&lt;/p>
&lt;p>【注释】⑴人而无信——这“而”字不能当“如果”讲。不说“人无信”，而说“人而无信”者，表示“人”字要作一读。古书多有这种句法，译文似能表达其意。⑵輗、軏——輗音倪，ní；軏音月，yuè。古代用牛力的车叫大车，用马力的车叫小车。两者都要把牲口套在车辕上。车辕前面有一道横木，就是驾牲口的地方。那横木，大车上的叫做鬲，小车上的叫做衡。鬲、衡两头都有关键（活销），輗就是鬲的关键，軏就是衡的关键。车子没有它，自然无法套住牲口，那怎么能走呢？&lt;/p></description></item><item><title>15卫灵公篇第十五</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/15%E5%8D%AB%E7%81%B5%E5%85%AC%E7%AF%87%E7%AC%AC%E5%8D%81%E4%BA%94/</link><pubDate>Sat, 11 Jan 2025 19:53:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/15%E5%8D%AB%E7%81%B5%E5%85%AC%E7%AF%87%E7%AC%AC%E5%8D%81%E4%BA%94/</guid><description>&lt;h1 id="卫灵公篇第十五">
 卫灵公篇第十五
 &lt;a class="anchor" href="#%e5%8d%ab%e7%81%b5%e5%85%ac%e7%af%87%e7%ac%ac%e5%8d%81%e4%ba%94">#&lt;/a>
&lt;/h1>
&lt;p>(共四十二章（朱熹《集注》把第一、第二两章并为一章，所以说“凡四十一章”。）)&lt;/p>
&lt;p>15.1卫灵公问陈⑴于孔子。孔子对曰：“俎豆⑵之事，则尝闻之矣；军旅之事，未之学也。”明日遂行。&lt;/p>
&lt;p>【译文】卫灵公向孔子问军队陈列之法。孔子答道：“礼仪的事情，我曾经听到过；军队的事情，从来没学习过。”第二天便离开卫国。&lt;/p>
&lt;p>【注释】⑴陈——就是今天的“阵”字。⑵俎豆之事——俎和豆都是古代盛肉食的器皿，行礼时用它，因之藉以表示礼仪之事。这种用法和泰伯篇第八的“笾豆之事”相同。&lt;/p>
&lt;p>15.2在陈绝粮，从者病，莫能兴。子路愠见曰：“君子亦有穷乎？”子曰：“君子固穷，小人穷斯滥矣。”&lt;/p>
&lt;p>【译文】孔子在陈国断绝了粮食，跟随的人都饿病了，爬不起床来。子路很不高兴地来见孔子，说道：“君子也有穷得毫无办法的时候吗？”孔子道：“君子虽然穷，还是坚持着；小人一穷便无所不为了。”&lt;/p>
&lt;p>15.3子曰：“赐也，女以予为多学而识之者与？”对曰：“然，非与？”曰：“非也，予一以贯之⑴。”&lt;/p>
&lt;p>【译文】孔子道：“赐！你以为我是多多地学习又能够记得住的吗？”子贡答道：“对呀，难道不是这样吗？”孔子道：“不是的，我有一个基本观念来贯串它。”&lt;/p>
&lt;p>【注释】⑴一以贯之——这和里仁篇的“夫子之道，忠恕而已矣”（4.15）的“一贯”相同。从这里可以看出，子贡他们所重视的，是孔子的博学多才，因之认为他是“多学而识之”；而孔子自己所重视的，则在于他的以忠恕之道贯穿于其整个学行之中。&lt;/p>
&lt;p>15.4子曰：“由！知德者鲜矣。”&lt;/p>
&lt;p>【译文】孔子对子路道：“由！懂得‘德’的人可少啦。”&lt;/p>
&lt;p>15.5子曰：“无为而治⑴者其舜也与？夫何为哉？恭己正南面而已矣。”&lt;/p>
&lt;p>【译文】孔子说：“自己从容安静而使天下太平的人大概只有舜罢？他干了什么呢？庄严端正地坐朝廷罢了。”&lt;/p>
&lt;p>【注释】⑴无为而治——舜何以能如此？一般儒者都以为他能“所任得其人，故优游而自逸也。”（《三国志·吴志·楼玄传》）如《大戴礼·主言篇》云：“昔者舜左禹而右皋陶，不下席而天下治。”《新序·杂事三》云：“故王者劳于求人，佚于得贤。舜举众贤在位，垂衣裳恭己无为而天下治。”赵岐《孟子注》也说：“言任官得其人，故无为而治”。&lt;/p>
&lt;p>15.6子张问行。子曰：“言忠信，行笃敬，虽蛮貊之邦，行矣。言不忠信，行不笃敬，虽州里，行乎哉？立则见其参于前也，在舆则见其倚于衡也，夫然后行。”子张书诸绅。&lt;/p>
&lt;p>【译文】子张问如何才能使自己到处行得通。孔子道：“言语忠诚老实，行为忠厚严肃，纵到了别的部族国家，也行得通。言语欺诈无信，行为刻薄轻浮，就是在本乡本土，能行得通吗？站立的时候，就［彷佛］看见“忠诚老实忠厚严肃”几个字在我们面前；在车箱里，也［彷佛］看见它刻在前面的横木上；［时时刻刻记着它，］这才能使自己到处行得通。”子张把这些话写在大带上。&lt;/p>
&lt;p>15.7子曰：“直哉史鱼⑴！邦有道，如矢；邦无道，如矢。君子哉蘧伯玉⑵！邦有道，则仕；邦无道，则可卷而怀之。”&lt;/p>
&lt;p>【译文】孔子说：“好一个刚直不屈的史鱼！政治清明也像箭一样直，政治黑暗也像箭一样直。好一个君子蘧伯玉！政治清明就出来做官，政治黑暗就可以把自己的本领收藏起来。”&lt;/p>
&lt;p>【注释】⑴史鱼——卫国的大夫史鳅，字子鱼。他临死时嘱咐他的儿子，不要“治丧正室”，以此劝告卫灵公进用蘧伯玉，斥退弥子瑕，古人叫为“尸谏”，事见《韩诗外传》卷七。⑵蘧伯玉——事可参见《左传》襄公十四年和二十六年。&lt;/p>
&lt;p>15.8子曰：“可与言而不与之言，失人；不可与言而与之言，失言。知者不失人，亦不失言。”&lt;/p>
&lt;p>【译文】孔子说：“可以同他谈，却不同他谈，这是错过人才；不可以同他谈，却同他谈，这是浪费言语。聪明人既不错过人才，也不浪费言语。”&lt;/p>
&lt;p>15.9子曰：“志士仁人，无求生以害仁，有杀身以成仁。”&lt;/p>
&lt;p>【译文】孔子说：“志士仁人，不贪生怕死因而损害仁德，只勇于牺牲来成全仁德。”&lt;/p>
&lt;p>15.10子贡问为仁。子曰：“工欲善其事，必先利其器。居是邦也，事其大夫之贤者，友其士⑴之仁者。”&lt;/p>
&lt;p>【译文】子贡问怎样去培养仁德。孔子道：“工人要搞好他的工作，一定先要搞好他的工具。我们住在一个国家，就要敬奉那些大官中的贤人，结交那些士人中的仁人。”&lt;/p>
&lt;p>【注释】⑴士——《论语》中的“士”，有时指有一定修养的人，如“士志于道”（4.9）的“士”。有时指有一定社会地位的人。如“使于四方，不辱君命，可调士矣”的“士”（13.20）。此处和“大夫”并言，可能是“士、大夫”之“士”，卽已做官而位置下于大夫的人。&lt;/p>
&lt;p>15.11颜渊问为邦。子曰：“行夏之时⑴，乘殷之辂⑵，服周之冕⑶，乐则韶、舞⑷。放郑声⑸，远佞人。郑声淫，佞人殆。”&lt;/p>
&lt;p>【译文】颜渊问怎样去治理国家。孔子道：“用夏朝的历法，坐殷朝的车子，戴周朝的礼帽，音乐就用韶和武。舍弃郑国的乐曲，斥退小人。郑国的乐曲靡曼淫秽，小人危险。”&lt;/p>
&lt;p>【注释】⑴行夏之时——据古史记载，夏朝用的自然历，以建寅之月（旧历正月）为每年的第一月，春、夏、秋、冬合乎自然现象。周朝则以建子之月（旧历十一月）为每年的第一月，而且以冬至日为元日。这个虽然在观测天象方面比较以前进步，但实用起来却不及夏历方便于农业生产。就是在周朝，也有很多国家是仍旧用夏朝历法。⑵乘殷之辂——辂音路，商代的车子，比周代的车子自然朴质些。所以《左传》桓公二年也说：“大辂、越席，昭其俭也。”⑵服周之冕——周代的礼帽自然又比以前的华美，孔子是不反对礼服的华美的，赞美禹“致美乎黻冕”可见。⑷韶、舞——韶是舜时的音乐，“舞”同“武”，周武王时的音乐。⑸放郑声——“郑声”和“郑诗”不同。郑诗指其文辞，郑声指其乐曲。说本明人杨慎《丹铅总録》。清人陈启源《毛诗稽古篇》。&lt;/p>
&lt;p>15.12子曰：“人无远虑，必有近忧。”&lt;/p>
&lt;p>【译文】孔子说：“一个人没有长远的考虑，一定会有眼前的忧患。”&lt;/p>
&lt;p>15.13子曰：“已矣乎！吾未见好德如好色⑴者也。”&lt;/p>
&lt;p>【译文】孔子说：“完了吧！我从没见过像喜欢美貌一般地喜欢美德的人哩。”&lt;/p>
&lt;p>【注释】⑴好色——据《史记·孔子世家》，孔子“居卫月余，灵公与夫人（南子）同车，宦者雍渠参乘出，使孔子为次乘，招摇市过之。”孔子因发这一感叹。&lt;/p>
&lt;p>15.14子曰：“藏文仲⑴其窃位者与！知柳下惠⑵之贤而不与立⑶也。”&lt;/p>
&lt;p>【译文】孔子说：“臧文仲大概是个做官不管事的人，他明知柳下惠贤良，却不给他官位。”&lt;/p>
&lt;p>【注释】⑴臧文仲——鲁国的大夫臧孙辰，历仕庄、闵、僖、文四朝。⑵柳下惠——鲁国贤者，本名展获，字禽，又叫展季。“柳下”可能是其所居，因以为号；据《列女传》，“惠”是由他的妻子的倡议给他的私谥（不由国家授予的谥号叫私谥）。⑶立——同“位”，说详俞樾《羣经平议》。&lt;/p>
&lt;p>15.15子曰：“躬自厚⑴而薄责于人，则远怨矣。”&lt;/p>
&lt;p>【译文】孔子说：“多责备自己，而少责备别人，怨恨自然不会来了。”&lt;/p>
&lt;p>【注释】⑴躬自厚——本当作“躬自厚责”，“责”字探下文“薄责”之“责”而省略。说详拙著《文言语法》。“躬自”是一双音节的副词，和《诗经·卫风·氓》的“静言思之，躬自悼矣”的“躬自”用法一样。&lt;/p>
&lt;p>15.16子曰：“不曰‘如之何⑴，如之何’者，吾末如之何也已矣。”&lt;/p>
&lt;p>【译文】孔子说：“［一个人］不想想‘怎么办，怎么办’的，对这种人，我也不知道怎么办了。”&lt;/p>
&lt;p>【注释】⑴如之何——“不曰如之何”意思就是不动脑筋。《荀子·大略篇》说：“天子卽位，上卿进曰，如之何，忧之长也。”则说如之何的，便是深忧远虑的人。&lt;/p>
&lt;p>15.17子曰：“羣居终日，言不及义，好行小慧，难矣哉！”&lt;/p>
&lt;p>【译文】孔子说：“同大家整天在一块，不说一句有道理的话，只喜欢卖弄小聪明，这种人真难教导！”&lt;/p>
&lt;p>15.18子曰：“君子义以为质，礼以行之，孙以出之⑴，信以成之。君子哉！”&lt;/p>
&lt;p>【译文】孔子说：“君子［对于事业］，以合宜为原则，依礼节实行它，用谦逊的言语说出它，用诚实的态度完成它。真个是位君子呀！”&lt;/p>
&lt;p>【注释】⑴孙以出之——“出”谓出言。何晏《论语集解》引郑玄注云：“孙以出之谓言语。”&lt;/p>
&lt;p>15.19子曰：“君子病无能焉，不病人之不己知也。”&lt;/p>
&lt;p>【译文】孔子说：“君子只惭愧自己没有能力，不怨恨别人不知道自己。”&lt;/p>
&lt;p>15.20子曰：“君子疾没世而名不称焉。”&lt;/p>
&lt;p>【译文】孔子说：“到死而名声不被人家称述，君子引以为恨。”&lt;/p>
&lt;p>15.21子曰：“君子求诸己，小人求诸人。”&lt;/p>
&lt;p>【译文】孔子说：“君子要求自己，小人要求别人。”&lt;/p>
&lt;p>15.22子曰：“君子矜而不争，羣而不党⑴。”&lt;/p>
&lt;p>【译文】孔子说：“君子庄矜而不争执，合羣而不闹宗派。”&lt;/p>
&lt;p>【注释】⑴羣而不党——“羣而不党”可能包含着“周而不比”（2.14）以及“和而不同”（13.23）两个意思。&lt;/p>
&lt;p>15.23子曰：“君子不以言举人，不以人废言。”&lt;/p>
&lt;p>【译文】孔子说：“君子不因为人家一句话［说得好］便提拔他，不因为他是坏人而鄙弃他的好话。”&lt;/p>
&lt;p>15.24子贡问曰：“有一言而可以终身行之者乎？”子曰：“其恕⑴乎！己所不欲，勿施于人。”&lt;/p>
&lt;p>【译文】子贡问道：“有没有一句可以终身奉行的话呢？”孔子道：“大概是‘恕’罢！自己所不想要的任何事物，就不要加给别人。”&lt;/p>
&lt;p>【注释】⑴恕——“忠”（己欲立而立人，己欲达而达人）是有积极意义的道德，未必每个人都有条件来实行。“恕”只是“己所不欲，勿施于人”，则谁都可以这样做，因之孔子在这里言“恕”不言“忠”。《礼记·大学》篇的“絜矩之道”就是“恕”道。可是在阶级社会里，也只能是幻想。&lt;/p>
&lt;p>15.25子曰：“吾之于人也，谁毁谁誉？如有所誉者，其有所试矣。斯民也，三代之所以直道而行也。”&lt;/p>
&lt;p>【译文】孔子说：“我对于别人，诋毁了谁？称赞了谁？假若我有所称赞，必然是曾经考验过他的。夏、商、周三代的人都如此，所以三代能直道而行。”&lt;/p>
&lt;p>15.26子曰：“吾犹及史之阙文也。有马者借人乘之，今亡矣夫！”&lt;/p>
&lt;p>【译文】孔子说：“我还能够看到史书存疑的地方。有马的人［自己不会训练，］先给别人使用，这种精神，今天也没有了罢，”&lt;/p>
&lt;p>【注释】“史之阙文”和“有马借人乘之”，其间有什么关连，很难理解。包咸的《论语章句》和皇侃的《义疏》都把它们看成两件不相关的事。宋叶梦得《石林燕语》却根据《汉书·艺文志》的引文无“有马”等七个字，因疑这七个字是衍文。其它穿凿的解释很多，依我看来，还是把它看为两件事较妥当。又有人说这七字当作“有焉者晋人之乘”（见《诂经精舍六集》卷九〈方赞尧有马者借人乘之解〉），更是毫无凭据的臆测。&lt;/p></description></item><item><title>08泰伯篇第八</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/08%E6%B3%B0%E4%BC%AF%E7%AF%87%E7%AC%AC%E5%85%AB/</link><pubDate>Sat, 11 Jan 2025 19:53:26 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/08%E6%B3%B0%E4%BC%AF%E7%AF%87%E7%AC%AC%E5%85%AB/</guid><description>&lt;h1 id="泰伯篇第八">
 泰伯篇第八
 &lt;a class="anchor" href="#%e6%b3%b0%e4%bc%af%e7%af%87%e7%ac%ac%e5%85%ab">#&lt;/a>
&lt;/h1>
&lt;p>(共二十一章)&lt;/p>
&lt;p>8.1子曰：“泰伯⑴，其可谓至德也已矣。三以天下⑵让，民无得而称焉。”&lt;/p>
&lt;p>【译文】孔子说：“泰伯，那可以说是品德极崇高了。屡次地把天下让给季历，老百姓简直找不出恰当的词语来称赞他。”&lt;/p>
&lt;p>【注释】】⑴泰伯——亦作“太伯”，周朝祖先古公亶父的长子。古公有三子，太伯、仲雍、季历。季历的儿子就是姬昌（周文王）。据传说，古公预见到昌的圣德，因此想打破惯例，把君位不传长子太伯，而传给幼子季历，从而传给昌。太伯为着实现他父亲的意愿，便偕同仲雍出走至勾吴（为吴国的始祖），终于把君位传给季历和昌。昌后来扩张国势，竟有天下的三分之二，到他儿子姬发（周武王），便灭了殷商，统一天下。⑵天下——当古公、泰伯之时，周室仅是一个小的部落，谈不上“天下”。这“天下”两字可能卽指其当时的部落而言。也有人说，是预指以后的周部落统一了中原的天下而言。&lt;/p>
&lt;p>8.2子曰：“恭而无礼则劳⑴，慎而无礼则葸⑵，勇而无礼则乱，直而无礼则绞⑶。君子笃于亲，则民兴于仁；故旧不遗，则民不偷⑷。”&lt;/p>
&lt;p>【译文】孔子说：“注重容貌态度的端庄，却不知礼，就未免劳倦；只知谨慎，却不知礼，就流于畏葸懦弱；专凭敢作敢为的胆量，却不知礼，就会盲动闯祸；心直口快，却不知礼，就会尖刻刺人。在上位的人能用深厚感情对待亲族，老百姓就会走向仁德；在上位的人不遗弃他的老同事、老朋友，那老百姓就不致对人冷淡无情。&lt;/p>
&lt;p>【注释】⑴礼——这里指的是礼的本质。⑵葸——xǐ，胆怯，害怕。⑶绞——尖刻刺人。⑷偷——淡薄，这里指人与人的感情而言。&lt;/p>
&lt;p>8.3曾子有疾，召门弟子曰：“启⑴予足！启予手！《诗》云⑵，‘战战兢兢，如临深渊，如履⑶薄冰。’而今而后，吾知免夫！小子！”&lt;/p>
&lt;p>【译文】曾参病了，把他的学生召集拢来，说道：“看看我的脚！看看我的手！《诗经》上说：‘小心呀！谨慎呀！好像面临深深水坑之旁，好像行走薄薄冰层之上。’从今以后，我才晓得自己是可以免于祸害刑戮的了！学生们！”&lt;/p>
&lt;p>【注释】⑴启——说文有“”字，云：“视也。”王念孙《广雅疏证》（《释诂》）说，《论语》的这“启”字就是说文的“”字。⑵《诗》云——三句诗见《诗经·小雅·小旻篇》。⑶履——《易·履卦》爻辞：“眇能视，跛能履。”履，步行也。&lt;/p>
&lt;p>8.4曾子有疾，孟敬子⑴问之。曾子言曰：“鸟之将死，其鸣也哀；人之将死，其言也善。君子所贵乎道者三：动容貌，斯远暴慢⑵矣；正颜色，斯近信矣；出辞气，斯远鄙倍⑶矣。笾豆之事⑷，则有司⑸存。”&lt;/p>
&lt;p>【译文】曾参病了，孟敬子探问他。曾子说：“鸟要死了，鸣声是悲哀的；人要死了，说出的话是善意的。在上位的人待人接物有三方面应该注重：严肃自己的容貌，就可以避免别人的粗暴和懈怠；端正自己的脸色，就容易使人相信；说话的时候，多考虑言辞和声调，就可以避免鄙陋粗野和错误。至于礼仪的细节，自有主管人员。”&lt;/p>
&lt;p>【注释】⑴孟敬子——鲁国大夫仲孙捷。⑵暴慢——暴是粗暴无礼，慢是懈怠不敬。⑶鄙倍——鄙是粗野鄙陋；倍同“背”，不合理，错误。⑷笾豆之事——笾音边，古代的一种竹器，高脚，上面圆口，有些像碗，祭祀时用以盛果实等食品。豆也是古代一种像笾一般的器皿，木料做的，有盖，用以盛有汁的食物，祭祀时也用它。这里“笾豆之事”系代表礼仪中的一切具体细节。⑸有司——主管其事的小吏。&lt;/p>
&lt;p>8.5曾子曰：“以能问于不能，以多问于寡；有若无，实若虚，犯而不校——昔者吾友⑴尝从事于斯矣。”&lt;/p>
&lt;p>【译文】曾子说：“有能力却向无能力的人请教，知识丰富却向知识缺少的人请教；有学问像没学问一样，满腹知识像空无所有一样；纵被欺侮，也不计较——从前我的一位朋友便曾这样做了。”&lt;/p>
&lt;p>【注释】⑴吾友——历来的注释家都以为是指颜回。&lt;/p>
&lt;p>8.6曾子曰：“可以托六尺⑴之孤，可以寄百里之命，临大节而不可夺也——君子人与？君子人也。”&lt;/p>
&lt;p>【译文】曾子说：“可以把幼小的孤儿和国家的命脉都交付给他，面临安危存亡的紧要关头，却不动摇屈服——这种人，是君子人吗？是君子人哩。”&lt;/p>
&lt;p>【注释】⑴六尺——古代尺短，六尺约合今日一百三十八厘米，市尺四尺一寸四分。身长六尺的人还是小孩，一般指十五岁以下的人。&lt;/p>
&lt;p>8.7曾子曰：“士不可以不弘毅⑴，任重而道远。仁以为己任，不亦重乎？死而后已，不亦远乎？”&lt;/p>
&lt;p>【译文】曾子说：“读书人不可以不刚强而有毅力，因为他负担沉重，路程遥远。以实现仁德于天下为己任，不也沉重吗？到死方休，不也遥远吗？”&lt;/p>
&lt;p>【注释】⑴弘毅——就是“强毅”。章太炎（炳麟）先生《广论语骈枝》说：“说文：‘弘，弓声也。’后人借‘强’为之，用为‘强’义。此‘弘’字卽今之‘强’字也。说文：‘毅，有决也。’任重须强，不强则力绌；致远须决，不决则志渝。”&lt;/p>
&lt;p>8.8子曰：“兴于《诗》，立于礼，成于乐⑴。”&lt;/p>
&lt;p>【译文】孔子说：“诗篇使我振奋，礼使我能在社会上站得住，音乐使我的所学得以完成。”&lt;/p>
&lt;p>【注释】⑴成于乐——孔子所谓“乐”的内容和本质都离不开“礼”，因此常常“礼乐”连言。他本人也很懂音乐，因此把音乐作为他的教学工作的一个最后阶段。&lt;/p>
&lt;p>8.9子曰：“民可使由之，不可使知之⑴。”&lt;/p>
&lt;p>【译文】孔子说：“老百姓，可以使他们照着我们的道路走去，不可以使他们知道那是为什么。”&lt;/p>
&lt;p>【注释】⑴子曰……知之——这两句与“民可以乐成，不可与虑始”（《史记·滑稽列传》补所载西门豹之言，《商君列传》作“民不可与虑始，而可与乐成”）意思大致相同，不必深求。后来有些人觉得这种说法不很妥当，于是别生解释，意在为孔子这位“圣人”回护，虽煞费苦心，反失孔子本意。如刘宝楠《正义》以为“上章是夫子教弟子之法，此‘民’字亦指弟子”。不知上章“兴于诗”三句与此章旨意各别，自古以来亦曾未有以“民”代“弟子”者。宦懋庸《论语稽》则云：“对于民，其可者使其自由之，而所不可者亦使知之。或曰，舆论所可者则使共由之，其不可者亦使共知之。”则原文当读为“民可，使由之；不可，使知之”。恐怕古人无此语法。若是古人果是此意，必用“则”字，甚至“使”下再用“之”字以重指“民”，作“民可，则使（之）由之，不可，则使（之）知之”，方不致晦涩而误解。&lt;/p>
&lt;p>8.10子曰：“好勇疾贫，乱也。人而不仁，疾之已甚，乱也。”&lt;/p>
&lt;p>【译文】孔子说：“以勇敢自喜却厌恶贫困，是一种祸害。对于不仁的人，痛恨太甚，也是一种祸害。”&lt;/p>
&lt;p>8.11子曰：“如有周公之才之美，使骄且吝，其余不足观也已。”&lt;/p>
&lt;p>【译文】孔子说：“假如才能的美妙真比得上周公，只要骄傲而吝啬，别的方面也就不值得一看了。”&lt;/p>
&lt;p>8.12子曰：“三年学，不至⑴于谷⑵，不易得也。”&lt;/p>
&lt;p>【译文】孔子说：“读书三年并不存做官的念头，这是难得的。”&lt;/p>
&lt;p>【注释】⑴至——这“至”字和雍也篇第六“回也其心三月不违仁，其余则日月至焉而已矣”的“至”用法相同，指意念之所至。⑵谷——古代以谷米为俸禄（作用相当于今日的工资），所以“谷”有“禄”的意义。宪问篇第十四的“邦有道，谷；邦无道，谷”的“谷”正与此同。&lt;/p>
&lt;p>8.13子曰：“笃信⑴好学，守死善道。危邦不入，乱邦不居⑵。天下有道则见⑶，无道则隐。邦有道，贫且贱焉，耻也；邦无道，富且贵焉，耻也。”&lt;/p>
&lt;p>【译文】孔子说：“坚定地相信我们的道，努力学习它，誓死保全它。不进入危险的国家，不居住祸乱的国家。天下太平，就出来工作；不太平，就隐居。政治清明，自己贫贱，是耻辱；政治黑暗，自己富贵，也是耻辱。”&lt;/p>
&lt;p>【注释】⑴笃信——子张篇：“执德不弘，信道不笃，焉能为有？焉能为亡？”这一“笃信”应该和“信道不笃”的意思一样。⑵危邦乱邦——包咸云“臣弒君，子弑父，乱也；危者，将乱之兆也。”⑶见——同“现”。&lt;/p>
&lt;p>8.14子曰：“不在其位，不谋其政。”&lt;/p>
&lt;p>【译文】孔子说：“不居于那个职位，便不考虑它的政务。”&lt;/p>
&lt;p>8.15子曰：“师挚之始⑴，《关雎》之乱⑵，洋洋乎盈耳哉！”&lt;/p>
&lt;p>【译文】孔子说：“当太师挚开始演奏的时候，当结尾演奏《关雎》之曲的时候，满耳朵都是音乐呀！”&lt;/p>
&lt;p>【注释】⑴师挚之始——“始”是乐曲的开端，古代奏乐，开始叫做“升歌”，一般由太师演奏。师挚是鲁国的太师，名挚，由他演奏，所以说“师挚之始”。⑵《关雎》之乱——“始”是乐的开端，“乱”是乐的结束。由“始”到“乱”，叫做“一成”。“乱”是“合乐”，犹如今日的合唱。当合奏之时，奏《关雎》的乐章，所以说“《关雎》之乱”。&lt;/p>
&lt;p>8.16子曰：“狂而不直，侗而不愿，悾悾而不信，吾不知之矣。”&lt;/p>
&lt;p>【译文】孔子说：“狂妄而不直率，幼稚而不老实，无能而不讲信用，这种人我是不知道其所以然的。”&lt;/p>
&lt;p>8.17子曰：“学如不及，犹恐失之。”&lt;/p>
&lt;p>【译文】孔子说：“做学问好像［追逐什么似的，］生怕赶不上；［赶上了，］还生怕丢掉了。”&lt;/p>
&lt;p>8.18子曰：“巍巍乎，舜禹⑴之有天下也而不与⑵焉！”&lt;/p>
&lt;p>【译文】孔子说：“舜和禹真是崇高得很呀！贵为天子，富有四海，［却整年地为百姓勤劳，］一点也不为自己。”&lt;/p>
&lt;p>【注释】⑴禹——夏朝开国之君。据传说，受虞舜的禅让而卽帝位。又是中国主持水利工程最早的有着功勋的人物。⑵与——音预yù，参与，关连。这里含着“私有”、“享受”的意思。&lt;/p>
&lt;p>8.19子曰：“大哉尧之为君也！巍巍乎！唯天为大，唯尧则之。荡荡乎，民无能名焉。巍巍乎其有成功也，焕乎其有文章！”&lt;/p>
&lt;p>【译文】孔子说：“尧真是了不得呀！真高大得很呀！只有天最高最大，只有尧能够学习天。他的恩惠真是广博呀！老百姓简直不知道怎样称赞他。他的功绩实在太崇高了，他的礼仪制度也真够美好了！”&lt;/p>
&lt;p>8.20舜有臣五人而天下治。武王曰：“予有乱臣⑴十人。”孔子曰：“才难，不其然乎！唐虞之际，于斯为盛。有妇人焉，九人而已。三分天下有其二⑵，以服事殷。周之德，其可谓至德也已矣。”&lt;/p>
&lt;p>【译文】舜有五位贤臣，天下便太平。武王也说过，“我有十位能治理天下的臣子。”孔子因此说道：“［常言道：］‘人才不易得。’不是这样吗？唐尧和虞舜之间以及周武王说那话的时候，人才最兴盛。然而武王十位人才之中还有一位妇女，实际上只是九位罢了。周文王得了天下的三分之二，仍然向商纣称臣，周朝的道德，可以说是最高的了。”&lt;/p>
&lt;p>【注释】⑴乱臣——说文：“乱，治也。”《尔雅·释诂》同。《左传》昭公二十四年引《大誓》说：“余有乱臣十人，同心同德。”则“乱臣”就是“治国之臣”。近人周谷城（《古史零证》）认为“乱”有“亲近”的意义，则“乱臣”相当于《孟子·粱惠王下》“王无亲臣矣”的“亲臣”，虽然言之亦能成理，但和下文“才难”之意不吻合，恐非孔子原意。⑵三分天下有其二——《逸周书·程典篇》说：“文王合九州岛之侯，奉勤于商”。相传当时分九州岛，文王得六州，是有三分之二。&lt;/p>
&lt;p>8.21子曰：“禹，吾无间然矣。菲饮食而致孝乎鬼神，恶衣服而致美乎黻冕⑴，卑宫室而尽力乎沟洫⑵。禹，吾无间然矣。”&lt;/p>
&lt;p>【译文】孔子说：“禹，我对他没有批评了。他自己吃得很坏，却把祭品办得极丰盛；穿得很坏，却把祭服做得极华美；住得很坏，却把力量完全用于沟渠水利。禹，我对他没有批评了。”&lt;/p>
&lt;p>【注释】⑴黻冕——黻音弗，fú，祭祀时穿的礼服；冕音免，miǎn，古代大夫以上的人的帽子都叫冕，后来只有帝王的帽子才叫冕。这里指祭祀时的礼帽。⑵沟洫——就是沟渠，这里指农田水利而言。&lt;/p></description></item><item><title>07述而篇第七</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/07%E8%BF%B0%E8%80%8C%E7%AF%87%E7%AC%AC%E4%B8%83/</link><pubDate>Sat, 11 Jan 2025 19:53:25 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/07%E8%BF%B0%E8%80%8C%E7%AF%87%E7%AC%AC%E4%B8%83/</guid><description>&lt;h1 id="述而篇第七">
 述而篇第七
 &lt;a class="anchor" href="#%e8%bf%b0%e8%80%8c%e7%af%87%e7%ac%ac%e4%b8%83">#&lt;/a>
&lt;/h1>
&lt;p>(共三十八章（朱熹《集注》把第九、第十两章并作一章，所以题为三十七章。）)&lt;/p>
&lt;p>7.1子曰：“述而不作，信而好古⑴，窃比于我老彭⑵。”&lt;/p>
&lt;p>【译文】孔子说：“阐述而不创作，以相信的态度喜爱古代文化，我私自和我那老彭相比。”&lt;/p>
&lt;p>【注释】⑴作，好古——下文第二十八章说：“盖有不知而作之者，我无是也。”这个“作”，大概也是“不知而作”的涵义，很难说孔子的学说中没有创造性。又第二十章说：“好古敏以求之”，也可为这个“好古”的证明。⑵老彭——人名。有人说是老子和彭祖两人，有人说是殷商时代的彭祖一人，又有人说孔子说“我的老彭”，其人一定和孔子相当亲密，未必是古人。《大戴礼·虞戴德篇》有“商老彭”，不知卽此人不。&lt;/p>
&lt;p>7.2子曰：“默而识⑴之，学而不厌，诲人不倦，何有于我哉⑵？”&lt;/p>
&lt;p>【译文】孔子说：“［把所见所闻的］默默地记在心里，努力学习而不厌弃，教导别人而不疲倦，这些事情我做到了哪些呢？”&lt;/p>
&lt;p>【注释】⑴识——音志，zhì，记住。⑵何有于我哉——“何有”在古代是一常用语，在不同场合表示不同意义。像《诗·邶风·谷风》“何有何亡？黾勉求之”的“何有”便是“有什么”的意思，译文就是用的这一意义。也有人说，《论语》的“何有”都是“不难之辞”，那么，这句话便该译为“这些事情对我有什么困难呢”。这种译法便不是孔子谦虚之词，而和下文第二十八章的“多闻，择其善者而从之，多见而识之”以及“抑为之不厌，诲人不倦”的态度相同了。&lt;/p>
&lt;p>7.3子曰：“德之不修，学之不讲，闻义不能徙，不善不能改，是吾忧也。”&lt;/p>
&lt;p>【译文】孔子说：“品德不培养；学问不讲习；听到义在那里，却不能亲身赴之；有缺点不能改正，这些都是我的忧虑哩！”&lt;/p>
&lt;p>7.4子之燕居，申申⑴如也，夭夭⑵如也。&lt;/p>
&lt;p>【译文】孔子在家闲居，很整齐的，很和乐而舒展的。&lt;/p>
&lt;p>【注释】⑴申申——整敕之貌。⑵夭夭——和舒之貌。&lt;/p>
&lt;p>7.5子曰：“甚矣吾衰也！久矣吾不复梦见周公⑴！”&lt;/p>
&lt;p>【译文】孔子说：“我衰老得多么厉害呀！我好长时间没再梦见周公了！”&lt;/p>
&lt;p>【注释】⑴周公——姓姬，名旦，周文王的儿子，武王的弟弟，成王的叔父，鲁国的始祖，又是孔子心目中最敬服的古代圣人之一。&lt;/p>
&lt;p>7.6子曰：“志于道，据于德，依于仁，游于艺⑴。”&lt;/p>
&lt;p>【译文】孔子说：“目标在‘道’，根据在‘德’，依靠在‘仁’，而游憩于礼、乐、射、御、书、数六艺之中。”&lt;/p>
&lt;p>【注释】⑴游于艺——《礼记·学记》曾说：“不兴其艺，不能乐学。故君子之于学也，藏焉，修焉，息焉，游焉。夫然，故安其学而亲其师，乐其友而信其道，是以虽离师辅而不反也。”可以阐明这里的“游于艺”。&lt;/p>
&lt;p>7.7子曰：“自行束修⑴以上，吾未尝无诲焉。”&lt;/p>
&lt;p>【译文】孔子说：“只要是主动地给我一点见面薄礼，我从没有不教诲的。”&lt;/p>
&lt;p>【注释】⑴束修——修是干肉，又叫脯。每条脯叫一脡（挺），十脡为一束。束修就是十条干肉，古代用来作初次拜见的礼物。但这一礼物是菲薄的。&lt;/p>
&lt;p>7.8子曰：“不愤⑴不启，不悱⑵不发⑶。举一隅不以三隅反，则不复也。”&lt;/p>
&lt;p>【译文】孔子说：“教导学生，不到他想求明白而不得的时候，不去开导他；不到他想说出来却说不出的时候，不去启发他。教给他东方，他却不能由此推知西、南、北三方，便不再教他了。”&lt;/p>
&lt;p>【注释】⑴愤——心求通而未得之意。⑵悱音斐，fěi，口欲言而未能之貌。⑶不启，不发——这是孔子自述其教学方法，必须受教者先发生困难，有求知的动机，然后去启发他。这样，教学效果自然好些。&lt;/p>
&lt;p>7.9子食于有丧者之侧，未尝饱也。&lt;/p>
&lt;p>【译文】孔子在死了亲属的人旁边吃饭，不曾吃饱过。&lt;/p>
&lt;p>7.10子于是日哭，则不歌。&lt;/p>
&lt;p>【译文】孔子在这一天哭泣过，就不再唱歌。&lt;/p>
&lt;p>7.11子谓颜渊曰：“用之则行，舍之则藏，惟我与尔有是夫！”&lt;/p>
&lt;p>子路曰：“子行三军，则谁与⑴？”&lt;/p>
&lt;p>子曰：“暴虎冯河⑵，死而无悔者，吾不与也。必也临事而惧，好谋而成者也。”&lt;/p>
&lt;p>【译文】孔子对颜渊道：“用我呢，就干起来；不用呢，就藏起来。只有我和你才能这样吧！”&lt;/p>
&lt;p>子路道：“您若率领军队，找谁共事？”&lt;/p>
&lt;p>孔子道：“赤手空拳和老虎搏斗，不用船只去渡河，这样死了都不后悔的人，我是不和他共事的。［我所找他共事的，］一定是面临任务便恐惧谨慎，善于谋略而能完成的人哩！”&lt;/p>
&lt;p>【注释】⑴子行三军，则谁与——“行”字古人用得很活，行军犹言行师。《易经·谦卦·上六》云：“利用行师征邑国”，又《复卦·上六》：“用行师终有大败”，行师似有出兵之意。这种活用，一直到中古都如此。如“子夜歌”的“欢行白日心，朝东暮还西。”“与”，动词，偕同的意思。子路好勇，看见孔子夸奖颜渊，便发此问。⑵暴虎冯河——冯音凭，píng。徒手搏虎曰暴虎，徒足涉河曰冯河。“冯河”两字最初见于《易·泰卦·爻辞》，又见于《诗·小雅·小旻》。“暴虎”也见于《诗经·郑风·大叔于田》和《小雅·小旻》，可见都是很早就有的俗语。“河”不一定是专指黄河，古代也有用作通名，泛指江河的。&lt;/p>
&lt;p>7.12子曰：“富而⑴可求也，虽执鞭之士⑵，吾亦为之。如不可求，从吾所好。”&lt;/p>
&lt;p>【译文】孔子说：“财富如果可以求得的话，就是做市场的守门卒我也干。如果求它不到，还是我干我的罢。”&lt;/p>
&lt;p>【注释】⑴而——用法同“如”，假设连词。但是用在句中的多，卽有用在句首的，那句也多半和上一句有密切的关连，独立地用在句首的极少见。⑵执鞭之士——根据《周礼》，有两种人拿着皮鞭，一种是古代天子以及诸侯出入之时，有二至八人拿着皮鞭使行路之人让道。一种是市场的守门人，手执皮鞭来维持秩序。这里讲的是求财，市场是财富所聚集之处，因此译为“市场守门卒”。&lt;/p>
&lt;p>7.13子之所慎：齐⑴，战，疾⑵。&lt;/p>
&lt;p>【译文】孔子所小心慎重的事有三样：斋戒，战争，疾病。&lt;/p>
&lt;p>【注释】⑴齐——同“斋”。古代于祭祀之前，一定先要做一番身心的整洁工作，这一工作便叫做‘斋’或者“斋戒”。乡党篇第十说孔子“斋必变食，居必迁坐”。⑵战，疾——上文说到孔子作战必求“临事而惧好谋而成”的人，因为它关系国家的存亡安危；乡党篇又描写孔子病了，不敢随便吃药，因为它关系个人的生死。这都是孔子不能不谨慎的地方。&lt;/p>
&lt;p>7.14子在齐闻韶，三月不知肉味，曰：“不图为乐之至于斯也。”&lt;/p>
&lt;p>【译文】孔子在齐国听到韶的乐章，很长时间尝不出肉味，于是道：“想不到欣赏音乐竟到了这种境界。”&lt;/p>
&lt;p>7.15冉有曰：“夫子为⑴卫君⑵乎？”子贡曰：“诺；吾将问之。”&lt;/p>
&lt;p>入，曰：“伯夷、叔齐何人也？”曰：“古之贤人也。”曰：“怨乎？”曰：“求仁而得仁，又何怨？”&lt;/p>
&lt;p>出，曰：“夫子不为也。”&lt;/p>
&lt;p>【译文】冉有道：“老师赞成卫君吗？”子贡道：“好罢；我去问问他。”&lt;/p>
&lt;p>子贡进到孔子屋里，道：“伯夷、叔齐是什么样的人？”孔子道：“是古代的贤人。”子贡道：“［他们两人互相推让，都不肯做孤竹国的国君，结果都跑到国外，］是不是后来又怨悔呢？”孔子道：“他们求仁德，便得到了仁德，又怨悔什么呢？”&lt;/p>
&lt;p>子贡走出，答复冉有道：“老师不赞成卫君。”&lt;/p>
&lt;p>【注释】⑴为——动词，去声，本意是帮助，这里译为“赞成”，似乎更合原意。⑵卫君——指卫出公辄。辄是卫灵公之孙，太子蒯聩之子。太子蒯聩得罪了卫灵公的夫人南子，逃在晋国。灵公死，立辄为君。晋国的赵简子又把蒯聩送回，藉以侵略卫国。卫国抵御晋兵，自然也拒绝了蒯聩的回国。从蒯聩和辄是父子关系的一点看来，似乎是两父子争夺卫君的位置，和伯夷、叔齐两兄弟的互相推让，终于都抛弃了君位相比，恰恰成一对照。因之下文子贡引以发问，藉以试探孔子对出公辄的态度。孔子赞美伯夷、叔齐，自然就是不赞成出公辄了。&lt;/p>
&lt;p>7.16子曰：“饭疏食⑴饮水⑵，曲肱⑶而枕⑷之，乐亦在其中矣。不义而富且贵，于我如浮云。”&lt;/p>
&lt;p>【译文】孔子说：“吃粗粮，喝冷水，弯着胳膊做枕头，也有着乐趣。干不正当的事而得来的富贵，我看来好像浮云。”&lt;/p>
&lt;p>【注释】⑴疏食——有两个解释：（甲）粗粮。古代以稻梁为细粮，以稷为粗粮。见程瑶田《通艺録·九谷考》。（乙）糙米。⑵水——古代常以“汤”和“水”对言，“汤”的意义是热水，“水”就是冷水。⑶肱——音宫，gōng，胳膊。⑷枕——这里用作动词，旧读去声。&lt;/p>
&lt;p>7.17子曰：“加我数年，五十以学《易》⑴，可以无大过矣。”&lt;/p>
&lt;p>【译文】孔子说：“让我多活几年，到五十岁时候去学习《易经》，便可以没有大过错了。”&lt;/p>
&lt;p>【注释】⑴易——古代一部用以占筮的书，其中的卦辞和爻辞是孔子以前的作品。&lt;/p>
&lt;p>7.18子所雅言⑴，《诗》、《书》、执礼，皆雅言也。&lt;/p>
&lt;p>【译文】孔子有用普通话的时候，读《诗》，读《书》，行礼，都用普通话。&lt;/p>
&lt;p>【注释】⑴雅言——当时中国所通行的语言。春秋时代各国语言不能统一，不但可以想象得到，卽从古书中也可以找到证明。当时较为通行的语言便是“雅言”。&lt;/p>
&lt;p>7.19叶公⑴问孔子于子路，子路不对。子曰：“女奚不曰，其为人也，发愤忘食，乐以忘忧，不知老之将至云尔⑵。”&lt;/p>
&lt;p>【译文】叶公向子路问孔子为人怎么样，子路不回答。孔子对子路道：“你为什么不这样说：他的为人，用功便忘记吃饭，快乐便忘记忧愁，不晓得衰老会要到来，如此罢了。”&lt;/p>
&lt;p>【注释】⑴叶——旧音摄，shè，地名，当时属楚，今河南叶县南三十里有古叶城。叶公是叶地方的县长，楚君称王，那县长便称公。此人叫沈诸梁，字子高，《左传》定公、哀公之间有一些关于他的记载，在楚国当时还算是一位贤者。⑵云尔——云，如此；尔同“耳”，而已，罢了。&lt;/p>
&lt;p>7.20子曰：“我非生而知之者，好古，敏以求之者也。”&lt;/p>
&lt;p>【译文】孔子说：“我不是生来就有知识的人，而是爱好古代文化，勤奋敏捷去求得来的人。”&lt;/p>
&lt;p>7.21子不语怪，力，乱，神。&lt;/p>
&lt;p>【译文】孔子不谈怪异、勇力、叛乱和鬼神。&lt;/p>
&lt;p>7.22子曰：“三人行，必有我师焉：择其善者而从之，其不善者而改之⑴。”&lt;/p></description></item><item><title>试论-导言-例言</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/%E8%AF%95%E8%AE%BA-%E5%AF%BC%E8%A8%80-%E4%BE%8B%E8%A8%80/</link><pubDate>Sat, 11 Jan 2025 19:53:24 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/%E8%AF%95%E8%AE%BA-%E5%AF%BC%E8%A8%80-%E4%BE%8B%E8%A8%80/</guid><description>&lt;p>论语译注&lt;/p>
&lt;p>杨伯峻译注&lt;/p>
&lt;p>中华书局&lt;/p>
&lt;p>1980年 北京&lt;/p>
&lt;h1 id="试论孔子">
 试论孔子
 &lt;a class="anchor" href="#%e8%af%95%e8%ae%ba%e5%ad%94%e5%ad%90">#&lt;/a>
&lt;/h1>
&lt;h2 id="一孔子身世">
 （一）孔子身世
 &lt;a class="anchor" href="#%e4%b8%80%e5%ad%94%e5%ad%90%e8%ba%ab%e4%b8%96">#&lt;/a>
&lt;/h2>
&lt;p>孔子名丘，字仲尼，一说生于鲁襄公二十一年（《公羊传》和《谷梁传》，卽公元前五五一年），一说生于鲁襄公二十二年（《史记·孔子世家》），相差仅一年。前人为此打了许多笔墨官司，实在不必。死于鲁哀公十六年，卽公元前四七九年。终年实七十二岁。&lt;/p>
&lt;p>孔子自己说“而丘也，殷人也”（《礼记·檀弓上》），就是说他是殷商的苗裔。周武王灭了殷商，封殷商的微子启于宋。孔子的先祖孔父嘉是宋国宗室，因为距离宋国始祖已经超过五代，便改为孔氏。孔父嘉无辜被华父督杀害（见《左传》桓公元年和二年）。据《史记·孔子世家·索隐》，孔父嘉的后代防叔畏惧华氏的逼迫而出奔到鲁国，防叔生伯夏，伯夏生叔梁纥，叔梁纥就是孔子的父亲，因此孔子便成为鲁国人。&lt;/p>
&lt;p>殷商是奴隶社会，《礼记·表记》说：“殷人尚神”，这些都能从卜辞中得到证明。孔子也说：“殷礼，吾能言之。”（3.9）孔子所处的时代正是奴隶社会衰亡、新兴封建制逐渐兴起的交替时期。孔子本人，便看到这些迹象。譬如微子篇（18.6）耦耕的长沮、桀溺，不但知道孔子，讥讽孔子，而且知道子路是“鲁孔丘之徒”。这种农民，有文化，通风气，有自己的思想，绝对不是农业奴隶。在孔子生前，鲁宣公十五年，卽公元前五九四年，鲁国实行“初税亩”制。卽依各人所拥有的田地亩数抽收赋税，这表明了承认土地私有的合法性。《诗经·小雅·北山》说：“溥天之下，莫非王土。率土之滨，莫非王臣。”这是奴隶社会的情况。天下的土地全是天子的土地，天子再分封一些给他的宗族、亲戚、功臣和古代延续下来的旧国，或者成为国家，或者成为采邑。土地的收入，大部为被封者所享有，一部分还得向天子纳贡。土地的所有权，在天子权力强大时，还是为天子所有。他可以收回，可以另行给予别人。这种情况固然在封建社会完全确立以后还曾出现，如汉代初年，然而实质上却有不同。在汉代以后，基本上已经消灭了农业奴隶，而且土地可以自由买卖。而在奴隶社会，从事农业的基本上是奴隶，土地既是“王土”，当然不得自由买卖。鲁国的“初税亩”，至少打破了“莫非王土”的传统，承认土地为某一宗族所有，甚至为某一个人所有。一部《春秋左传》和其它春秋史料，虽然不曾明显地记载着土地自由买卖的情况，但出现有下列几种情况。已经有自耕农，长沮、桀溺便是。《左传》记载着鲁襄公二十七年（孔子出生后五年或六年），申鲜虞“仆赁于野”，这就是说产生了雇农。《左传》昭公二十五年说鲁国的季氏“隐民多取食焉”，隐民就是游民。游民来自各方，也很有可能来自农村。游民必然是自由身份，才能向各大氏族投靠。春秋时，商业很发达，商人有时参与政治。《左传》僖公三十三年记载着郑国商人弦高的事。他偶然碰着秦国来侵的军队，便假借郑国国君名义去犒劳秦军，示意郑国早有准备。昭公十六年，郑国当政者子产宁肯得罪晋国执政大臣韩起，不肯向无名商人施加小小压力逼他出卖玉环。到春秋晚期，孔子学生子贡一面做官，一面做买卖。越国的大功臣范蠡帮助越王勾践灭亡吴国后，便抛弃官位而去做商人，大发其财。这些现象应该能说明两点：一是社会购买力已有一定发展，而购买力的发展是伴随生产力，尤其农业生产力的发展而来的。没有土地所有制的改革，农业生产力是不容有较快较大发展的。于是乎又可以说明，田地可能自由买卖了，兼并现象也发生了，不仅雇农和游民大量出现，而且商人也可以经营皮毛玉贝等货物，经营田地和农产品。&lt;/p>
&lt;p>至于“率土之滨，莫非王臣”这一传统，更容易地被打破。周天子自平王东迁以后，王仅仅享有虚名，因之一般士大夫，不仅不是“王臣”，而且各有其主。春秋初期，齐国内乱，便有公子纠和公子小白争夺齐国君位之战。管仲和召忽本是公子纠之臣，鲍叔牙则是小白（齐桓公）之臣。小白得胜，召忽因之而死，管仲却转而辅佐齐桓公。晋献公死后，荀息是忠于献公遗嘱拥护奚齐的，但另外很多人，却分别为公子重耳（晋文公）、公子夷吾（晋惠公）之臣。有的甚至由本国出去做别国的官，《左传》襄公二十六年便述说若干楚国人才为晋国所用的情事。卽以孔子而言，从来不曾做过“王臣”。他从很卑微的小吏，如“委吏”（仓库管理员），如“乘田”（主持畜牧者——俱见《孟子·万章下》），进而受到鲁国权臣季氏的赏识，才进入“大夫”的行列。鲁国不用他，他又臣仕于自己讥评为“无道”的卫灵公。甚至晋国范氏、中行氏的党羽佛佾盘踞中牟（在今河北省邢台市和邯郸市之间），来叫孔子去，孔子也打算去。（17.7）这些事例，说明所谓“莫非王土”、“莫非王臣”的传统观念早已随着时间的流逝，形势的变迁，被人轻视，甚至完全抛弃了。&lt;/p>
&lt;p>孔子所处的社会，是动荡的社会；所处的时代，是变革的时代。公元前五四六年，卽孔子出生后五、六年，晋、楚两大国在宋国召开了弭兵大会。自此以后，诸侯间的兼并战争少了，而各国内部，尤其是大国内部，权臣间或者强大氏族间的你吞我杀，却多起来了。鲁国呢，三大氏族（季氏、孟氏、仲氏）互相兼并现象不严重，但和鲁国公室冲突日益扩大。甚至迫使鲁昭公寄居齐国和晋国，死在晋国边邑干侯，鲁哀公出亡在越国，死在越国。&lt;/p>
&lt;p>这种动荡和变革，我认为是由奴隶社会崩溃而逐渐转化为封建社会引起的。根据《左传》，在孔子出生前十年或十一年，卽鲁襄公十年，鲁国三大家族便曾“三分公室而各有其一”。这就是把鲁君的“三郊三遂”（《尚书·费誓》）的军赋所出的土地人口全部瓜分为三，三家各有其一，而且把私家军队也并入，各帅一军。但三家所采取的军赋办法不同。季氏采取封建社会的办法，所分得的人口全部解放为自由民。孟氏采取半封建半奴隶的办法，年轻力壮的仍旧是奴隶。叔孙氏则依旧全用奴隶制。过了二十五年，又把公室再瓜分一次，分为四份，季氏得一半，孟氏和叔孙氏各得四分之一，都废除奴隶制。这正是孔子所耳闻目见的国家的大变化。在这种变革动荡时代中，自然有许多人提出不同主张。当时还谈不上“百家争鸣”，但主张不同则是自然的。孔子作为救世者，也有他的主张。他因而把和自己意见不同的主张称为“异端”。还说：“攻乎异端，斯害也已。”（2.16）&lt;/p>
&lt;p>孔子的志向很大，要做到“老者安之，朋友信之，少者怀之”。（5.26）在鲁国行不通，到齐国也碰壁，到陈蔡等小国，更不必说了。在卫国，被卫灵公供养，住了较长时间，晚年终于回到鲁国。大半辈子精力用于教育和整理古代文献。他对后代的最大贡献也就在这里。&lt;/p>
&lt;h2 id="二孔子思想体系的渊源">
 （二）孔子思想体系的渊源
 &lt;a class="anchor" href="#%e4%ba%8c%e5%ad%94%e5%ad%90%e6%80%9d%e6%83%b3%e4%bd%93%e7%b3%bb%e7%9a%84%e6%b8%8a%e6%ba%90">#&lt;/a>
&lt;/h2>
&lt;p>孔子的世界观，留在下面再谈。我们先讨论孔子思想体系卽他的世界观形成的渊源。我认为从有关孔子的历史资料中选择那些最为可信的，来论定孔子的阶级地位、经历、学术以及所受的影响等等，这就可以确定孔子的思想体系形成的渊源。&lt;/p>
&lt;p>第一，孔子纵然是殷商的苗裔，但早巳从贵族下降到一般平民。他自己说：“吾少也贱。”足以说明他的身世。他父亲，《史记》称做叔梁纥，这是字和名的合称，春秋以前有这种称法，字在前，名在后。“叔梁”是字，“纥”是名。《左传》称做郰人纥（襄公十年），这是官和名的合称。春秋时代一些国家，习惯把一些地方长官叫“人”，孔子父亲曾经做过郰地的宰（卽长官），所以叫他做郰人纥。郰人纥在孔子出生后不久死去，只留得孔子的寡母存在。相传寡母名征在。寡母抚养孔子，孔子也得赡养寡母，因之，他不能不干些杂活。他自己说：“吾少也贱，故多能鄙事。”（9.6）鄙事就是杂活。委吏、乘田或许还是高级的“鄙事”。由此可以说，孔子的祖先出身贵族，到他自己，相隔太久了，失去了贵族的地位。他做委吏也好，做乘田也好，干其它“鄙事”也好，自必有一些共事的同伴。那些人自然都贫贱。难道自少小和他共事的贫贱者，不给孔子一点点影响么？孔子也能够完全摆脱那些人的影响么？这是不可能的。&lt;/p>
&lt;p>第二，孔子是鲁国人。在孔子生前，鲁国政权已在季、孟、仲孙三家之手，而季氏权柄势力又最大。以季氏而论，似乎有些自相矛盾的做法。当奴隶制度衰落时，他分得“公室”三分之一，便采用封建的军赋制度；到昭公五年，再“四分公室”，其它二家都学习他的榜样，全都采用封建军赋制度。这是他的进步处。但鲁昭公自二十五年出外居于齐国，到三十二年死在干侯，鲁国几乎七年没有国君，国内照常安定自不必说，因为政权早巳不在鲁昭公手里。但季氏，卽叫季孙意如的，却一点也没有夺取君位的意图，还曾想把鲁昭公迎接回国；鲁昭公死了，又立昭公之弟定公为君。这不能说是倒退的，也不能说是奇怪的，自然有它的原由。第一，正是这个时候，齐国的陈氏（《史记》作田氏）有夺取姜齐政柄的趋向，鲁昭公三年晏婴曾经向晋国的叔向作了这种预言，叔向也向晏婴透露了他对晋国公室削弱卑微的看法。然而，当时还没有一个国家由权臣取代君位的，季氏还没有胆量开这一先例。何况鲁国是弱小国家，齐、秦、晋、楚这些强大之国，能不以此为借口而攻伐季氏么？第二，鲁国是为西周奴隶社会制作礼乐典章法度的周公旦后代的国家，当时还有人说：“周礼尽在鲁矣。”（《左传》昭公二年）还说：鲁“犹秉周礼”（闵公元年）。周礼的内容究竟怎样，现在流传的周礼不足为凭。但周公姬旦制作它，其本意在于巩固奴隶主阶级的统治，是可以肯定的。这种传统在鲁国还有不小力量，季氏也就难以取鲁君之位而代之了。孔子对于季氏对待昭公和哀公的态度，是目见耳闻的，却不曾有一言半语评论它，是孔子没有评论呢？还是没有传下来呢？弄不清楚。这里我只想说明一点，卽孔子作为一个鲁国人，他的思想也不能不受鲁国的特定环境卽鲁国当时的国情的影响。当时的鲁国，正处于新、旧交替之中，卽有改革，而改革又不彻底，这种情况，也反映在孔子的思想上。&lt;/p>
&lt;p>第三，孔子自己说“信而好古”。（7.1）他的学子子贡说他老师“夫子焉不学？而亦何常师之有？”（19.22）孔子自己又说：“三人行，必有我师焉：择其善者而从之，其不善者而改之。”（7.22）可见孔子的学习，不但读书，而且还在于观察别人，尤其在“每事问”。（3.15）卽以古代文献而论，孔子是非常认真看待的。他能讲夏代的礼，更能讲述殷代的礼，却因为缺乏文献，无法证实，以至于感叹言之。（3.9）那么，他爱护古代文献和书籍的心情可想而知。由《论语》一书来考察，他整理过《诗经》的《雅》和《颂》，（9.15）命令儿子学诗学礼。（16.3）自己又说：“五十以学《易》。”（7.17）《易》本来是用来占筮的书，而孔子不用来占筮，却当作人生哲理书读，因此才说：“五十以学《易》，可以无大过矣。”他引用《易》“不恒其德，或承之羞”二句，结论是“不占而已矣”。（13.22）他征引过《尚书》。他也从许多早已亡佚的古书中学习很多东西。举一个例子，他的思想核心是仁。他曾为仁作一定义“克己复礼”。（12.1）然而这不是孔子自己创造的，根据《左传》昭公十二年孔子自己的话，在古代一种“志”书中，早有“克己复礼，仁也”的话。那么，孔子答对颜回“克己复礼为仁”，不过是孔子的“古为今用”罢了。孔子对他儿子伯鱼说：“不学礼，无以立。”（16.13）这本是孟僖子的话，见于《左传》昭公七年。孟僖子说这话时，孔子还不过十七、八岁，自然又是孔子借用孟僖子的话。足见孔子读了当时存在的许多书，吸取了他认为可用的东西，加以利用。古代书籍和古人对孔子都有不小影响。&lt;/p>
&lt;p>第四，古人，尤其春秋时人，有各种政治家、思想家，自然有进步的，有改良主义的，也有保守和倒退的。孔子对他们都很熟知，有的作好评，有的作恶评，有的不加评论。由这些地方，可以看出孔子对他们的看法和取舍，反过来也可从中看出他们对孔子的影响。子产是一位唯物主义者，又是郑国最有名、最有政绩的政治家和外交家。孔子对他极为赞扬。郑国有个“乡校”，平日一般士大夫聚集在那里议论朝廷政治，于是有人主张毁掉它。子产不肯，并且说：“其所善者，吾则行之；其所恶者，吾则改之，是吾师也，若之何毁之？”这时孔子至多十一岁，而后来评论说：“以是观之，人谓子产不仁，吾不信也。”（《左传》襄公三十一年）孔子以“仁”来赞扬子产的极有限的民主作风，足见他对待当时政治的态度。他讥评鲁国早年的执政臧文仲“三不仁”、“三不知（智）”。其中有压抑贤良展禽（柳下惠）一事（《左传》文公二年），而又赞许公叔文子大力提拔大夫僎升居卿位。用人唯贤，不准许压抑贤良，这也是孔子品评人物标准之一。又譬如晋国有位叔向（羊舌佾），当时贤良之士都表扬他，喜爱他。他也和吴季札、齐晏婴、郑子产友好，孔子对他没有什么议论，可能因为他政治态度过于倾向保守罢。春秋时代二三百年，著名而有影响的人物不少，他们的言行，或多或少地影响孔子。这自是孔子思想体系渊源之一。&lt;/p>
&lt;p>以上几点说明，孔子的思想渊源是复杂的，所受的影响是多方面的。我们今天研究孔子，不应当只抓住某一方面，片面地加以夸大，肯定一切或否定一切。&lt;/p>
&lt;h2 id="三孔子论天命鬼神和卜筮">
 （三）孔子论天、命、鬼神和卜筮
 &lt;a class="anchor" href="#%e4%b8%89%e5%ad%94%e5%ad%90%e8%ae%ba%e5%a4%a9%e5%91%bd%e9%ac%bc%e7%a5%9e%e5%92%8c%e5%8d%9c%e7%ad%ae">#&lt;/a>
&lt;/h2>
&lt;p>孔子是殷商苗裔，又是鲁国人，这两个国家比其它各国更为迷信。以宋国而论，宇宙有陨星，这是自然现象，也是常见之事，宋襄公是个图霸之君，却还向周内史过问吉凶，使得内史过不敢不诡辞答复。宋景公逝世，有二个养子，宋昭公——养子之一，名“得”，《史记》作“特”——因为作了个好梦，就自信能继承君位。这表示宋国极迷信，认为天象或梦境预示着未来的吉凶。至于鲁国也一样，穆姜搬家，先要用《周易》占筮（《左传》襄公九年）；叔孙穆子刚出生，也用《周易》卜筮（《左传》昭公五年）；成季尚未出生，鲁桓公既用龟甲卜，又用蓍草筮（《左传》闵公二年），而且听信多年以前的童谣，用这童谣来断定鲁国政治前途。这类事情，在今天看来，都很荒谬。其它各国无不信天、信命、信鬼神。这是奴隶社会以及封建社会的必然现象，唯有真正的唯物主义者而又有勇气的，才不如此。以周太史过而论，他认为“陨星”是“阴阳”之事，而“吉凶由人”，因为不敢得罪宋襄公，才以自己观察所得假“陨星”以答。以子产而论，能说“天道远，人道迩，非所及也”（《左传》昭公十八年），却对伯有作为鬼魂出现这种谣传和惊乱，不敢作勇敢的否定，恐怕一则不愿得罪晋国执政大臣赵景子，二则也不敢过于作违俗之论罢！&lt;/p>
&lt;p>孔子是不迷信的。我认为只有庄子懂得孔子，庄子说：“六合之外，圣人存而不论。”（《庄子·齐物论篇》）庄子所说的“圣人”无疑是孔子，由下文“春秋经世先王之志，圣人议而不辩”可以肯定。“天”、“命”、“鬼神”都是“六合之外，圣人存而不论”的东西。所谓“存而不论”，用现代话说，就是保留它而不置可否，不论其有或无。实际上也就是不大相信有。&lt;/p>
&lt;p>孔子为什么没有迷信思想，这和他治学态度的严谨很有关系。他说过，“多闻阙疑”，“多见阙殆”。（2.18）还说：“学而不思则罔，思而不学则殆。”（2.15）足见他主张多闻、多见和学思结合。“思”什么呢？其中至少包括思考某事某物的道理。虽然当时绝大多数人相信卜筮，相信鬼神，孔子却想不出它们存在的道理。所以他不讲“怪、力、乱、神”。（7.21）“力”和“乱”，或者是孔子不愿谈，“怪”和“神”很大可能是孔子根本采取“阙疑”、“存而不论”的态度。臧文仲相信占卜，畜养一个大乌龟，并且给它极为华丽的地方住，孔子便批评他不聪明，或者说是愚蠢。（5.18）一个乌龟壳怎能预先知道一切事情呢？这是孔子所想不通的。由于孔子这种治学态度，所以能够超出当时一般人，包括宋、鲁二国人之上。“知之为知之，不知为不知”，（2.17）不但于“六合之外”存而不论，卽六合之内，也有存而不论的。&lt;/p>
&lt;p>我们现在来谈谈孔子有关天、命、卜筮和鬼神的一些具体说法和看法。我只用《论语》和《左传》的资料。其它古书的数据，很多是靠不住的，需要更多地审查和选择，不能轻易使用。&lt;/p>
&lt;p>先讨论“天”。&lt;/p>
&lt;p>在《论语》中，除复音词如“天下”、“天子”、“天道”之类外，单言“天”字的，一共十八次。在十八次中，除掉别人说的，孔子自己说了十二次半。在这十二次半中，“天”有三个意义：一是自然之“天”，一是主宰或命运之天，一是义理之天。自然之天仅出现三次，而且二句是重复句：&lt;/p>
&lt;p>天何言哉！四时行焉，百物生焉，天何言哉，（7.19）巍巍乎唯天为大。（8.19）&lt;/p>
&lt;p>义理之天，仅有一次：&lt;/p>
&lt;p>获罪于天，无所祷也。（3.13）&lt;/p>
&lt;p>命运之天或主宰之天就比较多，依出现先后次序録述它：&lt;/p>
&lt;p>予所否者，天厌之！天厌之！（6.28）&lt;/p>
&lt;p>天生德于予，桓魋其如予何？（7.23）&lt;/p>
&lt;p>天之将丧斯文也，后死者不得与于斯文也；天之未丧斯文也，匡人其如予何？（9.5）&lt;/p>
&lt;p>吾谁欺，欺天乎！（9.12）&lt;/p>
&lt;p>不怨天，不尤人。下学而上达，知我者，其天乎！（14.35）&lt;/p>
&lt;p>另外一次是子夏说的。他说：“商闻之矣：死生有命，富贵在天。”但这话子夏是听别人说的。听谁说的呢？很大可能是听孔子说的，所以算它半次。&lt;/p>
&lt;p>若从孔子讲“天”的具体语言环境来说，不过三、四种。一种是发誓，“天厌之”就是当时赌咒的语言。一种是孔子处于困境或险境中，如在匡被围或者桓魋想谋害他，他无以自慰，只好听天。因为孔子很自负，不但自认有“德”，而且自认有“文”，所以把自己的生死都归之于天。一种是发怒，对子路的弄虚作假，违犯礼节大为不满，便骂“欺天乎”。在不得意而又被学生引起牢骚时，只得说“知我者其天乎”。古人也说过，疾病则呼天，创痛则呼父母。孔子这样称天，并不一定认为天真是主宰，天真有意志，不过藉天以自慰、或发泄感情罢了。至于“获罪于天”的“天”，意思就是行为不合天理。&lt;/p>
&lt;p>再讨论“命”，《论语》中孔子讲“命”五次半，讲“天命”三次。也罗列于下：&lt;/p>
&lt;p>亡之！命矣夫！斯人也而有斯疾也！（6.10）&lt;/p>
&lt;p>道之将行也与，命也；道之将废也与，命也。公伯寮其如命何？（14.36）&lt;/p>
&lt;p>不知命，无以为君子也，（20.3）&lt;/p>
&lt;p>同“富贵在天”一样，子夏还听他说过“死生有命”。关于“天命”的有下列一些语句：&lt;/p>
&lt;p>五十而知天命。（2.4）&lt;/p>
&lt;p>君子有三畏：畏天命，……小人不知天命而不畏也。（16.8）&lt;/p>
&lt;p>从文句表面看，孤立地看，似乎孔子是宿命论者，或者如《墨子·天志篇》所主张的一样是天有意志能行令论者。其实不如此。古代人之所以成为宿命论者或者天志论者，是因为他们对于宇宙以至社会现象不能很好理解的缘故。孔子于“六合之外，存而不论”，他认为对宇宙现象不可能有所知，因此也不谈，所以他讲“命”，都是关于人事。依一般人看，在社会上，应该有个“理”。无论各家各派的“理”怎样，各家各派自然认为他们的“理”是正确的，善的，美的。而且他们还要认为依他的“理”而行，必然会得到“善报”；违背他们的“理”而行，必然会有“凶恶”的结果。然而世间事不完全或者大大地不如他们的意料，这就是常人所说善人得不到好报，恶人反而能够荣华富贵以及长寿。伯牛是好人，却害着治不好的病，当孔子时自然无所谓病理学和生理学，无以归之，只得归之于“命”。如果说，孔子是天志论者，认为天便是人间的主宰，自会“赏善而罚淫”，那伯牛有疾，孔子不会说“命矣夫”，而会怨天瞎了眼，怎么孔子自己又说“不怨天”呢？（14.35）如果孔子是天命论者，那一切早已由天安排妥当，什么都不必干，听其自然就可以了，孔子又何必栖栖遑遑“知其不可而为之”呢？人世间事，有必然，有偶然。越是文化落后的社会，偶然性越大越多，在不少人看来，不合“理”的事越多。古人自然不懂得偶然性和必然性以及这两者的关系，由一般有知识者看来，上天似乎有意志，又似乎没有意志，这是谜，又是个不可解的谜，孟子因之说：“莫之为而为者，天也；莫之致而至者，命也。”（《万章上》）这就是把一切偶然性，甚至某些必然性，都归之于“天”和“命”。这就是孔、孟的天命观。&lt;/p>
&lt;p>孔子是怀疑鬼神的存在的。他说：“祭如在，祭神如神在。”（3.12）祭祖先（鬼）好像祖先真在那里，祭神好像神真在那里。所谓“如在”“如神在”，实际上是说并不在。孔子病危，子路请求祈祷，并且征引古书作证，孔子就婉言拒绝。（7.35）楚昭王病重，拒绝祭神，孔子赞美他“知大道”（《左传》哀公六年）。假使孔子真认为天地有神灵，祈祷能去灾得福，为什么拒绝祈祷呢？为什么赞美楚昭王“知大道”呢？子路曾问孔子如何服事鬼神。孔子答说：“活人还不能服事，怎么能去服事死人？”子路又问死是怎么回事。孔子答说：“生的道理还没有弄明白，怎么能够懂得死？”（11.12）足见孔子只讲现实的事，不讲虚无渺茫的事。孔子说：“君子于其所不知，盖阙如也。”（13.3）孔子对死和鬼的问题，回避答复，也是这种表现。那么为什么孔子要讲究祭祀，讲孝道，讲三年之丧呢？我认为，这是孔子利用所谓古礼来为现实服务。殷人最重祭祀，最重鬼神。孔子虽然不大相信鬼神的实有，却不去公开否定它，而是利用它，用曾参的话说：“慎终追远，民德归厚矣。”（1.9）很显然，孔子的这些主张不过企图藉此维持剥削者的统治而已。&lt;/p>
&lt;p>至于卜筮，孔子曾经引《易经》“不恒其德，或承之羞”，结论是不必占卜了。这正如王充《论衡·卜筮篇》所说，“枯骨死草，何能知吉凶乎”（依刘盼遂《集解》本校正）。&lt;/p>
&lt;h2 id="四孔子的政治观和人生观">
 （四）孔子的政治观和人生观
 &lt;a class="anchor" href="#%e5%9b%9b%e5%ad%94%e5%ad%90%e7%9a%84%e6%94%bf%e6%b2%bb%e8%a7%82%e5%92%8c%e4%ba%ba%e7%94%9f%e8%a7%82">#&lt;/a>
&lt;/h2>
&lt;p>在春秋时代，除郑国子产等几位世卿有心救世以外，本人原在下层地位，而有心救世的，像战国时许多人物一般，或许不见得没有，但却没有一人能和孔子相比，这从所有流传下来的历史数据可以肯定。在《论语》一书中反映孔子热心救世，碰到不少隐士泼以冰凉的水。除长沮、桀溺外，还有楚狂接舆、（18.5）荷筱丈人、（18.7）石门司门者（14.38）和微生亩（14.32）等等。孔子自己说：“天下有道，丘不与易也。”（18.6）石门司门者则评孔子为“知其不可而为之”。“知其不可而为之”，可以说是“不识时务”，但也可以说是坚韧不拔。孔子的热心救世，当时未见成效，有客观原因，也有主观原因，这里不谈。但这种“席不暇暖”（韩愈：〈争臣论〉，盖本于《文选·班固答宾戏》），“三月无君则吊”（《孟子·滕文公下》）的精神，不能不说是极难得的，也是可敬佩的。&lt;/p>
&lt;p>孔子的时代，周王室已经无法恢复权力和威信，这是当时人都知道的，难道孔子不清楚？就是齐桓公、晋文公这样的霸主，也已经成为陈迹。中原各国，不是政权落于卿大夫，就是“陪臣执国命”。如晋国先有六卿相争，后来只剩四卿——韩、赵、魏和知伯。《左传》最后载知伯被灭，孔子早“寿终正寝”了。齐国陈恒杀了齐简公，这也是孔子所亲见的。（14.21）在鲁国，情况更不好，“禄之去公室五世（宣、成、襄、昭、定五公）矣，政逮于大夫四世（季文子、武子、平子、桓子四代）矣，故夫三桓之子孙微矣”，（16.3）而处于“陪臣执国命”（16.2）时代。在这种情况下，中原诸国，如卫、陈、蔡等，国小力微，不能有所作为。秦国僻在西方，自秦穆公、康公以后已无力再过问中原的事。楚国又被吴国打得精疲力尽，孔子仅仅到了楚国边境，和叶公相见。（13.16，又7.19）纵然有极少数小官，如仪封人之辈赞许孔子，（3.24）但在二千多年以前，要对当时政治实行较大改变，没有适当力量的凭借是不可能做到的。孔子徒抱大志，感叹以死罢了。&lt;/p>
&lt;p>孔子的政治思想，从尧曰篇可以看出。我认为尧曰篇“谨权量，审法度”以下都是孔子的政治主张。然而度、量、衡的统一直到孔子死后二百五十八年，秦始皇二十六年统一中国后才实行。孔子又说，治理国家要重视三件事，粮食充足，军备无缺，人民信任，而人民信任是极为重要的。（12.7）甚至批评晋文公伐原取信（见《左传》僖公二十六年）为“谲而不正”。（14.15）孔子主张“正名”，（13.3）正名就是“君君，臣臣，父父，子子”；（12.11）而当时正是“君不君，臣不臣，父不父，子不子”。孔子的政绩表现于当时的，一是定公十年和齐景公在夹谷相会，在外交上取得重大胜利；一是子路毁坏季氏的费城，叔孙氏自己毁坏了他们的郈城，唯独孟氏不肯毁坏成城（《左传》定公十二年）。假使三家的老巢城池都被毁了，孔子继续在鲁国做官，他的“君君，臣臣”的主张有可能逐渐实现。但齐国的“女乐”送来，孔子只得离开鲁国了。（18.4）孔子其它政治主张，仅仅托之空言。&lt;/p>
&lt;p>孔子还说：“如有用我者，吾其为东周乎！”（17.5）孔子所谓“东周”究竟是些什么内容，虽然难以完全考定，但从上文所述以及联系孔子其它言行考察，可以肯定绝不是把周公旦所制定的礼乐制度恢复原状。孔子知道时代不同，礼要有“损益”。（2.23）他主张“行夏之时”，（15.11）便是对周礼的改变。夏的历法是以立春之月为一年的第一月，周的历法是以冬至之月为一年的第一月。夏历便于农业生产，周历不便于农业生产。从《左传》或者《诗经》看，尽管某些国家用周历，但民间还用夏历。晋国上下全用夏历。所谓周礼，在春秋以前，很被人重视。孔子不能抛弃这面旗帜，因为它有号召力，何况孔子本来景仰周公？周礼是上层建筑，在阶级社会，封建地主阶级无妨利用奴隶主阶级某些礼制加以改造，来巩固自己的统治。不能说孔子要“复礼”，要“为东周”，便是倒退。他在夹谷会上，不惜用武力对待齐景公的无礼，恐怕未必合乎周礼。由此看来，孔子的政治主张，尽管难免有些保守处，如“兴灭国，继绝世”，（20.1）但基本倾向是进步的，和时代的步伐合拍的。&lt;/p>
&lt;p>至于他的人生观，更是积极的。他“发愤忘食，乐以忘忧，不知老之将至”。（7.19）他能够过穷苦生活，而对于不义的富贵，视同浮云。（7.16）这些地方还不失他原为平民的本色。&lt;/p>
&lt;h2 id="五关于忠恕和仁">
 （五）关于忠恕和仁
 &lt;a class="anchor" href="#%e4%ba%94%e5%85%b3%e4%ba%8e%e5%bf%a0%e6%81%95%e5%92%8c%e4%bb%81">#&lt;/a>
&lt;/h2>
&lt;p>春秋时代重视“礼”，“礼”包括礼仪、礼制、礼器等，却很少讲“仁”。我把《左传》“礼”字统计一下，一共讲了462次：另外还有“礼食”一次，“礼书”、“礼经”各一次，“礼秩”一次，“礼义”三次。但讲“仁”不过33次，少于讲“礼”的至429次之多。并且把礼提到最高地位。《左传》昭公二十六年晏婴对齐景公说：“礼之可以为国也久矣，与天地并。”还有一个现象，《左传》没有“仁义”并言的。《论语》讲“礼”75次，包括“礼乐”并言的；讲“仁”却109次。由此看来，孔子批判地继承春秋时代的思潮，不以礼为核心，而以仁为核心。而且认为没有仁，也就谈不上礼，所以说：“人而不仁，如礼何？”（3.3）&lt;/p>
&lt;p>一部《论语》，对“仁”有许多解释，或者说“克己复礼为仁”，（12.1）或者说“仁者先难而后获”，（6.22）或者说“能行五者（恭、宽、信、敏、惠）于天下为仁”，（17.6）或者说“爱人”就是“仁”，（12.22）还有很多歧异的说法。究竟“仁”的内涵是什么呢？我认为从孔子对曾参一段话可以推知“仁”的真谛。孔子对曾参说：“吾道一以贯之。”曾参告诉其它同学说：“夫子之道，忠恕而已矣。”（4.15）“吾道”就是孔子自己的整个思想体系，而贯穿这个思想体系的，必然是它的核心。分别讲是“忠恕”，概括讲是“仁”。&lt;/p></description></item><item><title>04里仁篇第四</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/04%E9%87%8C%E4%BB%81%E7%AF%87%E7%AC%AC%E5%9B%9B/</link><pubDate>Sat, 11 Jan 2025 19:53:23 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/04%E9%87%8C%E4%BB%81%E7%AF%87%E7%AC%AC%E5%9B%9B/</guid><description>&lt;h1 id="里仁篇第四">
 里仁篇第四
 &lt;a class="anchor" href="#%e9%87%8c%e4%bb%81%e7%af%87%e7%ac%ac%e5%9b%9b">#&lt;/a>
&lt;/h1>
&lt;p>(共二十六章)&lt;/p>
&lt;p>4.1子曰：“里⑴仁为美。择不处⑵仁，焉得知⑶？”&lt;/p>
&lt;p>【译文】孔子说：“住的地方，要有仁德这才好。选择住处，没有仁德，怎么能是聪明呢？”&lt;/p>
&lt;p>【注释】⑴里——这里可以看为动词。居住也。⑵处——上声，音杵，chǔ，居住也。⑶知——《论语》的“智”字都如此写。这一段话，究竟孔子是单纯地指“择居”而言呢，还是泛指，“择邻”、“择业”、“择友”等等都包括在内呢？我们已经不敢肯定。《孟子·公孙丑上》云：“孟子曰：‘矢人岂不仁于函人哉？矢人惟恐不伤人，函人惟恐伤人。巫、匠亦然。故术不可不慎也。孔子曰，里仁为美。择不处仁，焉得智？’”便是指择业。因此译文于“仁”字仅照字面翻译，不实指为仁人。&lt;/p>
&lt;p>4.2子曰：“不仁者不可以久处约，不可以长处乐。仁者安仁，知者利仁。”&lt;/p>
&lt;p>【译文】孔子说：“不仁的人不可以长久地居于穷困中，也不可以长久地居于安乐中。有仁德的人安于仁［实行仁德便心安，不实行仁德心便不安］；聪明人利用仁［他认识到仁德对他长远而巨大的利益，他便实行仁德］。”&lt;/p>
&lt;p>4.3子曰：“唯仁者能好人，能恶人⑴。”&lt;/p>
&lt;p>【译文】孔子说：“只有仁人才能够喜爱某人，厌恶某人。”&lt;/p>
&lt;p>【注释】⑴唯仁者能好人，能恶人——《后汉书·孝明八王传》注引《东观汉记》说：和帝赐彭城王恭诏曰：“孔子曰，‘惟仁者能好人，能恶人’。——贵仁者所好恶得其中也。”我认为“贵仁者所好恶得其中”，正可说明这句。&lt;/p>
&lt;p>4.4子曰：“苟志于仁矣，无恶也。”&lt;/p>
&lt;p>【译文】孔子说：“假如立定志向实行仁德，总没有坏处。”&lt;/p>
&lt;p>4.5子曰：“富与贵，是人之所欲也；不以其道得之，不处也。贫与贱，是人之所恶也；不以其道得之⑴，不去也。君子去仁，恶乎⑵成名？君子无终食之间违⑶仁，造次必于是，颠沛必于是。”&lt;/p>
&lt;p>【译文】孔子说：“发大财，做大官，这是人人所盼望的；不用正当的方法去得到它，君子不接受。穷困和下贱，这是人人所厌恶的；不用正当的方法去抛掉它，君子不摆脱。君子抛弃了仁德，怎样去成就他的声名呢？君子没有吃完一餐饭的时间离开仁德，就是在仓卒匆忙的时候一定和仁德同在，就是在颠沛流离的时候一定和仁德同在。”&lt;/p>
&lt;p>【注释】⑴贫与贱……不以其道得之——“富与贵”可以说“得之”，“贫与贱”却不是人人想“得之”的。这里也讲“不以其道得之”，“得之”应该改为“去之”。译文只就这一整段的精神加以诠释，这里为什么也讲“得之”可能是古人的不经意处，我们不必再在这上面做文章了。⑵恶乎——恶音乌，wū，何处。“恶乎”卽“于何处”，译文意译为“怎样”。⑶违——离开，和公冶长篇第五的“弃而违之”的“违”同义。&lt;/p>
&lt;p>4.6子曰：“我未见好仁者，恶不仁者。好仁者，无以尚⑴之；恶不仁者，其为仁矣⑵，不使不仁者加乎其身。有能一日用其力于仁矣乎？我未见力不足者。盖⑶有之矣，我未之见也。”&lt;/p>
&lt;p>【译文】孔子说：“我不曾见到过爱好仁德的人和厌恶不仁德的人。爱好仁德的人，那是再好也没有的了；厌恶不仁德的人，他行仁德只是不使不仁德的东西加在自己身上。有谁能在某一天使用他的力量于仁德呢？我没见过力量不够的。大概这样人还是有的，我不曾见到罢了。”&lt;/p>
&lt;p>【注释】⑴尚——动词，超过之意。⑵矣——这个“矣”字用法同“也”，表示停顿。⑶盖——副词，大概之意。&lt;/p>
&lt;p>4.7子曰：“人之过也，各于其党。观过，斯知仁⑴矣。”&lt;/p>
&lt;p>【译文】孔子说：“［人是各种各样的，人的错误也是各种各样的。］什么样的错误就是由什么样的人犯的。仔细考察某人所犯的错误，就可以知道他是什么样式的人了。”&lt;/p>
&lt;p>【注释】⑴仁——同“人”。《后汉书·吴佑传》引此文正作“人”（武英殿本却又改作“仁”，不可为据）。&lt;/p>
&lt;p>4.8子曰：“朝闻道，夕死可矣。”&lt;/p>
&lt;p>【译文】孔子说：“早晨得知真理，要我当晚死去，都可以。”&lt;/p>
&lt;p>4.9子曰：“士志于道，而耻恶衣恶食者，未足与议也。”&lt;/p>
&lt;p>【译文】孔子说：“读书人有志于真理，但又以自己吃粗粮穿破衣为耻辱，这种人，不值得同他商议了。”&lt;/p>
&lt;p>4.10子曰：“君子之于天下也，无适⑴也，无莫⑴也，义之与比⑵。”&lt;/p>
&lt;p>【译文】孔子说：“君子对于天下的事情，没规定要怎样干，也没规定不要怎样干，只要怎样干合理恰当，便怎样干。”&lt;/p>
&lt;p>【注释】⑴适，莫——这两字讲法很多，有的解为“亲疏厚薄”，“无适无莫”便是“情无亲疏厚薄”。有的解为“敌对与羡慕”，“无适（读为敌）无莫（读为慕）”便是“无所为仇，无所欣羡”。我则用朱熹《集注》的说法。⑵比——去声，bì，挨着，靠拢，为邻。从孟子和以后的一些儒家看来，孔子“无必无固”（9.4），通权达变，“可以仕则仕，可以止则止，可以久则久，可以速则速”（《孟子·公孙丑上》），唯义是从，叫做“圣之时”，或者可以做这章的解释。&lt;/p>
&lt;p>4.11子曰：“君子怀德，小人怀土⑴；君子怀刑⑵，小人怀惠。”&lt;/p>
&lt;p>【译文】孔子说：“君子怀念道德，小人怀念乡土；君子关心法度，小人关心恩惠。”&lt;/p>
&lt;p>【注释】⑴土——如果解为田土，亦通。⑵刑——古代法律制度的“刑”作“刑”，刑罚的“刑”作“㓝”，从刀井，后来都写作“刑”了。这“刑”字应该解释为法度。&lt;/p>
&lt;p>4.12子曰：“放⑴于利而行，多怨。”&lt;/p>
&lt;p>【译文】孔子说：“依据个人利益而行动，会招致很多的怨恨。”&lt;/p>
&lt;p>【注释】⑴放——旧读上声，音仿，fǎng，依据。&lt;/p>
&lt;p>4.13子曰：“能以礼让为国乎？何有⑴？不能以礼让为国，如礼何⑵？”&lt;/p>
&lt;p>【译文】孔子说：“能够用礼让来治理国家吗？这有什么困难呢？如果不能用礼让来治理国家，又怎样来对待礼仪呢？”&lt;/p>
&lt;p>【注释】⑴何有——这是春秋时代的常用语，在这里是“有何困难”的意思。黄式三《论语后案》、刘宝楠《论语正义》都说：“何有，不难之词。”⑵如礼何——依孔子的意见，国家的礼仪必有其“以礼让为国”的本质，它是内容和形式的统一体。如果舍弃它的内容，徒拘守那些仪节上的形式，孔子说，是没有什么作用的。&lt;/p>
&lt;p>4.14子曰：“不患无位，患所以立⑴。不患莫己知，求为可知也。”&lt;/p>
&lt;p>【译文】孔子说：“不发愁没有职位，只发愁没有任职的本领；不怕没有人知道自己，去追求足以使别人知道自己的本领好了。”&lt;/p>
&lt;p>【注释】⑴患所以立——“立”和“位”古通用，这“立”字便是“不患无位”的“位”字。《春秋》桓公二年“公卽位”，石经作“公卽立”可以为证。&lt;/p>
&lt;p>4.15子曰：“参乎！吾道一以贯⑴之。”曾子曰：“唯。”子出，门人问曰：“何谓也？”曾子曰：“夫子之道，忠恕⑵而已矣。”&lt;/p>
&lt;p>【译文】孔子说：“参呀！我的学说贯穿着一个基本观念。”曾子说：“是。”孔子走出去以后，别的学生便问曾子道：“这是什么意思”曾子道：“他老人家的学说，只是忠和恕罢了。”&lt;/p>
&lt;p>【注释】⑴贯——贯穿、统贯。阮元《揅经室集》有〈一贯说〉，认为《论语》的“贯”字都是“行”、“事”的意义，未必可信。⑵忠、恕——“恕”，孔子自己下了定义：“己所不欲，勿施于人。”“忠”则是“恕”的积极一面，用孔子自己的话，便应该是：“己欲立而立人，己欲达而达人。”&lt;/p>
&lt;p>4.16子曰：“君子⑴喻于义，小人⑴喻于利。”&lt;/p>
&lt;p>【译文】孔子说：“君子懂得的是义，小人懂得的是利。”&lt;/p>
&lt;p>【注释】⑴君子、小人——这里的“君子”、“小人”是指在位者，还是指有德者，还是两者兼指，孔子原意不得而知。《汉书·杨恽传·报孙会宗书》曾引董仲舒的话说：“明明求仁义常恐不能化民者，卿大夫之意也；明明求财利常恐困乏者，庶人之事也。”只能看作这一语的汉代经师的注解，不必过信。&lt;/p>
&lt;p>4.17子曰：“见贤思齐焉，见不贤而内自省也。”&lt;/p>
&lt;p>【译文】孔子说：“看见贤人，便应该想向他看齐；看见不贤的人，便应该自己反省，［有没有同他类似的毛病。］”&lt;/p>
&lt;p>4.18子曰：“事父母几⑴谏，见志不从，又敬不违⑵，劳⑶而不怨。”&lt;/p>
&lt;p>【译文】孔子说：“侍奉父母，［如果他们有不对的地方，］得轻微婉转地劝止，看到自己的心意没有被听从，仍然恭敬地不触犯他们，虽然忧愁，但不怨恨。”&lt;/p>
&lt;p>【注释】⑴几——平声，音机，jī，轻微，婉转。⑵违——触忤，冒犯。⑶劳——忧愁。说见王引之《经义述闻》。&lt;/p>
&lt;p>4.19子曰：“父母在，不远游，游必有方。”&lt;/p>
&lt;p>【译文】孔子说：“父母在世，不出远门，如果要出远门，必须有一定的去处。”&lt;/p>
&lt;p>4.20子曰：“三年无改于父之道，可谓孝矣⑴。”&lt;/p>
&lt;p>【注释】⑴见学而篇。（1.11）&lt;/p>
&lt;p>4.21子曰：“父母之年，不可不知也。一则以喜，一则以惧。”&lt;/p>
&lt;p>【译文】孔子说：“父母的年纪不能不时时记在心里：一方面因［其高寿］而喜欢，另一方面又因［其寿高］而有所恐惧。”&lt;/p>
&lt;p>4.22子曰：“古者言之不出，耻⑴躬之不逮⑵也。”&lt;/p>
&lt;p>【译文】孔子说：“古时候言语不轻易出口，就是怕自己的行动赶不上。”&lt;/p>
&lt;p>【注释】⑴耻——动词的意动用法，以为可耻的意思。⑵逮——音代，dài，及，赶上。&lt;/p>
&lt;p>4.23子曰：“以约⑴失之者鲜矣。”&lt;/p>
&lt;p>【译文】孔子说：“因为对自己节制、约束而犯过失的，这种事情总不会多。”&lt;/p>
&lt;p>【注释】⑴约——《论语》的“约”字不外两个意义：（甲）穷困，（乙）约束。至于节俭的意义，虽然已见于《荀子》，却未必适用于这里。&lt;/p>
&lt;p>4.24子曰：“君子欲讷⑴于言而敏于行⑵。”&lt;/p>
&lt;p>【译文】孔子说：“君子言语要谨慎迟钝，工作要勤劳敏捷。”&lt;/p>
&lt;p>【注释】⑴讷——读nà，语言迟钝。⑵讷于言敏于行——造句和学而篇的“敏于事而慎于言”意思一样，所以译文加“谨慎”两字，同时也把“行”字译为“工作”。&lt;/p>
&lt;p>4.25子曰：“德不孤，必有邻⑴。”&lt;/p>
&lt;p>【译文】孔子说：“有道德的人不会孤单，一定会有［志同道合的人来和他做］伙伴。”&lt;/p></description></item><item><title>16季氏篇第十六</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/16%E5%AD%A3%E6%B0%8F%E7%AF%87%E7%AC%AC%E5%8D%81%E5%85%AD/</link><pubDate>Sat, 11 Jan 2025 19:53:22 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/16%E5%AD%A3%E6%B0%8F%E7%AF%87%E7%AC%AC%E5%8D%81%E5%85%AD/</guid><description>&lt;h1 id="季氏篇第十六">
 季氏篇第十六
 &lt;a class="anchor" href="#%e5%ad%a3%e6%b0%8f%e7%af%87%e7%ac%ac%e5%8d%81%e5%85%ad">#&lt;/a>
&lt;/h1>
&lt;p>(共十四章)&lt;/p>
&lt;p>16.1季氏将伐颛臾⑴。冉有、季路见于孔子曰：“季氏将有事⑵于颛臾。”&lt;/p>
&lt;p>孔子曰：“求！无乃尔是过⑶与？夫颛臾，昔者先王以为东蒙⑷主，且在邦域之中矣，是社稷之臣也。何以伐为？”&lt;/p>
&lt;p>冉有曰：“夫子欲之，吾二臣者皆不欲也。”&lt;/p>
&lt;p>孔子曰：“求！周任⑸有言曰：‘陈力就列，不能者止。’危而不持，颠而不扶，则将焉用彼相矣？且尔言过矣，虎兕出于柙，龟玉毁于椟中，是谁之过与？”&lt;/p>
&lt;p>冉有曰：“今夫颛臾，固而近于费⑹。今不取，后世必为子孙忧。”&lt;/p>
&lt;p>孔子曰：“求！君子疾夫舍⑺曰欲之而必为之辞。丘也闻有国有家者，不患寡当作贫而患不均，不患贫当作寡而患不安⑻。盖均无贫，和无寡，安无倾。夫如是，故远人不服，则修文德以来之。既来之，则安之。今由与求也，相夫子，远人不服，而不能来也；邦分崩离析，而不能守也；而谋动干戈于邦内。吾恐季孙之忧，不在颛臾，而在萧墙之内⑼也。”&lt;/p>
&lt;p>【译文】季氏准备攻打颛臾。冉有、子路两人谒见孔子，说道：“季氏准备对颛臾使用兵力。”&lt;/p>
&lt;p>孔子道：“冉求，这难道不应该责备你吗？颛臾，上代的君王曾经授权他主持东蒙山的祭祀，而且它的国境早在我们最初被封时的疆土之中，这正是和鲁国共安危存亡的藩属，为什么要去攻打它呢？”&lt;/p>
&lt;p>冉有道：“季孙要这么干，我们两人本来都是不同意的。”&lt;/p>
&lt;p>孔子道：“冉求！周任有句话说：‘能够贡献自己的力量，这再任职；如果不行，就该辞职。’譬如瞎子遇到危险，不去扶持；将要摔倒了，不去搀扶，那又何必用助手呢？你的话是错了。老虎犀牛从槛里逃了出来，龟壳美玉在匣子里毁坏了，这是谁的责任呢？”&lt;/p>
&lt;p>冉有道：“颛臾，城墙既然坚牢，而且离季孙的采邑费地很近。现今不把它占领，日子久了，一定会给子孙留下祸害。”&lt;/p>
&lt;p>孔子道：“冉求！君子就讨厌［那种态度，］不说自己贪心无厌，却一定另找借口。我听说过：无论是诸侯或者大夫，不必着急财富不多，只须着急财富不均；不必着急人民太少，只须着急境内不安。若是财富平均，便无所谓贫穷；境内和平团结，便不会觉得人少；境内平安，便不会倾危。做到这样，远方的人还不归服，便再修仁义礼乐的政教来招致他们。他们来了，就得使他们安心。如今仲由和冉求两人辅相季孙，远方之人不归服，却不能招致；国家支离破碎，却不能保全；反而想在国境以内使用兵力。我恐怕季孙的忧愁不在颛臾，却在鲁君哩。”&lt;/p>
&lt;p>【注释】⑴颛臾——鲁国的附庸国家，现在山东省费县西北八十里有颛臾村，当是古颛臾之地。⑵有事——《左传》成公十三年，“国之大事，在祀与戎。”这“有事”卽指用兵。⑶尔是过——不能解作“尔之过”，因为古代人称代词表示领位极少再加别的虚词的（像《尚书·康诰》“朕其弟小子封”只是极个别的例子）。这里“过”字可看作动词，“是”字是表示倒装之用的词，顺装便是“过尔”，“责备你”、“归罪于你”的意思。⑷东蒙——卽蒙山，在今山东蒙阴县南，接费县界。⑸周任——古代的一位史官。⑹费——音秘，bèi，鲁国季氏采邑，今山东费县西南七十里有费城。⑺舍——同“舍”。⑻不患寡而患不均，不患贫而患不安——当作“不患贫而患不均，不患寡而患不安”，“贫”和“均”是从财富着眼，下文“均无贫”可以为证；“寡”和“安”是从人民着眼，下文“和无寡”可以为证。说详俞樾《羣经平议》。⑼萧墙之内——“萧墙”是鲁君所用的屏风。人臣至此屏风，便会肃然起敬，所以叫做萧墙（萧字从肃得声）。“萧墙之内”指鲁君。当时季孙把持鲁国政治，和鲁君矛盾很大，也知道鲁君想收拾他以收回主权，因此怕颛臾凭借有利的地势起而帮助鲁国，于是要先下手为强，攻打颛臾。孔子这句话，深深地刺中了季孙的内心。&lt;/p>
&lt;p>16.2孔子曰：“天下有道，则礼乐征伐自天子出；天下无道，则礼乐征伐自诸侯出。自诸侯出，盖十世希不失矣；自大夫出，五世希不失矣；陪臣执国命，三世希不失矣⑴。天下有道，则政不在大夫。天下有道，则庶人不议。”&lt;/p>
&lt;p>【译文】孔子说：“天下太平，制礼作乐以及出兵都决定于天子；天下昏乱，制礼作乐以及出兵便决定于诸侯。决定于诸侯，大概传到十代，很少还能继续的；决定于大夫，传到五代，很少还能继续的；若是大夫的家臣把持国家政权，传到三代很少还能继续的。天下太平，国家的最高政治权力就不会掌握在大夫之手。天下太平，老百姓就不会议论纷纷。”&lt;/p>
&lt;p>【注释】⑴孔子这一段话可能是从考察历史，尤其是当日时事所得出的结论。“自天子出”，孔子认为尧、舜、禹、汤以及西周都如此的；“天下无道”则自齐桓公以后，周天子已无发号施令的力量了。齐自桓公称霸，历孝公、昭公、懿公、惠公、顷公、灵公、庄公、景公、悼公、简公十公，至简公而为陈恒所杀，孔子亲身见之；晋自文公称霸，历襄公、灵公、成公、景公、厉公、平公、昭公、顷公九公，六卿专权，也是孔子所亲见的。所以说：“十世希不失”。鲁自季友专政，历文子、武子、平子、桓子而为阳虎所执，更是孔子所亲见的。所以说“五世希不失”。至于鲁季氏家臣南蒯、公山弗扰、阳虎之流都当身而败，不曾到过三世。当时各国家臣有专政的，孔子言“三世希不失”，盖宽言之。这也是历史演变的必然，愈近变动时代，权力再分配的鬬争，一定愈加激烈。这却是孔子所不明白的。&lt;/p>
&lt;p>16.3孔子曰：“禄之去公室五世⑴矣，政逮于大夫四世⑴矣，故夫三桓⑵之子孙微矣。”&lt;/p>
&lt;p>【译文】孔子说：“国家政权离开了鲁君，［从鲁君来说，］已经五代了；政权到了大夫之手，［从季氏来说，］已经四代了，所以桓公的三房子孙现在也衰微了。”&lt;/p>
&lt;p>【注释】⑴五世四世——自鲁君丧失政治权力到孔子说这段话的时候，经历了宣公、成公、襄公、昭公、定公五代；自季氏最初把持鲁国政治到孔子说这段话时，经历了文子、武子、平子、桓子四代。说本毛奇龄《论语稽求篇》。⑵三桓——鲁国的三卿，仲孙（卽孟孙）、叔孙、季孙都出于鲁桓公，故称“三桓”。&lt;/p>
&lt;p>16.4孔子曰：“益者三友，损者三友。友直，友谅⑴，友多闻，益矣。友便辟，友善柔，友便佞，损矣。”&lt;/p>
&lt;p>【译文】孔子说：“有益的朋友三种，有害的朋友三种。同正直的人交友，同信实的人交友，同见闻广博的人交友，便有益了。同谄媚奉承的人交友，同当面恭维背面毁谤的人交友，同夸夸其谈的人交友，便有害了。”&lt;/p>
&lt;p>【注释】⑴谅——《说文》：“谅，信也。”“谅”和“信”有时意义相同，这里便如此。有时意义有别。如宪问篇第十四“岂若匹夫匹妇之为谅也”的“谅”只是“小信”的意思。&lt;/p>
&lt;p>16.5孔子曰：“益者三乐，损者三乐。乐节礼乐，乐道人之善，乐多贤友，益矣。乐骄乐，乐佚游，乐晏乐，损矣。”&lt;/p>
&lt;p>【译文】孔子说：“有益的快乐三种，有害的快乐三种。以得到礼乐的调节为快乐，以宣扬别人的好处为快乐，以交了不少有益的朋友为快乐，便有益了。以骄傲为快乐，以游荡忘返为快乐，以饮食荒淫为快乐，便有害了。”&lt;/p>
&lt;p>16.6孔子曰：“侍于君子有三愆：言未及之而言谓之躁，言及之而不言谓之隐，未见颜色而言谓之瞽。”&lt;/p>
&lt;p>【译文】孔子说：“陪着君子说话容易犯三种过失：没轮到他说话，却先说，叫做急躁；该说话了，却不说，叫做隐瞒；不看看君子的脸色便贸然开口，叫做瞎眼睛。”&lt;/p>
&lt;p>16.7孔子曰：“君子有三戒：少之时，血气未定，戒之在色；及其壮也，血气方刚，戒之在鬬；及其老也，血气既衰，戒之在得⑴。”&lt;/p>
&lt;p>【译文】孔子说：“君子有三件事情应该警惕戒备：年轻的时候，血气未定，便要警戒，莫迷恋女色；等到壮大了，血气正旺盛，便要警戒，莫好胜喜鬬；等到年老了，血气已经衰弱，便要警戒，莫贪求无厌。”&lt;/p>
&lt;p>【注释】⑴孔安国注云：“得，贪得。”所贪者可能包括名誉、地位、财货在内。《淮南子·诠言训》：“凡人之性，少则猖狂，壮则强暴，老则好利。”意本于此章，而以“好利”释得，可能涵义太狭。&lt;/p>
&lt;p>16.8孔子曰：“君子有三畏：畏天命，畏大人⑴，畏圣人之言。小人不知天命而不畏也，狎大人，侮圣人之言。”&lt;/p>
&lt;p>【译文】孔子说：“君子害怕的有三件事：怕天命，怕王公大人，怕圣人的言语。小人不懂得天命，因而不怕它；轻视王公大人，轻侮圣人的言语。”&lt;/p>
&lt;p>【注释】⑴大人——古代对于在高位的人叫“大人”，如《易·干卦》“利见大人”，《礼记·礼运》“大人世及以为礼”，《孟子·尽心下》“说大人，则藐之”。对于有道德的人也可以叫“大人”，如《孟子·告子上》“从其大体为大人”。这里的“大人”是指在高位的人，而“圣人”则是指有道德的人。&lt;/p>
&lt;p>16.9孔子曰：“生而知之者上也，学而知之者次也；困而学之，又其次也；困而不学，民斯为下矣。”&lt;/p>
&lt;p>【译文】孔子说：“生来就知道的是上等，学习然后知道的是次一等；实践中遇见困难，再去学它，又是再次一等；遇见困难而不学，老百姓就是这种最下等的了。”&lt;/p>
&lt;p>16.10孔子曰：“君子有九思：视思明，听思聪，色思温，貌思恭，言思忠，事思敬，疑思问，忿思难，见得思义。”&lt;/p>
&lt;p>【译文】孔子说：“君子有九种考虑：看的时候，考虑看明白了没有；听的时候，考虑听清楚了没有；脸上的颜色，考虑温和么；容貌态度，考虑庄矜么；说的言语，考虑忠诚老实么；对待工作，考虑严肃认真么；遇到疑问，考虑怎样向人家请教；将发怒了，考虑有什么后患；看见可得的，考虑我是否应该得。”&lt;/p>
&lt;p>16.11孔子曰：“见善如不及，见不善如探汤。吾见其人矣，吾闻其语矣。隐居以求其志，行义以达其道。吾闻其语矣，未见其人也。”&lt;/p>
&lt;p>【译文】孔子说：“看见善良，努力追求，好像赶不上似的；遇见邪恶，使劲避开，好像将伸手到沸水里。我看见这样的人，也听过这样的话。避世隐居求保全他的意志，依义而行来贯彻他的主张。我听过这样的话，却没有见过这样的人。”&lt;/p>
&lt;p>16.12齐景公有马千驷⑴，死之日，民无德而称焉。伯夷、叔齐饿于首阳⑵之下，民到于今称之。其斯之谓与⑶？&lt;/p>
&lt;p>【译文】齐景公有马四千匹，死了以后，谁都不觉得他有什么好行为可以称述。伯夷、叔齐两人饿死在首阳山下，大家到现在还称颂他。那就是这个意思吧！&lt;/p>
&lt;p>【注释】⑴千驷——古代一般用四匹马驾一辆车，所以一驷就是四匹马。《左传》哀公八年：“鲍牧谓羣公子曰：‘使女有马千乘乎？’”这“千乘”就是景公所遗留的“千驷”。鲍牧用此来诱劝羣公子争夺君位，可见“千乘”是一笔相当富厚的私产。⑵首阳——山名，现在何地，古今传说纷歧，总之，已经难于确指。⑶其斯之谓与——这一章既然没有“子曰”字样，而且“其斯之谓与”的上面无所承受，程颐以为颜渊篇第十二的“诚不以富，亦祗以异”两句引文应该放在此处“其斯之谓与”之上，但无证据。朱熹〈答江德功书〉云：“此章文势或有断续，或有阙文，或非一章，皆不可考。”&lt;/p>
&lt;p>16.13陈亢⑴问于伯鱼曰：“子亦有异闻乎？”&lt;/p>
&lt;p>对曰：“未也。尝独立，鲤趋而过庭。曰：‘学诗乎？’对曰：‘未也。’‘不学诗，无以言。’鲤退而学诗。他日，又独立，鲤趋而过庭。曰：‘学礼乎？’对曰：‘未也。’‘不学礼，无以立。’鲤退而学礼。闻斯二者。”&lt;/p>
&lt;p>陈亢退而喜曰：“问一得三，闻诗，闻礼，又闻君子之远其子也。”&lt;/p>
&lt;p>【译文】陈亢向孔子的儿子伯鱼问道：“您在老师那儿，也得着与众不同的传授吗？”&lt;/p>
&lt;p>答道：“没有。他曾经一个人站在庭中，我恭敬地走过。他问我道：‘学诗没有？’我道：‘没有。’他便道：‘不学诗就不会说话。’我退回便学诗。过了几天，他又一个人站在庭中，我又恭敬地走过。他问道：‘学礼没有？’我答：‘没有。’他道：‘不学礼，便没有立足社会的依据。’我退回便学礼。只听到这两件。”&lt;/p>
&lt;p>陈亢回去非常高兴地道：“我问一件事，知道了三件事。知道诗，知道礼，又知道君子对他儿子的态度。”&lt;/p>
&lt;p>【注释】⑴陈亢——亢音刚，gāng，就是陈子禽。&lt;/p>
&lt;p>16.14邦君之妻，君称之曰夫人，夫人自称曰小童；邦人称之曰君夫人，称诸异邦曰寡小君；异邦人称之亦曰君夫人⑴。&lt;/p>
&lt;p>【译文】国君的妻子，国君称她为夫人，她自称为小童；国内的人称她为君夫人，但对外国人便称她为寡小君；外国人称她也为君夫人。&lt;/p>
&lt;p>【注释】⑴这章可能也是孔子所言，却遗落了“子曰”两字。有人疑心这是后人见竹简有空白处，任意附记的。殊不知书写《论语》的竹简不过八寸，短者每章一简，长者一章数简，断断没有多大空白能书写这四十多字。而且这一章既见于《古论》，又见于《鲁论》（《鲁论》作“固君之妻”），尤其可见各种古本都有之，决非后人所搀入。&lt;/p></description></item><item><title>05公冶长篇第五</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/05%E5%85%AC%E5%86%B6%E9%95%BF%E7%AF%87%E7%AC%AC%E4%BA%94/</link><pubDate>Sat, 11 Jan 2025 19:53:21 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/05%E5%85%AC%E5%86%B6%E9%95%BF%E7%AF%87%E7%AC%AC%E4%BA%94/</guid><description>&lt;h1 id="公冶长篇第五">
 公冶长篇第五
 &lt;a class="anchor" href="#%e5%85%ac%e5%86%b6%e9%95%bf%e7%af%87%e7%ac%ac%e4%ba%94">#&lt;/a>
&lt;/h1>
&lt;p>(共二十八章（何晏《集解》把第十章“子曰，始吾于人也”以下又分一章，故题为二十九章；朱熹《集注》把第一、第二两章并为一章，故题为二十七章。）)&lt;/p>
&lt;p>5.1子谓公冶长⑴，“可妻⑵也。虽在缧绁⑶之中，非其罪也。”以其子⑷妻之。&lt;/p>
&lt;p>【译文】孔子说公冶长，“可以把女儿嫁给他。他虽然曾被关在监狱之中，但不是他的罪过。”便把自己的女儿嫁给他。&lt;/p>
&lt;p>【注释】⑴公冶长——孔子学生，齐人。⑵妻——动词，去声，qì。⑶缧绁——缧同“累”，léi；绁音泄，xiè。缧绁，拴罪人的绳索，这里指代监狱。⑷子——儿女，此处指的是女儿。&lt;/p>
&lt;p>5.2子谓南容⑴，“邦有道，不废；邦无道，免于刑戮。”以其兄之子妻之⑵。&lt;/p>
&lt;p>【译文】孔子说南容，“国家政治清明，［总有官做，］不被废弃；国家政治黑暗，也不致被刑罚。”于是把自己的侄女嫁给他。&lt;/p>
&lt;p>【注释】⑴南容——孔子学生南宫适，字子容。⑵兄之子——孔子之兄叫孟皮，见《史记·孔子世家·索隐》引《家语》。这时孟皮可能已死，所以孔子替他女儿主婚。&lt;/p>
&lt;p>5.3子谓子贱⑴，“君子哉若人！鲁无君子者，斯焉取斯？”&lt;/p>
&lt;p>【译文】孔子评论宓子贱，说：“这人是君子呀！假若鲁国没有君子，这种人从哪里取来这种好品德呢？”&lt;/p>
&lt;p>【注释】⑴子贱——孔子学生宓不齐，字子贱，少于孔子四十九岁。（公元前521—？）&lt;/p>
&lt;p>5.4子贡问曰：“赐也何如？”子曰：“女，器也。”曰：“何器也？”曰：“瑚琏⑴也。”&lt;/p>
&lt;p>【译文】子贡问道：“我是一个怎样的人？”孔子道：“你好比是一个器皿。”子贡道：“什么器皿？”孔子道：“宗庙里盛黍稷的瑚琏。”&lt;/p>
&lt;p>【注释】⑴瑚琏——音胡连，又音胡hú辇niǎn，卽簠簋，古代祭祀时盛粮食的器皿，方形的叫簠，圆形的叫簋，是相当尊贵的。&lt;/p>
&lt;p>5.5或曰：“雍⑴也仁而不佞⑵。”子曰：“焉用佞？御人以口给⑶，屡憎于人。不知其仁⑷，焉用佞？”&lt;/p>
&lt;p>【译文】有人说：“冉雍这个人有仁德，却没有口才。”孔子道：“何必要口才呢？强嘴利舌地同人家辩驳，常常被人讨厌。冉雍未必仁，但为什么要有口才呢？”&lt;/p>
&lt;p>【注释】⑴雍——孔子学生冉雍，字仲弓。⑵佞——音泞，nìng，能言善说，有口才。⑶口给——给，足也。“口给”犹如后来所说“言词不穷”、“辩才无碍”。⑷不知其仁——孔子说不知，不是真的不知，只是否定的另一方式，实际上说冉雍还不能达到“仁”的水平。下文第八章“孟武伯问子路仁乎，子曰，不知也”，这“不知”也是如此。&lt;/p>
&lt;p>5.6子使漆雕开⑴仕。对曰：“吾斯之未能信⑵。”子说。&lt;/p>
&lt;p>【译文】孔子叫漆雕开去做官。他答道：“我对这个还没有信心。”孔子听了很欢喜。&lt;/p>
&lt;p>【注释】⑴漆雕开——“漆雕”是姓，“开”是名，孔子学生，字子开。⑵吾斯之未能信——这句是“吾未能信斯”的倒装形式，“之”是用来倒装的词。&lt;/p>
&lt;p>5.7子曰：“道不行，乘桴⑴浮于海。从⑵我者，其由与？”子路闻之喜。子曰：“由也好勇过我，无所取材⑶。”&lt;/p>
&lt;p>【译文】孔子道：“主张行不通了，我想坐个木簰到海外去，跟随我的恐怕只有仲由吧！”子路听到这话，高兴得很。孔子说：“仲由这个人太好勇敢了，好勇的精神大大超过了我，这就没有什么可取的呀！”&lt;/p>
&lt;p>【注释】桴——音孚，fú，古代把竹子或者木头编成簰，以当船用，大的叫筏，小的叫桴，也就是现在的木簰。⑵从——动词，旧读去声，跟随。⑶材——同“哉”，古字有时通用。有人解做木材，说是孔子以为子路真要到海外去，便说，“没地方去取得木材”。这种解释一定不符合孔子原意。也有人把“材”看做“翦裁”的“裁’，说是“子路太好勇了，不知道节制、检点”，这种解释不知把“取”字置于何地，因之也不采用。&lt;/p>
&lt;p>5.8孟武伯问子路仁乎？子曰：“不知也。”又问。子曰：“由也，千乘之国，可使治其赋⑴也，不知其仁也。”&lt;/p>
&lt;p>“求也何如？”子曰：“求也，千室之邑⑵，百乘之家⑶，可使为之⑷宰⑸也，不知其仁也。”&lt;/p>
&lt;p>“赤也何如？”子曰：“赤也，束带立于朝，可使与宾客⑹言也，不知其仁也。”&lt;/p>
&lt;p>【译文】孟武伯向孔子问子路有没有仁德。孔子道：“不晓得。”他又问。孔子道：“仲由啦，如果有一千辆兵车的国家，可以叫他负责兵役和军政的工作。至于他有没有仁德，我不晓得。”&lt;/p>
&lt;p>孟武伯继续问：“冉求又怎么样呢？”，孔子道：“求啦，千户人口的私邑，可以叫他当县长；百辆兵车的大夫封地，可以叫他当总管。至于他有没有仁德，我不晓得。”。&lt;/p>
&lt;p>“公西赤又怎么样呢？”。孔子道：“赤啦，穿着礼服，立于朝廷之中，可以叫他接待外宾，办理交涉。至于他有没有仁德，我不晓得。”&lt;/p>
&lt;p>【注释】⑴赋——兵赋，古代的兵役制度。这里自也包括军政工作而言。⑵邑——《左传》庄公二十八年云：“凡邑，有宗庙先王之主曰都，无曰邑。”又《公羊传》桓公元年云：“田多邑少称田，邑多田少称邑。”可见“邑”就是古代庶民聚居之所，不过有一些田地罢了。⑶家——古代的卿大夫由国家封以一定的地方，由他派人治理，并且收用当地的租税，这地方便叫采地或者采邑。“家”便是指这种采邑而言。⑷之——用法同“其”，他的。⑸宰——古代一县的县长叫做“宰”，大夫家的总管也叫做“宰”。所以“原思为之宰”（6.5）的宰为“总管”，而“季氏使闵子骞为费宰”（6.9）的“宰”是“县长”。⑹宾客——“宾”“客”两字散文则通，对文有异。一般是贵客叫宾，因之天子诸侯的客人叫宾，一般客人叫客，《易经·需卦·爻辞》“有不速之客三人来”的“客”正是此意。这里则把“宾客”合为一词了。&lt;/p>
&lt;p>5.9子谓子贡曰：“女与回也孰愈？”对曰：“赐也何敢望回？回也闻一以知十，赐也闻一以知二。”子曰：“弗如也；吾与⑴女弗如也。”&lt;/p>
&lt;p>【译文】孔子对子贡道：“你和颜回，哪一个强些？”子贡答道：“我么，怎敢和回相比？他啦，听到一件事，可以推演知道十件事；我咧，听到一件事，只能推知两件事。”孔子道：“赶不上他；我同意你的话，是赶不上他。”&lt;/p>
&lt;p>【注释】⑴与——动词，同意，赞同。这里不应该看作连词。&lt;/p>
&lt;p>5.10宰予昼寝。子曰：“朽木不可雕也；粪土之墙不可杇⑴也；于予与何诛⑵”子曰⑶：“始吾于人也，听其言而信其行；今吾于人也，听其言而观其行。于予与改是。”&lt;/p>
&lt;p>【译文】宰予在白天睡觉。孔子说：“腐烂了的木头雕刻不得，粪土似的墙壁粉刷不得；对于宰予么，不值得责备呀。”又说：“最初，我对人家，听到他的话，便相信他的行为；今天，我对人家，听到他的话，却要考察他的行为。从宰予的事件以后，我改变了态度。”&lt;/p>
&lt;p>【注释】⑴杇——音乌，wū，泥工抹墙的工具叫杇，把墙壁抹平也叫杇。这里依上文的意思译为“粉刷”。⑵何诛——机械地翻译是“责备什么呢”，这里是意译。⑶子曰——以下的话虽然也是针对“宰予昼寝”而发出，却是孔子另一个时候的言语，所以又加“子曰”两字以示区别。古人有这种修辞条例，俞樾《古书疑义举例》卷二“一人之辞而加曰字例”曾有所阐述（但未引证此条），可参阅。&lt;/p>
&lt;p>5.11子曰：“吾未见刚者。”或对曰：“申枨⑴。”子曰：“枨也欲，焉得刚？”&lt;/p>
&lt;p>【译文】孔子道：“我没见过刚毅不屈的人。”有人答道：“申枨是这样的人。”孔子道：“申枨啦，他欲望太多，哪里能够刚毅不屈？”&lt;/p>
&lt;p>【注释】⑴申枨——枨音橙，chéng。《史记·仲尼弟子列传》有申党，古音“党”和“枨”相近，那么“申枨”就是“申党”。&lt;/p>
&lt;p>5.12子贡曰：“我不欲人之加⑴诸我也，吾亦欲无加诸人。”子曰：“赐也，非尔所及也。”&lt;/p>
&lt;p>【译文】子贡道：“我不想别人欺侮我，我也不想欺侮别人。”孔子说：“赐，这不是你能做到的。”&lt;/p>
&lt;p>【注释】⑴加——驾凌，凌辱。&lt;/p>
&lt;p>5.13子贡曰：“夫子之文章⑴，可得而闻也；夫子之言性⑵与天道⑶，不可得而闻也。”&lt;/p>
&lt;p>【译文】子贡说：“老师关于文献方面的学问，我们听得到；老师辟于天性和天道的言论，我们听不到。”&lt;/p>
&lt;p>【注释】⑴文章——孔子是古代文化的整理者和传播者，这里的“文章”该是指有关古代文献的学问而言。在《论语》中可以考见的有诗、书、史、礼等等。⑵性——人的本性。古代不可能有阶级观点，因之不知道人的阶级性。而对人的自然的性，孟子、荀子都有所主张，孔子却只说过“性相近也，习相远也”（17.2）一句话。⑶天道——古代所讲的天道一般是指自然和人类社会吉凶祸福的关系。但《左传》昭公十八年郑国子产的话说：“天道远，人道迩，非所及也。”却是对自然和人类社会的吉凶有必然关系的否认。《左传》昭公二十六年又有晏婴的话：“天道不謟。”虽然是用人类的美德来衡量自然之神，反对禳灾，也是对当时迷信习惯的破除。这两人都与孔子同时而年龄较大，而且为孔子所称道。孔子不讲天道，对自然和人类社会的关系取存而不论的态度，不知道是否受这种思想的影响。&lt;/p>
&lt;p>5.14子路有闻，未之能行，唯恐有⑴闻。&lt;/p>
&lt;p>【译文】子路有所闻，还没有能够去做，只怕又有所闻。&lt;/p>
&lt;p>【注释】⑴有——同“又”。&lt;/p>
&lt;p>5.15子贡问曰：“孔文子⑴何以谓之‘文’也？”子曰：“敏而好学，不耻下问，是以谓之‘文’也。”&lt;/p>
&lt;p>【译文】子贡问道：“孔文子凭什么谥他为‘文’？”孔子道：“他聪敏灵活，爱好学问，又谦虚下问，不以为耻，所以用‘文’字做他的谥号。”&lt;/p>
&lt;p>【注释】⑴孔文子——卫国的大夫孔圉。考孔文子死于鲁哀公十五年，或者在此稍前，孔子卒于十六年夏四月，那么，这次问答一定在鲁哀公十五年到十六年初的一段时间内。&lt;/p>
&lt;p>5.16子谓子产⑴，“有君子之道四焉：其行己也恭，其事上也敬，其养民也惠，其使民也义。”&lt;/p>
&lt;p>【译文】孔子评论子产，说：“他有四种行为合于君子之道：他自己的容颜态度庄严恭敬，他对待君上负责认真，他教养人民有恩惠，他役使人民合于道理。&lt;/p>
&lt;p>【注释】⑴子产——公孙侨，字子产，郑穆公之孙，为春秋时郑国的贤相，在郑简公、郑定公之时执政二十二年。其时，于晋国当悼公、平公、昭公、顷公、定公五世，于楚国当共王、康王、郏敖、灵王、平王五世，正是两国争强、战争不息的时候。郑国地位冲要，而周旋于这两大强国之间，子产却能不低声下气，也不妄自尊大，使国家得到尊敬和安全，的确是古代中国的一位杰出的政治家和外交家。&lt;/p>
&lt;p>5.17子曰：“晏平仲⑴善与人交，久而敬之⑵。”&lt;/p>
&lt;p>【译文】孔子说：“晏平仲善于和别人交朋友，相交越久，别人越发恭敬他。”&lt;/p>
&lt;p>【注释】晏平仲——齐国的贤大夫，名婴。《史记》卷六十二有他的传记。现在所传的《晏子春秋》，当然不是晏婴自己的作品，但亦是西汉以前的书。⑵久而敬之——〈魏著作郎韩显宗墓志〉，“善与人交，人亦久而敬焉”，卽本《论语》，义与别本《论语》作“久而人敬之”者相合。故我以“之”字指晏平仲自己。若以为是指相交之人，译文便当这样：“相交越久，越发恭敬别人”。&lt;/p>
&lt;p>5.18子曰：“臧文仲⑴居蔡⑵，山节藻梲⑵，何如其知⑷也？”&lt;/p>
&lt;p>【译文】孔子说：“臧文仲替一种叫蔡的大乌龟盖了一间屋，有雕刻着像山一样的斗栱和画着藻草的梁上短柱，这个人的聪明怎么这样呢？”&lt;/p>
&lt;p>【注释】⑴臧文仲——鲁国的大夫臧孙辰。（？——公元前617年）⑵居蔡——古代人把大乌龟叫作“蔡”。《淮南子·说山训》说：“大蔡神龟，出于沟壑。”高诱注说：“大蔡，元龟之所出地名，因名其龟为大蔡，臧文仲所居蔡是也。”古代人迷信卜筮，卜卦用龟，筮用蓍草。用龟，认为越大越灵。蔡便是这种大龟。臧文仲宝藏着它，使它住在讲究的地方。居，作及物动词用，使动用法，使之居住的意思。⑶山节藻梲——节，柱上斗栱；“梲”音啄，zhuō，梁上短柱。⑷知——同“智”。&lt;/p>
&lt;p>5.19子张问曰：“令尹子文⑴三仕⑵为令尹，无喜色；三已⑵之，无愠色。旧令尹之政，必以告新令尹。何如？”子曰：“忠矣。”曰：“仁矣乎？”曰：“未知⑶；——焉得仁？”&lt;/p>
&lt;p>“崔子弒齐君⑷，陈文子⑸有马十乘，弃而违之。至于他邦，则曰，‘犹吾大夫崔子也。’违之。之一邦，则又曰：‘犹吾大夫崔子也。’违之。何如？”子曰：“清矣。”曰：“仁矣乎？”曰：“未知⑶；——焉得仁？”&lt;/p>
&lt;p>【译文】子张问道：“楚国的令尹子文三次做令尹的官，没有高兴的颜色；三次被罢免，没有怨恨的颜色。［每次交代，］一定把自己的一切政令全部告诉接位的人。这个人怎么样？”孔子道：“可算尽忠于国家了。”子张道：“算不算仁呢？”孔子道：“不晓得；——这怎么能算是仁呢？”&lt;/p>
&lt;p>子张又问：“崔杼无理地杀掉齐庄公，陈文子有四十匹马，舍弃不要，离开齐国。到了另一个国家，说道：‘这里的执政者同我们的崔子差不多。’又离开。又到了一国，又说道：‘这里的执政者同我们的崔子差不多。’于是又离开。这个人怎么样？”孔子道：“清白得很。”子张道：“算不算仁呢？”孔子道：“不晓得；——这怎么能算是仁呢？”&lt;/p>
&lt;p>【注释】⑴令尹子文——楚国的宰相叫做令尹。子文卽鬬谷（谷音构）于菟（音乌徒）。根据《左传》，子文于鲁庄公三十年开始做令尹，到僖公二十三年让位给子玉，其中相距二十八年。在这二十八年中可能有几次被罢免又被任命，《国语·楚语下》说：“昔子文三舍令尹，无一日之积”，也就可以证明。⑵三仕——“三仕”和“三已”的“三”不一定是实数，可能只是表示那事情的次数之多。⑶未知——和上文第五章“不知其仁”，第八章“不知也”的“不知”相同，不是真的“不知”，只是否定的另一方式，孔子停了一下，又说“焉得仁”，因此用破折号表示。⑷崔子弒齐君——崔子，齐国的大夫崔杼；齐君，齐庄公，名光。弑，古代在下的人杀掉在上的人叫做弑。“崔子弑齐君”的事见《左传》襄公二十五年。⑸陈文子——也是齐国的大夫，名须无。可是《左传》没有记载他离开的事，却记载了他以后在齐国的行为很多，可能是一度离开，终于回到本国了。&lt;/p>
&lt;p>5.20季文子⑴三思⑵而后行。子闻之，曰：“再⑶，斯可矣。”&lt;/p>
&lt;p>【译文】季文子每件事考虑多次才行动。孔子听到了，说：“想两次也就可以了。”&lt;/p>
&lt;p>【注释）⑴季文子——鲁国的大夫季孙行父，历仕鲁国文公、宣公、成公、襄公诸代。孔子生于襄公二十二年，文子死在襄公五年。（？——公元前568年）孔子说这话的时候，文子死了很久了。⑵三思——这一“三”字更其不是实实在在的“三”。⑶再——“再”在古文中一般只当副词用，其下承上文省去了动词“思”字。《唐石经》作“再思”，“思”字不省。凡事三思，一般总是利多弊少，为什么孔子却不同意季文子这样做呢？宦懋庸《论语稽说》，“文子生平盖祸福利害之计太明，故其美恶两不相掩，皆三思之病也。其思之至三者，特以世故太深，过为谨慎；然其流弊将至利害徇一己之私矣”云云。若以《左传》所载文子先后行事证明，此话不为无理。&lt;/p></description></item><item><title>03八佾篇第三</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/03%E5%85%AB%E4%BD%BE%E7%AF%87%E7%AC%AC%E4%B8%89/</link><pubDate>Sat, 11 Jan 2025 19:53:20 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E8%AF%91%E6%B3%A8_%E6%9D%A8%E4%BC%AF%E5%B3%BB/03%E5%85%AB%E4%BD%BE%E7%AF%87%E7%AC%AC%E4%B8%89/</guid><description>&lt;h1 id="八佾篇第三">
 八佾篇第三
 &lt;a class="anchor" href="#%e5%85%ab%e4%bd%be%e7%af%87%e7%ac%ac%e4%b8%89">#&lt;/a>
&lt;/h1>
&lt;p>(共二十六章)&lt;/p>
&lt;p>3.1孔子谓季氏，⑴“八佾⑵舞于庭，是可忍⑶也，孰不可忍也？”&lt;/p>
&lt;p>【译文】孔子谈到季氏，说：“他用六十四人在庭院中奏乐舞蹈，这都可以狠心做出来，甚么事不可以狠心做出来呢？”&lt;/p>
&lt;p>【注释】⑴季氏——根据《左传》昭公二十五年的记载和《汉书·刘向传》，这季氏可能是指季平子，卽季孙意如。据《韩诗外传》，似以为季康子，马融注则以为季桓子，恐皆不足信。⑵八佾——佾音逸，yì。古代舞蹈奏乐，八个人为一行，这一行叫一佾。八佾是八行，八八六十四人，只有天子才能用。诸侯用六佾，卽六行，四十八人。大夫用四佾，三十二人。四佾才是季氏所应该用的。⑶忍——一般人把它解为“容忍”、“忍耐”，不好；因为孔子当时并没有讨伐季氏的条件和意志，而且季平子削弱鲁公室，鲁昭公不能忍，出走到齐，又到晋，终于死在晋国之干侯。这可能就是孔子所“孰不可忍”的事。《贾子·道术篇》：“恻隐怜人谓之慈，反慈为忍。”这“忍”字正是此意。&lt;/p>
&lt;p>3.2三家⑴者以《雍》⑵彻。子曰：“‘相⑶维辟公，天子穆穆’，奚取于三家之堂？”&lt;/p>
&lt;p>【译文】仲孙、叔孙、季孙三家，当他们祭祀祖先时候，［也用天子的礼，］唱着雍这篇诗来撤除祭品。孔子说：“［《雍》诗上有这样的话］‘助祭的是诸侯，天子严肃静穆地在那儿主祭。’这两句话，用在三家祭祖的大厅上在意义上取它哪一点呢？”&lt;/p>
&lt;p>【注释】⑴三家——鲁国当政的三卿。⑵《雍》——也写作“雝”，《诗经·周颂》的一篇。⑶相——去声，音向，xiàng助祭者。&lt;/p>
&lt;p>3.3子曰：“人而不仁，如礼何？人而不仁，如乐何？”&lt;/p>
&lt;p>【译文】孔子说：“做了人，却不仁，怎样来对待礼仪制度呢？做了人，却不仁，怎样来对待音乐呢？”&lt;/p>
&lt;p>3.4林放⑴问礼之本。子曰：“大哉问！礼，与其奢也，宁俭；丧，与其易⑵也，宁戚。”&lt;/p>
&lt;p>【译文】林放问礼的本质。孔子说：“你的问题意义重大呀，就一般礼仪说，与其铺张浪费，宁可朴素俭约；就丧礼说，与其仪文周到，宁可过度悲哀。”&lt;/p>
&lt;p>【注释】⑴林放——鲁人。⑵易——《礼记·檀弓上》云：“子路曰，‘吾闻诸夫子：丧礼，与其哀不足而礼有余也，不若礼不足而哀有余也。”可以看做“与其易也，宁戚”的最早的解释。“易”有把事情办妥的意思，如《孟子·尽心上》“易其田畴”，因此这里译为“仪文周到”。&lt;/p>
&lt;p>3.5子曰：“夷狄之有君，不如⑴诸夏之亡⑵也。”&lt;/p>
&lt;p>【译文】孔子说：“文化落后国家虽然有个君主，还不如中国没有君主哩。”&lt;/p>
&lt;p>【注释】⑴夷狄有君……亡也——杨遇夫先生《论语疏证》说，夷狄有君指楚庄王、吴王阖庐等。君是贤明之君。句意是夷狄还有贤明之君，不像中原诸国却没有。说亦可通。⑵亡——同“无”。在《论语》中，“亡”下不用宾语，“无”下必有宾语。&lt;/p>
&lt;p>3.6季氏旅⑴于泰山。子谓冉有⑵曰：“女弗能救与？”对曰：“不能。”子曰：“呜呼!曾谓泰山不如林放乎？”&lt;/p>
&lt;p>【译文】季氏要去祭祀泰山。孔子对冉有说道：“你不能阻止吗？”冉有答道：“不能。”孔子道：“哎呀！竟可以说泰山之神还不及林放［懂礼，居然接受这不合规矩的祭祀］吗？”&lt;/p>
&lt;p>【注释】⑴旅——动词，祭山。在当时，只有天子和诸侯才有祭祀“名山大川”的资格。季氏只是鲁国的大夫，竟去祭祀泰山，因之孔子认为是“僭礼”。⑵冉有——孔子学生冉求，字子有，小于孔子二十九岁。（公元前522—？）当时在季氏之下做事，所以孔子责备他。&lt;/p>
&lt;p>3.7子曰：“君子无所争。必也射乎！揖让而升，下而饮。其争也君子⑴。”&lt;/p>
&lt;p>【译文】孔子说：“君子没有什么可争的事情。如果有所争，一定是比箭吧，［但是当射箭的时候，］相互作揖然后登堂；［射箭完毕，］走下堂来，然后［作揖］喝酒。那一种竞赛是很有礼貌的。”&lt;/p>
&lt;p>【注释】⑴其争也君子——这是讲古代射礼，详见《仪礼·乡射礼》和《大射仪》。登堂而射，射后计算谁中靶多，中靶少的被罚饮酒。&lt;/p>
&lt;p>3.8子夏问曰：“‘巧笑倩⑴兮，美目盼⑵兮，素以为绚⑶兮。’何谓也？”子曰：“绘事后素。”&lt;/p>
&lt;p>曰：“礼后⑷乎？”子曰：“起⑸予者商也！始可与言诗已矣。”&lt;/p>
&lt;p>【译文】子夏问道：“‘有酒涡的脸笑得美呀，黑白分明的眼流转得媚呀，洁白的底子上画着花卉呀。’这几句诗是什么意思？”孔子道：“先有白色底子，然后画花。”&lt;/p>
&lt;p>子夏道：“那么，是不是礼乐的产生在［仁义］以后呢？”孔子道：“卜商呀，你真是能启发我的人。现在可以同你讨论《诗经》了。”&lt;/p>
&lt;p>【注释】⑴倩——音欠，qiàn，面颊长得好。⑵盼——黑白分明。⑶绚xuàn，有文采，译文为着协韵，故用“画着花卉”以代之。这三句诗，第一句第二句见于《诗经·卫风·硕人》。第三句可能是逸句，王先谦《三家诗义集疏》以为《鲁诗》有此一句。⑷礼后——“礼”在什么之后呢，原文没说出。根据儒家的若干文献，译文加了“仁义”两字。⑸起——友人孙子书（楷第）先生云：“凡人病困而愈谓之起，义有滞碍隐蔽，通达之，亦谓之起。”说见杨遇夫先生《汉书窥管》卷九引文。&lt;/p>
&lt;p>3.9子曰：“夏礼，吾能言之，杞⑴不足征也；殷礼，吾能言之，宋⑵不足征也。文献⑶不足故也。足，则吾能征之矣。”&lt;/p>
&lt;p>【译文】孔子说：“夏代的礼，我能说出来，它的后代杞国不足以作证；殷代的礼，我能说出来，它的后代宋国不足以作证。这是他们的历史文件和贤者不够的缘故。若有足够的文件和贤者，我就可以引来作证了。”&lt;/p>
&lt;p>【注释】⑴杞——国名，夏禹的后代。周武王时候的故城卽今日河南的杞县。其后因为国家弱小，依赖别国的力量来延长国命，屡经迁移。⑵宋——国名，商汤的后代，故城在今日河南商邱县南。国土最大的时候，有现在河南商邱以东，江苏徐州以西之地。战国时为齐、魏、楚三国所共灭。⑵文献——《论语》的“文献”和今天所用的“文献”一词的概念有不同之处。《论语》的“文献”包括历代的历史文件和当时的贤者两项（朱注云：“文，典籍也；献，贤也。”）。今日“文献”一词只指历史文件而言。&lt;/p>
&lt;p>3.10子曰：“禘⑴自既灌⑵而往者，吾不欲观之矣。”&lt;/p>
&lt;p>【译文】孔子说：“禘祭的礼，从第一次献酒以后，我就不想看了。”&lt;/p>
&lt;p>【注释】⑴禘——这一禘礼是指古代一种极为隆重的大祭之礼，只有天子才能举行。不过周成王曾因为周公旦对周朝有过莫大的功勋，特许他举行禘祭。以后鲁国之君都沿此惯例，“僭”用这一禘礼，因此孔子不想看。⑵灌——本作“裸”，祭祀中的一个节目。古代祭祀，用活人以代受祭者，这活人便叫“尸”。尸一般用幼小的男女。第一次献酒给尸，使他（她）闻到“郁鬯”（一种配合香料煮成的酒）的香气，叫做裸。&lt;/p>
&lt;p>3.11或问禘之说。子曰：“不知也⑴；知其说者之于天下也，其如示⑵诸斯乎！”指其掌。&lt;/p>
&lt;p>【译文】有人向孔子请教关于禘祭的理论。孔子说：“我不知道；知道的人对于治理天下，会好像把东西摆在这里一样容易罢！”一面说，一面指着手掌。&lt;/p>
&lt;p>【注释】⑴不知也——禘是天子之礼，鲁国举行，在孔子看来，是完全不应该的。但孔子又不想明白指出，只得说“不欲观”，“不知也”，甚至说“如果有懂得的人，他对于治理天下是好像把东西放在手掌上一样的容易。”⑵示——假借字，同“置”，摆、放的意义。或曰同“视”，犹言“了如指掌”。&lt;/p>
&lt;p>3.12祭如在，祭神如神在。子曰：“吾不与祭，如不祭⑴。”&lt;/p>
&lt;p>【译文】孔子祭祀祖先的时候，便好像祖先真在那里；祭神的时候，便好像神真在那里。孔子又说：“我若是不能亲自参加祭祀，是不请别人代理的。”&lt;/p>
&lt;p>【注释】⑴吾不与祭，如不祭——这是一般的句读法。“与”读去声，音预，yù，参预的意思。“如不祭”译文是意译。另外有人主张“与”字仍读上声，赞同的意思，而且在这里一读，便是“吾不与，祭如不祭”。译文便应改为：“若是我所不同意的祭礼，祭了同没祭一般。”我不同意此义，因为孔丘素来不赞成不合所谓礼的祭祀，如“非其鬼而祭之，谄也”，（2.24）孔丘自不会参加他所不赞同的祭祀。&lt;/p>
&lt;p>3.13王孙贾⑴问曰：“与其媚于奥，宁媚于灶⑵，何谓也？”子曰：“不然；获罪于天，无所祷也⑶。”&lt;/p>
&lt;p>【译文】王孙贾问道：“‘与其巴结房屋里西南角的神，宁可巴结灶君司命，’这两句话是什么意思？”孔子道：“不对；若是得罪了上天，祈祷也没用。”&lt;/p>
&lt;p>【注释】⑴王孙贾——卫灵公的大臣。⑵与其媚于奥，宁媚如灶——这两句疑是当时俗语。屋内西南角叫奥，弄饭的设备叫灶，古代都以为那里有神，因而祭它。⑶王孙贾和孔子的问答都用的比喻，他们的正意何在，我们只能揣想。有人说，奥是一室之主，比喻卫君，又在室内，也可以比喻卫灵公的宠姬南子；灶则是王孙贾自比。这是王孙贾暗示孔子，“你与其巴结卫公或者南子，不如巴结我。”因此孔子答复他：“我若做了坏事，巴结也没有用处，我若不做坏事，谁都不巴结。”又有人说，这不是王孙贾暗示孔子的话，而是请教孔子的话。奥指卫君，灶指南子、弥子瑕，位职虽低，却有权有势。意思是说，“有人告诉我，与其巴结国君，不如巴结有势力的左右像南子、弥子瑕。你以为怎样？”孔子却告诉他：“这话不对；得罪了上天，那无所用其祈祷，巴结谁都不行。”我以为后一说比较近情理。&lt;/p>
&lt;p>3.14子曰：“周监于二代⑴，郁郁乎文哉！吾从周。”&lt;/p>
&lt;p>【译文】孔子说：“周朝的礼仪制度是以夏商两代为根据，然后制定的，多么丰富多彩呀，我主张周朝的。”&lt;/p>
&lt;p>【注释】⑴二代——夏、商两朝。&lt;/p>
&lt;p>3.15子入太庙⑴，每事问。或曰：“孰谓鄹人之子⑵知礼乎？入太庙，每事问。”子闻之，曰：“是礼也。”&lt;/p>
&lt;p>【译文】孔子到了周公庙，每件事情都发问。有人便说：“谁说叔梁纥的这个儿子懂得礼呢？他到了太庙，每件事都要向别人请教。”孔子听到了这话，便道：“这正是礼呀。”&lt;/p>
&lt;p>【注释】⑴太庙——古代开国之君叫太祖，太祖之庙便叫做太庙，周公旦是鲁国最初受封之君，因之这太庙就是周公的庙。⑵鄹人之子——鄹音邹，zōu，又作郰，地名。《史记·孔子世家》：“孔子生鲁昌平乡郰邑。”有人说，这地就是今天的山东省曲阜县东南十里的西邹集。“鄹人”指孔子父亲叔梁纥。叔梁纥曾经作过鄹大夫，古代经常把某地的大夫称为某人，因之这里也把鄹大夫叔梁纥称为“鄹人”。&lt;/p>
&lt;p>3.16子曰：“射不主皮⑴，为⑵力不同科⑶，古之道也。”&lt;/p>
&lt;p>【译文】孔子说：“比箭，不一定要穿破箭靶子，因为各人的气力大小不一样，这是古时的规矩。”&lt;/p>
&lt;p>【注释】⑴射不主皮——“皮”代表箭靶子。古代箭靶子叫“侯”，有用布做的，也有用皮做的。当中画着各种猛兽或者别的东西，最中心的又叫做“正”或者“鹄”。孔子在这里所讲的射应该是演习礼乐的射，而不是军中的武射，因此以中不中为主，不以穿破皮侯与否为主。《仪礼·乡射礼》云，“礼射不主皮”，盖本此。⑵为——去声，wèi，因为。⑶同科——同等。&lt;/p>
&lt;p>3.17子贡欲去⑴告朔之饩羊⑵。子曰：“赐也！尔爱⑶其羊，我爱其礼。”&lt;/p>
&lt;p>【译文】子贡要把鲁国每月初一告祭祖庙的那只活羊去而不用。孔子道：“赐呀，你可惜那只羊，我可惜那种礼。”&lt;/p>
&lt;p>【注释】⑴去——从前读为上声，因为它在这里作为及物动词，而且和“来去”的“去”意义不同。⑵告朔饩羊——“告”，从前人读梏，gù，入声。“朔”，每月的第一天，初一。“饩”，xì。“告朔饩羊”，古代的一种制度。每年秋冬之交，周天子把第二年的历书颁给诸侯。这历书包括那年有无闰月，每月初一是哪一天，因之叫“颁告朔”。诸侯接受了这一历书，藏于祖庙。每逢初一，便杀一只活羊祭于庙，然后回到朝廷听政。这祭庙叫做“告朔”，听政叫做“视朔”，或者“听朔”。到子贡的时候，每月初一，鲁君不但不亲临祖庙，而且也不听政，只是杀一只活羊“虚应故事”罢了。所以子贡认为不必留此形式，不如干脆连羊也不杀。孔子却认为尽管这是残存的形式，也比什么也不留好。⑶爱——可惜的意思。&lt;/p>
&lt;p>3.18子曰：“事君尽礼，人以为谄也。”&lt;/p>
&lt;p>【译文】孔子说：“服事君主，一切依照做臣子的礼节做去，别人却以为他在谄媚哩。”&lt;/p>
&lt;p>3.19定公⑴问：“君使臣，臣事君，如之何？”孔子对曰：“君使臣以礼，臣事君以忠。”&lt;/p>
&lt;p>【译文】鲁定公问：“君主使用臣子，臣子服事君主，各应该怎么样？”孔子答道：“君主应该依礼来使用臣子，臣子应该忠心地服事君主。”&lt;/p>
&lt;p>【注释】⑴定公——鲁君，名宋，昭公之弟，继昭公而立，在位十五年。（公元前509—495）“定”是谥号。&lt;/p>
&lt;p>3.20子曰：“《关雎》⑴，乐而不淫⑵，哀而不伤。”&lt;/p>
&lt;p>【译文】孔子说：“《关雎》这诗，快乐而不放荡，悲哀而不痛苦。”&lt;/p>
&lt;p>【注释】⑴《关雎》——《诗经》的第一篇。但这篇诗并没有悲哀的情调，因此刘台拱的《论语骈枝》说：“诗有《关雎》，乐亦有《关雎》，此章据乐言之。古之乐章皆三篇为一。……乐而不淫者，《关雎》、《葛覃》也；哀而不伤者，卷耳也。”⑵淫——古人凡过分以至于到失当的地步叫淫，如言“淫祀”（不应该祭祀而去祭祀的祭礼）、“淫雨”（过久的雨水）。&lt;/p>
&lt;p>3.21哀公问社⑴于宰我⑵。宰我对曰：“夏后氏以松，殷人以柏，周人以栗，曰，使民战栗。”子闻之，曰：“成事不说，遂事不谏，既往不咎。”&lt;/p>
&lt;p>【译文】鲁哀公向宰我问，作社主用什么木。宰我答道：“夏代用松木，殷代用柏木，周代用栗木，意思是使人民战战栗栗。”孔子听到了这话，［责备宰我］说：“已经做了的事不便再解释了，已经完成的事不便再挽救了，已经过去的事不便再追究了。”&lt;/p>
&lt;p>【注释】⑴社——土神叫社，不过哀公所问的社，从宰我的答话中可以推知是指社主而言。古代祭祀土神，要替他立一个木制的牌位，这牌位叫主，而认为这一木主，便是神灵之所凭依。如果国家有对外战争，还必需载这一木主而行。详见俞正燮《癸巳类稾》。有人说“社”是指立社所栽的树，未必可信。⑵宰我——孔子学生，名予，字子我。&lt;/p>
&lt;p>3.22子曰：“管仲⑴之器小哉！”&lt;/p>
&lt;p>或曰：“管仲俭乎？”曰：“管氏有三归⑵，官事不摄⑶，焉得俭？”&lt;/p>
&lt;p>“然则管仲知礼乎？”曰：“邦君树塞门⑷，管氏亦树塞门。邦君为两君之好⑸，有反坫⑹，管氏亦有反坫。管氏而⑺知礼，孰不知礼？”&lt;/p></description></item><item><title>第11章_两个表的亲密接触-连接的原理</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC11%E7%AB%A0_%E4%B8%A4%E4%B8%AA%E8%A1%A8%E7%9A%84%E4%BA%B2%E5%AF%86%E6%8E%A5%E8%A7%A6-%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%8E%9F%E7%90%86/</link><pubDate>Sat, 11 Jan 2025 16:40:07 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/MySQL%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84/%E7%AC%AC11%E7%AB%A0_%E4%B8%A4%E4%B8%AA%E8%A1%A8%E7%9A%84%E4%BA%B2%E5%AF%86%E6%8E%A5%E8%A7%A6-%E8%BF%9E%E6%8E%A5%E7%9A%84%E5%8E%9F%E7%90%86/</guid><description>&lt;p>&lt;em>第11章 两个表的亲密接触-连接的原理&lt;/em>&lt;/p>
&lt;p>搞数据库一个避不开的概念就是&lt;code>Join&lt;/code>，翻译成中文就是&lt;code>连接&lt;/code>。相信很多小伙伴在初学连接的时候有些一脸懵逼，理解了连接的语义之后又可能不明白各个表中的记录到底是怎么连起来的，以至于在使用的时候常常陷入下面两种误区： - 误区一：业务至上，管他三七二十一，再复杂的查询也用在一个连接语句中搞定。 - 误区二：敬而远之，上次 DBA 那给报过来的慢查询就是因为使用了连接导致的，以后再也不敢用了。&lt;/p>
&lt;p>所以本章就来扒一扒连接的原理。考虑到一部分小伙伴可能忘了连接是什么或者压根儿就不知道，为了节省他们百度或者看其他书的宝贵时间以及为了我的书凑字数，我们先来介绍一下 MySQL 中支持的一些连接语法。&lt;/p>
&lt;h1 id="连接简介">
 连接简介
 &lt;a class="anchor" href="#%e8%bf%9e%e6%8e%a5%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;h2 id="连接的本质">
 连接的本质
 &lt;a class="anchor" href="#%e8%bf%9e%e6%8e%a5%e7%9a%84%e6%9c%ac%e8%b4%a8">#&lt;/a>
&lt;/h2>
&lt;p>为了故事的顺利发展，我们先建立两个简单的表并给它们填充一点数据：&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-mysql>" data-lang="mysql>">
mysql&amp;gt; CREATE TABLE t2 (m2 int, n2 char\(1)\); Query OK, 0 rows affected (0.02 sec)

mysql&amp;gt; INSERT INTO t1 VALUES(1, &amp;#39;a&amp;#39;), (2, &amp;#39;b&amp;#39;), (3, &amp;#39;c&amp;#39;); Query OK, 3 rows affected (0.00 sec) Records: 3 Duplicates: 0 Warnings: 0

mysql&amp;gt; INSERT INTO t2 VALUES(2, &amp;#39;b&amp;#39;), (3, &amp;#39;c&amp;#39;), (4, &amp;#39;d&amp;#39;); Query OK, 3 rows affected (0.00 sec) Records: 3 Duplicates: 0 Warnings: 0
&lt;/code>&lt;/pre>&lt;p>&lt;code>我们成功建立了&lt;/code>t1&lt;code>、&lt;/code>t2&lt;code>两个表，这两个表都有两个列，一个是&lt;/code>INT&lt;code>类型的，一个是&lt;/code>CHAR(1)`类型的，填充好数据的两个表长这样：&lt;/p></description></item><item><title>简介-作者</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AE%80%E4%BB%8B-%E4%BD%9C%E8%80%85/</link><pubDate>Wed, 08 Jan 2025 17:27:25 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AE%80%E4%BB%8B-%E4%BD%9C%E8%80%85/</guid><description>&lt;p>&lt;img src="img/000002.jpeg" alt="" />&lt;/p>
&lt;h1 id="请支持正版">
 请支持正版
 &lt;a class="anchor" href="#%e8%af%b7%e6%94%af%e6%8c%81%e6%ad%a3%e7%89%88">#&lt;/a>
&lt;/h1>
&lt;p>书名：恰同学少年&lt;/p>
&lt;p>作者：黄辉&lt;/p>
&lt;p>排版：墨茗&lt;/p>
&lt;p>邮箱：1052805965@QQ.COM&lt;/p>
&lt;p>本书仅供个人学习之用，请勿用于商业用途。如果觉得好，请购买正版书籍，书中若有错误，望反馈给我，谢谢。&lt;/p>
&lt;p>所用字体：方正博雅方刊宋_GBK、方正黑体_GBK&lt;/p>
&lt;h1 id="简-介">
 简 介
 &lt;a class="anchor" href="#%e7%ae%80-%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>小说根据同名电视剧改编，以毛泽东在湖南第一师范五年半的读书生活为主要表现背景，描绘了1913～1918年以毛泽东、蔡和森、向警予、杨开慧、陶斯咏等为代表的一批优秀青年积极进取的学习生活和他们之间纯真美丽的爱情故事，同时塑造了杨昌济、孔昭绶等一批优秀教师形象。深刻揭示了“学生应该怎样读书，教师应该怎样育人”这个与当今社会紧密相关的现实主题，很好展现了毛泽东为代表的一群风华正茂的青年以天下为己任的抱负与情怀。这对社会主义核心价值体系的构建、现行教育理念的完善、当代青年树立正确的理想追求有重大的现实意义。&lt;/p>
&lt;h1 id="作-者">
 作 者
 &lt;a class="anchor" href="#%e4%bd%9c-%e8%80%85">#&lt;/a>
&lt;/h1>
&lt;p>黄晖，第26届电视“飞天奖”优秀编剧获得者，现居长沙。2007年凭借《恰同学少年》荣获中国电视剧艺术成就最高奖——飞天奖优秀编剧，年末编剧创作的“传奇大戏”《血色湘西》在湖南卫视引起收视狂潮。&lt;/p>
&lt;p>2007年，作品《恰同学少年》红遍大江南北，不仅得到普通观众的追捧，同时也受到了国家领导高层的高度关注，黄晖凭此剧一举拿下今年电视“飞天奖”优秀编剧奖。年末，湖南卫视推出他编剧的“传奇大片”《血色湘西》，收视率节节升高。&lt;/p></description></item><item><title>经典语录</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%BB%8F%E5%85%B8%E8%AF%AD%E5%BD%95/</link><pubDate>Wed, 08 Jan 2025 17:27:24 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%BB%8F%E5%85%B8%E8%AF%AD%E5%BD%95/</guid><description>&lt;h1 id="经典语录">
 经典语录
 &lt;a class="anchor" href="#%e7%bb%8f%e5%85%b8%e8%af%ad%e5%bd%95">#&lt;/a>
&lt;/h1>
&lt;p>衡山西，岳麓东，城南讲学峙其中。人可铸，金可熔，丽泽绍高风。多材自昔夸熊封。男儿努力蔚为万夫雄。&lt;/p>
&lt;p>天欲使其灭亡，必先使其疯狂 。&lt;/p>
&lt;p>人，之所以为人，正是因为人有理想，有信念，懂得崇高与纯洁的意义。假如眼中只有利益与私欲，那人和只会满足于物欲的动物，又有何分别呢？林文忠公有言：壁立千仞，无欲则刚。我若相信崇高，崇高自与我同在！而区区人言冷暖，物欲得失，与之相比，又渺小得何值一题.&lt;/p>
&lt;p>耻辱啊！耻辱！&lt;/p>
&lt;p>我泱泱大国，巍巍中华，竟成了诸般列强眼中的蛮荒未开化之地。&lt;/p>
&lt;p>耻辱啊！我四万万同胞竟成了任其宰割的鱼肉。&lt;/p>
&lt;p>人，不可不知耻。耻，有个人之耻，国家之耻。德守不坚，学识愚昧，身体衰弱，遭人白眼，乃个人之耻。纲纪扫地，主权外移，疆土日蹙，奴颜卑膝，乃国家之耻。我四万万同胞，如果人人为人所耻，则国家必为人所耻，一个国家被人耻笑，那么个人也将成为被别人耻笑的把柄。支那之耻，无有个人与国家之分，此乃我中华全体之奇耻大辱！&lt;/p>
&lt;p>今日之日本，处心积虑，虎视眈眈，视我中华为其囊中之物，大有灭我而朝食之想，已远非一日。今次，二十一条的强加于我，是欲将我中华亡国灭种的野心赤裸裸地表现。而袁世凯政府呢，曲意承欢，卑躬屈膝，卖国求荣，他直欲将我大好河山，拱手让于日寇，此等卖国行径如我国人仍浑浑噩噩，仍然任其为之，中华灭亡，迫在眉睫！！！&lt;/p>
&lt;p>夷狄虎视，国之将亡，多少国人痛心疾首，多少国人惶惶不安呢！是啊，大难来临了，国家要亡了，这样的灾难什么时候才是尽头，老天爷为什么不开开眼，劈死这些贪婪的强盗。这些抱怨，这些呼号，我们听过无数回，也说过无数回，可抱怨有什么用呢？我们恨这些强盗，恨得牙痒痒的。可是恨，救不了中国！&lt;/p>
&lt;p>大家都知道，南满铁路，东蒙铁路，都归于日本人之手，山东权益也归于日本人之手。要旅顺，要大连，整个长江流域所有的矿产要归日本来开采，一国之政治军事财经各项都要请日本人担任顾问，所有的武器要跟日本去买，就连我中国的警察都要跟日本来合作，这还能算是一个主权国家吗？这究竟是为什么？为什么局势会这样？国家为什么会落到了如此的地步？&lt;/p>
&lt;p>有人说，是因为国势积弱，无力维护自己的利益；有人说，是因为袁世凯政府太腐败，在列强面前，只知一味退让；还有人说，是因为国人太冷漠，仁人志士的呼号像一道道警钟，却难以唤醒他们麻木的心灵。我们坐在这里，痛斥列强，痛斥一切让中国落后挨打受欺负的人和事的时候，你的心中有没有想过，我们每一个中国人应该为国家的落后承担些什么样的责任？应该为这个民族的强大和兴盛担负起什么样的义务？天下兴亡，匹夫有责。这个匹夫不是指除你之外的别人，而是首先应该包括你自己。我们都希望国家强大，但是我要在这里告戒大家一句：不能光有恨！我们要学会将仇恨埋在心底，把悲愤化为动力，我们要拿出十倍的精神，百倍的努力，卧薪尝胆，发奋图强，振兴中华，做得比任何人更好，更出色，这才是每一个中国人应尽的职责。国家之广设学校，所为何事？我们青年置身于学校，又所为何来？正因为一国之希望，在于青年；一国之未来，要由青年来担当。当此国难之际，我青年学子，责有悠归，更肩负着为国家储备实力的重任。&lt;/p>
&lt;p>Table of Contents&lt;/p>
&lt;ul>
&lt;li>封 面&lt;/li>
&lt;li>版 权&lt;/li>
&lt;li>简 介&lt;/li>
&lt;li>作 者&lt;/li>
&lt;li>第一章 我叫毛泽东&lt;/li>
&lt;li>第二章 免费招生&lt;/li>
&lt;li>第三章 论小学教育&lt;/li>
&lt;li>第四章 经世致用&lt;/li>
&lt;li>第五章 欲栽大木柱长天&lt;/li>
&lt;li>第六章 嘤其鸣矣&lt;/li>
&lt;li>第七章 修学储能&lt;/li>
&lt;li>第八章 俭朴为修身之本&lt;/li>
&lt;li>第九章 袁门立雨&lt;/li>
&lt;li>第十章 世间大才少通才&lt;/li>
&lt;li>第十一章 过年&lt;/li>
&lt;li>第十二章 二十八画生征友启事&lt;/li>
&lt;li>第十三章 可怜天下父母心&lt;/li>
&lt;li>第十四章 纳于大麓 烈风骤雨弗迷&lt;/li>
&lt;li>第十五章 五月七日 民国奇耻&lt;/li>
&lt;li>第十六章 感国家之多难 誓九死以不移&lt;/li>
&lt;li>第十七章 新任校长&lt;/li>
&lt;li>第十八章 易永畦之死&lt;/li>
&lt;li>第十九章 驱张事件&lt;/li>
&lt;li>第二十章 君子有所不为亦必有所为&lt;/li>
&lt;li>第二十一章 逆书大案&lt;/li>
&lt;li>第二十二章 文明其精神 野蛮其体魄&lt;/li>
&lt;li>第二十三章 到中流击水&lt;/li>
&lt;li>第二十四章 书生练兵&lt;/li>
&lt;li>第二十五章 学生人物互选&lt;/li>
&lt;li>第二十六章 汗漫九垓&lt;/li>
&lt;li>第二十七章 工人夜学&lt;/li>
&lt;li>第二十八章 梦醒时分&lt;/li>
&lt;li>第二十九章 男儿蔚为万夫雄&lt;/li>
&lt;li>经典语录&lt;/li>
&lt;/ul></description></item><item><title>第1章-第5章</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC1%E7%AB%A0-%E7%AC%AC5%E7%AB%A0/</link><pubDate>Wed, 08 Jan 2025 17:27:23 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC1%E7%AB%A0-%E7%AC%AC5%E7%AB%A0/</guid><description>&lt;h1 id="第一章-我叫毛泽东">
 第一章 我叫毛泽东
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%80%e7%ab%a0-%e6%88%91%e5%8f%ab%e6%af%9b%e6%b3%bd%e4%b8%9c">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;p>“人可铸，&lt;/p>
&lt;p>金可熔，&lt;/p>
&lt;p>丽泽绍高风&amp;hellip;&amp;hellip;&lt;/p>
&lt;p>多才自昔夸熊封，&lt;/p>
&lt;p>男儿努力蔚为万夫雄！”&lt;/p>
&lt;hr>
&lt;h2 id="一">
 一
 &lt;a class="anchor" href="#%e4%b8%80">#&lt;/a>
&lt;/h2>
&lt;p>1913年3月，这一天清晨，长沙城里一阵微雨才过，空气中便荡满了新叶抽芽的清香和浓烈的花香，透亮的阳光掠进湖南省公立第一师范的院子里，照得几树梧桐新发的鹅黄色嫩叶上的雨滴晶莹剔透，院墙外一树桃花含满雨水次第绽放，红如胭脂，艳如流霞。&lt;/p>
&lt;p>方维夏匆匆穿过梧桐的绿阴，步子轻快有力，清新的空气令他精神不由一振。这位第一师范的学监主任已然年近四十，背微有些曲，一直性情内敛，举止平和。但经历了1911年那一场旷日持久的血雨腥风之后，他和大多数狂热的年轻人一样没有了分别，都为新生的中华民国所激励和鼓舞，就像这春天一样忽然从寒冬里迸发出了无限生机，充满了无穷活力。&lt;/p>
&lt;p>今天是长沙市商会陶会长到校捐资的日子 ，这位陶会长是长沙首富，向来乐善好施，尤其看重教育，被称作湖南教育界的财神，每到捐资的时候长沙各校都是争相逢迎，其恭敬不下于湖南的都督谭延？莅临。这一次一师数日前才新换了位校长，方维夏唯恐这位新校长不懂其中的干系，冷落了财神，因此急忙赶来提醒。&lt;/p>
&lt;p>他一脚跨进校长室，却见新校长孔昭绶在办公桌后正襟危坐，这位才从日本留学回来的法学学士约摸三十多岁年纪，剃得颇短的头发根根直立，脸上棱角分明，目光锐利，颇有行伍之气，他正端正地在一封聘书上写着字。方维夏见他戴了一顶黑呢礼帽，穿着苏绸的长衫马褂，脚下是老泰鑫的圆口新布鞋，胸前挂一块古铜怀表。在他印象里，这位新校长似乎只在上任的那天，才穿得这样正式，不觉暗自点头，看来孔昭绶对这位财神还是极重视的，他对孔昭绶说：“校长，商会的陶会长半个小时后到。”&lt;/p>
&lt;p>孔昭绶起身将聘书放进口袋，微笑道：“维夏，今天我有要事要出门，客人来了，你就代为接待吧。” 方维夏不觉一愣，忙说道：“商会陶翁每次来，历任校长都是亲自接待的……”但孔昭绶却摆了摆手说：“我今天的事，比钱重要。”说话间径直出了门，扔下方维夏在那里发呆：什么事比财神上门还重要？&lt;/p>
&lt;p>出了校门，孔昭绶租了一顶“三人抬”的小轿，只吩咐一句：“浏城桥，板仓杨宅。”便微眯上眼睛养神。沿街一线是高高低低的青砖鳞瓦小楼，深黑色的飞檐和素白色的粉壁在阳光里清亮而又明净。各色的招牌和旗幌迎风轻荡，石板街面上微雨渐干，一尘不染，空中天高云淡，往来行人安闲自在。&lt;/p>
&lt;p>孔昭绶打量着街头的悠闲，不觉想起一年多前长沙街头的那种惊惶。1911年10月（宣统三年八月）武昌起义爆发，随后焦达峰和陈作新在湖南起义，同时倾力增援武昌。但就在焦、陈抽空身边兵力增援武昌时，从邵阳赶到长沙的新军第50协（团）第二营管带梅馨乘机发动兵变，杀了焦、陈二人。因梅资历不足，派士兵一顶小轿将谭延？拥上了湖南都督的位置。其时的长沙可谓是一夜数惊，到处在杀人，到处在抢掠。同时袁世凯的军队已经攻占了汉口，大炮的火力隔江控制着革命军占领的汉阳与武昌，近在咫尺的长沙更是谣言不断，人心惶惶，连谭延？也有朝不保夕之感。随即忽然南北议和，1912年1月1日中华民国成立。&lt;/p>
&lt;p>民国建立后，谭延？开始真心实意地裁撤军队，发展经济。其时湖南建立了省议会，颁布了新刑法；兴办了大量的民营及省办的实业，修筑了第一条湖南的公路——长沙至湘潭公路；废除了清朝的田赋制度，减轻了农民的负担；还拿出经费大办教育，选派公费留学生，为湖南的建设培养人才。不到一年，湖南各业都迸发出勃勃生机。&lt;/p>
&lt;p>孔昭绶从日本政法大学留学一回来就得到了谭延？的聘任，就任第一师范校长。这些天来，他感到长沙这个千年古城一夜之间便从寒冬跨进了暖春，人们从新民国看到了民族复兴、国家强盛的希望，都以一种前所未有的热情进行建设。孔昭绶不由热血沸腾，他等这一天等得太久了，当真有一种时不我待之感。&lt;/p>
&lt;p>轿夫们穿着草鞋的脚拐进一条青石板的小巷。这时忽然传来一阵喧闹的鼓乐声，前方的小巷被挤得水泄不通。孔昭绶怔了一怔，看时，前方不远处一支仪仗队，开路的24人全套西洋军乐队奏着军乐，鼓乐嘹亮，后面紧跟着48名法式盛装、绶带肩章、刺刀闪亮的仪仗兵，军容耀眼，步伐整齐，吸引一路的行人纷纷围观，小孩子们更是跑前跑后。领队的那人孔昭绶再熟不过，正是省教育司的督学纪墨鸿。孔昭绶不觉发呆，这分明是湖南都督府专门迎奉贵客的仪仗队，怎么到了这里？又是什么人要教育司的督学亲自出马？&lt;/p>
&lt;p>小巷太窄，围观的人却越聚越多，孔昭绶的轿子只得跟着仪仗队后慢慢地走。一时大队人马迤逦行来，终于在一间大宅子前停下，看着墙上挂着的“板仓杨宅”的牌子，孔昭绶不由脸色一变，暗想：不会这么巧吧？&lt;/p>
&lt;p>这时纪墨鸿翻身下马，轻轻地扣了扣大门，只听大门“吱呀”一声开了，走出个中年男子来，穿长衫，中等身材，面容丰润，目光柔和，举止沉稳。背后却藏着一个十二三岁的少女，梳两个小辫子，脸如满月，睁大了一双漆黑的眼睛伸出头好奇地打量着。&lt;/p>
&lt;p>“立——正！”随着一声威严的军令骤然在门口响起，几十双锃亮的军靴轰然踩得地上尘土飞扬，一声令下，仪仗队的士兵同时枪下肩，向那中年男子行了一个标准的军礼，随即八面军鼓震耳欲聋地响起来。&lt;/p>
&lt;p>纪墨鸿把手一抬，军鼓便戛然而止，他向那中年男子深深鞠了一躬，朗声道：“卑职省教育司督学纪墨鸿，奉湖南都督谭延？大帅令，特来拜访板仓先生。”没等那人开口，纪墨鸿已经向后一招手：“呈上来！”&lt;/p>
&lt;p>一时鼓声和军乐又骤然大作。两名仪仗兵托着一只锦缎衬底的盘子正步上前，盘中是一封大红烫金、足有一尺见方的聘书。纪墨鸿双手捧起聘书，呈到那人面前：“谭大帅素仰先生风格高古，学贯中西，今林泉隐逸，是为我湘省厥才之失。兹特命卑职率都督府仪仗队，礼聘先生俯就湖南省教育司司长。这是都督大人的亲笔聘书，伏请先生屈尊。”四周人群中顿时发出惊叹之声，目光齐齐投在那张聘书上。&lt;/p>
&lt;p>孔昭绶见状，不由下意识地摸了摸自己怀里的聘书，他显然有些措手不及，只睁大了眼看着那中年男子。面对如此排场，那中年人却像是一个偶尔经过的过客。他并不去接聘书，只是淡淡说道：“杨某久居国外，于国内情形素无了解，更兼毫无行政才能，实在不是做官的料子。烦纪先生转告谭帅，就说他的好意我领了，请他见谅。”&lt;/p>
&lt;p>那人的态度让众人都吃了一惊，纪墨鸿尴尬地捧着那份聘书，看着他笑道：“大帅思贤若渴，一片赤诚，几次三番求到先生门下，先生总得给大帅一个面子吧！”&lt;/p>
&lt;p>“好了，该说的话，我也说过了。杨某区区闲云野鹤一书生，只想关起门来教几个学生读几句书，谭帅也是三湘名儒，想必能体会杨某这点书呆子想法。不送了。”说完这番话，这人转身牵着那少女进了院子，反手掩上了院门。&lt;/p>
&lt;p>纪墨鸿不觉呆在那里，仿佛泥塑木雕，半晌才沮丧上马而去，一路偃旗息鼓。孔昭绶不觉脸上露出一丝微笑。&lt;/p>
&lt;p>孔昭绶下了轿，走到大门前，正要伸手叩门，却见那门是虚掩的。他轻轻推开，里面是一个小院落，三面房间，一面院墙大门，正中一个小天井到处植满花木，阳光透进来，一片葱茏，花架子上十数盆兰花才经新雨，长长短短的绿叶舒展开来，几朵素白的春兰悄然绽放，清香满院。&lt;/p>
&lt;p>只见那中年男子手里拿着个洒水壶，悠闲地在那里浇水，少女也提起一个水壶，边学着父亲的样子洒水，边歪着脖子问：“爸爸，他们是来请你去当官的吧？为什么你不当官，当官不好吗？”&lt;/p>
&lt;p>这人看看女儿，又看看眼前的兰花，说：“当官嘛，倒也没什么不好，不过是有人合适当官，有人不合适。就好像花吧，一种跟另一种也不一样啊，你比方牡丹，是富贵花，像爸爸和开慧种的兰花呢……”&lt;/p>
&lt;p>少女抢过话头说：“我知道，我知道，是君子花。”“对喽。你想若兰花变得像牡丹一样一身富贵气，那兰花还是兰花吗？”那人笑了起来。不等少女答话，院门口忽然传来了一个声音，“恐怕不是。”&lt;/p>
&lt;p>那人诧异地回头，看到孔昭绶正站在门前，一时间，他简直有些不敢相信自己的眼睛，“昭绶兄？” 孔昭绶也是快步上前：“昌济兄！”&lt;/p>
&lt;p>“哈哈哈哈，真是没想到，没想到啊……”这人惊喜地说着，迎上去握住孔昭绶的手，二人相视大笑。这人名叫杨昌济，长沙人。又名怀中，字华生，是个虔诚的佛教徒。早年就读城南、岳麓书院，研究宋明理学。1903年春到1913年，先后在日本弘文学院、东京高等师范学校及英国爱伯汀大学留学，并赴德国考察。对西方教育、哲学和伦理学之历史与现状、理论与实践均有深入研究，乃是湖南有名的大学者。方才回国不久。那少女是他的小女儿，名叫杨开慧，今年刚刚12岁。&lt;/p>
&lt;p>二人一同到书房就坐，杨昌济兀自还在久别的激动中：“东京一别，一晃这都几年了，好几回做梦，我还梦见昭绶兄在法政大学演讲的情景呢——‘当今之中国，唯有驱除满清鞑虏，建立共和之民国，方为民族生存之唯一方法！’那是何等的慷慨激昂！言犹在耳，言犹在耳啊！”&lt;/p>
&lt;p>“我也一直记挂着昌济兄啊。从日本回来以后，我还托人打听过你的消息，听说你去了英国留学，后来又去了德国和瑞士……”尽管久别重逢，想说的话很多，但孔昭绶是个急性子，略略寒暄，便开门见山：“哎，闲话少叙，今天我可是无事不登三宝殿哦。”说着，从口袋里掏出那份聘书，递到杨昌济面前。&lt;/p>
&lt;p>杨昌济不禁有些疑惑，打开聘书，只见写着：“今敦请怀中杨老先生为本校修身及伦理教员，每周授课四时，月敬送修金大洋叁拾圆正。此约湖南省公立第一师范学校校长孔昭绶。”&lt;/p>
&lt;p>“怎么，奇怪啊？当此民国初创、百废待兴之际，什么是强国之本？什么是当务之急？教育是强国之本，教育是当务之急！”迎着杨昌济的目光，孔昭绶站起身，声音大了起来，“一个国家，一个民族，不把教育二字放在首位，何谈国家之发展，何谈民族之未来？开民智，兴教育，提高全体国民的素质，这，才是民族生存之根本，中华强盛之源泉啊！”&lt;/p>
&lt;p>杨昌济连连点头：“嗯，这一点，你我在日本的时候就有共识。”孔昭绶继续说道：“而教育要办好，首先就得办好师范，得有好的老师，才有好的教育啊。这回谭畏公招我任一师校长，我也想过了，头一步就得聘请一批德才兼备的优秀教员，扫除旧学校那股酸腐之气，为我湖湘之教育开出一个崭新局面。昌济兄，你的学问，三湘学界谁不景仰，我又怎能放过你这位板仓先生？”&lt;/p>
&lt;p>迎着孔昭绶殷切的目光，杨昌济却明显地露出了为难的神情。孔昭绶不禁笑了：“怎么，谭畏公的官你不做，我那儿的庙你也嫌小了？”&lt;/p>
&lt;p>“昭绶兄，你开了口，我本应该义不容辞，不过这一次，只怕你是来晚了。”杨昌济从书桌抽屉里取出一封聘书，递给孔昭绶：“这是周南女中昨天送来的聘书，聘我去教国文，我已经答应了。”&lt;/p>
&lt;p>这个变故显然大出孔昭绶的意料，看看聘书上的日期，还真是昨天的落款，失望之中，他只得起身告辞，却仍不甘心：“‘得天下英才而教之！’昌济兄，我记得这可是你毕生的理想啊。”&lt;/p>
&lt;p>杨昌济道：“只可惜英才难求啊。”&lt;/p>
&lt;p>“你怎么知道我那儿就没有英才？我第一师范自宋代城南书院发祥，千年以降，哪一代不是人才济济？且不说张南轩、曾国藩这些历史人物，就是眼下，缔造共和的民国第一人黄克强先生，那不也是我一师的毕业生吗？”&lt;/p>
&lt;p>“可是周南那边……”&lt;/p>
&lt;p>孔昭绶赶紧趁热打铁：“不就是一点国文吗？我只要你来兼课，耽误不了你多少时间的。昌济兄，以你的学问，只要肯来屈尊，未必不能在一师学子之中，造就一批栋梁之材！怎么样，还是答应我吧？”&lt;/p>
&lt;p>迎着孔昭绶期待的目光，杨昌济沉吟了片刻，只好说道：“这样吧，你给我几天时间，我想办法安排一下，要是安排得过来，我就来给你兼这份差。”&lt;/p>
&lt;p>得了他这句话，孔昭绶才算是放心出了杨宅。临上轿，还回头郑重叮嘱了一句：“昌济兄，可别敷衍我哦。”&lt;/p>
&lt;p>送走孔昭绶，父女二人回了书房，开慧一路还在问：“爸爸，孔叔叔他们学校的学生真的很好吗？”杨昌济道：“现在在校的学生嘛，倒没听说什么特别出类拔萃的，新学生呢，又还没招，好不好现在怎么知道？”&lt;/p>
&lt;p>“可是孔叔叔不是说他们学校出了好多人才吗？还有个缔造民国的黄克强先生，那是谁呀？”&lt;/p>
&lt;p>杨昌济告诉女儿：“黄克强，就是黄兴，也是爸爸在日本的时候的同学。”&lt;/p>
&lt;p>“黄兴大元帅？他也是孔叔叔他们学校的学生？”开慧听得几乎跳了起来，拉住父亲的手臂，“哇！爸爸，那你赶紧去呀，你也去教几个黄兴那样的大英雄出来，到时候，民国的大总统、大元帅都是你的学生，那多带劲！”&lt;/p>
&lt;p>“还几个？哈哈……”杨昌济不禁一笑，“真要遇上一个，就已经是佛祖显灵了。可惜爸爸善缘还修得不够，遇不上哦。”开慧嘟着小嘴问：“为什么？”&lt;/p>
&lt;p>杨昌济拍了拍女儿的头，笑着回答：“你还小，不明白这个道理。这个世上，最难求的，就是人才，且不说黄兴那样惊天动地的英雄人物，但凡能遇上一个可造之才，能教出一个于国于民还有些作用的学生，像爸爸这样的教书匠，一辈子，也就知足了。”&lt;/p>
&lt;p>开慧甩开父亲的手臂，偏着头，很认真地对父亲说：“我就不信！爸爸，你以后一定会教出一个比黄兴元帅还厉害、还有本事的学生！”杨昌济笑道：“你算得这么准？”开慧起劲地点点头：“不信我们打赌。”&lt;/p>
&lt;p>杨昌济笑了，望着书桌上的地球仪和那尊他朝夕敬奉的白玉观音像，脸上的笑容却渐渐凝结了起来，心里想：如此人才，却不知锥藏何处？&lt;/p>
&lt;h2 id="二">
 二
 &lt;a class="anchor" href="#%e4%ba%8c">#&lt;/a>
&lt;/h2>
&lt;p>陶会长那辆镶着银色花纹的豪华马车才停在一师门口，一个十六七岁的少女便跳下车来。这少女面目清秀，身材高挑，穿一身淡雅学生裙，虽然看上去像个内秀的古典美女，但她纤细而灵巧的双脚，流光溢彩的双眼却泄露了充满渴望的少女情怀。&lt;/p>
&lt;p>“斯咏！不要乱跑。” 陶会长在车上叫道。“爸，我去看看，这个学校好漂亮。”少女说话间直进了校门。陶会长尴尬地向前来迎接的方维夏一笑，说：“小女陶斯咏，小孩子不懂规矩，让先生见笑了。” 方维夏也一笑说：“不要紧。”然后迎着陶会长进了校长室。&lt;/p>
&lt;p>陶斯咏一个人在学校里缓缓而行。第一师范前身为南宋绍兴三十一年（公元1161年）张浚、张拭父子创建的城南书院。乾道三年，朱熹来访时，住此两月。书院遂因朱张会讲而名传天下，与岳麓书院齐名。书院建在妙高峰上。妙高峰为长沙城区的最高峰，号称长沙城南“第一名胜”。学院前临湘江，与岳麓书院隔水相望。清末书院被毁，一师便在原址上重建，建筑风格仿照日本青山师范学校，以黑白线条为主，等角三角形的深黑色瓦顶，映衬素白的拱形顶百叶窗，墨蓝色方形墙面，整个建筑群是典型欧式风格，典雅庄重。但连接建筑的回廊迂回曲折，开出一个独立的庭院，或有小亭，或有古井，独具东方韵味。&lt;/p></description></item><item><title>第11章-第15章</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC11%E7%AB%A0-%E7%AC%AC15%E7%AB%A0/</link><pubDate>Wed, 08 Jan 2025 17:27:22 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC11%E7%AB%A0-%E7%AC%AC15%E7%AB%A0/</guid><description>&lt;h1 id="第十一章-过年">
 第十一章 过年
 &lt;a class="anchor" href="#%e7%ac%ac%e5%8d%81%e4%b8%80%e7%ab%a0-%e8%bf%87%e5%b9%b4">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;p>到了新年，毛家院子里，毛贻昌一身半旧的长袍马褂，正在端正自己的瓜皮小帽；泽建一身新花衣，扎着红头绳，蹦过来跳过去；毛泽东站在凳子上，正在泽覃泽建的指挥下贴着自己刚刚写好的对联。&lt;/p>
&lt;hr>
&lt;h2 id="一">
 一
 &lt;a class="anchor" href="#%e4%b8%80">#&lt;/a>
&lt;/h2>
&lt;p>放假了，过年了，刘俊卿的心情特别好。虽然他只考了第三名，但在放假的前一天，纪督学特地把他叫到了督学办公室，拉着他的手说：“俊卿，老师心里闷，闷得很！老师难啊，大好的一所学校，怎么就搞成了这个样子？这是怎么回事嘛？这所学校，老师是彻底死心了！老师现在就剩了一个念头——你，可不要上那些乌七八糟的什么新教育观念的当，一定要踏踏实实，好好读书，考出好分数，给老师争口气。只要你好好学出个样子来，到时候，你的前程，包在老师身上！”&lt;/p>
&lt;p>“你的前程，包在老师身上！”这话像天上的福音一样，让刘俊卿振奋，他从这句话里似乎已经看到了自己辉煌的前程。迫不及待地，他想让心爱的人来分享自己的好心情。&lt;/p>
&lt;p>在离茶叶店不远的小街拐角处，刘俊卿与赵一贞依偎在淡淡的月光下说着知心话： “其实一二三名不都差不多，你何必对自己要求那么高呢？”&lt;/p>
&lt;p>“可我答应过你，我要考第一的。”&lt;/p>
&lt;p>“不管你考第几，我都不在乎。”&lt;/p>
&lt;p>“可我在乎。”刘俊卿叹了口气，“你知道吗？师范生就一条出路，当小学老师，小学老师啊！除非我有出类拔萃的成绩，否则，我就改变不了这个命运。”&lt;/p>
&lt;p>“可小学老师也不错呀。”&lt;/p>
&lt;p>刘俊卿不禁苦笑，“一辈子站讲台，吃粉笔灰，拿一点紧巴巴的薪水，跟一帮拖鼻涕的娃娃打交道，这就算不错吗？就算我能受得了，可我总不能让你跟着我这样过一辈子啊！”&lt;/p>
&lt;p>一贞捧住刘俊卿的脸，摇摇头：“我不在乎，俊卿，我真的不在乎，不管有没有人成绩比你好，不管你是不是教一辈子书，在我心里，你永远是最优秀的，永远。”&lt;/p>
&lt;p>端详着一贞清纯的脸，刘俊卿禁不住轻轻吻在她的面颊上：“一贞……”一贞将头埋进了他怀中。&lt;/p>
&lt;p>“我不会辜负你的！”仰望着月光，刘俊卿喃喃自语，仿佛是在向一贞立誓，又仿佛是在说给自己听。突然，一贞惊得弹了起来：“爸？”刘俊卿猛一回头——赵老板面如严霜，正站在拐角处！&lt;/p>
&lt;p>自那天赵老板把一贞拉走后，刘俊卿便再没有见过一贞了。他虽然无时无刻不在想着一贞，但却没有胆子去赵家的茶叶铺。转眼就到年三十了，简陋的棚屋门口，刘俊卿一身崭新的长衫，正拿着一副春联，在往土坯墙上比着贴的位置——春联上是他工整的字体。&lt;/p>
&lt;p>“俊卿，你饿不饿？要不，我先给你做点吃的。”刘三爹心疼地招呼儿子。&lt;/p>
&lt;p>刘俊卿懂事地说：“不用了，还是等阿秀回来，一起团年吧。”&lt;/p>
&lt;p>“也好。过年嘛，他王家准又得赏几样好菜，留着肚子，等你妹妹回来再吃也好。”&lt;/p>
&lt;p>就在这时，随着一阵急促的脚步声，传来一贞的声音：“俊卿。”&lt;/p>
&lt;p>“一贞？”刘俊卿大吃一惊：出现在他面前的，真的是跑得气喘吁吁的赵一贞，“你怎么来了？”&lt;/p>
&lt;p>带着喜悦，更带着几分羞涩，一贞使劲平静着过于激烈的呼吸：“我……我爸他说……请你上我们家去吃团年饭！”&lt;/p>
&lt;p>“你说什么？”刘俊卿简直不敢相信自己的耳朵。停了两秒钟，他这才反应过来：“这是真的？”&lt;/p>
&lt;p>忍着激动与呼吸，一贞用力点了点头。巨大的惊喜令刘俊卿张大了嘴，愣了一阵，喜极的笑容才绽放在他的脸上：“哎，我去，我……我换双鞋就去！”&lt;/p>
&lt;p>年夜饭吃过，一贞正在收拾着残羹冷炙。世故的赵老板剔着牙，点着了一支烟，吐出一口烟雾，这才盯着局促地坐在他面前，带着几分希望，忐忑不安地盯着自己的皮鞋尖的刘俊卿，和蔼地说：“吃好了吧？”&lt;/p>
&lt;p>刘俊卿赶紧点头。赵老板看了捧着碗筷还站一边的一贞一眼，一贞只得端着碗筷进了里屋。赵老板这才微笑着对刘俊卿：“吃好了，那我也不留你了，你走吧。”&lt;/p>
&lt;p>这话说得刘俊卿有点摸着不头脑。赵老板的下一句话却仿佛给了他当头一棒：“走了以后，就不要再来了。”刘俊卿不禁目瞪口呆！&lt;/p>
&lt;p>“怎么，听不明白？我是说今天踏出这个门，以后你就不用再来了，更不要再找一贞。”赵老板的口气冷酷，不容置疑。布帘里，端着碗筷、偷听着外面谈话的一贞顿时呆住了。&lt;/p>
&lt;p>“赵叔叔，可这……这是为什么？”刘俊卿还想问个明白。“为什么就不用再说了。总之一句话，今天我请你这顿年夜饭，就算是给你和一贞之间做个了断，只要以后你不再跟一贞来往，以前的事，我当没发生过。”&lt;/p>
&lt;p>“赵叔叔，我……我对一贞是真心的……我真的是真心的……”&lt;/p>
&lt;p>“怎么，你非要我点那么明？你当我是才知道你们的事？行，那我们就摊开来谈：刘俊卿，你一个父亲，一个妹妹，父亲摆小摊卖臭豆腐，妹妹典给人家当丫环，你读个不收钱的一师范，家里还欠了一屁股债——还用我说下去吗？”&lt;/p>
&lt;p>刘俊卿的脸色顿时一片惨白。布帘后，一贞同样面如死灰——这个突然的打击显然完全出乎她的预想。&lt;/p>
&lt;p>“我为什么送一贞去周南读书？因为那是长沙最好的女校，全长沙有身份的少爷娶的都是那儿的女学生！我赵家是小户人家，可小户人家也有个小户人家的盼头，我就一个女儿，我不想让她再过我这种紧巴巴的穷日子！我省吃俭用，我供她读书，就是要让她嫁个好人家！而不是你这种人！”&lt;/p>
&lt;p>一贞冲了出来：“爸！”赵老板腾地站起，指着女儿骂道：“滚回去！还嫌给我丢脸丢得不够啊？”&lt;/p>
&lt;p>一贞呆住了。瞟了一眼刘俊卿，赵老板站起身来，扔掉烟头，一脚踩灭：“要娶一贞，你还不够格。你走吧。以后不要来了。”&lt;/p>
&lt;p>仿佛自己的身体有千斤重，刘俊卿颤抖着腿，终于站了起来，咬了咬嘴唇，向门外走去。一贞叫了声“俊卿！”抬腿要追，赵老板一个耳光打得她一歪：“你敢！”&lt;/p>
&lt;p>捂着脸，一贞的眼泪滚了下来……&lt;/p>
&lt;h2 id="二">
 二
 &lt;a class="anchor" href="#%e4%ba%8c">#&lt;/a>
&lt;/h2>
&lt;p>在与长沙隔江相望的溁湾镇，蔡家母子三人也在温馨地准备着他们自己的新年。&lt;/p>
&lt;p>葛健豪对着镜子，披上一件老式大红女装——那是一件宽袍大袖，刺绣精致、衣料华美的旗式女装。她打开一只颇为精致但已陈旧的首饰盒，取出里面几件银首饰，往头上戴着。她的身后，蔡和森正举着一张通红的老虎剪纸窗花，在油灯前比划着问妹妹蔡畅像不像，他旁边的旧木桌子上，散乱着红纸和碎纸屑，摆着几张剪好的“春”、“福”字。&lt;/p>
&lt;p>“咦——不像不像，等我这个剪出来，你才知道什么叫过虎年！”蔡畅一面剪着自己手里的窗花，一面说，“想起以前在乡下，那些窗花才叫好看呢。一到过年，家里前前后后，那么大的院子，那么多间房子，门啊、窗户啊，到处都贴满了，我都看不过来。”&lt;/p>
&lt;p>蔡和森笑话妹妹：“那时候，你只记得缠着要压岁钱，还记得看窗花？”&lt;/p>
&lt;p>“谁只记得要压岁钱了？”&lt;/p>
&lt;p>“还不承认。那一年——就是爸从上海给你带了个那么大的洋娃娃的那一年，过年那天晚上，你跟族里头一帮孩子躲猫猫，藏到后花园花匠的屋里头，结果你一个人在那儿睡着了，吃年夜饭都找不到你。”&lt;/p>
&lt;p>“那是你们把我忘了。”&lt;/p>
&lt;p>“谁把你忘了？到处找。我还记得管家跑到我那里直嚷嚷：”少爷少爷，四小姐不见了，怎么办啊！‘弄得一家子仆人、丫环找你找出好几里地去，等把你找出来，你倒好，光记得问：“压岁钱给完了没有，我还没拿呢。’”&lt;/p>
&lt;p>蔡畅颇为得意：“哼，那年我拿的压岁钱最多，一年都没用完！”&lt;/p>
&lt;p>蔡和森说：“那是长辈们怕你哭，故意给你加了倍。”&lt;/p>
&lt;p>“你也不差呀，你这件西装，不就是那年爸从上海带回来的？老家那么多少爷，还没一个穿过呢。”&lt;/p>
&lt;p>兄妹二人越说越高兴的对话中，葛健豪照着镜子，戴着首饰，梳理着头发——本来，她还被儿女的高兴所打动，但渐渐地，她的笑容消失了，梳理着头发的手也渐渐停了下来。她的目光扫过简陋的房间，扫过一件件破旧的家具用品，扫过窗台上摆着的一碗红薯，扫过蔡和森明显有点小了、已经打了补丁的破旧西装，扫过蔡畅的粗布棉袄、鞋面补过的旧布鞋……&lt;/p>
&lt;p>房门轻轻的响动惊醒了兴致高昂的蔡和森，他一回头，才发现母亲已经出了门。镜子前，是几件摘下的银首饰，那件精致的旗式女装已经折好，放在了一旁。&lt;/p>
&lt;p>蔡畅并未注意到这一切，还在情绪高昂：“哎，对了，哥，你还记不记得我们门口挂过大灯笼，我们剪一个好不好？”&lt;/p>
&lt;p>“行，你先剪。”蔡和森不露声色地放下剪刀，“哥先出去帮妈做点事。好好剪啊。”&lt;/p>
&lt;p>蔡畅：“放心，肯定剪得像。”&lt;/p>
&lt;p>坐在墙边，葛健豪呆呆地望着夜空。她的面颊上，挂着两行眼泪。无声地，一只手轻轻拉住了她的手。&lt;/p>
&lt;p>“彬彬？”蓦然发现儿子站在身边，葛健豪赶紧擦了一把泪水。&lt;/p>
&lt;p>“妈，怎么了？”&lt;/p>
&lt;p>“没什么，没什么。”葛健豪掩饰着，但眼泪却又涌了出来，她极力想忍住，擦去泪，笑了一下，却不料眼泪越涌越多，她连擦了好几下，眼泪不曾擦尽，却猛然鼻子一酸，忍不住一下捂住了脸——那是一个坚强女人压抑不住的，突然感到疲惫、无助、软弱而内疚的抽泣声。&lt;/p>
&lt;p>“妈。”蔡和森蹲了下来，抓紧了母亲的手，“妈，您这是干什么？怎么了？”&lt;/p>
&lt;p>半晌，葛健豪才抬起头，望着儿子的眼睛：“小彬，你后悔过吗？跟着妈出来，跟着妈离开那个家，过上现在这样的穷日子，你后悔过吗？”&lt;/p>
&lt;p>“妈，您怎么会突然这样想？”&lt;/p>
&lt;p>“不是妈要这样想，是妈不能不想啊。妈这一辈子，做什么事都利落，都干脆，从来不想什么后果，也从来没有为自己的选择后悔过。只有把你们两兄妹带出来这件事，妈的心里，一直就不安稳。”她叹了口气，接着说，“离开家也好，受苦受穷也好，那都是妈自愿的，可你们不一样，你们都还是孩子，只要还呆在那个家里，你们就能吃好的，穿好的，过得无忧无虑。其实妈心里总是想啊，是不是妈害了你们，是不是妈太亏欠你们，是不是妈夺走了你们应该享受的幸福和快乐……”&lt;/p>
&lt;p>“妈。”蔡和森打断了母亲，“谁说我们现在过得不快乐了？”&lt;/p></description></item><item><title>第16章-第20章</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC16%E7%AB%A0-%E7%AC%AC20%E7%AB%A0/</link><pubDate>Wed, 08 Jan 2025 17:27:21 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC16%E7%AB%A0-%E7%AC%AC20%E7%AB%A0/</guid><description>&lt;h1 id="第十六章-感国家之多难-誓九死以不移">
 第十六章 感国家之多难 誓九死以不移
 &lt;a class="anchor" href="#%e7%ac%ac%e5%8d%81%e5%85%ad%e7%ab%a0-%e6%84%9f%e5%9b%bd%e5%ae%b6%e4%b9%8b%e5%a4%9a%e9%9a%be-%e8%aa%93%e4%b9%9d%e6%ad%bb%e4%bb%a5%e4%b8%8d%e7%a7%bb">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;p>感国家之多难，誓九死以不移，&lt;/p>
&lt;p>虽刀锯鼎镬又有何辞？&lt;/p>
&lt;p>人固有一死，死得其所，不亦快哉！&lt;/p>
&lt;p>鼓大勇，戡大乱，雪大耻，&lt;/p>
&lt;p>令我中华生存于竞争剧烈之中，&lt;/p>
&lt;p>大崛起于世界民族之林&lt;/p>
&lt;hr>
&lt;h2 id="一">
 一
 &lt;a class="anchor" href="#%e4%b8%80">#&lt;/a>
&lt;/h2>
&lt;p>刘俊卿悄悄离开礼堂，埋头疾步朝校外跑去，忽然听到有人喊他的名字，吓了一跳，东张西望之后看清是父亲，这才松了一口气：“爸。”&lt;/p>
&lt;p>刘三爹本是提了开水瓶去礼堂倒茶的，却见儿子独自一人跑出来，很是奇怪：“不是开大会吗？你这是上哪去？”&lt;/p>
&lt;p>“我……有点急事……”&lt;/p>
&lt;p>“你能有什么急事啊？”&lt;/p>
&lt;p>“说了有急事，你就别管了。”刘俊卿走出几步，突然又回过身来：“爸……”看着父亲那饱经沧桑满是皱纹的脸，心头一热，似乎想说什么，却又不知从何说起，终于，他只是笑了笑：“爸，等着我，等我回来，也许你就不用给人倒开水了。”&lt;/p>
&lt;p>“那我倒什么？”刘三爹显然没听明白。&lt;/p>
&lt;p>“什么也不倒，以后，我要让别人给你倒。”&lt;/p>
&lt;p>扔下一头雾水的父亲，刘俊卿匆匆出了校门，一口气跑到省教育司纪墨鸿的办公室，边喘气边把“中日友善”变“明耻大会”的经过说了一遍。“学生按照老师要求，熬了一个通宵写的征文，被孔校长当着老师同学们的面撕得粉碎。”刘俊卿委屈地说。&lt;/p>
&lt;p>接过刘俊卿递来的《明耻篇》，纪墨鸿翻开封面，“五月七日，民国奇耻。何以报仇，在我学子”的引言赫然在目。“这还了得！这不是公然煽动学生造反吗？”纪墨鸿腾地站了起来，“走，马上跟我去将军府。”&lt;/p>
&lt;p>两人匆匆来到将军府，纪墨鸿吩咐刘俊卿等在外面，自己请陈副官赶紧通报，匆匆进了汤芗铭的办公室。刘俊卿本只想到纪墨鸿那里告个状就走人，万万没想到竟会被带到将军府来，看纪墨鸿的紧张模样，自己这一状真是告到了点子上，这一刻便觉得全身轻飘飘的，犹如踩着两团棉花，两只眼睛直勾勾地看着将军府内那颗桂花树。这时还只是初夏时节，他却仿佛闻到了一阵阵的桂花香，心中想：古人所云“蟾宫折桂”，大抵就是这个情形吧。&lt;/p>
&lt;p>正在胡思乱想之际，只听得一阵阵杂乱而紧张的脚步声，众多士兵涌了出来，刺刀闪亮，排列成行，刘俊卿哪见过这等阵仗，心中正发虚，却不料被人从后面拎住了衣领。回头一看，正是那个陈副官，脸上全无表情：“走，跟我去认人！”&lt;/p>
&lt;p>“认人，认什么人？”刘俊卿愣住了。&lt;/p>
&lt;p>“抓的是你们学校的校长，你不认人，谁认人？”陈副官眼睛一瞪，刘俊卿这才明白这帮士兵竟是要去捉孔昭绶的，顿时傻了，求援的目光投向一旁跟来的纪墨鸿，“可是……可是我……老师……”&lt;/p>
&lt;p>纪墨鸿似乎也有些歉然，躲开了他的目光：“俊卿，做人就要善始善终嘛。”刘俊卿急了：“不是啊，老师，我就是来报个信，这种事我怎么好去呀？”纪墨鸿拍着他的肩膀：“我知道，当着熟人，大庭广众的，脸上抹不开也是有的。可你不去，这些当兵的谁认识他孔昭绶啊？再说，大帅可有话，只要你肯尽心效力，绝不会亏待你，教育司一科科长的位子，可还空着呢。”&lt;/p>
&lt;p>“老师，我……我真的不行……”刘俊卿还在苦苦哀求，早已等得不耐烦的陈副官一挥手，两名士兵上来，一人一边，挟了刘俊卿就跑。纪墨鸿站在将军府门口，看着挣扎着的刘俊卿被士兵们带走，却是一言未发。&lt;/p>
&lt;h2 id="二">
 二
 &lt;a class="anchor" href="#%e4%ba%8c">#&lt;/a>
&lt;/h2>
&lt;p>这一刻，一师礼堂里，“明耻大会”仍在进行，孔昭绶还在慷慨陈词：&lt;/p>
&lt;p>“天下兴亡，匹夫有责。何以报仇，在我学子！国家之广设学校，所为何事？我们青年置身学校，所为何来？正因为一国之希望，全在青年，一国之未来，要由青年来担当！当此国难之际，我青年学子，责有悠归，更肩负着为我国家储备实力的重任……”&lt;/p>
&lt;p>忽然，砰的一声，礼堂门被撞开了，刘三爹气喘吁吁地冲了进来，把师生们吓了一大跳。原来，刘俊卿走后，刘三爹进到礼堂帮着老师们一一泡上热茶，又站着听了一会儿演讲，大道理他说不出来，就觉得孔昭绶说得有理，说出了中国人的骨气。他听了一半，想着儿子还在外面，开水瓶也空了，就出去换开水，顺便再把儿子喊进来。出了礼堂，却左找右找不见儿子身影，正在校门口东张西望之际，只见大批军队直朝一师而来，连忙锁了校门，跑来报信。&lt;/p>
&lt;p>“不好了，不好了，当兵的……全是当兵的……好多当兵的……”刘三爹话音未落，砰的一声，门口传来一声枪响，随即是校门被砸开的声音，士兵们整齐的脚步声，听得所有人心中一紧，几乎同时站了起来！&lt;/p>
&lt;p>“第一师范的师生人等，给我听清楚了，湖南将军汤大帅有令：文匪孔昭绶，目无国法，包藏祸心，蛊惑学生，对抗政府，着令立即逮捕。凡包庇孔犯昭绶，窝藏卷带者，与孔同罪。煽动闹事，阻碍搜捕者，格杀勿论！”&lt;/p>
&lt;p>门外的士兵们喊话声传来，礼堂里的学生们顿时一片大乱。&lt;/p>
&lt;p>“都不要乱，同学们，不要乱，听我把话讲完。”一片惊悚中，讲台上的孔昭绶却笑了，这一切原本就在他的预料之中，只不过提前了一点点罢了，“没有什么了不起的，不就是抓人吗？昭绶今日走上这个讲台，外面的情况，早就已在我意料之中。死算什么？感国家之多难，誓九死以不移，虽刀锯鼎镬又有何辞？人固有一死，死得其所，不亦快哉！”&lt;/p>
&lt;p>他戴上礼帽，正正衣襟：“同学们，我亲爱的同学们，昭绶今日虽去，一师未来犹存，但望我去后，诸位同学能不忘我今日所言，鼓大勇，戡大乱，雪大耻，令我中华生存于竞争剧烈之中，崛起于世界民族之林，则昭绶此去，如沐春风矣。”&lt;/p>
&lt;p>说罢，迈步便下了讲台。&lt;/p>
&lt;p>“校长！”前排的萧三再也忍不住了，双膝蓦然重重跪倒在地！一排排同学，一双双膝盖随着孔昭绶的经过，顿时跪倒了一片！一双双眼里，饱含着泪水，一双双手，伸向了即将生离死别的校长……&lt;/p>
&lt;p>满场黑压压的学生中，只剩了毛泽东、蔡和森还站着没动，两个人互相看着，却也不知如何是好。孔昭绶的眼睛也湿润了，他微笑着，坚定地排开一双双伸向他的手，向大门走去。杨昌济一把抓住了他的手：“昭绶！”&lt;/p>
&lt;p>“昌济兄，你我之约，望君铭记。”孔昭绶挡开杨昌济的手，就要来拉大门。猛地，站在门边的刘三爹一把靠住大门，堵住了孔昭绶的去路，冲毛泽东等人大喊：“你们还愣着干嘛？还不保护校长走？快啊！”&lt;/p>
&lt;p>毛泽东这才反应过来，一挥手，几个人上来一把抱住孔昭绶。孔昭绶挣扎着，“放开我，快放开我……”然而学生们人多势众，不容分说，架起他便往另一边的门跑去。&lt;/p>
&lt;p>孔昭绶这边刚被架走，枪托砸门的声音砰然大起！学生们赶紧冲上前，与刘三爹一起堵着大门。门外的士兵们蜂拥而上，枪托砸、肩膀撞，到底当兵的凶悍，轰然一声，礼堂的一边大门被撞断了门轴，倒了下来。数十把闪亮的刺刀一拥而入，逼得学生们纷纷后退。&lt;/p>
&lt;p>“带他认人！”副官和被士兵押着的刘俊卿走了上来。副官一挥手，士兵放开刘俊卿，顺手向前一推，刘俊卿一个踉跄，重重摔在地上。这一跤摔得很重，但刘俊卿也顾不得了，趴在地上，双手捂住脸，只希望这里的人认不出他来。&lt;/p>
&lt;p>“刘俊卿？”不知是谁首先喊出了这个名字，无数道惊愕的目光一齐射了过来。几乎是刹那之间，大家都明白了，目光一下子转成了无比的鄙夷。角落里，刘三爹更是惊得目瞪口呆，简直不敢相信自己的眼睛！&lt;/p>
&lt;p>一名士兵过来，揪着刘俊卿的衣领，把他拎了起来：“快认人！”&lt;/p>
&lt;p>看着曾经朝夕相处的同学们，刘俊卿躲闪着他们的眼光，最后，他的眼神落在易永畦——这位平日里最温顺和善的同学身上，“永畦，我……”他满怀希望地喊出了这个名字，他希望永畦能够明白他，原谅他今天所做的一切。&lt;/p>
&lt;p>易永畦猛地抬起头，抡起巴掌，狠狠扇在刘俊卿的脸上！&lt;/p>
&lt;p>一个士兵走过来，抡起枪托照着易永畦当胸狠狠砸去，易永畦一头摔翻在地，一口鲜血猛喷了出来！“永畦！”周世钊等好几名同学涌了上来，扶住了昏迷的他。&lt;/p>
&lt;p>“还有谁不老实？谁！”陈副官拔出手枪，黑洞洞的枪口对着同学们挥舞了一圈之后，停在刘俊卿的脑门上，“认人，你认不认！”&lt;/p>
&lt;p>脸上火辣辣的刘俊卿被冷冰冰的枪口指着，脑子一片空白，他不敢回头，后面全是黑洞洞的杀人的枪口。他也不敢向前，前面是张昆弟、周世钊他们仇恨的目光。如果他们手里也有枪，他们枪口第一个对准的，肯定也是他刘俊卿。站在人群中间，他重重咬着嘴唇，鲜血从唇角流下来。&lt;/p>
&lt;p>猛然，他疯一样地冲进人群，“我认，我认，我现在就认！”他一把推开了面前的同学，“孔昭绶，你给我出来！出来，孔昭绶！”&lt;/p>
&lt;p>他嘶吼着，寻找着，疯子般寻遍了整个礼堂，却不见孔昭绶。&lt;/p>
&lt;p>“走，走，再找！再找！我带你们找！”他领着士兵们冲了出去，这一刻，他已经只剩下一个念头：他已经不属于这所学校，他只想毁了这眼前的一切！&lt;/p>
&lt;p>此情此景，连刘俊卿的亲生父亲——刘三爹也看不下去了，他扶着墙壁，一步一步慢慢挪着离开了礼堂。路其实很平，他却摔了一跤，随即两腿发软，怎么也站不起来，嘴唇哆嗦着，上下牙齿咬得咔咔作响，终于，从齿缝里挤一句“兔崽子！”，禁不住泪如雨下。&lt;/p>
&lt;p>毛泽东、蔡和森一左一右夹着孔昭绶，一时之间也不知哪里安全，只好先带着老师们到宿舍再说。&lt;/p>
&lt;p>“昭绶兄，你怎么就不听劝呢？”杨昌济急得满头大汗，“白白牺牲一条性命，有必要吗？”徐特立、方维夏等人也纷纷劝道：“是啊，校长，赶紧走吧，迟了就来不及了。”&lt;/p>
&lt;p>孔昭绶早已抱了必死决心，只是微笑着说：“你们不用劝了，我不会走的。昌济兄、特立兄，你们都走吧。毛泽东、蔡和森，你们赶快把外面的同学都带走，千万别让他们出事。”&lt;/p>
&lt;p>毛泽东斩钉截铁地说：“您不走，谁也不会走的！”&lt;/p>
&lt;p>就在这时，外面传来了一阵嘈杂声。屋里的人不由得都紧张起来，只有孔昭绶反而更加平静了。蔡和森向杨昌济等点了一下头，打开门走了出去，迎头却愣住了……眼前，张昆弟、罗学瓒、萧三……几十个同学抄着棍棒、板凳、砖头等东西，正涌向门口。一张张年轻的脸上，都是视死如归的无畏。&lt;/p>
&lt;p>蔡和森问：“你们这是要干什么啊？”张昆弟扬着手里的木棒说：“和森兄，我们决定了，大家把校长围在中间，一起往外冲，拼出这条命，也要把校长送出去！”“对，冲出去……”众人纷纷点头。张昆弟一挥手，“说干就干！不怕死的，跟我来！”&lt;/p>
&lt;p>“都给我站住！”身后，传来了毛泽东的一声大吼，大家不由得都愣住了，“你们这是要干什么？都疯了？凭这几根木棍，就想跟刺刀、跟子弹、跟一支军队去拼命吗？”“那你说怎么办？总不能眼睁睁看着他们把校长抓走吧？”张昆弟说。&lt;/p>
&lt;p>“不管怎么样，也不能用血肉之躯，用这么多人命去冒这种险！这是无谓的牺牲，是匹夫之勇！”毛泽东一把抢下了张昆弟手中的棍子：“都把东西放下！都给我放下！”好几个同学被他震住了，放下了手里的东西，更多的人迟疑着，一时不知如何是好。张昆弟说：“不行，我不能看着他们把校长抓走，要命有一条！我不怕！”说完，就要往外冲，“昆弟……”蔡和森连忙一把拉住。&lt;/p>
&lt;p>“同学们！” 听到动静的孔昭绶与其他老师出现在门口，孔昭绶命令同学们，“把东西都放下来，放下！都放下！”&lt;/p>
&lt;p>一片静默中， 乒乓一阵，同学们手中的棍棒、砖头、板凳……通通落在了地上。忽然，一只手缓缓地，却是坚定地捡起了地上的一根木棒。所有人都愣住了——居然是蔡和森！&lt;/p></description></item><item><title>第6章-第10章</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC6%E7%AB%A0-%E7%AC%AC10%E7%AB%A0/</link><pubDate>Wed, 08 Jan 2025 17:27:20 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC6%E7%AB%A0-%E7%AC%AC10%E7%AB%A0/</guid><description>&lt;h1 id="第六章-嘤其鸣矣">
 第六章 嘤其鸣矣
 &lt;a class="anchor" href="#%e7%ac%ac%e5%85%ad%e7%ab%a0-%e5%98%a4%e5%85%b6%e9%b8%a3%e7%9f%a3">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;p>伐木丁丁，鸟鸣嘤嘤。&lt;/p>
&lt;p>出自幽谷，迁于乔木。&lt;/p>
&lt;p>嘤其鸣矣，求其友声。&lt;/p>
&lt;hr>
&lt;h2 id="一">
 一
 &lt;a class="anchor" href="#%e4%b8%80">#&lt;/a>
&lt;/h2>
&lt;p>光阴似水，渐渐到了四月，正是长沙的多雨时节，这一次一连下了三四天的雨，略略放晴，但天还是阴阴的。一师的综合大教室里，袁吉六正给六班、八班、讲习班全体学生上大课，评讲他们最近的作文。&lt;/p>
&lt;p>“第六班，蔡和森，95分。”袁吉六扬着手里蔡和森的作文本子，仿佛展览样品一般环视了教室里众学生一眼，这才笑吟吟地把作文本递给蔡和森。 “讲习班，萧子升，90分。”“第八班，刘俊卿，85分。”……&lt;/p>
&lt;p>接过作文本，不甘屈居人后的刘俊卿，脸色阴得像下暴雨前的天色。他瞄了蔡和森一眼，这一瞄，不是普通的瞄，而是带了钩子的，想要剜出什么来的样子。&lt;/p>
&lt;p>“第八班，毛泽东，”袁吉六又拿起了一个本子，声音却一下子沉了下来，“70分。”&lt;/p>
&lt;p>蔡和森、萧子升、萧三等人都吃了一惊，毛泽东也不禁一愣。他望着台上，正碰到袁吉六斜了自己一眼，然后硬冷冷地说：“锋芒太甚，须重含蓄！”本子被“砰”的扔在毛泽东的桌上，70分的分数旁边，果然是鲜红的评语“锋芒太甚，须重含蓄”。望着这八字评语，毛泽东显然有些摸不着头脑。&lt;/p>
&lt;p>下课后，欧式教学楼又热闹起来。川流的学生中，方维夏叫住了刘俊卿，说：“上次你不是说，想借讲习科萧子升同学的入学作文，学习他的书法吗？”说着，将一叠文章递了过来：“这是他补考的作文，还有他最近的两篇国文课作业，我都帮你借过来了。看完了，你直接还给他就可以了。”&lt;/p>
&lt;p>望着方维夏离去的背影，刘俊卿捏住那本作文，阴沉着脸，走回寝室。他伸手刚要推门，门却正好从里面被拉开，一个足球迎面飞出，随即毛泽东光着膀子，与周世钊他们冲了出来。&lt;/p>
&lt;p>“刘俊卿，”毛泽东看看侧着身子生怕被球碰到的刘俊卿，一边颠着足球一边招呼他，“走，踢足球去？”&lt;/p>
&lt;p>“不了，你们去吧。”刘俊卿说着，换了一副笑脸。&lt;/p>
&lt;p>“你也要动一动嘛。哎呀，随便你了。”毛泽东也不再勉强他，与周世钊等同学边传着球边往操场跑去。&lt;/p>
&lt;p>刘俊卿保持着笑容，走进了寝室。几乎在门关上的同时，他脸上的笑容一扫而光。看看手里萧子升的那本作文，再看看毛泽东的床位，他发泄似的将作文本扔到了桌上。他在自己床沿坐下，满寝室漫无目的地张望着，想这次的作文。想着看着，看着想着，猛然间，他的目光被子鹏鲜亮的床铺吸引住了。不由自主地，刘俊卿走到了子鹏床前，他有些忐忑地撩开蚊帐，窥视着里面的一切：崭新的、高档的、齐全的……总之是他刘俊卿没有见过却梦寐以求的，他把手伸了出来，却又有些心虚地望了望紧闭的门口，但最终还是抵抗不了诱惑，他在子鹏的床上坐了下来，怯生生地抚过绣花床单，抚过缎面被子，抚过柔软的枕头……他打开了一瓶雪花膏，闻了闻，又赶紧盖上，仿佛意识到了这一切并不属于自己，他有些慌乱地站起，放下了蚊帐。但地上那双擦得雪亮的皮鞋却令他怎么也无法迈开脚步，他看了看门口，咽了口唾沫，把手伸了过去……&lt;/p>
&lt;p>门突然开了，走进来的竟是子鹏！正在系着皮鞋鞋带的刘俊卿顿时愣在了那儿，脸一下子涨得通红，边手忙脚乱地脱鞋，边喃喃地说：“子鹏兄，你回来了？”&lt;/p>
&lt;p>子鹏看到刘俊卿的样子，一时间弄不明白他到底想做什么，愣了一下，随口说道：“没关系，你穿吧，没关系的。”&lt;/p>
&lt;p>“不是……我就是试试……试试这双和我那双是不是一样大小。”刘俊卿涨红着脸，换上自己的布鞋，逃也似的走出两步，又回头解释：“我那双放家里了，没带过来。”&lt;/p>
&lt;p>子鹏也不计较，跟在刘俊卿后面，一起往食堂走去。&lt;/p>
&lt;p>热闹喧天的一师食堂里，墙上的小黑板挂着菜谱——南瓜、茄子、包菜……都是些简单的素菜。学生们拿着各式各样的大碗，排着长长的队伍。终于排到他们了，子鹏和刘俊卿端着盛满饭菜的碗，找了个位子坐了下来。刘俊卿看见子鹏对着面前的茄子米饭，没有动筷子的意思，以为他在想刚才的事情，有些难为情。子鹏不想让同学难堪，解释说他不太习惯吃学校的饭菜，已经另外叫了点心。&lt;/p>
&lt;p>刘俊卿这才把心放回肚子里，低头吃饭，假装不经意地问：“哎，子鹏，问你个事，你那双皮鞋是在哪间店买的？要多少钱啊？”&lt;/p>
&lt;p>“南门口的大昌。也就七八块钱吧，怎么了？”&lt;/p>
&lt;p>“哦，没什么，我看看跟我那双是不是一家店的，我那双放家里了。”刘俊卿这时候说起谎来，已经脸不红心不跳了。&lt;/p>
&lt;p>这时候，一名跑堂的把子鹏的点心送来了。子鹏给了钱，跑堂要把零头还给他，子鹏手一挥，懒懒地说：“不用了，你留着吧。”跑堂满脸堆笑，说着感激的话走了。子鹏推开饭碗，吃起点心来，那些点心的样子很精美，可以想像，味道也一定很好。看看子鹏吃的，再看自己碗里的饭菜，刘俊卿顿时感到口里的食物有些难以下咽了。&lt;/p>
&lt;p>子鹏留意到了他的神情，赶紧把点心挪了过来，请他一起吃。&lt;/p>
&lt;p>刘俊卿客气了几句，还是没能抵抗住美食的诱惑，但又好面子地说：“那，下次我请你。”&lt;/p>
&lt;p>从食堂出来，刘俊卿直接出了学校，正要转弯，却看到父亲的臭豆腐摊子摆在对面的街角。他走过去，左右飞快地瞟了一眼，压低了声音说：“爸，你怎么又把摊子摆到这儿来了？南门口那边摆得好好的，怎么我一进一师，你就非天天摆到校门口来？”&lt;/p>
&lt;p>“俊卿啊，哦，我这就走，这就搬到南门口去。”看着儿子，刘三爹满脸歉然，赶紧收拾摊子。&lt;/p>
&lt;p>“爸，不是……我那个……我有件事……”犹豫了一会儿，刘俊卿终于还是开了口，“爸，你……你有钱吗？”&lt;/p>
&lt;p>刘三爹最怕听见的就是这句话，但他还是把秀秀的工钱全部拿出来给了儿子。&lt;/p>
&lt;p>刘俊卿揣着钱，飞快地跑到南门口的大昌鞋店，他看到中央柜台里，展示着一行皮鞋，当中最亮的一双与子鹏那双正好完全一样。&lt;/p>
&lt;p>看到刘俊卿的目光落在了那双皮鞋上，擅长察言观色的伙计忙凑过来说：“识货！瞧瞧，这位少爷就是识货。这是上海新款，英国老板的鞋厂做的，全省城的少爷都抢着买呢。要不，您拿双试试？”&lt;/p>
&lt;p>刘俊卿努力端着矜持，微一点头：“那就试试吧。”&lt;/p>
&lt;p>“好嘞。”伙计边拿鞋边冲旁边的小学徒，“给少爷上茶。”&lt;/p>
&lt;p>试好了鞋，伙计接过刘俊卿递来的一叠银元，忙不迭地收拾起刘俊卿换下来的布鞋，装进皮鞋盒：“多谢少爷。换下来的鞋，我叫人给您送府上去？”&lt;/p>
&lt;p>“不必了，我自己拿就可以了。”刘俊卿赶紧回绝，他的家哪里称得上是府呢？但接过鞋盒，他却站着没动。伙计问：“少爷，还有事啊？”&lt;/p>
&lt;p>“那个……”刘俊卿憋了一下，这才说，“好像还要找钱吧？”&lt;/p>
&lt;p>“哎哟，您瞧我这记性！”伙计抬手给了自己一巴掌，“对不起，对不起，忘了忘了。”他赶紧找出几枚铜元和一枚铜板递了过去。刘俊卿接过钱，犹豫了一下，又把那一枚铜板放回到伙计手中。学着子鹏的样子，他尽量自然地一挥手，说：“这是赏你的。”&lt;/p>
&lt;p>迈着方步，刘俊卿穿着崭新的皮鞋跨出了鞋店。店内，打量着手里那枚轻飘飘的铜板，伙计职业化的笑容一扫而空，瘪着嘴随手把铜板扔给一旁的小学徒，不屑地说：“去，什么他妈破少爷，伺候了半天，就他妈一个铜子！给，归你了！”&lt;/p>
&lt;p>一道闪电，划过乌云翻滚的天空，轰然一声，惊雷骤起，大雨滂沱。刘俊卿穿着崭新的皮鞋踏过雨点四溅的街道，顶着雨飞跑到一间茶叶店的屋檐下。大雨倾盆，雨点打在地上，水滴不断溅到他崭新的皮鞋上，他有些心痛，想了想，蹲下，准备解开鞋带把新皮鞋换下来。恰在这时，赵一贞背着书包，顶着雨，顺着屋檐跑了过来。刘俊卿突然蹲下，挡住了她的路，两个人一下子险些撞上，都吓了一跳。&lt;/p>
&lt;p>“哟，对不起。”刘俊卿赶紧站起，就在这一刹那间，他的心怦然而动，眼前明亮如彩虹高挂，那是湿淋淋的赵一贞，清秀而水灵。一贞读出了刘俊卿眼里的炽热，娇羞地躲开了刘俊卿的目光。&lt;/p>
&lt;p>店里的赵老板看见了女儿，叫道：“一贞，还不快回来？哎呀呀，你看看你这一身水，快擦擦，快擦擦。”一贞进了屋接过毛巾后，他又把一张货单递给一贞，说：“我先进去吃饭了，你看着店。这上面的几样货，都是客人订好了的，下午就会来拿，你赶紧包一下。弄漂亮点啊，人家要送礼的。”&lt;/p>
&lt;p>赵老板走后，一贞对着货单，收拾着包装茶叶的东西。几个竹编礼品盒放在货架最上面，一贞搬来凳子，脱鞋站上去，尽量伸手够着。她的脚用力踮起，打湿的衣裙贴着努力伸展的身体，露出了雪白的小腿，把屋檐下的刘俊卿看得都痴了。似乎是感觉到了某种异样，一贞一侧头，正碰上了刘俊卿痴痴的目光，慌乱中，哗啦一声，货架顶上的礼品茶叶盒摔了一地！&lt;/p>
&lt;p>“怎么回事？”里屋的布帘一掀，赵老板端着饭碗冲了出来，一看，火气腾地上来了，把饭碗往柜台上“砰”地一搁，对着女儿骂道，“你搞什么名堂？一点小事都做不好！这盒子一个多少钱你知不知道？”&lt;/p>
&lt;p>“养你吃，养你穿，供你念书还不够，还一回家就摔东西！你以为这点小生意供你供得容易啊？”女儿已经在道歉了，赵老板还是不依不饶，端起饭碗，吼了一声，“还不赶紧收拾？”&lt;/p>
&lt;p>赵老板重新进了屋后，一贞忍着眼泪，默默地收拾着地上的礼品盒。刘俊卿捡起掉在店门口的盒子，递到她面前。迎着刘俊卿满是安慰与同情的目光，一贞接过盒子，慌乱地低下了头，怯怯地招呼他进来躲雨。刘俊卿喜出望外地退进店里，坐在一贞递过来的凳子上。一贞躲开了刘俊卿的目光，背着他包扎茶叶礼品盒。刘俊卿的目光，却始终没有离开过一贞灵巧的双手。&lt;/p>
&lt;p>赵老板出来换赵一贞进去吃饭。赵一贞的身影已经看不见了，刘俊卿的目光还停留在通往里间的晃悠悠的门帘上。直到赵老板挡住了他的视线，提醒他说雨停了，他才起身不好意思地告辞。&lt;/p>
&lt;h2 id="二">
 二
 &lt;a class="anchor" href="#%e4%ba%8c">#&lt;/a>
&lt;/h2>
&lt;p>“毛泽东。”捧着大堆信件和报纸的校役叫住了正趿着一双破布鞋，端着饭碗边走边吃的毛泽东，“你的报纸，还有你的一封信。”&lt;/p>
&lt;p>毛泽东接过校役递来的报纸和信，看到信封上是毛泽民那稚嫩的字体，落款却标着“母字”，一看就知道是母亲口述、弟弟抄写的，忙把饭碗随手往旁边的窗台上一放，赶紧拆开信读起来：“三伢子，收到你的信，晓得你考了个好学堂，碰上了好先生，妈妈真是好高兴……你爹爹白天还硬起脸，不肯看你的信，其实晚上一个人偷偷起来躲着看，还生怕被我看见了……你在学堂里要好好念书，不要记挂家里，家里爹爹、妈妈、弟弟、妹妹都好……读书辛苦，要注意身体。有什么难处就写信回来，妈妈给你想办法。没有时间，就不要想着回来看我，妈妈不要你看，只要你把书读好，就是对妈妈最大的孝顺……”&lt;/p>
&lt;p>缓缓地收起家信，毛泽东将信放进了贴身的口袋，拿起报纸和饭碗，刚一转身，却发现杨昌济与黎锦熙正站在他面前。两位老师打量着他，目光都落在了他那双打眼的破布鞋上。&lt;/p>
&lt;p>黎锦熙笑道：“润之，报纸呢，是越订越多，这双鞋呢上个月就说换，怎么到现在都还没换呀？也该换换了吧？”&lt;/p>
&lt;p>毛泽东不好意思地摸了摸脑袋说： “上个月……后来忘记了。杨老师，黎老师，我先走了。”&lt;/p>
&lt;p>“等一下。”他刚走出两步，杨昌济叫住他，把一块大洋递到了他面前，说： “书要读，报要看，鞋也不能不穿吧？趁中午，赶紧去买一双。”看毛泽东站着不动，黎锦熙拉了他一下，说：“拿着吧，还讲客气？”&lt;/p>
&lt;p>接过钱，毛泽东一时也不知该说什么好。站在原地看两位老师走远了，他赶紧收拾好报纸和碗筷，跑出去买鞋。&lt;/p>
&lt;p>大昌鞋店，伙计一听毛泽东连四毛一双的布鞋都还嫌贵，满脸不乐意地抱怨：“我这儿可是大昌，不卖便宜货。再要少，路边摊上买去。”毛泽东悻悻地向店外走去，在熙熙攘攘的叫卖声中，拖着一双破布鞋走在青石板街面上。这时街边，一个妇人正叫卖着：“布鞋，上好的布鞋，一毛五一双。”毛泽东径直向鞋摊方向走去。但他的脚步却没停在鞋摊前，而抢前几步，停在了一块招牌前。那正是观止轩书店的广告牌，上面开列着一系列新书消息。“《西洋伦理史论》？”毛泽东的眼睛亮了，转身进了观止轩书店。&lt;/p>
&lt;p>书架的两边，各有一双手正从相反的方向对准了相邻的两本书：一只纤纤小手放在了《伦理学原理》上，一双粗壮的大手放在了《西洋伦理史论》上。两个人在抽出书的同时，都发现了对方，毛泽东先惊呼了一声：“哎，是你啊？”斯咏暂时却还没把毛泽东认出来，她只是有些疑惑地望着这个似曾相识的人。&lt;/p>
&lt;p>“不记得了？上次，就在这里，那本书——你后来还送给我了。”毛泽东提醒她说。“哦——对对。”斯咏打量着毛泽东，目光落在那双鞋上，“你这双鞋修修补补的还在穿啊？”&lt;/p>
&lt;p>“上次那本书我已经看完了，你看什么时候还给你？”毛泽东看了看自己的鞋，不好意思地笑笑，边翻着手里的书边问。“我不是送给你了吗，还还什么？”“还是要还喽，哪有白拿你的道理？”毛泽东不好意思地说。&lt;/p></description></item><item><title>第21章-第25章</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC21%E7%AB%A0-%E7%AC%AC25%E7%AB%A0/</link><pubDate>Wed, 08 Jan 2025 17:27:19 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC21%E7%AB%A0-%E7%AC%AC25%E7%AB%A0/</guid><description>&lt;h1 id="第二十一章-逆书大案">
 第二十一章 逆书大案
 &lt;a class="anchor" href="#%e7%ac%ac%e4%ba%8c%e5%8d%81%e4%b8%80%e7%ab%a0-%e9%80%86%e4%b9%a6%e5%a4%a7%e6%a1%88">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;p>《护国浪潮席卷全国 袁逆世凯穷途末路》、《北洋将领全线倒戈 窃国大盗众叛亲离》、《袁世凯宣布取消帝制 恢复共和》、《袁逆心腹汤芗铭仓皇逃离湖南》、《湘军元老谭延闿再度督湘》……&lt;/p>
&lt;hr>
&lt;h2 id="一">
 一
 &lt;a class="anchor" href="#%e4%b8%80">#&lt;/a>
&lt;/h2>
&lt;p>汤芗铭正要去参加拥戴洪宪皇帝登基大会，副官推门进了办公室，啪地立正，递上一份刚收到的广西、贵州通电。&lt;/p>
&lt;p>“说什么？”正展开手让卫兵扣扣子的汤芗铭显然不方便接电文，他今天穿上了肩章绶带、白旄高耸的华丽将军制服，两名卫兵正侍候着他扣上扣子，戴上雪白的手套。&lt;/p>
&lt;p>“贵州将军刘显世、广西将军陆荣廷通电全国，宣布反对帝制，支持护国军。”&lt;/p>
&lt;p>汤芗铭的手微微一震，抬手挡住了正要给他戴上帽子的卫兵。他伸手似乎是要来接那份电文，手伸到一半，却僵了一僵，又收回去了。拿起军帽，汤芗铭端正地戴上了，冷静地说：“去会场。”&lt;/p>
&lt;p>露天会场上，整齐的军乐队卖力地演奏着进行曲。鼓乐喧天中，“洪宪登基，三湘同庆”的横幅下，是披红挂彩的主席台。台下，一排排刺刀闪闪发亮、荷枪实弹的城防营士兵前后左右，几乎是包围了整个会场。刘俊卿带着几十个游动的侦缉队便衣，正监视着来自长沙各学校的数千师生入场。&lt;/p>
&lt;p>台上的欢天喜地与台下的一片冷漠、四周的如临大敌，构成了整个会场古怪的气氛。整齐的城防营士兵队列前，城防营营长张自忠穿一双锃亮的军靴正缓缓地踱着步子，冷漠地打量着眼前的一切。&lt;/p>
&lt;p>“一贞，”人丛中，刘俊卿看见了正在入场的一贞，兴奋地打着招呼， “我在当班，开完会等着我，我送你回去。”&lt;/p>
&lt;p>“哎。”一贞向他点了点头，答应着，追上了本校的队伍。&lt;/p>
&lt;p>纪墨鸿拿着白铁皮的喇叭，出现在台前：“各校注意了，庆祝大会马上开始，请各校代表速来领取洪宪大皇帝圣谕……”&lt;/p>
&lt;p>一师的队伍中，张昆弟悄悄接过了毛泽东递来的两卷红绸，与罗学瓒等人站了起来。&lt;/p>
&lt;p>看看主席台，张自忠随口往地上吐了口唾沫。&lt;/p>
&lt;p>主席台的一侧，成堆贴着“洪宪圣谕”标签的书箱堆放着，侦缉队的便衣正在纪墨鸿的指挥下向各学校领书的代表发放“圣谕”。书堆旁边，摆着两大捆鞭炮，和两卷卷好的红绸。靠着罗学瓒等人的身体掩护，张昆弟悄悄挨了过去，背着身子，取出了自己怀里暗藏的两卷红绸，调换了原来的两卷红绸。&lt;/p>
&lt;p>“让开让开。”两名便衣排开领书的人挤了过来，扒开张昆弟，一个抱起鞭炮，一个提起了红绸卷轴。在纪墨鸿的指挥下，两捆鞭炮与红绸对联在主席台两侧升了起来。&lt;/p>
&lt;p>台下，正走回一师学生方阵的张昆弟向毛泽东使了个成功的眼色。&lt;/p>
&lt;p>一箱箱“圣谕”搬到了一个个学校的师生们面前。&lt;/p>
&lt;p>一个个负责发书的老师带着压不住的厌恶和无奈，打开了一箱箱书，里面都是装得整整齐齐的《洪宪大皇帝圣谕》。&lt;/p>
&lt;p>一师学生方阵前，负责发书的陈章甫也打开了一箱书。&lt;/p>
&lt;p>“第六班、第七班……”他带着厌恶的神情，机械地取出成捆的书发给各班领书的代表。&lt;/p>
&lt;p>“第八班。”陈章甫又提起一捆书，正要交给来领书的周世钊和毛泽东，这捆书却没捆牢，哗啦散了一地&lt;/p>
&lt;p>陈章甫愣住了，散在地上的书，除了最上面一本“圣谕”，下面的居然全变成了《梁启超等先生论时局的主张》。&lt;/p>
&lt;p>看看他发愣的样子，毛泽东催促道：“章甫兄，发呀！”&lt;/p>
&lt;p>“发，继续发！第九班的谁来领？”陈章甫突然回过神来，懒洋洋的声音变得精神十足，拿书的动作也干净利落起来。&lt;/p>
&lt;p>一捆捆书打开了、一个个发书的老师都露出了惊讶的神情、一本本《梁启超等先生论时局的主张》传到了不同的学校、不同的学生手里，一张张意外、惊诧的脸很快都转成了兴奋，一个个发书的老师、学生都突然来了精神，游动监视的侦缉队便衣们看见这前后巨大的变化，都有些糊涂了。&lt;/p>
&lt;p>主席台上一阵骚动，原来是文武官员、各界代表们簇拥着汤芗铭到会了。汤芗铭殷勤地给陶会长抽出了椅子：“陶翁，今天可就辛苦你了。”似乎是想回应一个笑容，陶会长脸上却实在是掩饰不住的苦涩。&lt;/p>
&lt;p>台下的会场，嘈杂声却越来越大，人群兴奋，一片嗡嗡之声。台上的官员都有些糊涂了。汤芗铭也不由得皱起了眉头。副官看了一眼他的表情，连忙跑下台去。汤芗铭随即换上了笑脸，一手如往常一样轻松地把玩着玉手串：“陶翁，我看，可以开始了吧？”&lt;/p>
&lt;p>陶会长答应着站起身来，动作却犹犹豫豫，仿佛就要上刑场一样。&lt;/p>
&lt;p>台下一片混乱中，学生们的声音越来越大，到处是兴奋莫名的表情，几乎所有的人都在迫不及待地打开手里的书。刘俊卿奇怪地皱紧了眉头。他突然走上前去，拦住了一个正在发书的老师，抢过一本书来——他不由得呆住了，猛地把箱子里剩下的书往地上一倒，他一阵乱翻：所有的书都是《梁启超等先生论时局的主张》！&lt;/p>
&lt;p>副官正好跑到他面前，问他会场的秩序为什么这么乱，在学生的嘈杂声中，刘俊卿把书递到他面前。副官翻了翻书，转身往台上跑去。&lt;/p>
&lt;p>台上，陶会长终于艰难地站到了台前，开始主持大会。“拥戴……”刚说了两个字，他就觉得自己的嗓子很是干涩，使劲咳嗽了两声，这才又重新说，“拥戴洪宪皇帝登基庆祝大会，现在开始。”&lt;/p>
&lt;p>台下，两串鞭炮噼噼啪啪响了起来，与此同时，军乐队的鼓乐骤然大作。悬在鞭炮旁的对联同时放了下来。轰然一声，台下突然一片惊讶的声音，紧接着，惊讶声变成了一片笑声！台上，所有的官员们都愣住了。陶会长也被弄糊涂了，他不由得转过头来，往两边一看，放下的对联居然不是预先准备好的，而是一幅他从没见过的新联： “袁世凯千古，中华民国万岁”。纪墨鸿和大家一起在看，学者习惯，他没想那么多，只从字面分析着：“这‘袁世凯’对不起‘中华民国’呀？！”话才说完，他猛然反应过来，吓得一把捂住了自己的嘴。&lt;/p>
&lt;p>汤芗铭腾地站了起来，正要说什么，副官跑到了面前，将一本《梁启超等先生论时局的主张》双手呈送给他：“大帅，发给学生的圣谕被人换了，全部变成了这本逆书。”一手接过书，一手紧攥着那串手串，汤芗铭眼睛微微一眯四下扫视着：台下哄笑声、呼应声响成了一片，有学生正扯开嗓子喊“袁世凯对不起中华民国喽！”台两旁，长长的鞭炮还在起劲地炸着，仿佛是在给起哄嘲笑的学生们加油鼓劲。鞭炮燃到了尽头，最末那枚最大的鞭炮猛然炸响，“砰！”汤芗铭一向平和的脸色一阵发青，手骤然一紧，那串玉手串突然断了，一颗颗晶莹的珠子散落一地！他紧绷着脸，转身就走，台上的官员们也赶紧纷纷起身。&lt;/p>
&lt;p>台上，除了还忙着满地捡那串散珠子的纪墨鸿和副官，只剩了陶会长还呆呆站着。望着人群中闹得最起劲的毛泽东，再看看周南学生方阵中欢呼雀跃的斯咏、警予，他仿佛这才明白了什么，心里一下子轻松了，暗想这事情是谁带头做的呢？还没想出个头绪，更大的不安却又朝他袭来，他不敢想像，汤芗铭会如何处理这件事情。&lt;/p>
&lt;p>刘俊卿的想法却简单得多，他只想讨好汤芗铭。所以，一看到汤芗铭拂袖而去，他就立刻气急败坏地带着侦缉队的便衣们一拥而上，去抢夺那些让汤芗铭极度恼火的逆书。特务们把抢回来的书扔回书箱，其中一本落在了张自忠锃亮的军靴旁。张自忠弯腰捡起了那本书，仿佛无意识地随手翻着，转过身，悄悄把书塞进了口袋。&lt;/p>
&lt;p>人群中，赵一贞一动不动地站着，她眼前的喧嚣突然化成了一片无声的世界，只剩下了一支支挥舞的手枪、一张张特务凶恶的脸、无数双争来抢去的手、无数学生仇恨的目光……而这一切的中心，就是人群当中疯狂叫嚣着的刘俊卿。一贞的目光中，充满了恐惧和犹豫。&lt;/p>
&lt;p>成堆的书箱被搬回了侦缉队。乱成一堆的院子里，特务在一本本检查。一只未开封的书箱被撕开了，一箱子书哗啦倒在地上，“丁”的一声，一枚小小的校徽随着书跌落在地上。不等开箱的特务弯下腰，刘俊卿已经把校徽捡了起来。&lt;/p>
&lt;p>“第——一——师——范！”眯着眼睛盯着校徽，刘俊卿突然笑了，“我的老同学们，你们还真没让我猜错啊。”&lt;/p>
&lt;p>他把校徽往手心里一握，转身就往外走。迎面，一贞正站在门口。迎着一贞的目光，刘俊卿下意识地将握着校徽的手藏到了身后。&lt;/p>
&lt;p>犹豫过后的一贞，决定要用自己的办法阻止刘俊卿继续做那些让她感到恐惧的事情。她板着脸冲进队长室、冲到书架前，搬着架上的书。她的意思很明显，就是要刘俊卿马上离开这个肮脏的地方。刘俊卿明白她的意思，却在旁边说：“一贞，你这是干什么？不想让我干，也不用急着这一下吧？你这冲进来就收拾东西，我……我总还要个准备不是？”&lt;/p>
&lt;p>“准备？准备什么？准备去告密？去领赏？如果不是我正好来找你，你现在都已经到汤屠夫面前了，对不对？”&lt;/p>
&lt;p>“怎么能说是告密呢？我是管这个的，查到线索，我当然应该去报告。”&lt;/p>
&lt;p>“你还觉得当然？”&lt;/p>
&lt;p>“一贞，你听我说嘛。这个逆书案大帅非常重视，谁能破案，谁就马上连升三级。升三级啊！我知道你不想让我干这个破侦缉队长，抓住了这次机会，我不就可以不干了吗？”&lt;/p>
&lt;p>一贞望着刘俊卿，仿佛不认识眼前这个人一般：“我一直还以为，你以前做的那些事，都是被逼的，都是为了我，为了我们那份感情。今天我才知道，其实你全是为了自己，为了自己升官，为了自己发财！”&lt;/p>
&lt;p>“不是这样的……”&lt;/p>
&lt;p>“不是这样是什么样？为了升官，你连母校、过去的同学都打算出卖，你还有什么好说的？”&lt;/p>
&lt;p>“一贞！你怎么就不明白呢？我是个读书人，是个读书人啊，不找机会谋个体面的差使，难道我还真的拿把枪混一辈子吗？再说，我想换差使，也是为了好向你家求亲嘛？这回的事办完了，我进了教育司，就可以马上到你家去提亲，到时候，咱们不也风风光光……”&lt;/p>
&lt;p>“我不要这样的风光！我不要你与马疤子那样的流氓混在一起！我不要你出卖自己的同学，我不要你再干这些伤天害理的事！”眼泪蓦然滑出了一贞的眼眶，她颤抖着手，擦了一把泪，“俊卿，你知道吗？以前你干侦缉队，我还并没有觉得什么，我只当成那是你的差事，一个饭碗而已。可今天，我亲眼看到了，我看到你像疯了一样，带着那些特务抢学生的书，周围是那么多学生，那么多反抗，那么多人跟你们作对，那么多仇恨你们的眼睛，我当时好害怕，我真的好害怕呀！”流着泪，她一把抓住了刘俊卿的手：“俊卿，一个人，不能那么遭人恨，不能跟那么多人作对，不能啊！那么多双眼睛，那样仇恨地看着一个人，这个人一定不会有好下场，一定会有报应的，俊卿！我不想你遭报应，我不想啊！”&lt;/p>
&lt;p>刘俊卿呆住了。&lt;/p>
&lt;p>“答应我，俊卿，不要再干了，我不求你升官发财，我只要你平平安安，不再遭人恨，不再有那么多恨不得杀了你的眼睛盯着你，我就放心了。俊卿，你答应我呀！”&lt;/p>
&lt;p>望着一贞迫切的目光，刘俊卿轻轻为她擦去了眼泪，终于点了点头：“我答应你。”&lt;/p>
&lt;p>“你不会去告发了？”&lt;/p>
&lt;p>刘俊卿摇了摇头。&lt;/p>
&lt;p>“这个队长你也愿意辞掉？”&lt;/p>
&lt;p>刘俊卿点了点头。&lt;/p>
&lt;p>一贞盯着刘俊卿的眼睛：“你向我保证，你不会骗我。”&lt;/p>
&lt;p>“我保证，我保证可以了吧？”刘俊卿将一贞送出门来，“一贞，我还在当班，就不送你了。”&lt;/p>
&lt;p>刘俊卿望着一贞的背影消失在街拐角，久久地站立着，掏出口袋里那枚校徽，他犹豫着，总算下了决心，将校徽扔进了墙角。他转身走向办公室，刚走出几步，却又站住了。墙角里，那枚校徽映着阳光，闪闪发亮，亮得是那么充满诱惑。&lt;/p></description></item><item><title>第26章-第29章</title><link>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC26%E7%AB%A0-%E7%AC%AC29%E7%AB%A0/</link><pubDate>Wed, 08 Jan 2025 17:27:18 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E6%81%B0%E5%90%8C%E5%AD%A6%E5%B0%91%E5%B9%B4/%E7%AC%AC26%E7%AB%A0-%E7%AC%AC29%E7%AB%A0/</guid><description>&lt;h1 id="第二十六章-汗漫九垓">
 第二十六章 汗漫九垓
 &lt;a class="anchor" href="#%e7%ac%ac%e4%ba%8c%e5%8d%81%e5%85%ad%e7%ab%a0-%e6%b1%97%e6%bc%ab%e4%b9%9d%e5%9e%93">#&lt;/a>
&lt;/h1>
&lt;hr>
&lt;p>欲从天下万物而学之，正当汗漫九垓，&lt;/p>
&lt;p>历游四宇，读无字之大书，方得真谛！&lt;/p>
&lt;p>览山川之胜，养大道于胸，以游为学。&lt;/p>
&lt;hr>
&lt;h2 id="一">
 一
 &lt;a class="anchor" href="#%e4%b8%80">#&lt;/a>
&lt;/h2>
&lt;p>1917年的暑假到了，萧三回了老家，子升一个人待在楚怡小学自己的房间里正看书，毛泽东却拿着一张报纸进了门。&lt;/p>
&lt;p>他把那张《民报》摆在子升面前，手指敲打着一则报道的标题：“《两学生徒步漫游中国》，看看人家，一分钱不带，一双光脚杆，走遍全国，一直走到了西藏边境的打箭炉，厉害吧？”&lt;/p>
&lt;p>子升读着报道，不禁露出了佩服之色：“还真是的啊！嗯，值得佩服。”&lt;/p>
&lt;p>“莫光只顾得佩服喽，见贤要思齐嘛！人家走得，我们为什么走不得？当年太史公不是周游名山大川，遍访野叟隐老，哪来的煌煌《史记》？所以，还是顾炎武讲得对，欲从天下万物而学之，正当汗漫九垓，历游四宇，读无字之大书，方得真谛！”&lt;/p>
&lt;p>子升不禁点了点头：“嗯，览山川之胜，养大道于胸，以游为学，是个长见识的好办法。”&lt;/p>
&lt;p>“所以啊，趁着放暑假，我们也出去游，好不好？”&lt;/p>
&lt;p>“一个暑假，走不了那么远吧？”&lt;/p>
&lt;p>“远的去不了，我们去近的，中国游不完，我们游湖南嘛。我跟你讲啊，我都想好了，要学，我们就学个作古正经，跟他们一样，不准带一分钱，凭自己的本事，走多远算多远。”&lt;/p>
&lt;p>“那不成了讨饭当叫花子？”&lt;/p>
&lt;p>“讨饭怎么了？一不偷二不抢，讨得到也是你的本事，锻炼生存能力嘛。话又讲回来，你我总还读过几本书，写得几个字，两个读书人，未必还真的饿死在外面？那还不如一头撞死算了。”&lt;/p>
&lt;p>子升犹豫着。&lt;/p>
&lt;p>毛泽东激将他：“怎么，不敢去啊？”&lt;/p>
&lt;p>“游就游！谁怕谁啊？我就不信我会比你先饿死。干脆，叫上蔡和森，三个一起去。”&lt;/p>
&lt;p>“老蔡就算了，人家就靠暑假做事赚点钱，莫害得人家下个学期过不下去。你要是拿定了主意，我们明天就出发，好不好？”&lt;/p>
&lt;p>“好，我就陪你去当这回叫花子，一起走遍湖南！”&lt;/p>
&lt;p>第二天，俩人收拾停当准备开拔了，临出门才发现：准备还是不充分，子升与往常一样，一身笔挺的长衫，脚下布鞋整洁，上过油的头发一丝不苟，手里是结实的大皮箱；毛泽东却一身旧得不能再旧、还打了补丁的白色短布褂，一个瘪瘪的布包袱挑在油纸伞柄上，脚上穿着一双草鞋。&lt;/p>
&lt;p>毛泽东看着子升，大笑：“哈，你这是去走亲戚啊，还是去拜岳父老子？”&lt;/p>
&lt;p>子升看看毛泽东，再看看自己，也笑了：的确，自己这哪是去“叫花讨饭”呀，赶紧重新换上一身旧短布褂和草鞋，找了个师傅把头发理成极短的平头，背着油纸伞和简单的蓝布包袱。等他打扮得和毛泽东一样时，两人这才开始他们的正式行程。&lt;/p>
&lt;p>到了江边，正有船要离岸，毛泽东一拉子升：“走。上船喽，不坐船怎么过江？你又不肯游泳。”&lt;/p>
&lt;p>子升看了看船，说：“这是私人的渡船，要钱的，还是多走几里路，到那边搭免费的官渡吧。”&lt;/p>
&lt;p>“搭免费的船算什么本事？我们出来干什么，锻炼生存能力嘛，当然要舍易求难，怎么难搞就怎么搞。他的船要钱，我偏要不花钱去坐坐，那才是叫花子的搞法嘛。”看看子升还在犹豫，毛泽东拉起子升就走，“走喽，你还怕他把你丢到江里去啊？”&lt;/p>
&lt;p>江水如蓝，船篙轻点，渡船平稳地行驶在江心。“口当啷啷”，乘客们依次将铜板投进了收钱的小工手中的那面破铜锣里。挤在二十来个乘客当中，子升被越来越近的收钱声逼得忐忑不安。身边的毛泽东却大大咧咧，昂头打量着浩浩江水。铜锣伸到了二人面前，帮工等了一下，没见二人有反应：“哎，交钱啦！”&lt;/p>
&lt;p>子升瞄了毛泽东一眼，毛泽东仰着脸看着帮工，说：“对不起，没带钱。”&lt;/p>
&lt;p>“没带钱？”帮工眼睛瞪了起来，“没钱你坐什么船？”&lt;/p>
&lt;p>毛泽东笑嘻嘻地说：“那我坐都坐了，怎么办呢？”&lt;/p>
&lt;p>撑船的船夫火了：“嗨，没钱坐船你还坐出道理来了？我跟你讲，一人两个铜板，赶紧交钱！”&lt;/p>
&lt;p>毛泽东继续笑嘻嘻：“老板，我们两个是叫花子，半个铜板都没有，你就行个好，送我们过去算了嘛。”&lt;/p>
&lt;p>“我凭什么白送你们？没钱啊，”船夫看了看他们身上，说“没钱用雨伞顶！”&lt;/p>
&lt;p>“你就想得好啦，一把雨伞四毛钱，你船钱才两分，用雨伞顶，你也想得出！”&lt;/p>
&lt;p>子升有些不好意思了，劝毛泽东：“算了润之，要不，就给他这把雨伞？”&lt;/p>
&lt;p>“开什么玩笑？下雨怎么办，你不打伞啊？你愿意给，我还不愿意亏这个本呢！”&lt;/p>
&lt;p>船夫一听毛泽东这样说，脾气一下子上来了：“哎呀，你这个家伙是存心坐我的霸王船啊？！小五子，把船撑回去，让他们两个下去！”&lt;/p>
&lt;p>他真的调转船篙，要把船往回撑。船上的其他乘客顿时急了，纷纷嚷了起来：“哎哎哎，怎么回事，怎么往回开？我们怎么办？不行不行，我还有急事。”&lt;/p>
&lt;p>毛泽东乘机说：“看到了吧看到了吧？这里还有一船人，你不顾我们也要顾大家嘛。再说了，这船都走了一半了，你往回撑，湘江上又不是只你一条船，那边的生意不都让其他的船抢走了？为了个几文钱，划不来喽！”&lt;/p>
&lt;p>子升也帮着腔：“是啊，老板，你就当做回好事吧！”&lt;/p>
&lt;p>毛泽东：“你要是还想不通，我来帮你撑船，就当顶我们两个的船钱，这总可以了吧？”&lt;/p>
&lt;p>看看满船的人，再看看身后远远的江岸，船夫没辙了：“碰上你们这种人，算我倒霉！”&lt;/p>
&lt;h2 id="二">
 二
 &lt;a class="anchor" href="#%e4%ba%8c">#&lt;/a>
&lt;/h2>
&lt;p>下了船，走在乡间的小路上，回味着刚才坐船的经过，毛泽东开心的笑声把林间的小鸟都吓得四处乱飞。&lt;/p>
&lt;p>子升白了他一眼：“坐人家的霸王船，你还觉得蛮光彩啊？”&lt;/p>
&lt;p>“我们是叫花子，有什么光彩不光彩？再说了，他的船反正是过江，多我们两个不多，少我们两个不少，总共四文钱，他还发得财到？”&lt;/p>
&lt;p>“我看啊，你不是舍不得出钱，你是天生喜欢跟人对着干。”&lt;/p>
&lt;p>“这句话你还真讲对了。他不是犟吗？我比他还犟，看谁犟得过谁？人嘛，什么事都顺着来，那还活个什么劲？哎，这方面，上个礼拜我还在日记里头专门总结了三句话，叫作‘与天奋斗，其乐无穷；与地奋斗，其乐无穷；与人奋斗，其乐无穷’。”&lt;/p>
&lt;p>山野宁静，树影斑驳，毛泽东的声音在山冲里响起一阵回声。&lt;/p>
&lt;p>子升当然不赞成毛泽东这样说，反驳道：“你这种话不对！人，应该是一个世界和谐的组成部分，人与自然，应该和谐，人与人，更应该以和谐互补为目标，君子周而不比嘛，怎么能以互斗为乐呢？”&lt;/p>
&lt;p>“达尔文怎么说的？优胜劣汰！你说的清静无为，躲到山里当道士可以，在这个世上，它就行不通！”&lt;/p>
&lt;p>“反正我相信这个世界只有和谐才能发展，那些不和谐的互斗与纷争，终归没有前途。”&lt;/p>
&lt;p>“事实胜于雄辩，事实证明我斗赢了嘛，你还有什么话说？”&lt;/p>
&lt;p>“好好好，我不跟你争。”&lt;/p>
&lt;p>这天傍晚，两人便露宿江边。江水潺潺，一轮圆月亮如银盘，镶嵌在暗蓝暗蓝的夜空。月光映照下，宁静的夜空是那样纯净无瑕，那样深邃无边，仿佛要将一切人、一切事、一切烦忧融化在其中……&lt;/p>
&lt;p>“前不见古人，后不见来者。念天地之悠悠，独怆然而涕下。”子升枕着双手，躺在毛泽东身边，遥对夜空，吟起了陈子昂的诗。&lt;/p>
&lt;p>毛泽东最不耐烦子升来这一手，抗议道：“莫动不动就涕下涕下喽，清风明月，水秀山青，哪那么多眼泪鼻涕？”&lt;/p>
&lt;p>“那你想起什么？”&lt;/p>
&lt;p>“我想起啊？‘明月几时有，把酒问青天。不知天上宫阙，今夕是何年？’”&lt;/p>
&lt;p>“怎么，想当神仙了？”&lt;/p>
&lt;p>“神仙是修不成器了，不过，对着这么好的月亮，还真是想飞上去看看。看不到嫦娥，也可以看看吴刚砍桂花树嘛！”&lt;/p>
&lt;p>“那我宁愿看嫦娥。”子升突然转过了身子，撑着脑袋，问毛泽东，“哎，你说，我们在这儿看月亮，有没有人也在看着月亮想起我们？”&lt;/p>
&lt;p>毛泽东会心一笑：“谁会吃饱了没事，想你想我？不过，也难说，杨老师肯定会想我们的，我们到了前面镇子，给他寄封信吧？”&lt;/p></description></item><item><title>附录</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E9%99%84%E5%BD%95/</link><pubDate>Tue, 07 Jan 2025 10:48:46 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E9%99%84%E5%BD%95/</guid><description>&lt;h1 id="附录一-建议阅读书目">
 附录一 建议阅读书目
 &lt;a class="anchor" href="#%e9%99%84%e5%bd%95%e4%b8%80-%e5%bb%ba%e8%ae%ae%e9%98%85%e8%af%bb%e4%b9%a6%e7%9b%ae">#&lt;/a>
&lt;/h1>
&lt;p>下面所列举的书单，都是值得你花时间一读的书。我们说“值得你花时间”是很认真的。虽然这些书并不全都是一般人所认为的那种“伟大”，但只要你肯花时间努力，你就能得到回馈。所有这些书都超越了大多数的水平——超出许多。因而这些书会强迫大部分读者作心智上的成长，以了解并欣赏这样的书。当然，如果你想要增进自己的阅读技巧，这样的书就是你该找的书，同时你也会发现在我们文化传统中有过，哪些伟大的思想与说法。&lt;/p>
&lt;p>就我们在上一章所谈的特殊意义而言有些书特别了不起。每次你重读，都会发现许多新的想法。这些书是可以一读再读，永不会厌倦的。换句话说，这些书——我们不会正确地指出有多少这样的书，也不会指出是哪些书，因为这是由个人判断的——超越过所有读者的水平，就算最有技巧的读者也不能超越这样的书。我们在上一章说过，这些作品就是每个人都该特别努力去研读的书。这些书是真正的伟大作品，任何一个人要去荒岛，都该带着这些书一起去。&lt;/p>
&lt;p>这个书单很长，看起来有点难以消受。我们鼓励你不要因为这个书单而觉得为难。一开始，你可能会先要辨识大部分的作者是谁。这里面没什么是一般人难以了解，因而就该冷僻的道理。最重要的是，我们要提醒你，不论基于什么理由，最聪明的做法都是从你最感兴趣的书开始读。我们已经说过许多次，主要的目标是要读得好，而不是要读得广。如果一年当中你读不了几本书，其实不必觉得失望。书单上的书并不是要你在特定时间里读完的。这也不是非要读完所有的书才算完成的挑战。相反，这是一个你可以从容接受的邀请，只要你觉得很自在，任何时候都可以开始。&lt;/p>
&lt;p>作者名单是按时间前后顺序排出来的，以他们确实或大约的出生时期为准。一位作者有很多本书时，也是尽可能按作品时间顺序排列的。学者们对每一本书的最早出版时间可能不见得有一致的看法，但这对你来说没什么影响。要记得的重点是：这个书单就像是一个时代的演进表，当然，你用不着依时间先后的顺序来读。你甚至可以从最近出版的一本书来读，再回溯到荷马及《旧约》。&lt;/p>
&lt;p>我们并没有把每一位作者所有的书都列出来。通常我们都只挑选比较重要的作品，以论说性作品而言，我们挑选的根据是尽可能表现一位作者在不同学习领域里作了哪些贡献。在另外一些例子中，我们会列举一位作者的几部作品，然后把其中特别重要又有用的书用括号标示出来。&lt;/p>
&lt;p>要拟这份书单，最困难的总是跟当代作品有关的部分。作者越接近我们的年代，越难作很公正的评断。时间能证明一切是句好话，但我们不想等那么久。因此对现代的作者或作品，我们预留了一些不同观点的空间，因此在我们书单比较后面部分的书，我们不敢说前面那些书公认的地位。&lt;/p>
&lt;p>对前面部分的书，可能也有人有些不同的观点，因为我们没有列入某些作品，可能会认为我们在挑选时有偏见。在某些例子中，我们承认自己是有些偏见。这是我们开的书单，自然会跟别人开的书单有点不同。不过如果任何人想要认真地研拟一份值得一生阅读的好书书单，以增进阅读能力的话，其间的差别应该不会太大才对。当然，最后你还是要自己拟出一份书单，然后全力以赴。无论如何，在你列出自己的书单之前，先看一份被一致公认为好书的书单，是很聪明的做法。这份书单是一个可以开始的地方。&lt;/p>
&lt;p>我们还要提出一个疏漏之处，这可能会让一些不幸的读者觉得很受打击。这份书单只列出了西方的作品，不包括中国、日本或印度的作品。我们这么做有几个理由。其中一个是我们对西方传统文化以外的文化并不十分在行，我们建议的书单也不会有什么分量。另一个原因是东方并不像西方这样是单一的传统，我们必须要明白所有的东方文化传统之后，才能将这份书单拟好。而很少有学者能对所有的东方文化都有深刻的了解。第三，在你想要了解其他世界的文化之前，应该要先了解自己的文化。现代有许多人试着要读《易经》或《薄伽梵歌》（Bhagavad-Gita），都觉得很困难，不只是因为这样的书本身就很难懂，也因为他们并没有先利用自己文化中比较容易理解的书——他们比较容易接近的书把阅读技巧练习好。&lt;/p>
&lt;p>还有另外一个疏忽之处要提提。虽然是一份书单，其中主要以抒情诗诗人为人熟知的作者却没几位。当然，书单中另外有些作者也写抒情诗，但他们较为人知的是一些较长的其他著作。这方面不该当作是我们对抒情诗有偏见。读诗，我们认为从一本好的合选集开始阅读，会比从某一位作者的个人选集开始要好得多。帕尔格雷夫（Palgrave）编辑的《英诗金库》（The Golden reasury）及《牛津英诗选》（The Oxford Book of English Verse）是最好的入门书。这些老的诗选应该要有现代人做增补的工作——像塞尔登·罗德曼（Selden Rodman）的《现代诗一百首》（Owe Hundred Modern Poems），这本书用很有趣的概念，广泛收集了当代随手可得的英诗。因为阅读抒情诗需要特殊的技巧，我们也介绍了其他相关的指导书籍——像马克·范多伦的《诗歌入门》（Introduction to Poetry），是一本合选集，同时也包含了一些短论，谈到如何阅读许多有名的抒情诗。&lt;/p>
&lt;p>我们依照作者及书名将书单列出来，却没有列出出版者及特殊的版本。书单上几乎所有的书都可以在书店中找到，有许多出了不同的版本，平装或精装都有。不过，如果哪位作者或哪本作品已经收录进我们自己所编辑的两套书，那就会特别标示出来。其中出现在《西方世界的经典名著》（Great Books of the Western World）中的，打一个星号；出现在《名著入门》（Gateway to the Great Books）中的，打两个星号。&lt;/p>
&lt;p>1．Homer（9th century b．c．？）&lt;/p>
&lt;p>*Iliad&lt;/p>
&lt;p>*Odyssey&lt;/p>
&lt;p>2．The Old Testament&lt;/p>
&lt;p>3．Aeschylus（c．525-456 b．c．）&lt;/p>
&lt;p>*Tragedies&lt;/p>
&lt;p>4．Sophocles（c．495-406 b．c．）&lt;/p>
&lt;p>*Tragedies&lt;/p>
&lt;p>5．Herodotus（c．484-425 b．c．）&lt;/p>
&lt;p>*History（of the Persian Wars）&lt;/p>
&lt;p>6．Euripides（c．485-406 b．c．）&lt;/p>
&lt;p>*Tragedies&lt;/p>
&lt;p>（esp．Medea，Hippolytus，The Bacchae）&lt;/p>
&lt;p>7．Thucydides（c．460-400 b．c．）&lt;/p>
&lt;p>*History of the Peloponnesian War&lt;/p>
&lt;p>8．Hippocrates（c．460-377 b．c．）&lt;/p></description></item><item><title>简介-序言</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AE%80%E4%BB%8B-%E5%BA%8F%E8%A8%80/</link><pubDate>Tue, 07 Jan 2025 10:48:45 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AE%80%E4%BB%8B-%E5%BA%8F%E8%A8%80/</guid><description>&lt;p>如何阅读一本书&lt;/p>
&lt;p>[美]莫提默·J·艾德勒 查尔斯·范多伦&lt;/p>
&lt;h2 id="作者简介">
 作者简介
 &lt;a class="anchor" href="#%e4%bd%9c%e8%80%85%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;p>莫提默·J.艾德勒（1902－2001）以学者、教育家、编辑等多重面貌享有盛名。除了写作《如何阅读一本书》外，以主编《西方世界德经典》，并担任1974年第十五版《大英百科全书》的编辑指导而闻名于世。&lt;/p>
&lt;p>查尔斯·范多伦（1926－ ）&lt;/p>
&lt;p>先曾任美国哥伦比亚大学教授。后因故离任，和艾德勒一起工作。一方面襄助艾德勒编辑《大英百科全书》，一方面将本书1940年初版内容大幅度增补改写。因此，本书1970年新版由两个人共同署名。&lt;/p>
&lt;h2 id="序言">
 序言
 &lt;a class="anchor" href="#%e5%ba%8f%e8%a8%80">#&lt;/a>
&lt;/h2>
&lt;p>《如何阅读一本书》的第一版是在1940年初出版的。很惊讶，我承认也很高兴的是，这本书立刻成为畅销书，高踞全美畅销书排行榜首有一年多时间。从1940年开始，这本书继续广泛的印刷发行，有精装本也有平装本，而且还被翻译成其他语言—法文、瑞典文、德文、西班牙文与意大利文。所以，为什么还要为目前这一代的读者再重新改写、编排呢？&lt;/p>
&lt;p>要这么做的原因，是近三十年来，我们的社会，与阅读这件事本身，都起了很大的变化。今天，完成高中教育及四年大学教育的年轻男女多了许多。尽管（或者说甚至因为）收音机及电视普及，识字的人也更多了。阅读的兴趣，有一种由小说类转移到非小说类的趋势。美国的教育人士都承认，教导年轻人阅读，以最基本的阅读概念来阅读，成了最重要的教育问题。曾经指出1970年代是阅读年代的现任健康、教育及福利部部长，提供了大笔大笔联邦政府经费，支持各式各样改进基本阅读技巧的努力，其中许多努力在启发儿童阅读的这种层次上也的确）有了些成果。此外，许多成人则着迷于速读课程亮丽的保证—增进他们阅读理解与阅读速度的保证。&lt;/p>
&lt;p>然而，过去三十年来，有些事情还是没有改变。其中一项是：要达到阅读的所有目的，就必须在阅读不同书籍的时候，运用适当的不同速度。不是所有的书都可以用最快的速度来阅读。法国学者巴斯卡(Pascal)在三百年前就说过：“读得太快或太慢，都一无所获。”现在既然速读已经形成全国性的狂热，新版的《如何阅读一本书》就针对这个问题，提出不同速度的阅读法才是解决之道。我们的目标是要读得更好，永远更好，不过，有时候要读得慢一点，有时候要读得快一点。&lt;/p>
&lt;p>很不幸的，另外有一件事也没有改变，那就是指导阅读的层次，仍然逗留在基本水平。我们教育体系里的人才、金钱与努力，大多花在小学六年的阅读指导上。超出这个范围，可以带引学生进人更高层次，需要不同阅读技巧的正式训练，则几乎少之又少。1939年，哥伦比亚大学教育学院的詹姆斯·墨塞尔(JamesMursell)教授在《大西洋月刊》上发表了一篇文章：《学校教育的失败》。现在我引述他当时所写的两段话，仍然十分贴切：&lt;/p>
&lt;p>学校是否有效地教导过学生如何阅读母语？可以说是，也可以说不是。到五六年级之前，整体来说，阅读是被有效地教导过，也学习过了。在这之前，我们发现阅读的学习曲线是稳定而普遍进步的，但是过了这一点之后，曲线就跌入死寂的水平。这不是说一个人到了六年级就达到个人学习能力的自然极限，因为证据一再显示，只要经过特殊的教导，成人及大一点的孩童，都能有显著的进步。同时，这也不表示大多数六年级学生在阅读各种实用书籍的时候，都已经有足够的理解能力。许许多多学生进入中学之后成绩很差，就是因为读不懂书中的意义。他们可以改进，他们也需要改进，但他们就不这么做。&lt;/p>
&lt;p>中学毕业的时候，学生都读过不少书了。但如果他要继续念大学，那就得还要念更多的书，不过这个时候他却很可能像是一个可怜而根本不懂得阅读的人（请注意：这里说的是一般学生，而不是受过特别娇正训练的学生）。他可以读一点简单的小说，享受一下。但是如果要他阅读结构严谨的细致作品，或是精简扼要的论文，或是需要运用严密思考的章节，他就没有办法了。举例来说，有人证明过，要一般中学生掌握一段文字的中心思想是什么，或是论述文的重点及次要重点在哪里，简直就是难上加难。不论就哪一方面来说，就算进了大学，他的阅读能力也都只会停留在小学六年级的程度。&lt;/p>
&lt;p>如果三十年前社会对《如何阅读一本书》有所需求，就像第一版所受到的欢迎的意义，那么今天就更需要这样的一本书了。但是，回应这些迫切的需求，并不是重写这本书的惟一动机，甚至也不是主要的动机。对于学习“如何阅读”这个问题的新观点；对于复杂的阅读艺术更深的理解与更完整的分析理念；对于如何弹性运用基本规则做不同形态的阅读（事实上可引伸到所有种类的读物上）；对于新发明的阅读规则；对于读书应如金字塔—基础厚实，顶端尖锐等等概念，都是三十年前我写这本书时没有适当说明，或根本没提到的概念。所有这些，都在催促我加以阐述并重新彻底改写，呈现现在所完成，也出版的这个面貌。&lt;/p>
&lt;p>《如何阅读一本书》出版一年后，出现了博君一粲的模仿书《如何阅读两本书》（How to Read Two Books），而I. A.理查兹教授(I. A. Richards)则写了一篇严肃的论文《如何阅读一页书》(How to Read aPage)。提这些后续的事，是要指出这两部作品中所提到的一些阅读的问题，无论是好笑还是严肃的问题，都在我重写的书中谈到了，尤其是针对如何阅读一系列相关的书籍，并清楚掌握其针对同一主题相互补充与冲突的问题。&lt;/p>
&lt;p>在重写《如何阅读一本书》的种种理由当中，我特别强调了阅读的艺术，也指出对这种艺术更高水准的要求。这是第一版中我们没有谈到或详细说明的部分。任何人想要知道增补了些什么，只要比较新版与原版的目录，很快就会明白。在本书的四篇之中，只有第二篇，详述“分析阅读”(Analytical Reading)规则的那一篇，与原版很相近，但事实上也经过大幅度的改写。第一篇，介绍四种不同层次的阅读—基础阅读(elementaryreading)、检视阅读(inspectional reading)、分析阅读、主题阅读(syntopical reading)是本书在编排与内容上最基本也最决定性的改变。第三篇是全书增加最多的部分，详加说明了以不同阅读方法接触不同读物之道—如何阅读实用性与理论性作品、想像的文学（抒情诗、史诗、小说、戏剧）、历史、科学与数学、社会科学与哲学，以及参考书、报章杂志，甚至广告。最后，第四篇，主题阅读的讨论，则是全新的章节。&lt;/p>
&lt;p>在重新增订这本书时，我得到查尔斯·范多伦(Charles Van Doren）的帮助。他是我在哲学研究院(Institute for Philosophical Research）多年的同事。我们一起合写过其他的书，最为人知的是1969年由大英百科全书出版公司出版的二十册《美国编年史)(Annals&lt;/p>
&lt;p>ofAmerica）。至于我们为什么要合作，共同挂名来改写本书，也许有个更相关的理由是：过去八年来，我和范多伦共同密切合作主持过许多经典著作(great books)的讨论会，以及在芝加哥、旧金山、科罗拉多州的阿斯本举行的许多研讨会。由于这些经验，我们获得了许多新观点来重写这本书。&lt;/p>
&lt;p>我很感激范多伦先生在我们合作中的贡献。对于建设性的批评与指导，他和我都想表达最深的谢意。也要谢谢我们的朋友，亚瑟·鲁宾(Arthur L.H.Rubin)的帮助—他说服我们在新版中提出许多重大的改变，使这本书得以与前一版有不同的生命，也成为我们所希望更好、更有用的一本书。&lt;/p>
&lt;p>莫提默·J·艾德勒&lt;/p>
&lt;p>1972年3月26日写于波卡格兰德(Boca Grande)&lt;/p></description></item><item><title>第一篇 阅读的层次</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AC%AC%E4%B8%80%E7%AF%87_%E9%98%85%E8%AF%BB%E7%9A%84%E5%B1%82%E6%AC%A1/</link><pubDate>Tue, 07 Jan 2025 10:48:44 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AC%AC%E4%B8%80%E7%AF%87_%E9%98%85%E8%AF%BB%E7%9A%84%E5%B1%82%E6%AC%A1/</guid><description>&lt;p>&lt;em>第一篇 阅读的层次&lt;/em>&lt;/p>
&lt;h1 id="第一章-阅读的活力与艺术">
 第一章 阅读的活力与艺术
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%80%e7%ab%a0-%e9%98%85%e8%af%bb%e7%9a%84%e6%b4%bb%e5%8a%9b%e4%b8%8e%e8%89%ba%e6%9c%af">#&lt;/a>
&lt;/h1>
&lt;p>这是一本为阅读的人，或是想要成为阅读的人而写的书。尤其是想要阅读书的人。说得更具体一点，这本书是为那些想把读书的主要目的当作是增进理解能力的人而写。&lt;/p>
&lt;p>这里所谓“阅读的人”(readers)，是指那些今天仍然习惯于从书写文字中汲取大量资讯，以增进对世界了解的人，就和过去历史上每一个深有教养、智慧的人别无二致。当然，并不是每个人都能做到这一点。即使在收音机、电视没有出现以前，许多资讯与知识也是从口传或观察而得。但是对智能很高又充满好奇心的人来说，这样是不够的。他们知道他们还得阅读，而他们也真的身体力行。&lt;/p>
&lt;p>现代的人有一种感觉，读书这件事好像已经不再像以往那样必要了。收音机，特别是电视，取代了以往由书本所提供的部分功能，就像照片取代了图画或艺术设计的部分功能一样。我们不得不承认，电视有部分的功能确实很惊人，譬如对新闻事件的影像处理，就有极大的影响力。收音机最大的特点在于当我们手边正在做某件事（譬如开车）的时候，仍然能提供我们资讯，为我们节省不少的时间。但在这中间还是有一个严肃的议题：到底这些新时代的传播媒体是否真能增进我们对自己世界的了解？&lt;/p>
&lt;p>或许我们对这个世界的了解比以前的人多了，在某种范围内，知识(knowledge)也成了理解(understanding)的先决条件。这些都是好事。但是，“知识”是否那么必然是“理解”的先决条件，可能和一般人的以为有相当差距。我们为了“理解”(understand)一件事，并不需要“知道”(know)和这件事相关的所有事情。太多的资讯就如同太少的资讯一样，都是一种对理解力的阻碍。换句话说，现代的媒体正以压倒性的泛滥资讯阻碍了我们的理解力。&lt;/p>
&lt;p>会发生这个现象的一个原因是：我们所提到的这些媒体，经过太精心的设计，使得思想形同没有需要了（虽然只是表象如此）。如何将知识分子的态度与观点包装起来，是当今最有才智的人在做的最活跃的事业之一。电视观众、收音机听众、杂志读者所面对的是一种复杂的组成—从独创的华丽辞藻到经过审慎挑选的资料与统计—目的都在让人不需要面对困难或努力，很容易就整理出“自己”的思绪。但是这些精美包装的资讯效率实在太高了，让观众、听众或读者根本用不着自己做结论。相反的，他们直接将包装过后的观点装进自己的脑海中，就像录影机愿意接受录影带一样自然。他只要按一个“倒带”的钮，就能找到他所需要的适当言论。他根本不用思考就能表现得宜。&lt;/p>
&lt;h2 id="1主动的阅读">
 1.主动的阅读
 &lt;a class="anchor" href="#1%e4%b8%bb%e5%8a%a8%e7%9a%84%e9%98%85%e8%af%bb">#&lt;/a>
&lt;/h2>
&lt;p>我们在一开始就说过，我们是针对发展阅读书的技巧而写的。但是如果你真的跟随并锻炼这些阅读的技巧，你便可以将这些技巧应用在任何印刷品的阅读上—报纸、杂志、小册子、文章、短讯，甚至广告。&lt;/p>
&lt;p>既然任何一种阅读都是一种活动，那就必须要有一些主动的活力。完全被动，就阅读不了—我们不可能在双眼停滞、头脑昏睡的状况下阅读。既然阅读有主动、被动之对比，那么我们的目标就是：第一提醒读者，阅读可以是一件多少主动的事。第二要指出的是，阅读越主动，效果越好。这个读者比另一个读者更主动一些，他在阅读世界里面的探索能力就更强一些，收获更多一些，因而也更高明一些。读者对他自己，以及自己面前的书籍，要求的越多，获得的就越多。&lt;/p>
&lt;p>虽然严格说来，不可能有完全被动阅读这回事，但还是有许多人认为，比起充满主动的写跟说，读与听完全是被动的事。写作者及演说者起码必须要花一点力气，听众或读者却什么也不必做。听众或读者被当作是一种沟通接收器，“接受”对方很卖力地在“给予”、“发送”的讯息。这种假设的谬误，在认为这种“接收”类同于被打了一拳，或得到一项遗产，或法院的判决。其实完全相反，听众或读者的“接收”，应该像是棒球赛中的捕手才对。&lt;/p>
&lt;p>捕手在接球时所发挥的主动是跟投手或打击手一样的。投手或打击手是负责“发送”的工作，他的行动概念就在让球动起来这件事上。捕手或外野手的责任是“接收”，他的行动就是要让球停下来。两者都是一种活动，只是方式有点不同。如果说有什么是被动的，就是那只球了。球是毫无感觉的，可以被投手投出去，也可以被捕手接住，完全看打球的人如何玩法。作者与读者之间的关系也很类似。写作与阅读的东西就像那只球一样，是被主动、有活力的双方所共有的，是由一方开始，另一方终结的。&lt;/p>
&lt;p>我们可以把这个类比的概念往前推。捕手的艺术就在能接住任何球的技巧—快速球、曲线球、变化球、慢速球等等。同样地，阅读的艺术也在尽可能掌握住每一种讯息的技巧。&lt;/p>
&lt;p>值得注意的是，只有当捕手与投手密切合作时，才会成功。作者与读者的关系也是如此。作者不会故意投对方接不到的球，尽管有时候看来如此。在任何案例中，成功的沟通都发生于作者想要传达给读者的讯息，刚好被读者掌握住了。作者的技巧与读者的技巧融合起来，便达到共同的终点。&lt;/p>
&lt;p>事实上，作者就很像是一位投手。有些作者完全知道如何“控球”：他们完全知道自己要传达的是什么，也精准正确地传达出去了。因此很公平地，比起一个毫无“控球”能力的“暴投”作家，他们是比较容易被读者所“接住”的。&lt;/p>
&lt;p>这个比喻有一点不恰当的是：球是一个单纯的个体，不是被完全接住，就是没接住。而一本作品，却是一个复杂的物件，可能被接受得多一点，可能少一点；从只接受到作者一点点概念到接受了整体意念，都有可能。读者想“接住”多少意念完全看他在阅读时多么主动，以及他投人不同心思来阅读的技巧如何。&lt;/p>
&lt;p>主动的阅读包含哪些条件？在这本书中我们会反复谈到这个问题。此刻我们只能说：拿同样的书给不同的人阅读，一个人却读得比另一个人好这件事，首先在于这人的阅读更主动，其次，在于他在阅读中的每一种活动都参与了更多的技巧。这两件事是息息相关的。阅读是一个复杂的活动，就跟写作一样，包含了大量不同的活动。要达成良好的阅读，这些活动都是不可或缺的。一个人越能运作这些活动，阅读的效果就越好。&lt;/p>
&lt;h2 id="2阅读的目标为获得资讯而读以及为求得理解而读">
 2.阅读的目标：为获得资讯而读，以及为求得理解而读
 &lt;a class="anchor" href="#2%e9%98%85%e8%af%bb%e7%9a%84%e7%9b%ae%e6%a0%87%e4%b8%ba%e8%8e%b7%e5%be%97%e8%b5%84%e8%ae%af%e8%80%8c%e8%af%bb%e4%bb%a5%e5%8f%8a%e4%b8%ba%e6%b1%82%e5%be%97%e7%90%86%e8%a7%a3%e8%80%8c%e8%af%bb">#&lt;/a>
&lt;/h2>
&lt;p>你有一个头脑。现在让我再假设你有一本想要读的书。这本书是某个人用文字书写的，想要与你沟通一些想法。你要能成功地阅读这本书，完全看你能接获多少作者想要传达的讯息。&lt;/p>
&lt;p>当然，这样说太简单了。因为在你的头脑与书本之间可能会产生两种关系，而不是一种。阅读的时候有两种不同的经验可以象征这两种不同的关系。&lt;/p>
&lt;p>这是书，那是你的头脑。你在阅读一页页的时候，对作者想要说的话不是很了解，就是不了解。如果很了解，你就获得了资讯（但你的理解不一定增强）。如果这本书从头到尾都是你明白的，那么这个作者跟你就是两个头脑却在同一个模子里铸造出来。这本书中的讯息只是将你还没读这本书之前，你们便共同了解的东西传达出来而已。&lt;/p>
&lt;p>让我们来谈谈第二种情况。你并不完全了解这本书。让我们假设—不幸的是并非经常如此—你对这本书的了解程度，刚好让你明白其实你并不了解这本书。你知道这本书要说的东西超过你所了解的，因此认为这本书包含了某些能增进你理解的东西。&lt;/p>
&lt;p>那你该怎么办？你可以把书拿给某个人，你认为他读得比你好的人，请他替你解释看不懂的地方。（“他”可能代表一个人，或是另一本书—导读的书或教科书。）或是你会决定，不值得为任何超越你头脑理解范围之外的书伤脑筋，你理解得已经够多了。不管是上述哪一种状况，你都不是本书所说的真正地在阅读。&lt;/p>
&lt;p>只有一种方式是真正地在阅读。没有任何外力的帮助，你就是要读这本书。你什么都没有，只凭着内心的力量，玩味着眼前的字句，慢慢地提升自己，从只有模糊的概念到更清楚地理解为止。这样的一种提升，是在阅读时的一种脑力活动，也是更高的阅读技巧。这种阅读就是让一本书向你既有的理解力做挑战。&lt;/p>
&lt;p>这样我们就可以粗略地为所谓的阅读艺术下个定义：这是一个凭借着头脑运作，除了玩味读物中的一些字句之外，不假任何外助，以一己之力来提升自我的过程。你的头脑会从粗浅的了解推进到深人的理解。而会产生这种结果的运作技巧，就是由许多不同活动所组合成的阅读的艺术。&lt;/p>
&lt;p>凭着你自己的心智活动努力阅读，从只有粗浅的了解推进到深人的体会，就像是自我的破茧而出。感觉上确实就是如此。这是最主要的作用。当然，这比你以前的阅读方式要多了很多活动，而且不只是有更多的活动，还有要完成这些多元化活动所需要的技巧。除此之外，当然，通常需要比较高难度阅读要求的读物，都有其相对应的价值，以及相对应水平的读者。&lt;/p>
&lt;p>为获得资讯而阅读，与为增进理解而阅读，其间的差异不能以道里计。我们再多谈一些。我们必须要考虑到两种阅读的目的。因为一种是读得懂的东西，另一种是必须要读的东西，二者之间的界限通常是很模糊的。在我们可以让这两种阅读目的区分开来的范围内，我们可以将“阅读”这个词，区分成两种不同的意义。&lt;/p>
&lt;p>第一种意义是我们自己在阅读报纸、杂志，或其他的东西时，凭我们的阅读技巧与聪明才智，一下子便能融会贯通了。这样的读物能增加我们‘的资讯，却不能增进我们的理解力，因为在开始阅读之前，我们的理解力就已经与他们完全相当了。否则，我们一路读下来早就应该被困住或吓住了—这是说如果我们够诚实、够敏感的话。&lt;/p>
&lt;p>第二种意义是一个人试着读某样他一开始并不怎么了解的东西。这个东西的水平就是比阅读的人高上一截。这个作者想要表达的东西，能增进阅读者的理解力。这种双方水准不齐之下的沟通，肯定是会发生的，否则，无论是透过演讲或书本，谁都永远不可能从别人身上学习到东西了。这里的“学习”指的是理解更多的事情，而不是记住更多的资讯—和你已经知道的资讯在同一水平的资讯。&lt;/p>
&lt;p>对一个知识分子来说，要从阅读中获得一些和他原先熟知的事物相类似的新资讯，并不是很困难的事。一个人对美国历史已经知道一些资料，也有一些理解的角度时，他只要用第一种意义上的阅读，就可以获得更多的类似资料，并且继续用原来的角度去理解。但是，假设他阅读的历史书不只是提供给他更多资讯，而且还在他已经知道的资讯当中，给他全新的或更高层次的启发。也就是说，他从中获得的理解超越了他原有的理解。如果他能试着掌握这种更深一层的理解，他就是在做第二种意义的阅读了。他透过阅读的活动间接地提升了自己，当然，不是作者有可以教他的东西也达不到这一点。&lt;/p>
&lt;p>在什么样的状况下，我们会为了增进理解而阅读？有两种状况：第一是一开始时不相等的理解程度。在对一本书的理解力上，作者一定要比读者来得“高杆”，写书时一定要用可读的形式来传达他有而读者所无的洞见。其次，阅读的人一定要把不相等的理解力克服到一定程度之内，虽然不能说全盘了解，但总是要达到与作者相当的程度。一旦达到相同的理解程度，就完成了清楚的沟通。&lt;/p>
&lt;p>简单来说，我们只能从比我们“更高杆”的人身上学习。我们一定要知道他们是谁，如何跟他们学习。有这种想法的人，就是能认知阅读艺术的人，就是我们这本书主要关心的对象。而任何一个可以阅读的人，都有能力用这样的方式来阅读。只要我们努力运用这样的技巧在有益的读物上，每个人都能读得更好，学得更多，毫无例外。&lt;/p>
&lt;p>我们并不想给予读者这样的印象：事实上，运用阅读以增加资讯与洞察力，与运用阅读增长理解力是很容易区分出来的。我们必须承认，有时候光是听别人转述一些讯息，也能增进很多的理解。这里我们想要强调的是：本书是关于阅读的艺术，是为了增强理解力而写的。幸运的是，只要你学会了这一点，为获取资讯而阅读的另一点也就不是问题了。&lt;/p>
&lt;p>当然，除了获取资讯与理解外，阅读还有一些其他的目标，就是娱乐。无论如何，本书不会谈论太多有关娱乐消遣的阅读。那是最没有要求，也不需要太多努力就能做到的事。而且那样的阅读也没有任何规则。任何人只要能阅读，想阅读，就能找一份读物来消遣。&lt;/p>
&lt;p>事实上，任何一本书能增进理解或增加资讯时，也就同时有了消遣的效果。就像一本能够增进我们理解力的书，也可以纯粹只读其中所包含的资讯一样。（这个情况并不是倒过来也成立：并不是每一种拿来消遣的书，都能当作增进我们的理解力来读。）我们也绝不是在鼓励你绝不要阅读任何消遣的书。重点在于，如果你想要读一本有助于增进理解力的好书，那我们是可以帮得上忙的。因此，如果增进理解力是你的目标，我们的主题就是阅读好书的艺术。&lt;/p>
&lt;h2 id="3阅读就是学习指导型的学习以及自我发现型的学习之间的差异">
 3.阅读就是学习：指导型的学习，以及自我发现型的学习之间的差异
 &lt;a class="anchor" href="#3%e9%98%85%e8%af%bb%e5%b0%b1%e6%98%af%e5%ad%a6%e4%b9%a0%e6%8c%87%e5%af%bc%e5%9e%8b%e7%9a%84%e5%ad%a6%e4%b9%a0%e4%bb%a5%e5%8f%8a%e8%87%aa%e6%88%91%e5%8f%91%e7%8e%b0%e5%9e%8b%e7%9a%84%e5%ad%a6%e4%b9%a0%e4%b9%8b%e9%97%b4%e7%9a%84%e5%b7%ae%e5%bc%82">#&lt;/a>
&lt;/h2>
&lt;p>吸收资讯是一种学习，同样地，对你以前不了解的事开始理解了，也是一种学习。但是在这两种学习当中，却有很重要的差异。&lt;/p>
&lt;p>所谓吸收资讯，就只是知道某件事发生了。想要被启发，就是要去理解，搞清楚这到底是怎么回事：为什么会发生，与其他的事实有什么关联，有什么类似的情况，同类的差异在哪里等等。&lt;/p>
&lt;p>如果用你记得住什么事情，和你解释得了什么事情之间的差异来说明，就会比较容易明白。如果你记得某个作者所说的话，就是你在阅读中学到了东西。如果他说的都是真的，你甚至学到了有关这个世界的某种知识。但是不管你学到的是有关这本书的知识或有关世界的知识，如果你运用的只是你的记忆力，其实你除了那些讯息之外一无所获。你并没有被启发。要能被启发，除了知道作者所说的话之外，还要明白他的意思，懂得他为什么会这么说。&lt;/p>
&lt;p>当然，你可以同时记得作者所说的话，也能理解他话中的含义。吸收资讯是要被启发的前一个动作。无论如何，重点在不要止于吸收资讯而已。&lt;/p>
&lt;p>蒙田说：“初学者的无知在于未学，而学者的无知在于学后。”第一种的无知是连字母都没学过，当然无法阅读。第二种的无知却是读错了许多书。英国诗人亚历山大·蒲伯(Alexander Pope)称这种人是书呆子，无知的阅读者。总有一些书呆子读得太广，却读不通。希腊人给这种集阅读与愚蠢于一身的人一种特别称呼，这也可运用在任何年纪、好读书却读不懂的人身上。他们就叫“半瓶醋&amp;quot;(Sophomores)。&lt;/p>
&lt;p>要避免这样的错误—以为读得多就是读得好的错误—我们必须要区分出各种不同的阅读形态。这种区分对阅读的本身，以及阅读与一般教育的关系都有很重大的影响。&lt;/p>
&lt;p>在教育史上，人们总是将经由指导的学习，与自我发现的学习区别出来。一个人用言语或文字教导另一个人时，就是一种被引导的学习。当然，没有人教导，我们也可以学习。否则，如果每一位老师都必须要人教导过，才能去教导别人，就不会有求知的开始了。因此，自我发现的学习是必要的—这是经由研究、调查或在无人指导的状况下，自己深思熟虑的一种学习过程。&lt;/p>
&lt;p>自我发现的学习方式就是没有老师指导的方式，而被引导的学习就是要旁人的帮助。不论是哪一种方式，只有真正学习到的人才是主动的学习者。因此，如果说自我发现的学习是主动的，指导性的学习是被动的，很可能会造成谬误。其实，任何学习都不该没有活力，就像任何阅读都不该死气沉沉。&lt;/p>
&lt;p>这是非常真确的道理。事实上，要区分得更清楚一些的话，我们可以称指导型的学习是“辅助型的自我发现学习”。用不着像心理学家作深人的研究，我们也知道教育是非常特殊的艺术，与其他两种学术—农业与医学—一样，都有极为重要的特质。医生努力为病人做许多事，但最终的结论是这个病人必须自己好起来—变得健康起来。农夫为他的植物或动物做了许多事，结果是这些动植物必须长大，变得更好。同样地，老师可能用尽了方法来教学生，学生却必须自己能学习才行。当他学习到了，知识就会在他脑中生根发芽。&lt;/p>
&lt;p>指导型的学习与自我发现型的学习之间的差异—或是我们宁可说是在辅助型，及非辅助型的自我发现学习之间的差异—一个最基本的不同点就在学习者所使用的教材上。当他被指导时—在老师的帮助下自我发现时—学习者的行动立足于传达给他的讯息。他依照教导行事，无论是书写或口头的教导。他学习的方式就是阅读或倾听。在这里要注意阅读与倾听之间的密切关系。如果抛开这两种接收讯息方式之间的微小差异性，我们可以说阅读与倾听是同一种艺术—被教导的艺术。然而，当学习者在没有任何老师指导帮助下开始学习时，学习者则是立足于自然或世界，而不是教导来行动。这种学习的规范就构成了非辅助型的自我发现的学习。如果我们将“阅读”的含义放宽松一点，我们可以说自我发现型的学习—严格来说，非辅助型的自我发现学习—是阅读自我或世界的学习。就像指导型的学习（被教导，或辅助型的学习）是阅读一本书，包括倾听，从讲解中学习的一种艺术。&lt;/p>
&lt;p>那么思考呢？如果“思考”是指运用我们的头脑去增加知识或理解力，如果说自我发现型的学习与指导型的学习是增加知识的惟二法门时，那么思考一定是在这两种学习当中都会出现的东西。在阅读与倾听时我们必须要思考，就像我们在研究时一定要思考。当然，这些思考的方式都不相同—就像两种学习方式之不同。&lt;/p>
&lt;p>为什么许多人认为，比起辅助型学习，思考与非辅助型（或研究型）的自我发现学习更有关联，是因为他们假定阅读与倾听是丝毫不需要花力气的事。比起一个正在作研究发明的人，一个人在阅读资讯或消遣时，确实可能思考得较少一些。而这些都是比较被动的阅读方式。但对比较主动的阅读—努力追求理解力的阅读—来说，这个说法就不太正确了。没有一个这样阅读的人会说，那是丝毫不需要思考就能完成的工作。&lt;/p>
&lt;p>思考只是主动阅读的一部分。一个人还必须运用他的感觉与想像力。一个人必须观察，记忆，在看不到的地方运用想像力。我们要再提一次，这就是在非辅助型的学习中经常想要强调的任务，而在被教导型的阅读，或倾听学习中被遗忘或忽略的过程。譬如许多人会假设一位诗人在写诗的时候一定要运用他的想像力，而他们在读诗时却用不着。简单地说，阅读的艺术包括了所有非辅助型自我发现学习的技巧：敏锐的观察、灵敏可靠的记忆、想像的空间，再者当然就是训练有素的分析、省思能力。这么说的理由在于：阅读也就是一种发现—虽然那是经过帮助，而不是未经帮助的一个过程。&lt;/p>
&lt;h2 id="4老师的出席与缺席">
 4.老师的出席与缺席
 &lt;a class="anchor" href="#4%e8%80%81%e5%b8%88%e7%9a%84%e5%87%ba%e5%b8%ad%e4%b8%8e%e7%bc%ba%e5%b8%ad">#&lt;/a>
&lt;/h2>
&lt;p>一路谈来，我们似乎把阅读与倾听都当作是向老师学习的方式。在某种程度上，这确实是真的。两种方式都是在被指导，同样都需要被教导的技巧。譬如听一堂课就像读一本书一样，而听人念一首诗就跟亲自读到那首诗是一样的。在本书中所列举的规则跟这些经验都有关。但特别强调阅读的重要性，而将倾听当作第二顺位的考量，有很充分的理由。因为倾听是从一位出现在你眼前的老师学习—一位活生生的老师—而阅读却是跟一位缺席的老师学习。&lt;/p>
&lt;p>如果你问一位活生生的老师一个问题，他可能会回答你。如果你还是不懂他说的话，你可以再问他问题，省下自己思考的时间。然而，如果你问一本书一个问题，你就必须自己回答这个问题。在这样的情况下，这本书就跟自然或世界一样。当你提出间题时，只有等你自己作了思考与分析之后，才会在书本上找到答案。&lt;/p>
&lt;p>当然，这并不是说，如果有一位活生生的老师能回答你的问题，你就用不着再多做功课。如果你问的只是一件简单的事实的陈述，也许如此。但如果你追寻的是一种解释，你就必须去理解它，否则没有人能向你解释清楚。更进一步来说，一位活生生的老师出现在你眼前时，你从了解他所说的话，来提升理解力。而如果一本书就是你的老师的话，你就得一切靠自己了。&lt;/p>
&lt;p>在学校的学生通常会跟着老师或指导者阅读比较困难的书籍。但对我们这些已经不在学校的人来说，当我们试着要读一本既非主修也非选修的书籍时，也就是我们的成人教育要完全依赖书籍本身的时候，我们就不能再有老师的帮助了。因此，如果我们打算继续学习与发现，我们就要懂得如何让书本来教导我们。事实上，这就是本书最主要的目的。&lt;/p>
&lt;h1 id="第二章-阅读的层次">
 第二章 阅读的层次
 &lt;a class="anchor" href="#%e7%ac%ac%e4%ba%8c%e7%ab%a0-%e9%98%85%e8%af%bb%e7%9a%84%e5%b1%82%e6%ac%a1">#&lt;/a>
&lt;/h1>
&lt;p>在前一章里，我们说明了一些差异性的问题，这对接下来要说的事很重要。一位读者要追求的目标—为了消遣，获得资讯或增进理解力—会决定他阅读的方式。至于阅读的效果则取决于他在阅读上花了多少努力与技巧。一般来说，阅读的规则是：努力越多，效果越好。至少在阅读某些超越我们能力的书时，花一点力气就能让我们从不太了解进升到多一些了解的状态。最后，指导型与自我发现型学习（或辅助型与非辅助型自我发现学习）之间的区别之所以重要，因为我们大多数人在阅读时，都经常是没有人在旁边帮助的。阅读，就像是非辅助型的自我发现学习，是跟着一位缺席的老师在学习。只有当我们知道如何去读时，我们才可能真正读懂。&lt;/p></description></item><item><title>第四篇 阅读的最终目标</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AC%AC%E5%9B%9B%E7%AF%87_%E9%98%85%E8%AF%BB%E7%9A%84%E6%9C%80%E7%BB%88%E7%9B%AE%E6%A0%87/</link><pubDate>Tue, 07 Jan 2025 10:48:43 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AC%AC%E5%9B%9B%E7%AF%87_%E9%98%85%E8%AF%BB%E7%9A%84%E6%9C%80%E7%BB%88%E7%9B%AE%E6%A0%87/</guid><description>&lt;p>&lt;em>第四篇 阅读的最终目标&lt;/em>&lt;/p>
&lt;h1 id="第二十章-阅读的第四个层次主题阅读">
 第二十章 阅读的第四个层次：主题阅读
 &lt;a class="anchor" href="#%e7%ac%ac%e4%ba%8c%e5%8d%81%e7%ab%a0-%e9%98%85%e8%af%bb%e7%9a%84%e7%ac%ac%e5%9b%9b%e4%b8%aa%e5%b1%82%e6%ac%a1%e4%b8%bb%e9%a2%98%e9%98%85%e8%af%bb">#&lt;/a>
&lt;/h1>
&lt;p>到目前为止，我们还没有仔细谈过关于就同一个主题阅读两三本书的问题。我们在前面提到过，在讨论某个特定的主题时，牵涉到的往往不只是一本书。我们也一再非正式地提醒过，甚至其他领域中相关的作者与书籍，都与这个特定的主题有关。在作主题阅读时，第一个要求就是知道：对一个特定的问题来说，所牵涉的绝对不是一本书而已。第二个要求则是：要知道就总的来说，应该读的是哪些书？第二个要求比第一个要求还难做到。&lt;/p>
&lt;p>我们在检验这个句子：“与同一个主题相关两本以上的书”时，困难就出现了。我们所说的“同一个主题”是什么意思？如果这个主题是单一的历史时期或事件，就很清楚了，但是在其他的领域中，就很难作这样清楚的区分。《飘》与《战争与和平》都是关于伟大战争的小说—但是，两者相似之处也止于此了。司汤达的《帕玛修道院》（The Charterhouse of Parma)谈的拿破仑战争，也是托尔斯泰作品中谈的战争。但是这两本书当然都不是在谈这场战争，也不是与一般战争有关的书。在这两个故事中，战争只是提供了一个环境或背景，故事的本身所谈的是人类的生存与挣扎，战争不过是作者想吸引读者注意的手法。我们可能会了解有关这场战役的一些事情—事实上，托尔斯泰就说过，从司汤达所描述的滑铁卢之役中，他学到很多有关这场战役的事—但是如果我们的主题是要研究战争，就用不着拿这些小说来读了。&lt;/p>
&lt;p>你可能料到小说有这种情况。因为作品的特性，小说沟通问题的方法跟论说性作品不同。但是，论说性作品也有同样的问题。&lt;/p>
&lt;p>譬如说你对“爱”这个概念很感兴趣，想要阅读相关的读物。因为关于爱的作品很广泛，你要整理出一个相关书目来阅读是有点困难的。假设你向专家求教，到一个完备的图书馆中寻找书目，还对照一位优秀学者所写的论文，终于把书目弄出来了。再假设你进一步舍弃诗人和小说家谈的这个主题，只想从论说性的作品中找答案（在后面我们会说明为什么这样的做法是明智的）。现在你开始依照书目来阅读这些书了。你发现什么？&lt;/p>
&lt;p>即使只是匆匆的浏览，你也会找到一大堆相关的资料。人类的行为，几乎没有任何一种行为没有被称作是爱的行为—只是称呼的方式不同而已。而且爱并不只限于人类。如果你进一步往下阅读，你会发现宇宙中的万事万物皆有爱。也就是说，任何存在的事物都可能爱与被爱—或二者兼而有之。&lt;/p>
&lt;p>石头是爱，因为它是地球的中心。火焰会上扬，是因为爱的功能。铁刀会吸引磁铁，被形容为爱的结果。有些书专门研究变形虫、草履虫、蜗牛、蚂蚁的爱情生活。更别提一些较高等的动物，它们会爱它们的主人，也会彼此相爱。谈到人类的爱，我们发现作者谈到也写到他们对男人们、女人们、一个男人、一个女人、孩子、他们自己、人类、金钱、艺术、家庭生活、原则、原因、职业或专业、冒险、安全、想法、乡村生活、爱的本身、牛排或美酒之爱。在某些教材中，天体的运转被认为是受到爱的启发。而天使与魔鬼的不同就在爱的品质不同。至于上帝，当然是要来爱人的。&lt;/p>
&lt;p>面对如此庞大的相关资料，我们要如何决定我们要研究的主题是什么呢？我们能确定这中间只有一个单一的主题吗？当一个人说：“我爱起司。”另一个人说“我爱橄榄球。”而第三个人说“我爱人类”时，他们三个人所用的同样一个爱字，代表着同样的意义吗？毕竟，起司是可以吃的，橄榄球或人类是不能吃的。一个人可以玩橄榄球，却不能玩起司或其他的人。而不论“我爱人类”是什么意思，这个爱都与起司或橄榄球之爱不同。但是这三个人用的都是同样一个爱字。在这其中是否有深刻的理由？一些无法立即浮现的理由？就像这个问题本身的困难，在我们找到答案之前，我们能说我们已经确认了“同一个主题”吗？&lt;/p>
&lt;p>面对如此的混乱，你可能会决定把范围缩小到人类的爱上—人与人之间的爱，同性爱或异性爱，同年之爱或忘年之爱等等。其中的规则又跟我们前面说的三种爱法不同了。但是就算你只读了一小部分与主题相关的书，你仍然会找到一堆的相关资料。譬如你会发现某些作者说：爱只是一种占有的欲望，通常是性的欲望，也就是说，爱只是一种所有动物在面对异性时会产生的吸引力。但是你也会发现另一个作者所谈的爱是不包含占有的欲望，而是一种慈善。如果说占有的欲望总是暗示着想要为自己追求好东西，而慈善却暗示着要为别人追求好东西。那么占有的欲望与慈善之间，是否有相通之处？&lt;/p>
&lt;p>至少在占有的欲望与慈善之间，分享着一种共同的倾向，那就是渴望某种非常抽象的东西。但是你对这个主题的研究很快又让你发现：某些作者主张的爱是心灵的，而非肉欲的。这些作者认为爱是知性的行为，而非感性的行为。换句话说，知道某个人是值得仰慕的，总会引发渴望之心，不论是前面所说的哪一种渴望都行。这类作者并不否认有这样的渴望，但他们不承认那就是爱。&lt;/p>
&lt;p>让我们假设—事实上，我们认为可以做得到—在这么多有关人类之爱的构想中，你能找出一些共通的意义。就算是这样，你的问题还是没有解决。再想想看，在人际之间，爱所表现出来的方式其实是截然不同的。男女之间的爱在恋爱期间、结婚之后、二十多岁时、七十多岁时都相同吗？一个女人对丈夫的爱与对孩子的爱相同吗？当孩子长大时，母亲对他们的爱就改变了吗？一个兄弟对姊妹的爱，跟他对父亲的爱是一样的吗？一个孩子长大之后，对父母的爱会改变吗？男人对女人的爱—无论是妻子或其他的女人—跟他对朋友的爱是相同的吗？他和不同朋友之间的关系—像是某人跟他一起打保龄球，某人是一起工作的伙伴，某人是知性的伙伴等—是否各有不同？“爱情”与“友情”之所以不同，是因为其中牵涉到的情绪（如果这是它们被命名的原因）不同，才有不同的名称吗？两个不同年纪的人也能做朋友吗？两个在财富与知识水平上有明显差距的人，也能做朋友吗？女人之间真的有友谊吗？兄弟姊妹，或哥哥弟弟、姊姊妹妹之间真的能成为朋友吗？如果你向人借钱，或是借钱给人，你们之间的友谊能保持下去吗？如果不能·，为什么？一个男孩子能爱上自己的老师吗？而这个老师是男是女，会不会造成什么样的差别？如果真的有像人一样的机器人，人类会爱他们吗？如果我们在火星或其他星球上发现了有智慧的生物，我们会爱他们吗？我们会不会爱上一个素昧平生的人，像是电影明星或总统？如果我们觉得恨某个人，那是否其实是一种爱的表现？&lt;/p>
&lt;p>你只不过读了一小部分有关爱的论说性作品，这些问题就会浮现在你脑海中，其实还有更多其他的问题会出现。无论如何，我们已经说到重点了。在做主题阅读时，会出现一种很矛盾的现象。虽然这个层次的阅读被定义为就同一个主题，阅读两种以上的书，意思也是指在阅读开始之前，这个主题就已经被确认了，但是换个角度来说，这个主题也是跟着阅读走的，而不是事前就能定出来的。以爱这个例子来说，在你决定自己要读些什么之前，你可能已经读了好几百本相关的著作了。等你都读完之后，你会发现有一半的书其实跟主题根本无关。&lt;/p>
&lt;h2 id="1在主题阅读中检视阅读所扮演的角色">
 1.在主题阅读中，检视阅读所扮演的角色
 &lt;a class="anchor" href="#1%e5%9c%a8%e4%b8%bb%e9%a2%98%e9%98%85%e8%af%bb%e4%b8%ad%e6%a3%80%e8%a7%86%e9%98%85%e8%af%bb%e6%89%80%e6%89%ae%e6%bc%94%e7%9a%84%e8%a7%92%e8%89%b2">#&lt;/a>
&lt;/h2>
&lt;p>我们已经说过很多次，阅读的层次是渐进累积的。较高层次的阅读中也包括了前面的，或较低层次的阅读。在主题阅读中，我们就要说明这一点。&lt;/p>
&lt;p>你可能还记得，在解说检视阅读与分析阅读的关系时，我们指出在检视阅读中的两个步骤—第一个是浏览，第二个是粗浅地阅读—也就是分析阅读的前两个步骤。浏览能帮助你准备做分析阅读的第一个步骤：你能确定自己在读的是什么主题，能说明这是什么样的书，并拟出大纲架构。粗浅的阅读对分析阅读的第一步骤也有帮助。基本上这是进人第二步骤的准备动作。在第二个步骤中，你要能够与作者达成共识，说明他的主旨，跟随他的论述，才能够诠释整本书的内容。&lt;/p>
&lt;p>同样的，检视阅读与分析阅读也可以当作是进人主题阅读的前置作业或准备动作。事实上，在这个阶段，检视阅读已经是读者在阅读时主要的工具或手段了。&lt;/p>
&lt;p>举例来说，你有上百本的参考书目，看起来全是与爱有关的主题。如果你全部用分析阅读来阅读，你不只会很清楚你在研究的主题是什么—主题阅读中的“同一主题”—你还会知道你所阅读的书中，那些跟主题无关，是你不需要的书。但是要用分析阅读将一百本书读完，．会花上你十年的时间。就算你能全心投注在这个研究上，仍然要花上好几个月的时间。再加上我们前面谈过的主题阅读中会出现的矛盾问题，显然必要有一些捷径。&lt;/p>
&lt;p>这个捷径是要靠你的检视阅读技巧来建立的。你收集好书目之后，要做的第一件事是检视书单上所有的书。在做检视阅读之前，绝不要用分析阅读来阅读。检视阅读不会让你明白有关主题的所有错综复杂的内容，或是作者所有的洞察力，但却具有两种基本的功能。第一，它会让你对自己想要研究的主题有个清晰的概念，这样接下来你针对某几本书做分析阅读时，会大有助益。其次，它会简化你的书目到一个合理的程度。&lt;/p>
&lt;p>对学生，尤其是研究生来说，我们很难想到还有比这更管用的方式。只要他们肯照着做，一定会有帮助。根据我们的经验，在研究生程度的学生中，确实有些人能做到主动的阅读与分析阅读。这对他们来说还不够，他们或许不是完美的读者，但是至少他们知道要如何掌握一本书的重点，能明确地说出书中的要点，并把这些观点纳人他们研究主题的一部分。但是他们的努力有一大半是浪费掉了，因为他们不知道要如何才能比别人读得快一点。他们阅读每一本书或每一篇文章都花上同样的时间与努力，结果他们该花精神好好阅读的书却没有读好，倒把时间花在那些不太值得注意的书上了。&lt;/p>
&lt;p>能够熟练检视阅读的读者，不但能在心中将书籍分类，而且能对内容有一个粗浅的了解。他也会用非常短的时间就发现，这本书谈的内容对他研究的主题到底重不重要。这时他可能还不清楚哪些资料才是最重要的—这可能要等到读下本书的时候才能发现。但是有两件事至少他已经知道其中之一。那就是他不是发现这本书必须回头再读一次，以获得启发，便是知道不论这本书多有趣又多丰富，却毫无启发性，因此不值得重新再读。&lt;/p>
&lt;p>这个忠告通常会被忽略是有原因的。我们说过，在分析阅读中，技巧熟练的阅读者可以同时用上许多技巧，而初学者却必须把步骤分开来。同样的，主题阅读的准备工作—先检视书目上所有的书，在开始做分析阅读之前先检视一遍—可以在做分析阅读时一并进行。但我们不相信任何读者能做到这一点，就算技巧再熟练也不行。这也是许多年轻研究生所犯的毛病。他们自以为两个步骤可以融合为一个，结果阅读任何书都用同样的速度，对某些特殊的作品来说不是太快就是太慢，但无论如何，对他们阅读的大部分书来说，这样的方法都是不对的。&lt;/p>
&lt;p>一旦你检视过，确定某些书跟你研究的主题相关后，你就可以开始做主题阅读了。要注意的是，我们并没有像你以为的说：“开始做分析阅读”。当然，你需要研读每一本书，再组合起跟你主题相关的资料，你在做分析阅读时就已经学会了这些技巧。但是绝不要忘了，分析阅读的技巧只适用于单一的作品，主要的目标是要了解这本书。而我们会看到，主题阅读的目标却大不相同。&lt;/p>
&lt;h2 id="2主题阅读的五个步骤">
 2.主题阅读的五个步骤
 &lt;a class="anchor" href="#2%e4%b8%bb%e9%a2%98%e9%98%85%e8%af%bb%e7%9a%84%e4%ba%94%e4%b8%aa%e6%ad%a5%e9%aa%a4">#&lt;/a>
&lt;/h2>
&lt;p>现在我们准备好要说明如何做主题阅读了。我们的假设是：你已经检视了相当多的书，你至少对其中一些书在谈些什么有点概念了，而且你也有想要研究的主题了。接下来你该怎么办？&lt;/p>
&lt;p>在主题阅读中一共有五个步骤。这些步骤我们不该称之为规则—虽然也许我们会—因为只要漏掉其中一个步骤，主题阅读就会变得很困难，甚至读不下去了。我们会简略地介绍一下这些步骤的顺序，不过这些步骤彼此之间还是可以互相取代的。·&lt;/p>
&lt;p>主题阅读步骤一：找到相关的章节。当然，我们假设你已经学会分析阅读了，如果你愿意，你能把所有相关的书都看透彻了。但是你可能会把阅读单本的书放在第一顺位，而把自己的主题放在其次。事实上，这个顺序应该颠倒过来，在主题阅读中，你及你关心的主题才是基本的重点，而不是你阅读的书。&lt;/p>
&lt;p>在你已经确定哪些书是相关的之后，主题阅读的第一个步骤就是把这些书整体检视阅读一遍。你的目标是找出书中与你的主题极为相关的章节。你选择的书不太可能全本都与你的主题或问题相关。就算是如此，也一定是少数，你应该很快地把这本书读完。你不该忘了，你的阅读是别有用心的—也就是说，你是为了要解决自己的问题才阅读—而不是为了这本书本身的目的而阅读。&lt;/p>
&lt;p>看起来，这个步骤似乎与前面所说的，为了发现这本书是否与你主题相关的检视阅读当同一件事来进行。许多状况的确可以这么做。但是如果你认为永远都可以这么做的话，可能就不太聪明了。记住，第一步的检视阅读是要集中焦点在你要进一步做主题阅读的主题上。我们说过，除非你已经检阅过书单上大部分的书，否则你无法完全理解这个问题。因此，在确认哪些是相关的书籍的同时，还要确认哪些是相关的章节，其实是很危险的做法。除非你的技巧已经很熟练，而且对你要研究的主题已经很清楚了，否则你最好是将两部分分开来做。&lt;/p>
&lt;p>在主题阅读中，能够把你所阅读的第一批书，与你后来针对这个主题阅读的许多本书的差别区分出来，是很重要的事。对后来的这些书来说，你可能对自己的主题已经有了很清楚的概念，这时就可以把两种检视阅读合并在一起。但是在一开始时，却要明显地区分出来，否则你在找相关章节时会犯下严重的错误，到后来要更正这些错误时又要花上很多的时间与精力。&lt;/p>
&lt;p>总之，要记得你最主要的工作不是理解整本书的内容，而是找出这本书对你的主题有什么帮助，而这可能与作者本身的写作目的相去甚远。在这个阶段的过程中，这并不重要。作者可能是在无意之间帮你解决了问题。我们已经说过，在主题阅读中，是书在服务你，而不是你在服务书。因此，主题阅读是最主动的一种阅读法。当然，分析阅读也需要主动的阅读方式。但是你在分析阅读一本书时，你就像是把书当作主人，供他使唤。而你在做主题阅读时，却一定要做书的主人。&lt;/p>
&lt;p>因此，在与作者达成共识这一点上，这个阶段有不同的做法。&lt;/p>
&lt;p>主题阅读步骤二：带引作者与你达成共识。在诠释阅读中（分析阅读的第二步骤），第一个规则是要你与作者达成共识，也就是要能找出关键字，发现他是如何使用这些字的。但是现在你面对的是许多不同的作者，他们不可能每个人都使用同样的字眼，或相同的共识。在这时候就是要由你来建立起共识，带引你的作者们与你达成共识，而不是你跟着他们走。&lt;/p>
&lt;p>在主题阅读中，这可能是最困难的一个步骤。真正的困难在于要强迫作者使用你的语言，而不是使用他的语言。这跟我们一般的阅读习惯都不相同。我们也指出过很多次，我们假设：我们想要用分析阅读来阅读的作者，是比我们优秀的人。尤其如果这是一本伟大的著作时，就更可能如此。无论我们在了解他的过程中花了多少力气，我们都会倾向于接受他的词义与他安排的主题结构。但在主题阅读中，如果我们接受任何一位作者所提出来的词汇(terminology)，我们很快就会迷失。我们可能会了解他的书，却无法了解别人的书。我们也很难找到与自己感兴趣的主题的资料。&lt;/p>
&lt;p>我们不只要能够坚决拒绝接受任何一位作者的词汇，还得愿意面对可能没有任何一位作者的词汇对我们来说是有用的事实。换句话说，我们必须要接受一个事实：我们的词汇刚好与任何一位书目上的作者相同时，只是一种巧合。事实上，这样的巧合还满麻烦的。因为如果我们使用了某一位作者的一个或一组词义，我们就可能继续引用他书中其他的词义，而这只会带给我们麻烦，没有其他的帮助。&lt;/p>
&lt;p>简单来说，主题阅读是一种大量的翻译工作。我们并不是将一种语言翻成另一种语言，像法语翻成英语，但是我们要将一种共通的词汇加诸在许多作者身上，无论他们所使用的是不是相同的语言，或是不是关心我们想解决的问题，是否创造了理想的词汇供我们使用。&lt;/p>
&lt;p>这就是说，在进行主题阅读时，我们要建立一组词汇，首先帮助我们了解所有的作者，而不是其中一两个作者；其次帮助我们解决我们的问题。这一点认识会带我们进人第三个步骤。&lt;/p>
&lt;p>主题阅读步骤三：厘清问题。诠释阅读的第二个规则是要我们找出作者的关键句子。然后从中逐步了解作者的主旨。主旨是由词义组成的，在主题阅读中，当然我们也要做同样的工作。但是因为这时是由我们自己来建立词汇，因此，我们也得建立起一组不偏不倚的主旨。最好的方法是先列出一些可以把我们的问题说得比较明白的问题，然后让那些作者来回答这些问题。&lt;/p>
&lt;p>这也是很困难的工作，这些问题必须要以某种形式，某种秩序来说明，以帮助我们解决我们提出的问题，同时这些问题也要是大多数作者都能回答的问题。难就难在我们认为是问题的地方，作者也许并不认为是问题。他们对我们认定的主题可能有相当不同的看法。&lt;/p>
&lt;p>事实上，有时候我们必须接受作者可能一个问题也回答不了。在这样的状况中，我们必须要将他视为是对这个问题保持沉默，或是尚未作出决定。但是就算他并没有很清楚地讨论这个问题，有时我们也可以在他书中找到间接的回答。我们会得出这么一个结论：如果他考虑到这个问题的话，那就会如何如何回答这个问题。在这里需要一点自我约束。我们不能把思想强加在作者脑海中，也不能把话语放进他们的口中。但是我们也不能完全依赖他们对这个问题的解说。如果我们真的能靠其中任何一位作者来解释这个问题，或许我们根本就没有问题要解决。&lt;/p>
&lt;p>我们说过要把问题照秩序排列出来，好帮助我们在研究时使用。当然，这个秩序是跟主题有关的，不过还是有一般的方向可循。第一个问题通常跟我们在研究的概念或现象的存在或特质有关。如果一位作者说这种现象的确存在，或这种概念有一种特质，那么对于他的书我们就要提出更进一步的问题了。这个问题可能跟这个现象是如何被发现，或这个概念是如何表现出来的有关。最后一部分的问题则是与回答前面问题所产生的影响有关。&lt;/p>
&lt;p>我们不该期望所有的作者都用同一种方法来回答我们的问题。如果他们这么做了，我们就又没有问题要解决了。那个问题会被一致的意见解决了。正因为每个作者都不相同，因此我们要再面对主题阅读的下一个步骤。&lt;/p>
&lt;p>主题阅读步骤四：界定议题。如果一个问题很清楚，如果我们也确定各个作者会用不同的方式来回答—不论赞成或反对—那么这个议题就被定义出来了。这是介于用这种方法回答问题的作者，和用另外一种（可能是相反的）方法来回答问题的作者之间的议题。&lt;/p>
&lt;p>如果检验过后，所有的作者提供的答案只有正反两面的意见，那么这个问题算是简单的问题。通常，对一个问题会有超过两种以上的答案。在这种情况下，我们就要找出不同意见彼此之间的关联，再根据作者的观点来作分类。&lt;/p>
&lt;p>当两个作者对同一个问题有相当的了解，所作的回答却完全相反或矛盾时，这才是一个真正有参与的议题。但是这样的现象并不像我们希望的那样经常发生。通常，答案之不同固然来自于各人对这个主题有不同的观点，但也有很多情况是来自于对问题本身的认知不同。所以在做主题阅读的读者，要尽可能地确保议题是大家所共同参与的。有时候这会迫使他在列出问题的时候，小心不采取任何一位作者明白采用的方法。&lt;/p>
&lt;p>我们要处理的问题，可能会出现很多种不同的议题，不过通常都可以分门别类。譬如像考虑到某种概念的特质的问题，就会出现一堆相关的议题。许多议题绕着一组相互关联密切的问题打转，就会形成这个主题的争议。这样的争议可能很复杂，这时主题阅读的读者就要将所有争议的前后关系整理清楚—尽管没有任何作者做这件事。厘清争议，同时将相关议题整理出来之后，我们便要进入主题阅读的最后一个步骤。&lt;/p>
&lt;p>主题阅读步骤五：分析讨论。到目前为止，我们已经检验过作品，找出相关的章节，设定了一个不偏不倚的共识，适用于所有被检视过的作者，再设定出一整套的问题，其中大部分都能在作者的说明中找到答案。然后就不同的答案界定并安排出议题。接下来该怎么做呢？&lt;/p>
&lt;p>前面四个步骤与分析阅读的前两组规则是互相辉映的。这些规则应用在任何一本书中，都会要我们回答一个问题：这本书在说些什么？是如何说明的？在主题阅读中，对于与我们的问题相关的讨论，我们也要回答类似的问题。在只阅读一本书的分析阅读中，剩下还有两个问题要回答：这是真实的吗？这与我何干？而在主题阅读中，我们对于讨论也要准备回答同样的问题。&lt;/p>
&lt;p>让我们假设起头的那个阅读问题并不单纯，是个几世纪以来与许多思考者纷争不已的长久问题，许多人家不同意，并且会继续不同意的问题。在这个假设中，我们要认知的是，身为主题阅读的读者，我们的责任不只是要自己回答这些问题—这些问题是我们仔细整理出来，以便易于说明主题的本身与讨论的内容。有关这类问题的真理并不容易发现。如果我们期望真理就存在某一组问题的答案之中，那可能太轻率了。就算能找到答案，也是在一些相互矛盾的答案的冲突中找到令人信服的证据，而且有支持自己的确切理由。&lt;/p>
&lt;p>因此，就可以发现的真理而言，就我们可以找到的问题答案而言，与其说是立足于任何一组主旨或主张上，不如说是立足于顺序清楚的讨论的本身。因此，为了要让我们的头脑接受这样的真相—也让别人接受—我们要多做一点工作，不只是问问题与回答问题而已。我们要依照特定的顺序来提问题，也要能够辨认为什么是这个顺序。我们必须说明这些问题的不同答案，并说明原因。我们也一定要能够从我们检视过的书中找出支持我们把答案如此分类的根据。只有当我们做到这一切时，我们才能号称针对我们问题的讨论作了分析，也才能号称真正了解了问题。&lt;/p>
&lt;p>事实上，我们所做的可能超过这些。对一个问题完整地分析过后，将来其他人对同一个问题要作研究时，我们的分析讨论就会提供他一个很好的研究基础。那会清除一些障碍，理出一条路，让一个原创性的思考者能突破困境。如果没有这个分析的工作，就没法做到这一点，因为这个问题的各个层面就无法显现出来。&lt;/p>
&lt;h2 id="3客观的必要性">
 3.客观的必要性
 &lt;a class="anchor" href="#3%e5%ae%a2%e8%a7%82%e7%9a%84%e5%bf%85%e8%a6%81%e6%80%a7">#&lt;/a>
&lt;/h2>
&lt;p>要完整地分析一个问题或某个主题，得指出这个讨论中的主要议题，或是一些基本的知性反对立场。这并不是说在所有的讨论中，反对的意见总是占主导的。相反，同意或反对的意见总是互相并存的。也就是说，在大多数的议题中，正反两面的意见总是有几个，甚至许多作者在支持。在一个争议性的立场上，我们很少看到一个孤零零的支持者或反对者。&lt;/p>
&lt;p>人类对任何领域某种事物的特质达成一致的观点，都建立一种假设，意味着他们共同拥有的意见代表着真理。而不同的观点则会建立起另一个相反的假设—无论你是否参与，这些争论中的观点可能没有一个是完全真实的。当然，在这些冲突的观点中，也可能有一个是完全真实的，而其他的则是虚假的。不过也可能双方面都只是表达了整体真理的一小部分。除了一些单调或孤立的争论之外（就我们在这里所读的问题，不太可能有这种形式的讨论），很可能正反双方的意见都是错的，一如所有的人可能都同意了一种错误的观点。而另一些没有表达出来的观点才可能是真实的，或接近真实的。&lt;/p>
&lt;p>换句话说，主题阅读的目的，并不是给阅读过程中发展出来的问题提供最终答案，也不是给这个计划开始时候的问题提供最终解答。当我们要给这样的主题阅读写一份读者报告的时候，这个道理特别清楚。如果这份报告就任何所界定并分析过的重要议题，想要主张或证明某一种观点的真实或虚假，都会太过教条，失去对话的意义。如果这么做，主题阅读就不再是主题阅读，而只是讨论过程中的另一个声音，失去了疏离与客观性。&lt;/p>
&lt;p>我们要说的，并不是我们认为对人类关心的重要议题多一个声音无足轻重。我们要说的是我们在追求理解的过程中，可以而且应该多贡献一种不同的形式。而这样的形式必须是绝对客观又公正的。主题阅读所追求的这种特质，可以用这句话来作总结：“辩证的客观。”&lt;/p>
&lt;p>简单来说，主题阅读就是要能面面俱到，而自己并不预设立场。当然，这是个严格的理想，一般人是没法做到的。而绝对的客观也不是人类所能做到的事。他可能可以做到不预设立场，毫无偏见地呈现出任何观点，对不同的意见也保持中立。但是采取中立比面面俱到要容易多了。在这一方面，主题阅读的读者注定会失败的。一个议题有各种不同的观点，不可能巨细靡遗地全都列出来。虽然如此，读者还是要努力一试。&lt;/p></description></item><item><title>第三篇 阅读不同读物的方法</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AC%AC%E4%B8%89%E7%AF%87_%E9%98%85%E8%AF%BB%E4%B8%8D%E5%90%8C%E8%AF%BB%E7%89%A9%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 07 Jan 2025 10:48:42 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AC%AC%E4%B8%89%E7%AF%87_%E9%98%85%E8%AF%BB%E4%B8%8D%E5%90%8C%E8%AF%BB%E7%89%A9%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>&lt;p>&lt;em>第三篇 阅读不同读物的方法&lt;/em>&lt;/p>
&lt;h1 id="第十三章-如何阅读实用型的书">
 第十三章 如何阅读实用型的书
 &lt;a class="anchor" href="#%e7%ac%ac%e5%8d%81%e4%b8%89%e7%ab%a0-%e5%a6%82%e4%bd%95%e9%98%85%e8%af%bb%e5%ae%9e%e7%94%a8%e5%9e%8b%e7%9a%84%e4%b9%a6">#&lt;/a>
&lt;/h1>
&lt;p>在任何艺术或实务的领域中，有些规则太通用这一点是很令人扫兴的。越通用的规则就越少，这算是一个好处。而越通用的规则，也越容易理解—容易学会与使用这些规则。但是，说实在的，当你置身错综复杂的实际情况，想要援用一些规则的时候，你也会发现越通用的规则离题越远。&lt;/p>
&lt;p>我们前面谈过分析阅读的规则，一般来说是适用于论说性的作品—也就是说任何一种传达知识的书。但是你不能只用一般通用的方法来读任何一本书。你可能读这本书那本书，或是任何一种特殊主题的书，可能是历史、数学、政治论文或科学研究，或是哲学及神学理论，因此，在运用以下这些规则时，你一定要有弹性，并能随时调整。幸运的是，当你开始运用这些规则时，你会慢慢感觉到这些规则是如何在不同的读物上发挥作用。&lt;/p>
&lt;p>要特别提醒的是，在第十一章结尾时所说明的十五个阅读规则并不适用于阅读小说或诗集。一本虚构作品的纲要架构，与论说性的作品是完全不同的。小说、戏剧与诗并不是照着共识、主旨、论述来发展的。换句话说，这些作品的基本内容没有逻辑可言，要评论这些作品也要有不同的前提才行。然而，如果你认为阅读富有想像力的作品毫无规则可言，那也是错的。事实上，下一章我们会讨论到阅读那种作品的另一套应用规则。那些规则一方面本身就很有效，另一方面如果能检验这些规则和阅读论说性作品规则的不同之处，还可以帮助你对阅读论说性作品的规则多一层认识。&lt;/p>
&lt;p>你用不着担心又要学一整套十五个或更多的阅读小说与诗的规则。你会很容易了解到这两种规则之间的关联性。其中也包括了我们一再强调的事实，你在阅读时一定要能提出问题来，尤其是四个最特殊的问题，不论在阅读什么样的书时都要能提出来。这四个问题与任何一本书都有关，不论是虚构或非虚构，不论是诗、历史、科学或哲学。我们已经知道阅读论说性作品的规则如何互相连贯，又是如何从这四个问题中发展出来的。同样的，阅读富有想像力作品的规则也是来自这四个问题，只不过这两类作品的题材不同，会造成规则上的部分差异。&lt;/p>
&lt;p>因此，在这一篇里，比起阅读的规则，我们会谈更多有关这几个问题的话题。我们会偶尔提一个新规则，也会重新调整某一个旧的规则。不过大多数时候，既然我们谈的是阅读不同读物的方法，我们会强调基本要问的不同问题，以及会获得什么样的不同的回答。&lt;/p>
&lt;p>在论说性作品的部分，我们谈过基本上要区分出实用性与理论性，两种作品—前者是有关行动的问题，后者只和要传递的知识有关。我们也说过，理论性的作品可以进一步划分为历史、科学（与数学）、哲学。实用性作品则没有任何界限，因此我们要进一步分析这类书的特质，并提供一些阅读时的建议指南与方法。&lt;/p>
&lt;h2 id="1两种实用性的书">
 1.两种实用性的书
 &lt;a class="anchor" href="#1%e4%b8%a4%e7%a7%8d%e5%ae%9e%e7%94%a8%e6%80%a7%e7%9a%84%e4%b9%a6">#&lt;/a>
&lt;/h2>
&lt;p>关于实用性的书有一件事要牢记在心：任何实用性的书都不能解决该书所关心的实际问题。一本理论性的作品可以解决自己提出的问题。但是实际的问题却只能靠行动来解决。当你的实际问题是如何赚钱谋生时，一本教你如何交朋友或影响别人的书，虽然可能建议你很多事，但却不能替你解决问题。没有任何捷径能解决这个问题，只能靠你自己去赚钱谋生才能解决。&lt;/p>
&lt;p>以本书为例。这是一本实用的书，如果你对这本书的实用性（当然也可能只是理论性）感兴趣，那你就是想要解决学习阅读的问题。但除非你真的学到了，你不可能认为那些问题都解决，消失不见了。本书没法为你解决那些问题，只能帮助你而已。你必须自己进行有活力的阅读过程，不只是读这本书，还要读很多其他的书。这也是为什么老话说：只有行动能解决问题。行动只能在现世发生，而不是在书本中发生。&lt;/p>
&lt;p>每个行动发生时都有特殊情况，都发生在不同的时间、地点与特殊环境中。你没法照一般的反应来行动。要立即采取行动的特殊判断力，更是极为特别。这可以用文字来表达，却几乎没见过。你很难在书中找到这样的说明，因为实用书的作者不能亲身体验读者在面临的特殊状况时，必须采取的行动。他可能试着想要帮忙，但他不能提供现场的实际建议。只有另一个置身一模一样情况的人，才能帮得上忙。&lt;/p>
&lt;p>然而，实用性的书多少还是可以提供一些可以应用在同类型特殊状况中的通用规则。任何人想要使用这样的书，一定要把这些规则运用在特殊的状况下，因此一定要练习特殊的判断力才行。换句话说，读者一定要能加上一点自己的想法，才能运用在实际的状况中。他要能更了解实际状况，更有判断力，知道如何将规则应用在这样的状况中。&lt;/p>
&lt;p>任何书里包含了规则—原理、准则或任何一种一般的指导—你都要认定是一本实用性的书。但是一本实用性的书所包含的不只是规则而已。它可能会说明规则底下的原理，使之浅显易懂．譬如在这本与阅读有关的特殊主题的书中，我们不断地简要阐释文法、修辞与逻辑原理，来解说阅读规则。规则底下的原理通常都很科学，换言之，属于理论性的知识。规则与原理的结合，就是事物的理论。因此，我们谈造桥的理论，也谈打桥牌的理论。我们的意思是，理论性的原则会归纳出出色的行事规则。&lt;/p>
&lt;p>实用性的书因此可分为两种类型。其中一种，就像本书一样，或是烹饪书、驾驶指南，基本上都是在说明规则的。无论其中谈论到什么问题，都是为了说明规则而来的。这类书很少有伟大的作品。另一类的　实用书主要是在阐述形成规则的原理。许多伟大的经济、政治、道德巨著就属于这一类。&lt;/p>
&lt;p>这样的区分并不是绝对的。在一本书中，同时可以找到原理与规 则。重点在特别强调其中哪一项。要将这两种类型区分出来并不困　难。不管是在什么领域中，谈规则的书都可以立刻认出来是实用性的。　一本谈实用原理的书，乍看之下会以为是理论性的书。从某个程度来说，的确没错。它所讨论的是一种特殊状况中的理论。无论如何，你还是看得出来它是实用性的书。它要处理的那些问题的本质会露底。这样的书所谈的总是人类行为领域中，怎样可能做得更好或更糟。&lt;/p>
&lt;p>在阅读一本以规则为主的书时，要找寻的主旨当然是那些规则。 阐述这些规则通常是用命令句，而不是叙述句。那是一种命令。譬如说：“及时一针，胜过事后九针。”这样的规则也可以改为叙述式的说法：“如果你及时补上一针，就省下后来要补的九针。”两个句子都是在提示　争取时间的价值，命令式的语句比较强烈，但却不见得就比较容易记住。&lt;/p>
&lt;p>无论是叙述句或命令句，你总是能认出一个规则来，因为它在建议你某件事是值得做的，而且一定会有收获。因此，要你与作者达成共识的那条命令式的阅读规则，也可以改成建议式的说法：“成功的阅读牵涉到读者与作者达成共识。”“成功”这两个字就说明了一切，意味着这种阅读是值得去做的一件事。&lt;/p>
&lt;p>这类实用书的论述都是在向你表示：它们所说的规则都是确切可　行的。作者可能会用原理来说明这些规则的可信度，或是告诉你一些实例，证明这些规则是可行的。看看这两种论述，诉诸原理的论述通常比较没有说服力，但却有一个好处。比起举实例的方法，诉诸原理的论述比较能将规则的理由说明得清楚一些。&lt;/p>
&lt;p>在另一种实用性书中，主要谈的是规则背后的原理。当然，其中的主旨与论述看起来就跟纯理论性的书一模一样。其中的主旨是在说明某件事的状态，而论述就是在强调真的是如此。&lt;/p>
&lt;p>但是阅读这样的一本书，与阅读纯理论的书还是有很大的不同。因为要解决的问题终究是实用的问题—行动的问题，人类在什么状态下可以做得更好或更糟的问题—所以当聪明的读者看到“实用原理”这样的书时，总是能读出言外之意。他可能会看出那些虽然没有明说，但却可以由原理衍生出来的规则。他还会更进一步，找出这些规则应该如何实际应用。&lt;/p>
&lt;p>除非这样阅读，否则一本实用的书便没有被实用地阅读。无法让一本实用的书被实用地阅读，就是失败的阅读。你其实并不了解这本书，当然也不可能正确地评论这本书了。如果在原理中能找到可以理解的规则，那么也就可以在由原理引导出来的规则或建议的行动中，找到实用原理的意义。&lt;/p>
&lt;p>这些是你要了解任何一种实用性书籍，或是在作某种批评时的最高原则。在纯理论性的书中，相同或反对的意见是与书中所谈的真理有关。但是现实的真理与理论的真理不同。行为规则要谈得上是真理，有两种情况：一是真的有效；二是这样做能带引你到正确的结果，达到你的期望。&lt;/p>
&lt;p>假设作者认为你应该寻求的正确结果，你并不以为然，那么就算他的建议听起来很完整，由于那个目标的缘故，你可能还是不会同意他的观点。你会因此而判断他的书到底实不实用。如果你不认同仔细、头脑清楚地阅读是件值得做的事情，那么纵使本书的规则真的有效，这本书对你来说还是没什么实用性。&lt;/p>
&lt;p>注意这段话的意义。在评断一本理论性的书时，读者必须观察他自己与作者之间的原理与假设的一致性或差异性。在评断一本实用性的书时，所有的事都与结果及目标有关。如果你不能分享马克思对经济价值的狂热，他的经济教条与改革措施对你来说就有点虚假或无关197痛痒。譬如你可能和埃德蒙·柏克（Edmund Burke)一样，认为维持现状就是最好的策略，而且在全面考量过后，你相信还有比改变资本不平等更重要的事。你的判断主要是与结果达成共识，而非方法。就算　方法非常真实有用，如果所达到的目的是我们不关心或不期望的结果，　我们也不会有半点兴趣的。&lt;/p>
&lt;h2 id="2说服的角色">
 2.说服的角色
 &lt;a class="anchor" href="#2%e8%af%b4%e6%9c%8d%e7%9a%84%e8%a7%92%e8%89%b2">#&lt;/a>
&lt;/h2>
&lt;p>以上的简单讨论，可以给你一些线索。当你在阅读任何一种实用书时，一定要问你自己两个主要的问题。第一：作者的目的是什么？第二：他建议用什么方法达到这个目的？以原理为主的书要比以规则　为主的书还要难回答这两个问题。在这些书中，目的与方法可能都不很明显。但如果你想要了解与评论实用性的书，就必须回答这两个问题。&lt;/p>
&lt;p>还要提醒你的是，前面我们讨论过的实用作品的写作问题。每一本实用的书中都混杂着雄辩或宣传。我们还没读过一本政治哲学的书—无论是多理论性的，无论谈的是多么“深奥”的原理—是不是想说服读者有关“最好的政府形态”的道理。相同的，道德理论的书也想　要说服读者有关“美好生活”的道理，同时建议一些达到目标的方法。我们也一直试着要说服你照某种特定的方式来阅读一本书，以达到你可能想要追求的理解力。&lt;/p>
&lt;p>你可以知道为什么实用书的作者多少都是个雄辩家或宣传家。因为你对他作品最终的评断是来自你是否接受他的结论．与他提议的方法。这完全要看作者能不能将你引导到他的结论上。要这么做，他讨论的方法必须要能打动你的心智。他可能必须激起你的情绪反应，左右你的意志。&lt;/p>
&lt;p>这并没有错，也没有恶意。这正是实用书的特性，一个人必须要被　说服，以采取特定的思想与行动。实际的思考与行动除了需要理智以　外，情感也是重要的因素。没有人可以没有受到感动，却认真采取实际　评论或行动的。如果可以的话，这个世界可能会比较美好，但一定是个不同的世界。一本实用书的作者认知不到这一点，就不算成功。一位读者如果认知不到这一点，就像买了一堆货物，却不知道自己买了些什么。&lt;/p>
&lt;p>不想被宣传所困惑，就得了解宣传的内容是什么。难以察觉的隐藏式雄辩是最狡猾的。那会直接打动你的心，而不经过你的头脑，就像是从背后吓你一跳，把你吓得魂不附体一样。这样的宣传手法就像是你吞了一颗药，自己却完全不知道。宣传的影响力是很神秘的，事后你并不知道自己为什么会那样感觉与思考。&lt;/p>
&lt;p>一个人如果真正读懂了一本实用的书，他知道这本书的基本共识、主旨、论述是什么，就能觉察出作者的雄辩。他会觉察到某一段话是“情绪用字”。他知道自己是被说服的对象，他有办法处理这些诉求的重点。他对推销有抵抗力，但并不是百分之百的需要。对推销有抵抗力是好的，能帮你避免在匆忙又欠考虑的情况下买东西。但是，一个读者如果完全不接受所有内容的诉求，那就不必阅读实用性的书了。&lt;/p>
&lt;p>另外还有一个重点。因为实用问题的特性，也因为所有实用作品中都混杂了雄辩，作者的“性格”在实用书中就比理论书中还要来得重要。你在读一本数学用书时，用不着知道作者是谁。他的理论不是好就是坏，这跟他的人格怎样一点关系也没有。但是为了要了解与评断一本道德的论述、政治论文或经济论著，你就要了解一点作者的人格、生活与时代背景。譬如在读亚里士多德的《政治学》之前，就非常需要知道希腊的社会背景是奴隶制的。同样的，在读《君主论》之前，就要知道马基雅维里当时意大利的政治情况，与他跟美第奇家族的关系。因此，在读霍布斯的《利维坦》一书时，就要了解他生活在英国的内战时期，社会中充满暴力与混乱，使整个时代都沉浸在悲哀的病态之中。&lt;/p>
&lt;h2 id="3赞同实用书之后">
 3.赞同实用书之后
 &lt;a class="anchor" href="#3%e8%b5%9e%e5%90%8c%e5%ae%9e%e7%94%a8%e4%b9%a6%e4%b9%8b%e5%90%8e">#&lt;/a>
&lt;/h2>
&lt;p>我们确定你已经看出来了，你在读一本书时要提出的四个问题，到了读实用性的书时有了一点变化。我们就来说明一下这些变化。&lt;/p>
&lt;p>第一个问题：这本书是在谈些什么？并没有改变多少。因为一本实用的书是论说性的，仍然有必要回答这个问题，并作出这本书的大纲架构。&lt;/p>
&lt;p>然而，虽然读任何书都得想办法找出一个作者的问题是什么（规则四涵盖这一点），不过在读实用性的书时，格外是一个决定性的关键。我们说过，你一定要了解作者的目的是什么。换句话说，你一定要知道他想解决的问题是什么。你一定要知道他想要做些什么—因为，在实用性的书中，知道他要做的是什么，就等于是知道他想要你做的是什么。这当然是非常重要的事了。&lt;/p>
&lt;p>第二个问题的变化也不大。为了要能回答关于这本书的意义或内容，你仍然要能够找出作者的共识、主旨与论述。但是，这虽然是第二阶段最后的阅读工作（规则八），现在却显得更重要了。你还记得规则八要你说出哪些是作者已经解决的问题，哪些是还没有解决的问题。在阅读实用性的书籍时，这个规则就有变化了。你要发现并了解作者所建议的、达到他目标的方法。换句话说，在阅读实用性书时，如果规则四调整为：“找出作者想要你做什么。”规则八就该调整为：“了解他要你这么做的目的。”&lt;/p>
&lt;p>第三个问题：内容真实吗？比前两个改变得更多了。在理论性作品中，当你根据自己的知识来比较作者对事物的描绘与说明时，这个问题的答案便出来了。如果这本书所描述的大致与你个人的体验相似时，你就必须承认那是真实的，或至少部分是真实的。实用性的书，虽然也会与真实作比较，但最主要的却是你能不能接受作者的宗旨—他最终的目标，加上他建议的达成目标的方法—这要看你认为追求的是什么，以及什么才是最好的追求方法而定。&lt;/p>
&lt;p>第四个问题：这本书与我何干？可说全部改变了。如果在阅读一本理论性的书之后，你对那个主题的观点多少有点变化了，你对一般事物的看法也就会多少有些调整。（如果你并不觉得需要调整，可能你并没有从那本书中学到什么。）但是这样的调整并不是惊天动地的改变，毕竟，这些调整并不一定需要你探取行动。&lt;/p>
&lt;p>赞同一本实用性的书，却确实需要你采取行动。如果你被作者说服了，他所提议的结论是有价值的，甚至进一步相信他的方法真的能达到目的，那就很难拒绝作者对你的要求了。你会照着作者希望你做的方式来行动。&lt;/p>
&lt;p>当然，我们知道这种情形并不一定会发生。但我们希望你了解的是，如果你不这样做的话，到底代表什么意思。那就表示虽然这个读者表面上同意了作者的结论，也接受了他提出来的方法，但是实际上并没有同意，也没有接受。如果他真的都同意也接受了，他没有理由不采取行动。&lt;/p>
&lt;p>我们用一个例子来说明一下。如果读完本书的第二部分，你（1)同意分析阅读是值得做的。(2)接受这些阅读规则，当作是达到目标的基本要件，你会像我们现在所说的一样，开始照着阅读起来。如果你没有这么做，可能并不是你偷懒或太累了，而是你并不真的同意(1)或(2)。&lt;/p>
&lt;p>在这个论述中有一个明显的例外。譬如你读了一篇文章，是关于如何做巧克力慕斯的。你喜欢巧克力慕斯，也赞同这个作者的结论是对的。你也接受了这个作者所建议的达到目标的方法—他的食谱。但你是男性读者，从不进厨房，也没做过慕斯。在这样的情况中，我们的观点是否就不成立了？&lt;/p>
&lt;p>并不尽然。这正好显示出我们应该要提到的，区分各种类型实用书的重要性。某些作者提出的结论是很通用或一般性的—可供所有的人类使用—另外一些作者的结论却只有少数人能运用。如果结论是通用的—譬如像本书，所谈的是使所有人都能阅读得更好，而不是只有少数人—那么我们所讨论的便适用于每位读者。如果结论是经过筛选的，只适用于某个阶层的人，那么读者便要决定他是否属于那个阶层了。如果他属于那个阶层，这些内容就适合他应用，他多少也有义务照作者的建议采取行动。如果他不属于这个阶层，他可能就没有这样的义务。&lt;/p></description></item><item><title>第二篇 阅读的第三个层次：分析阅读</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AC%AC%E4%BA%8C%E7%AF%87_%E9%98%85%E8%AF%BB%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%B1%82%E6%AC%A1_%E5%88%86%E6%9E%90%E9%98%85%E8%AF%BB/</link><pubDate>Tue, 07 Jan 2025 10:48:41 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%A6%82%E4%BD%95%E9%98%85%E8%AF%BB%E4%B8%80%E6%9C%AC%E4%B9%A6/%E7%AC%AC%E4%BA%8C%E7%AF%87_%E9%98%85%E8%AF%BB%E7%9A%84%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%B1%82%E6%AC%A1_%E5%88%86%E6%9E%90%E9%98%85%E8%AF%BB/</guid><description>&lt;p>&lt;em>第二篇 阅读的第三个层次：分析阅读&lt;/em>&lt;/p>
&lt;h1 id="第六章-一本书的分类">
 第六章 一本书的分类
 &lt;a class="anchor" href="#%e7%ac%ac%e5%85%ad%e7%ab%a0-%e4%b8%80%e6%9c%ac%e4%b9%a6%e7%9a%84%e5%88%86%e7%b1%bb">#&lt;/a>
&lt;/h1>
&lt;p>在本书的一开头，我们就已经说过了，这些阅读的规则适用于任何你必须读或想要读的读物。然而，在说明分析阅读，也就是这第二篇的内容中，我们却似乎要忽略这个原则。我们所谈的阅读，就算不全是，也经常只是指“书”而言。为什么呢？&lt;/p>
&lt;p>答案很简单。阅读一整本书，特别是又长又难读的一本书，要面对的是一般读者很难想像，极为艰困的问题。阅读一篇短篇故事，总比读一本小说来得容易。阅读一篇文章，总比读一整本同一个主题的书籍来得轻松。但是如果你能读一本史诗或小说，你就能读一篇抒情诗或短篇故事。如果你能读一本理论的书—一本历史、哲学论述或科学理论—你就可以读同一个领域中的一篇文章或摘要。&lt;/p>
&lt;p>因此，我们现在要说的阅读技巧，也可以应用在其他类型的读物上。你要了解的是，当我们提到读书的时候，所说明的阅读规则也同样适用于其他比较易于阅读的资料。虽然这些规则程度不尽相当，应用在后者身上时，有时候作用不尽相同，但是只要你拥有这些技巧，懂得应用，总可以比较轻松。&lt;/p>
&lt;h2 id="1书籍分类的重要性">
 1.书籍分类的重要性
 &lt;a class="anchor" href="#1%e4%b9%a6%e7%b1%8d%e5%88%86%e7%b1%bb%e7%9a%84%e9%87%8d%e8%a6%81%e6%80%a7">#&lt;/a>
&lt;/h2>
&lt;p>分析阅读的第一个规则可以这么说：规则一，你一定要知道自己在读的是哪一类书，而且要越早知道越好。最好早在你开始阅读之前就先知道。&lt;/p>
&lt;p>譬如，你一定要知道，在读的到底是虚构的作品—小说、戏剧、史诗、抒情诗—还是某种论说性的书籍？几乎每个读者在看到一本虚构的小说时都会认出来，所以就会认为要分辨这些并不困难—其实不然。像《波特诺的牢骚》(Portnoy&amp;rsquo;s、Complaint），是小说还是心理分析的论著？《裸体午宴)(Naked Lunch）是小说，还是反对药物泛滥的劝导手册，像那些描述酒精的可怕，以帮助读者戒酒之类的书？《飘》(Gone With The Wind）是爱情小说，还是美国内战时期的南方历史？《大街》(Main Street)与《愤怒的葡萄））（The Grapes o f Wrath），一本都会经验，一本农村生活，到底是纯文学，还是社会学的论著？&lt;/p>
&lt;p>当然，这些书都是小说，在畅销书排行榜上，都是排在小说类的。但是问这些问题并不荒谬。光是凭书名，像《大街》或《米德尔顿》，很难猜出其中写的是小说，还是社会科学论述。在当代的许多小说中，有太多社会科学的观点，而社会科学的论著中也有很多小说的影子，实在很难将二者区别开来。但是还有另一些科学—譬如物理及化学—出现在像是科幻小说《安珠玛特病毒》（The Andromeda Strain），或是罗伯特·海莱因(Robert Heinlein)、亚瑟·克拉克（Arthur C. Clarke）的书中。而像《宇宙与爱因斯坦博士》（The Universe and Dr. Einstein)这本书，明明不是小说，却几乎跟有“可读性”的小说一模一样。或许就像福克纳(William Faulkner)所说的，这样的书比其他的小说还更有可读性。&lt;/p>
&lt;p>一本论说性的书的主要目的是在传达知识。“知识”在这样的书中被广泛地解说着。任何一本书，如果主要的内容是由一些观点、理论、假设、推断所组成，并且作者多少表示了这些主张是有根据的，有道理的，那这种传达知识的书，就是一本论说性(expository)的书。就跟小说一样，大多数人看到论说性的书也一眼就能辨识出来。然而，就像要分辨小说与非小说很困难一样，要区别出如此多样化的论说性书籍也并非易事。我们要知道的不只是哪一类的书带给我们指导，还要知道是用什么方法指导。历史类的书与哲学类的书，所提供的知识与启发方式就截然不同。在物理学或伦理学上，处理同一个问题的方法可能也不尽相同。更别提各个不同作者在处理这么多不同问题时所应用的各种不同方法了。&lt;/p>
&lt;p>因此，分析阅读的第一个规则，虽然适用于所有的书籍，却特别适合用来阅读非小说，论说性的书。你要如何运用这个规则呢？尤其是这个规则的最后那句话？&lt;/p>
&lt;p>之前我们已经建议过，一开始时，你要先检视这本书—用检视阅读先浏览一遍。你读读书名、副标题、目录，然后最少要看看作者的序言、摘要介绍及索引。如果这本书有书衣，要看看出版者的宣传文案。这些都是作者在向你传递讯号，让你知道风朝哪个方向吹。如果你不肯停、看、听，那也不是他的错。&lt;/p>
&lt;h2 id="2从一本书的书名中你能学到什么">
 2.从一本书的书名中你能学到什么
 &lt;a class="anchor" href="#2%e4%bb%8e%e4%b8%80%e6%9c%ac%e4%b9%a6%e7%9a%84%e4%b9%a6%e5%90%8d%e4%b8%ad%e4%bd%a0%e8%83%bd%e5%ad%a6%e5%88%b0%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h2>
&lt;p>对于作者所提出的讯号视而不见的读者，比你想像中还要多得多。我们跟学生在一起，就已经一再感觉如此了。我们问他们这本书在说些什么？我们要他们用最简单的通常用语，告诉我们这本书是哪一类的书。这是很好的，也是要开始讨论一本书几乎必要的方式。但是，我们的问题，却总是很难得到任何答案。&lt;/p>
&lt;p>我们举一两个这种让人困扰的例子吧！1859年，达尔文（CharlesDarwin）出版了一本很有名的书。一个世纪之后，所有的英语国家都在庆贺这本书的诞生。这本书引起无止境的争论，不论是从中学到一点东西，还是没学到多少东西的评论者，一致肯定其影响力。这本书谈论的是人类的进化，书名中有个“种&amp;quot;(species)字。到底这个书名在说些什么？&lt;/p>
&lt;p>或许你会说那是《物种起源））（The Origin of Species），这样说你就对了。但是你也可能不会这样说，你可能会说那是《人种起源》（TheOrigin of the Species).最近我们问了一些年纪在25岁左右，受过良好教育的年轻人，到底达尔文写的是哪一本书，结果有一半以上的人说是《人种起源》。出这样的错是很明显的，他们可能从来没有读过那本书，只是猜想那是一本谈论人类种族起源的书。事实上，这本书跟这个主题只有一点点关联，甚至与此毫无关系。达尔文是在后来才又写了一本与此有关的书《人类始祖》（The Descent of Man）。《物种起源》，就像书名所说的一样，书中谈的是自然世界中，大量的植物、动物一开始是从少量的族群繁衍出来的，因此他声明了“物竞天择”的原理。我们会指出这个普遍的错误，是因为许多人以为他们知道这本书的书名，而事实上只有少之又少的人真的用心读过书名，也想过其中的含意。&lt;/p>
&lt;p>再举一个例子。在这个例子中，我们不要你记住书名，但去想想其中的含意。吉朋写了一本很有名的书，而且还出名地长，是一本有关罗马帝国的书，他称这本书为《罗马帝国衰亡史》。几乎每个人拿到那本书都会认得这个书名，还有很多人即使没看到书，也知道这个书名。事实上，“衰亡”已经变成一个家喻户晓的用语了。虽然如此，当我们问到同样一批二十五岁左右，受过良好教育的年轻人，为什么第一章要叫做：《安东尼时代的帝国版图与武力》时，他们却毫无头绪。他们并没有看出整本书的书名既然叫作“衰亡史”，叙事者当然就应该从罗马帝国极盛时期开始写，一直到帝国衰亡为止。他们无意识地将“衰亡”两个字转换成“兴亡”了。他们很困惑于书中并没有提到罗马共和国，那个在安东尼之前一个半世纪就结束的时代。如果他们将标题看清楚一点，就算以前不知道，他们也可以推断安东尼时代就是罗马帝国的巅峰时期。阅读书名，换句话说，可以让阅读者在开始阅读之前，获得一些基本的资讯。但是他们不这么做，甚至更多人连不太熟悉的书也不肯看一下书名。&lt;/p>
&lt;p>许多人会忽略书名或序言的原因之一是，他们认为要将手边阅读的这本书做分类是毫无必要的。他们并没有跟着分析阅读的第一个规则走。如果他们试着跟随这个规则，那就会很感激作者的帮忙。显然，作者认为，让读者知道他在写的是哪一类的书是很重要的。这也是为什么他会花那么多精神，不怕麻烦地在前言中做说明，通常也试着想要让他的书名—至少副标题—是让人能理解的。因此，爱因斯坦与英费尔德(Infeld)在他们所写的《物理之演进(The Evolution o fPhysics）一书的前言中告诉读者，他们写的是一本“科学的书，虽然很受欢迎，但却不能用读小说的方法来读”。他们还列出内容的分析表，提醒读者进一步了解他们概念中的细节。总之，列在一本书前面那些章节的标题，可以进一步放大书名的意义。&lt;/p>
&lt;p>如果读者忽略了这一切，却答不出“这是一本什么样的书”的问题，那他只该责怪自己了。事实上，他只会变得越来越困惑。如果他不能回答这个问题，如果他从没问过自己这个问题，他根本就不可能回答随之而来的，关于这本书的其他问题。&lt;/p>
&lt;p>阅读书名很重要，但还不够。除非你能在心中有一个分类的标准，否则世上再清楚的书名，再详尽的目录、前言，对你也没什么帮助。&lt;/p>
&lt;p>如果你不知道心理学与几何学都是科学，或者，如果你不知道这两本书书名上的“原理”与“原则”是大致相同的意思（虽然一般而言不尽相同），你就不知道欧几里得(Euclid)的《几何原理》(Elements of Geometry）与威廉·詹姆斯(William James)的《心理学原理》(Principlesof Psychology)是属于同一种类的书—此外，除非你知道这两本书是不同类型的科学，否则就也无法进一步区分其间的差异性。相同的，以亚里士多德的《政治学））（The Politics）与亚当·斯密的《国富论》为例，除非你了解一个现实的问题是什么，以及到底有多少不同的现实问题，否则你就无法说出这两本书相似与相异之处。&lt;/p>
&lt;p>书名有时会让书籍的分类变得比较容易一些。任何人都会知道欧几里得的《几何原理》、笛卡尔的《几何学》（Geometry)与希尔伯特（HilBert)的《几何基础)(Foundations of Geometry)都是数学的书，彼此多少和同一个主题相关。但这不是百试百中。光是从书名，也可能并不容易看出奥古斯丁的《上帝之城》（The City of God）、霍布斯的《利维坦》(Leviathan)与卢梭的《社会契约论》(Social Contract)都是政治的论述—虽然，如果仔细地阅读这三本书的章名，会发现它们都想探讨的一些共同问题。&lt;/p></description></item><item><title>08数据的家--MySQL的数据目录</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/08/</link><pubDate>Sun, 05 Jan 2025 19:17:49 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/08/</guid><description>&lt;h1 id="heading">
 #
 &lt;a class="anchor" href="#heading">#&lt;/a>
&lt;/h1>

&lt;h1 id="数据库和文件系统的工具">
 数据库和文件系统的工具
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e5%92%8c%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f%e7%9a%84%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h1>
&lt;h1 id="数据目录的结构">
 数据目录的结构
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%9b%ae%e5%bd%95%e7%9a%84%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h1>
&lt;h2 id="表在文件系统中的表示">
 表在文件系统中的表示
 &lt;a class="anchor" href="#%e8%a1%a8%e5%9c%a8%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f%e4%b8%ad%e7%9a%84%e8%a1%a8%e7%a4%ba">#&lt;/a>
&lt;/h2>
&lt;p>kjskfjksdf&lt;br>
s ksfd&lt;/p>
&lt;h3 id="innodb是如何存储表数据的1">
 InnoDB是如何存储表数据的1
 &lt;a class="anchor" href="#innodb%e6%98%af%e5%a6%82%e4%bd%95%e5%ad%98%e5%82%a8%e8%a1%a8%e6%95%b0%e6%8d%ae%e7%9a%841">#&lt;/a>
&lt;/h3>
&lt;h4 id="系统表空间1">
 系统表空间1
 &lt;a class="anchor" href="#%e7%b3%bb%e7%bb%9f%e8%a1%a8%e7%a9%ba%e9%97%b41">#&lt;/a>
&lt;/h4>
&lt;p>撒旦发就&lt;/p>
&lt;h4 id="系统表空间2">
 系统表空间2
 &lt;a class="anchor" href="#%e7%b3%bb%e7%bb%9f%e8%a1%a8%e7%a9%ba%e9%97%b42">#&lt;/a>
&lt;/h4>
&lt;p>撒旦发就&lt;/p>
&lt;h4 id="系统表空间3">
 系统表空间3
 &lt;a class="anchor" href="#%e7%b3%bb%e7%bb%9f%e8%a1%a8%e7%a9%ba%e9%97%b43">#&lt;/a>
&lt;/h4>
&lt;p>撒旦发就&lt;/p>
&lt;h3 id="innodb是如何存储表数据的2">
 InnoDB是如何存储表数据的2
 &lt;a class="anchor" href="#innodb%e6%98%af%e5%a6%82%e4%bd%95%e5%ad%98%e5%82%a8%e8%a1%a8%e6%95%b0%e6%8d%ae%e7%9a%842">#&lt;/a>
&lt;/h3></description></item><item><title>封面-版权</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E5%B0%81%E9%9D%A2-%E7%89%88%E6%9D%83/</link><pubDate>Sun, 05 Jan 2025 08:42:21 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E5%B0%81%E9%9D%A2-%E7%89%88%E6%9D%83/</guid><description>&lt;p>&lt;img src="img/000001.jpeg" alt="" />&lt;/p>
&lt;p>&lt;strong>内容简介&lt;/strong>&lt;/p>
&lt;p>本书是MySQL领域的经典之作，拥有广泛的影响力。第3版更新了大量的内容，不但涵盖了最新MySQL 5.5版本的新特性，也讲述了关于固态盘、高可扩展性设计和云计算环境下的数据库相关的新内容，原有的基准测试和性能优化部分也做了大量的扩展和补充。全书共分为16章和6个附录，内容涵盖MySQL架构和历史，基准测试和性能剖析，数据库软硬件性能优化，复制、备份和恢复，高可用与高可扩展性，以及云端的MySQL和MySQL相关工具等方面的内容。每一章都是相对独立的主题，读者可以有选择性地单独阅读。&lt;/p>
&lt;p>本书不但适合数据库管理员（DBA）阅读，也适合开发人员参考学习。不管是数据库新手还是专家，相信都能从本书有所收获。&lt;/p>
&lt;p>©2012 by Baron Schwartz，Peter Zaitsev，Vadim Tkachenko.&lt;/p>
&lt;p>Simplified Chinese Edition，jointly published by O&amp;rsquo;Reilly Media，Inc. and Publishing House of Electronics Industry，2013. Authorized translation of the English edition，2012 O&amp;rsquo;Reilly Media，Inc.，the owner of all rights to publish and sell the same.&lt;/p>
&lt;p>All rights reserved including the rights of reproduction in whole or in part in any form.&lt;/p>
&lt;p>本书简体中文版专有出版权由O&amp;rsquo;Reilly Media，Inc.授予电子工业出版社。未经许可，不得以任何方式复制或抄袭本书的任何部分。专有出版权受法律保护。&lt;/p>
&lt;p>版权贸易合同登记号图字：01-2013-1661&lt;/p>
&lt;p>&lt;strong>图书在版编目（CIP）数据&lt;/strong>&lt;/p>
&lt;p>高性能MySQL：第3版／（美）施瓦茨（Schwartz，B.），（美）扎伊采夫（Zaitsev，P.），（美）特卡琴科（Tkachenko，V.）著；宁海元等译．—北京：电子工业出版社，2013.5&lt;/p>
&lt;p>书名原文：High Performance MySQL，Third Edition&lt;/p>
&lt;p>ISBN 978-7-121-19885-4&lt;/p></description></item><item><title>第9章操作系统和硬件优化</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC9%E7%AB%A0%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%92%8C%E7%A1%AC%E4%BB%B6%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 05 Jan 2025 08:42:19 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC9%E7%AB%A0%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%92%8C%E7%A1%AC%E4%BB%B6%E4%BC%98%E5%8C%96/</guid><description>&lt;p>第9章　操作系统和硬件优化&lt;/p>
&lt;p>MySQL服务器性能受制于整个系统最薄弱的环节，承载它的操作系统和硬件往往是限制因素。磁盘大小、可用内存和CPU资源、网络，以及所有连接它们的组件，都会限制系统的最终容量。因此，需要小心地选择硬件，并对硬件和操作系统进行合适的配置。例如，若工作负载是I/O密集型的，一种方法是设计应用程序使得最大限度地减少MySQL的I/O操作。然而，更聪明的方式通常是升级I/O子系统，安装更多的内存，或重新配置现有的磁盘。&lt;/p>
&lt;p>硬件的更新换代非常迅速，所以本章有关特定产品或组件的内容可能将很快变得过时。像往常一样，我们的目标是帮助提升对这些概念的理解，这样对于即使没有直接覆盖到的知识也可以举一反三。这里我们将通过现有的硬件来阐明我们的观点。&lt;/p>
&lt;h1 id="91什么限制了mysql的性能">
 9.1　什么限制了MySQL的性能
 &lt;a class="anchor" href="#91%e4%bb%80%e4%b9%88%e9%99%90%e5%88%b6%e4%ba%86mysql%e7%9a%84%e6%80%a7%e8%83%bd">#&lt;/a>
&lt;/h1>
&lt;p>许多不同的硬件都可以影响MySQL的性能，但我们认为最常见的两个瓶颈是CPU和I/O资源。当数据可以放在内存中或者可以从磁盘中以足够快的速度读取时，CPU可能出现瓶颈。把大量的数据集完全放到大容量的内存中，以现在的硬件条件完全是可行的(1)。&lt;/p>
&lt;p>另一方面，I/O瓶颈，一般发生在工作所需的数据远远超过有效内存容量的时候。如果应用程序是分布在网络上的，或者如果有大量的查询和低延迟的要求，瓶颈可能转移到网络上，而不再是磁盘I/O(2)。&lt;/p>
&lt;p>第3章中提及的技巧可以帮助找到系统的限制因素，但即使你认为已经找到了瓶颈，也应该透过表象去看更深层次的问题。某一方面的缺陷常常会将压力施加在另一个子系统，导致这个子系统出问题。例如，若没有足够的内存，MySQL可能必须刷出缓存来腾出空间给需要的数据——然后，过了一小会，再读回刚刚刷新的数据（读取和写入操作都可能发生这个问题）。本来是内存不足，却导致出现了I/O容量不足。当找到一个限制系统性能的因素时，应该问问自己，“是这个部分本身的问题，还是系统中其他不合理的压力转移到这里所导致的？”在第3章的诊断案例中也有讨论到这个问题。&lt;/p>
&lt;p>还有另外一个例子：内存总线的瓶颈也可能表现为CPU问题。事实上，我们说一个应用程序有“CPU瓶颈”或者是“CPU密集型”，真正的意思应该是计算的瓶颈。接下来将深入探讨这个问题。&lt;/p>
&lt;h1 id="92如何为mysql选择cpu">
 9.2　如何为MySQL选择CPU
 &lt;a class="anchor" href="#92%e5%a6%82%e4%bd%95%e4%b8%bamysql%e9%80%89%e6%8b%a9cpu">#&lt;/a>
&lt;/h1>
&lt;p>在升级当前硬件或购买新的硬件时，应该考虑下工作负载是不是CPU密集型。&lt;/p>
&lt;p>可以通过检查CPU利用率来判断是否是CPU密集型的工作负载，但是仅看CPU整体的负载是不合理的，还需要看看CPU使用率和大多数重要的查询的I/O之间的平衡，并注意CPU负载是否分配均匀。本章稍后讨论的工具可以用来弄清楚是什么限制了服务器的性能。&lt;/p>
&lt;h2 id="921哪个更好更快的cpu还是更多的cpu">
 9.2.1　哪个更好：更快的CPU还是更多的CPU
 &lt;a class="anchor" href="#921%e5%93%aa%e4%b8%aa%e6%9b%b4%e5%a5%bd%e6%9b%b4%e5%bf%ab%e7%9a%84cpu%e8%bf%98%e6%98%af%e6%9b%b4%e5%a4%9a%e7%9a%84cpu">#&lt;/a>
&lt;/h2>
&lt;p>当遇到CPU密集型的工作时，MySQL通常可以从更快的CPU中获益（相对更多的CPU）。&lt;/p>
&lt;p>但这不是绝对的，因为还依赖于负载情况和CPU数量。更古老的MySQL版本在多CPU上有扩展性问题，即使新版本也不能对单个查询并发利用多个CPU。因此，CPU速度限制了每个CPU密集型查询的响应时间。&lt;/p>
&lt;p>当我们讨论CPU的时候，为保证本文易于阅读，对某些术语将不会做严格的定义。现在一般的服务器通常都有多个插槽（Socket），每个插槽上都可以插一个有多个核心的CPU（有独立的执行单元），并且每个核心可能有多个“硬件线程”。这些复杂的架构需要有点耐心去了解，并且我们不会总是明确地区分它们。不过，在一般情况下，当谈到CPU速度的时候，谈论的其实是执行单元的速度，当提到的CPU数量时，指的通常是在操作系统上看到的数量，尽管这可能是独立的执行单元数量的多倍(3)。&lt;/p>
&lt;p>这几年CPU在各个方面都有了很大的提升。例如，今天的Intel CPU速度远远超过前几代，这得益于像直接内存连接（directly attached memory）技术以及PCIe卡之类的设备互联上的改善等。这些改进对于存储设备尤其有效，例如Fusion-io和Virident的PCIe闪存驱动器。&lt;/p>
&lt;p>超线程的效果相比以前也要好得多，现在操作系统也更了解如何更好地使用超线程。而以前版本的操作系统无法识别两个虚拟处理器实际上是在同一芯片上，认为它们是独立的，于是会把任务安排在两个实际上是相同物理执行单元上的虚拟处理器。实际上单个执行单元并不是真的可以在同一时间运行两个进程，所以这样做会发生冲突和争夺资源。而同时其他CPU却可能在闲置，从而浪费资源。操作系统需要能感知超线程，因为它必须知道什么时候执行单元实际上是闲置的，然后切换相应的任务去执行。这个问题之前常见的原因是在等待内存总线，可能花费需要高达一百个CPU周期，这已经类似于一个轻量级的I/O等待。新的操作系统在这方面有了很大的改善。超线程现在已经工作得很好。过去，我们时常提醒人们禁用它，但现在已经不需要这样做了。&lt;/p>
&lt;p>这就是说，现在可以得到大量的快速的CPU——比本书的第2版出版的时候要多得多。所以多和快哪个更重要？一般来说两个都想要。从广义上来说，调优服务器可能有如下两个目标：&lt;/p>
&lt;p>低延时（快速响应）&lt;/p>
&lt;p>要做到这一点，需要高速CPU，因为每个查询只能使用一个CPU。&lt;/p>
&lt;p>高吞吐&lt;/p>
&lt;p>如果能同时运行很多查询语句，则可以从多个CPU处理查询中受益。然而，在实践中，还要取决于具体情况。因为MySQL还不能在多个CPU中完美地扩展，能用多少个CPU还是有极限的。在旧版本的MySQL中（MySQL 5.1以后的版本已经有一些提升），这个限制非常严重。在新的版本中，则可以放心地扩展到16或24个CPU，或者更多，取决于使用的是哪个版本（Percona往往在这方面略占优势）。&lt;/p>
&lt;p>如果有多路CPU，并且没有并发执行查询语句，MySQL依然可以利用额外的CPU为后台任务（例如清理InnoDB缓冲、网络操作，等等）服务。然而，这些任务通常比执行查询语句更加轻量化。&lt;/p>
&lt;p>MySQL复制（将在下一章中讨论）也能在高速CPU下工作得非常好，而多CPU对复制的帮助却不大。如果工作负载是CPU密集型，主库上的并发任务传递到备库以后会被简化为串行任务，这样即使备库硬件比主库好，也可能无法保持跟主库之间的同步。也就是说，备库的瓶颈通常是I/O子系统，而不是CPU。&lt;/p>
&lt;p>如果有一个CPU密集型的工作负载，考虑是需要更快的CPU还是更多CPU的另外一个因素是查询语句实际在做什么。在硬件层面，一个查询可以在执行或等待。处于等待状态常见的原因是在运行队列中等待（进程已经是可运行状态，但所有的CPU都忙）、等待闩锁（Latch）或锁（Lock）、等待磁盘或网络。那么你期望查询是等待什么呢？如果等待闩锁或锁，通常需要更快的CPU；如果在运行队列中等待，那么更多或者更快的CPU都可能有帮助。（也可能有例外，例如，查询等待InnoDB日志缓冲区的Mutex，直到I/O完成前都不会释放——这可能表明需要更多的I/O容量）。&lt;/p>
&lt;p>这就是说，MySQL在某些工作负载下可以有效地利用很多CPU。例如，假设有很多连接查询的是不同表（假设这些查询不会造成表锁的竞争，实际上对MyISAM和MEMORY表可能会有问题），并且服务器的总吞吐量比任何单个查询的响应时间都更重要。吞吐量在这种情况下可以非常高，因为线程可以同时运行而互不争用。&lt;/p>
&lt;p>再次说明，在理论上这可能更好地工作：不管查询是读取不同的表还是相同的表， InnoDB都会有一些全局共享的数据结构，而MyISAM在每个缓冲区都有全局锁。而且不仅仅是存储引擎，服务器层也有全局锁。以前InnoDB承担了所有的骂名，但最近做了一些改进后，暴露了服务器层中的其他瓶颈。例如臭名昭著的LOCK_open互斥量（Mutex），在MySQL 5.1和更早版本中可能就是个大问题，另外还有其他一些服务器级别的互斥量（例如查询缓存）。&lt;/p>
&lt;p>通常可以通过堆栈跟踪来诊断这些类型的竞争问题，例如Percona Toolkit中的&lt;em>pt-pmp&lt;/em>工具。如果遇到这样的问题，可能需要改变服务器的配置，禁用或改变引起问题的组件，进行数据分片（Sharding），或者通过某种方式改变做事的方法。这里无法列举所有的问题和相应的解决方案，但是一旦有一个确定的诊断，答案通常是显而易见的。大部分不幸遇到的问题都是边缘场景，最常见的问题随着时间的推移都在服务器上被修复了。&lt;/p>
&lt;h2 id="922cpu架构">
 9.2.2　CPU架构
 &lt;a class="anchor" href="#922cpu%e6%9e%b6%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>可能99%以上的MySQL实例（不含嵌入式使用）都运行在Intel或者AMD芯片的x86架构下。本书中我们基本都是针对这种情况。&lt;/p>
&lt;p>64位架构现在都是默认的了，32位CPU已经很难买到了。MySQL在64位架构上工作良好，尽管有些事暂时不能利用64位架构来做。因此，如果使用的是较老旧版本的MySQL，在64位服务器上可能要小心。例如，在MySQL 5.0发布的早期时候，每个MyISAM键缓冲区被限制为4 GB，由一个32位整数负责寻址。（可以创建多个键缓冲区来解决这个问题。）&lt;/p>
&lt;p>确保在64位硬件上使用64位操作系统！最近这种情况已经不太常见了，但以前经常可以遇到，大多数主机托管提供商暂时还是在服务器上安装32位操作系统，即使是64位CPU。32位操作系统意味着不能使用大量的内存：尽管某些32位系统可以支持大量的内存，但不能像64位系统一样有效地利用，并且在32位系统上，任何一个单独的进程都不能寻址4 GB以上的内存。&lt;/p>
&lt;h2 id="923扩展到多个cpu和核心">
 9.2.3　扩展到多个CPU和核心
 &lt;a class="anchor" href="#923%e6%89%a9%e5%b1%95%e5%88%b0%e5%a4%9a%e4%b8%aacpu%e5%92%8c%e6%a0%b8%e5%bf%83">#&lt;/a>
&lt;/h2>
&lt;p>多CPU在联机事务处理（OLTP）系统的场景中非常有用。这些系统通常执行许多小的操作，并且是从多个连接发起请求，因此可以在多个CPU上运行。在这样的环境中，并发可能成为瓶颈。大多数Web应用程序都属于这一类。&lt;/p>
&lt;p>OLTP服务器一般使用InnoDB，尽管它在多CPU的环境中还存在一些未解决的并发问题。然而，不只是InnoDB可能成为瓶颈：任何共享资源都是潜在的竞争点。InnoDB之所以获得大量关注是因为它是高并发环境下最常见的存储引擎，但MyISAM在大压力时的表现也不好，即使不修改任何数据只是读取数据也是如此。许多并发瓶颈，如InnoDB的行级锁和MyISAM的表锁，没有办法优化——除了尽可能快地处理任务之外，没有别的办法解决，这样，锁就可以尽快分配给等待的任务。如果一个锁是造成它们（其他任务）都在等待的原因，那么不管有多少CPU都一样。因此，即使是一些高并发工作负载，也可以从更快的CPU中受益。&lt;/p>
&lt;p>实际上有两种类型的数据库并发问题，需要不同的方法来解决，如下所示。&lt;/p>
&lt;p>逻辑并发问题&lt;/p>
&lt;p>应用程序可以看到资源的竞争，如表或行锁争用。这些问题通常需要好的策略来解决，如改变应用程序、使用不同的存储引擎、改变服务器的配置，或使用不同的锁定提示或事务隔离级别。&lt;/p>
&lt;p>内部并发问题&lt;/p>
&lt;p>比如信号量、访问InnoDB缓冲池页面的资源争用，等等。可以尝试通过改变服务器的设置、改变操作系统，或使用不同的硬件解决这些问题，但通常只能缓解而无法彻底消灭。在某些情况下，使用不同的存储引擎或给存储引擎打补丁，可以帮助缓解这些问题。&lt;/p>
&lt;p>MySQL的“扩展模式”是指它可以有效利用的CPU数量，以及在压力不断增长的情况下如何扩展，这同时取决于工作负载和系统架构。通过“系统架构”的手段是指通过调整操作系统和硬件，而不是通过优化使用MySQL的应用程序。CPU架构（RISC、CISC、流水线深度等）、CPU型号和操作系统都影响MySQL的扩展模式。这也是为什么说基准测试是非常重要的：一些系统可以在不断增加的并发下依然运行得很好，而另一些的表现则糟糕得多。&lt;/p>
&lt;p>有些系统在更多的处理器下甚至可能降低整体性能。这是相当普遍的情况，我们了解到许多人试图升级到有多个CPU的系统，最后只能被迫恢复到旧系统（或绑定MySQL进程到其中某些核心），因为这种升级反而降低了性能。在MySQL 5.0时代，Google的补丁和Percona Server出现之前，能有效利用的CPU核数是4核，但是现在甚至可以看到操作系统报告多达80个“CPU”的服务器。如果规划一个大的升级，必须要同时考虑硬件、服务器版本和工作负载。&lt;/p></description></item><item><title>第8章优化服务器设置</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC8%E7%AB%A0%E4%BC%98%E5%8C%96%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BE%E7%BD%AE/</link><pubDate>Sun, 05 Jan 2025 08:42:18 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC8%E7%AB%A0%E4%BC%98%E5%8C%96%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BE%E7%BD%AE/</guid><description>&lt;p>第8章　优化服务器设置&lt;/p>
&lt;p>在这一章，我们将解释为&lt;em>&lt;strong>这是我的撒旦JFK数据库嘎斯公开就开始打山豆根士大夫 圣诞节复活节是是国家开始大幅机啊可是对方看见噶开暗杀是的JFK开始讲课的感觉爱看书的JFK史蒂夫卡卡萨丁咖啡碱撒快递费始东方会i二位人家儿童科技数据库的房价开始JFK注释&lt;/strong>&lt;/em>MySQL服务器创建一个靠谱的配置文件的过程。这是一个很绕的过程，有很多有意思的关注点和值得关&lt;strong>注的思路。关注这&lt;/strong>些点很有必要，因为创建一个好配置的最快方法不是从学习配置项开始，也不是从问哪个配置项应该怎么设置或者怎么修改开始，更不是从检查服务器行为和询问哪个配置项可以提升性能开始。最好是从理解MySQL内核和行为开始。然后可以利用这些知识来指导配置MySQL。最后，可以将想要的配置和当前配置进行比较，然后纠正重要并且有价值的不同之处。&lt;/p>
&lt;p>人们经常问，“我的服务器有32GB内存，12核CPU，怎样配置最好？”很遗憾，问题没这么简单。服务器的配置应该符合它的工作负载、数据，以及应用需求，并不仅仅看硬件的情况。&lt;/p>
&lt;p>MySQL有大量可以修改的参数——但不应该随便去修改。通常只需要把基本的项配置正确（大部分情况下只有很少一些参数是真正重要的），应该将更多的时间花在schema的优化、索引，以及查询设计上。在正确地配置了MySQL的基本配置项之后，再花力气去修改其他配置项的收益通常就比较小了。&lt;/p>
&lt;p>从另一方面来说，没用的配置导致潜在风险的可能更大。我们碰到过不止一个“高度调优”过的服务器不停地崩溃，停止服务或者运行缓慢，结果都是因为错误的配置导致的。我们将花一点时间来解释为什么会发生这种情况，并且告诉大家什么是不该做的。&lt;/p>
&lt;p>那么什么是该做的呢？确保基本的配置是正确的，例如InnoDB的Buffer Pool和日志文件缓存大小，如果想防止出问题（提醒一下，这样做通常不能提升性能——它们只能避免问题），就设置一个比较安全和稳健的值，剩下的配置就不用管了。如果碰到了问题，可以使用第3章提到的技巧小心地进行诊断。如果问题是由于服务器的某部分导致的，而这恰好可以通过某个配置项解决，那么需要做的就是更改配置。&lt;/p>
&lt;p>有时候，在某些特定的场景下，也有可能设置某些特殊的配置项会有显著的性能提升。但无论如何，这些特殊的配置项不应该成为服务器基本配置文件的一部分。只有当发现特定的性能问题才应该设置它们。这就是为什么我们不建议通过寻找有问题的地方修改配置项的原因。如果有些地方确实需要提升，也需要在查询响应时间上有所体现。最好是从查询语句和响应时间入手来开始分析问题，而不是通过配置项。这可以节省大量的时间，避免很多的问题。&lt;/p>
&lt;p>另一个节省时间和避免麻烦的好办法是使用默认配置，除非是明确地知道默认值会有问题。很多人都是在默认配置下运行的，这种情况非常普遍。这使得默认配置是经过最多实际测试的。对配置项做一些不必要的修改可能会遇到一些意料之外的bug。&lt;/p>
&lt;h1 id="81mysql配置的工作原理">
 8.1　MySQL配置的工作原理
 &lt;a class="anchor" href="#81mysql%e9%85%8d%e7%bd%ae%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86">#&lt;/a>
&lt;/h1>
&lt;p>在讨论如何配置MySQL之前，我们先来解释一下MySQL的配置机制。MySQL对配置要求非常宽松，但是下面这些建议可能会为你节省大量的工作和时间。&lt;/p>
&lt;p>首先应该知道的是MySQL从哪里获得配置信息：命令行参数和配置文件。在类UNIX系统中，配置文件的位置一般在*/etc/my.cnf&lt;em>或者&lt;/em>/etc/mysql/my.cnf*。如果使用操作系统的启动脚本，这通常是唯一指定配置设置的地方。如果手动启动MySQL，例如在测试安装时，也可以在命令行指定设置。实际上，服务器会读取配置文件的内容，删除所有注释和换行，然后和命令行选项一起处理。&lt;/p>
&lt;p>&lt;img src="img/000000.jpeg" alt="i-" />关于术语的说明：因为很多MySQL命令行选项跟服务器变量相同，我们有时把选项和变量替换使用。大部分变量和它们对应的命令行选项名称一样，但是有一些例外。例如，&lt;em>&amp;ndash;memlock&lt;/em>选项设置了locked_in_memory变量。&lt;/p>
&lt;p>任何打算长期使用的设置都应该写到全局配置文件，而不是在命令行特别指定。否则，如果偶然在启动时忘了设置就会有风险。把所有的配置文件放在同一个地方以方便检查也是个好办法。&lt;/p>
&lt;p>一定要清楚地知道服务器配置文件的位置！我们见过有些人尝试修改配置文件但是不生效，因为他们修改的并不是服务器读取的文件，例如Debian下，&lt;em>/etc/mysql/my.cnf&lt;/em>才是MySQL读取的配置文件，而不是*/etc/my.cnf*。有时候好几个地方都有配置文件，也许是因为之前的系统管理员也没搞清楚情况（因此在各个可能的位置都放了一份）。如果不知道当前使用的配置文件路径，可以尝试下面的操作：&lt;/p>
&lt;pre>&lt;code> ** $ which mysqld** 
 /usr/sbin/mysqld
 ** $ /usr/sbin/mysqld --verbose --help | grep -A 1 'Default options'** 
 Default options are read from the following files in the given order:
 /etc/mysql/my.cnf ~/.my.cnf /usr/etc/my.cnf
&lt;/code>&lt;/pre>
&lt;p>对于服务器上只有一个MySQL实例的典型安装，这个命令很有用。也可以设计更复杂的配置，但是没有标准的方法告诉你怎么来做。MySQL发行版包含了一个现在废弃了的程序，叫mysqlmanager，可以在一个有多个独立部分的配置文件上运行多个实例。（现在已经被一样古老的mysqld_multi脚本替代。）然而许多操作系统发行版本在启动脚本中并不包含或使用这个程序。实际上，很多系统甚至没有使用MySQL提供的启动脚本。&lt;/p>
&lt;p>配置文件通常分成多个部分，每个部分的开头是一个用方括号括起来的分段名称。MySQL程序通常读取跟它同名的分段部分，许多客户端程序还会读取client部分，这是一个存放公用设置的地方。服务器通常读取mysqld这一段。一定要确认配置项放在了文件正确的分段中，否则配置是不会生效的。&lt;/p>
&lt;h2 id="811语法作用域和动态性">
 8.1.1　语法、作用域和动态性
 &lt;a class="anchor" href="#811%e8%af%ad%e6%b3%95%e4%bd%9c%e7%94%a8%e5%9f%9f%e5%92%8c%e5%8a%a8%e6%80%81%e6%80%a7">#&lt;/a>
&lt;/h2>
&lt;p>配置项设置都使用小写，单词之间用下画线或横线隔开。下面的例子是等价的，并且可能在命令行和配置文件中都看到这两种格式：&lt;/p>
&lt;pre>&lt;code> /usr/sbin/mysqld --auto-increment-offset=5
 /usr/sbin/mysqld --auto-increment-offset=5
&lt;/code>&lt;/pre>
&lt;p>我们建议使用一种固定的风格。这样在配置文件中搜索配置项时会容易得多。&lt;/p>
&lt;p>配置项可以有多个作用域。有些设置是服务器级的（全局作用域），有些对每个连接是不同的（会话作用域），剩下的一些是对象级的。许多会话级变量跟全局变量相等，可以认为是默认值。如果改变会话级变量，它只影响改动的当前连接，当连接关闭时所有参数变更都会失效。下面有一些例子，你应该清楚这些不同类型的行为：&lt;/p>
&lt;ul>
&lt;li>query_cache_sizey变量是全局的。&lt;/li>
&lt;li>sort_buffer_sizey变量默认是全局相同的，但是每个线程里也可以设置。&lt;/li>
&lt;li>join_buffer_sizey变量也有全局默认值且每个线程是可以设置的，但是若一个查询中关联多张表，可以为每个关联分配一个关联缓冲（join buffer），所以每个查询可能有多个关联缓冲。&lt;/li>
&lt;/ul>
&lt;p>另外，除了在配置文件中设置变量，有很多变量（但不是所有）也可以在服务器运行时修改。MySQL把这些归为动态配置变量。下面的语句展示了动态改变sort_buffer_size的会话值和全局值的不同方式：&lt;/p></description></item><item><title>第7章MySQL高级特性</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC7%E7%AB%A0MySQL%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/</link><pubDate>Sun, 05 Jan 2025 08:42:17 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC7%E7%AB%A0MySQL%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7/</guid><description>&lt;p>第7章　MySQL高级特性&lt;/p>
&lt;p>MySQL从5.0和5.1版本开始引入了很多高级特性，例如分区、触发器等，这对有其他关系型数据库使用背景的用户来说可能并不陌生。这些新特性吸引了很多用户开始使用MySQL。不过，这些特性的性能到底如何，还需要用户真正使用过才能知道。本章我们将为大家介绍，在真实的世界中，这些特性表现如何，而不是只简单地介绍参考手册或者宣传材料上的数据。&lt;/p>
&lt;h1 id="71分区表">
 7.1　分区表
 &lt;a class="anchor" href="#71%e5%88%86%e5%8c%ba%e8%a1%a8">#&lt;/a>
&lt;/h1>
&lt;p>对用户来说，分区表是一个独立的逻辑表，但是底层由多个物理子表组成。实现分区的代码实际上是对一组底层表的句柄对象（Handler Object）的封装。对分区表的请求，都会通过句柄对象转化成对存储引擎的接口调用。所以分区对于SQL层来说是一个完全封装底层实现的黑盒子，对应用是透明的，但是从底层的文件系统来看就很容易发现，每一个分区表都有一个使用#分隔命名的表文件。&lt;/p>
&lt;p>MySQL实现分区表的方式——对底层表的封装——意味着索引也是按照分区的子表定义的，而没有全局索引。这和Oracle不同，在Oracle中可以更加灵活地定义索引和表是否进行分区。&lt;/p>
&lt;p>MySQL在创建表时使用PARTITION BY子句定义每个分区存放的数据。在执行查询的时候，优化器会根据分区定义过滤那些没有我们需要数据的分区，这样查询就无须扫描所有分区——只需要查找包含需要数据的分区就可以了。&lt;/p>
&lt;p>分区的一个主要目的是将数据按照一个较粗的粒度分在不同的表中。这样做可以将相关的数据存放在一起，另外，如果想一次批量删除整个分区的数据也会变得很方便。&lt;/p>
&lt;p>在下面的场景中，分区可以起到非常大的作用：&lt;/p>
&lt;ul>
&lt;li>表非常大以至于无法全部都放在内存中，或者只在表的最后部分有热点数据，其他均是历史数据。&lt;/li>
&lt;li>分区表的数据更容易维护。例如，想批量删除大量数据可以使用清除整个分区的方式。另外，还可以对一个独立分区进行优化、检查、修复等操作。&lt;/li>
&lt;li>分区表的数据可以分布在不同的物理设备上，从而高效地利用多个硬件设备。&lt;/li>
&lt;li>可以使用分区表来避免某些特殊的瓶颈，例如InnoDB的单个索引的互斥访问、ext3文件系统的inode锁竞争等。&lt;/li>
&lt;li>如果需要，还可以备份和恢复独立的分区，这在非常大的数据集的场景下效果非常好。&lt;/li>
&lt;/ul>
&lt;p>MySQL的分区实现非常复杂，我们不打算介绍实现的全部细节。这里我们将专注在分区性能方面，所以如果想了解更多的关于分区的基础知识，我们建议阅读MySQL官方手册中的“分区”一节，其中介绍了很多分区相关的基础知识。另外，还可以阅读CREATE TABLE、SHOW CREATE TABLE、ALTER TABLE和INFORMATION_SCHEMA.PARTITIONS、EXPLAIN关于分区部分的介绍。分区特性使得CREATE TABLE和ALTER TABLE命令变得更加复杂了。&lt;/p>
&lt;p>分区表本身也有一些限制，下面是其中比较重要的几点：&lt;/p>
&lt;ul>
&lt;li>一个表最多只能有1024个分区。&lt;/li>
&lt;li>在MySQL 5.1中，分区表达式必须是整数，或者是返回整数的表达式。在MySQL 5.5中，某些场景中可以直接使用列来进行分区。&lt;/li>
&lt;li>如果分区字段中有主键或者唯一索引的列，那么所有主键列和唯一索引列都必须包含进来。&lt;/li>
&lt;li>分区表中无法使用外键约束。&lt;/li>
&lt;/ul>
&lt;h2 id="711分区表的原理">
 7.1.1　分区表的原理
 &lt;a class="anchor" href="#711%e5%88%86%e5%8c%ba%e8%a1%a8%e7%9a%84%e5%8e%9f%e7%90%86">#&lt;/a>
&lt;/h2>
&lt;p>如前所述，分区表由多个相关的底层表实现，这些底层表也是由句柄对象（Handler object）表示，所以我们也可以直接访问各个分区。存储引擎管理分区的各个底层表和管理普通表一样（所有的底层表都必须使用相同的存储引擎），分区表的索引只是在各个底层表上各自加上一个完全相同的索引。从存储引擎的角度来看，底层表和一个普通表没有任何不同，存储引擎也无须知道这是一个普通表还是一个分区表的一部分。&lt;/p>
&lt;p>分区表上的操作按照下面的操作逻辑进行：&lt;/p>
&lt;p>SELECT查询&lt;/p>
&lt;p>当查询一个分区表的时候，分区层先打开并锁住所有的底层表，优化器先判断是否可以过滤部分分区，然后再调用对应的存储引擎接口访问各个分区的数据。&lt;/p>
&lt;p>INSERT操作&lt;/p>
&lt;p>当写入一条记录时，分区层先打开并锁住所有的底层表，然后确定哪个分区接收这条记录，再将记录写入对应底层表。&lt;/p>
&lt;p>DELETE操作&lt;/p>
&lt;p>当删除一条记录时，分区层先打开并锁住所有的底层表，然后确定数据对应的分区，最后对相应底层表进行删除操作。&lt;/p>
&lt;p>UPDATE操作&lt;/p>
&lt;p>当更新一条记录时，分区层先打开并锁住所有的底层表，MySQL先确定需要更新的记录在哪个分区，然后取出数据并更新，再判断更新后的数据应该放在哪个分区，最后对底层表进行写入操作，并对原数据所在的底层表进行删除操作。&lt;/p>
&lt;p>有些操作是支持过滤的。例如，当删除一条记录时，MySQL需要先找到这条记录，如果WHERE条件恰好和分区表达式匹配，就可以将所有不包含这条记录的分区都过滤掉。这对UPDATE语句同样有效。如果是INSERT操作，则本身就是只命中一个分区，其他分区都会被过滤掉。MySQL先确定这条记录属于哪个分区，再将记录写入对应的底层分区表，无须对任何其他分区进行操作。&lt;/p>
&lt;p>虽然每个操作都会“先打开并锁住所有的底层表”，但这并不是说分区表在处理过程中是锁住全表的。如果存储引擎能够自己实现行级锁，例如InnoDB，则会在分区层释放对应表锁。这个加锁和解锁过程与普通InnoDB上的查询类似。&lt;/p>
&lt;p>后面我们会通过一些例子来看看，当访问一个分区表的时候，打开和锁住所有底层表的代价及其带来的后果。&lt;/p>
&lt;h2 id="712分区表的类型">
 7.1.2　分区表的类型
 &lt;a class="anchor" href="#712%e5%88%86%e5%8c%ba%e8%a1%a8%e7%9a%84%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>MySQL支持多种分区表。我们看到最多的是根据范围进行分区，每个分区存储落在某个范围的记录，分区表达式可以是列，也可以是包含列的表达式。例如，下表就可以将每一年的销售额存放在不同的分区里：&lt;/p>
&lt;pre>&lt;code> CREATE TABLE sales (
 order_date DATETIME NOT NULL,
 -- Other columns omitted
 ) ENGINE=InnoDB PARTITION BY RANGE(YEAR(order_date)) (
 PARTITION p_2010 VALUES LESS THAN (2010),
 PARTITION p_2011 VALUES LESS THAN (2011),
 PARTITION p_2012 VALUES LESS THAN (2012),
 PARTITION p_catchall VALUES LESS THAN MAXVALUE );
&lt;/code>&lt;/pre>
&lt;p>PARTITION分区子句中可以使用各种函数。但有一个要求，表达式返回的值要是一个确定的整数，且不能是一个常数。这里我们使用函数YEAR()，也可以使用任何其他的函数，如TO_DAYS()。根据时间间隔进行分区，是一种很常见的分区方式，后面我们还会再回过头来看这个例子，看看如何优化这个例子来避免一些问题。&lt;/p></description></item><item><title>第6章查询性能优化</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC6%E7%AB%A0%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 05 Jan 2025 08:42:16 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC6%E7%AB%A0%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid><description>&lt;p>第6章　查询性能优化&lt;/p>
&lt;p>前面的章节我们介绍了如何设计最优的库表结构、如何建立最好的索引，这些对于高性能来说是必不可少的。但这些还不够——还需要合理的设计查询。如果查询写得很糟糕，即使库表结构再合理、索引再合适，也无法实现高性能。&lt;/p>
&lt;p>查询优化、索引优化、库表结构优化需要齐头并进，一个不落。在获得编写MySQL查询的经验的同时，也将学习到如何为高效的查询设计表和索引。同样的，也可以学习到在优化库表结构时会影响到哪些类型的查询。这个过程需要时间，所以建议大家在学习后面章节的时候多回头看看这三章的内容。&lt;/p>
&lt;p>本章将从查询设计的一些基本原则开始——这也是在发现查询效率不高的时候首先需要考虑的因素。然后会介绍一些更深的查询优化的技巧，并会介绍一些MySQL优化器内部的机制。我们将展示MySQL是如何执行查询的，你也将学会如何去改变一个查询的执行计划。最后，我们要看一下MySQL优化器在哪些方面做得还不够，并探索查询优化的模式，以帮助MySQL更有效地执行查询。&lt;/p>
&lt;p>本章的目标是帮助大家更深刻地理解MySQL如何真正地执行查询，并明白高效和低效的原因何在，这样才能充分发挥MySQL的优势，并避开它的弱点。&lt;/p>
&lt;h1 id="61为什么查询速度会慢">
 6.1　为什么查询速度会慢
 &lt;a class="anchor" href="#61%e4%b8%ba%e4%bb%80%e4%b9%88%e6%9f%a5%e8%af%a2%e9%80%9f%e5%ba%a6%e4%bc%9a%e6%85%a2">#&lt;/a>
&lt;/h1>
&lt;p>在尝试编写快速的查询之前，需要清楚一点，真正重要是响应时间。如果把查询看作是一个任务，那么它由一系列子任务组成，每个子任务都会消耗一定的时间。如果要优化查询，实际上要优化其子任务，要么消除其中一些子任务，要么减少子任务的执行次数，要么让子任务运行得更快(1)。&lt;/p>
&lt;p>MySQL在执行查询的时候有哪些子任务，哪些子任务运行的速度很慢？这里很难给出完整的列表，但如果按照第3章介绍的方法对查询进行剖析，就能看到查询所执行的子任务。通常来说，查询的生命周期大致可以按照顺序来看：从客户端，到服务器，然后在服务器上进行解析，生成执行计划，执行，并返回结果给客户端。其中“执行”可以认为是整个生命周期中最重要的阶段，这其中包括了大量为了检索数据到存储引擎的调用以及调用后的数据处理，包括排序、分组等。&lt;/p>
&lt;p>在完成这些任务的时候，查询需要在不同的地方花费时间，包括网络，CPU计算，生成统计信息和执行计划、锁等待（互斥等待）等操作，尤其是向底层存储引擎检索数据的调用操作，这些调用需要在内存操作、CPU操作和内存不足时导致的I/O操作上消耗时间。根据存储引擎不同，可能还会产生大量的上下文切换以及系统调用。&lt;/p>
&lt;p>在每一个消耗大量时间的查询案例中，我们都能看到一些不必要的额外操作、某些操作被额外地重复了很多次、某些操作执行得太慢等。优化查询的目的就是减少和消除这些操作所花费的时间。&lt;/p>
&lt;p>再次申明一点，对于一个查询的全部生命周期，上面列的并不完整。这里我们只是想说明：了解查询的生命周期、清楚查询的时间消耗情况对于优化查询有很大的意义。有了这些概念，我们再一起来看看如何优化查询。&lt;/p>
&lt;h1 id="62慢查询基础优化数据访问">
 6.2　慢查询基础：优化数据访问
 &lt;a class="anchor" href="#62%e6%85%a2%e6%9f%a5%e8%af%a2%e5%9f%ba%e7%a1%80%e4%bc%98%e5%8c%96%e6%95%b0%e6%8d%ae%e8%ae%bf%e9%97%ae">#&lt;/a>
&lt;/h1>
&lt;p>查询性能低下最基本的原因是访问的数据太多。某些查询可能不可避免地需要筛选大量数据，但这并不常见。大部分性能低下的查询都可以通过减少访问的数据量的方式进行优化。对于低效的查询，我们发现通过下面两个步骤来分析总是很有效：&lt;/p>
&lt;ol>
&lt;li>确认应用程序是否在检索大量超过需要的数据。这通常意味着访问了太多的行，但有时候也可能是访问了太多的列。&lt;/li>
&lt;li>确认MySQL服务器层是否在分析大量超过需要的数据行。&lt;/li>
&lt;/ol>
&lt;h2 id="621是否向数据库请求了不需要的数据">
 6.2.1　是否向数据库请求了不需要的数据
 &lt;a class="anchor" href="#621%e6%98%af%e5%90%a6%e5%90%91%e6%95%b0%e6%8d%ae%e5%ba%93%e8%af%b7%e6%b1%82%e4%ba%86%e4%b8%8d%e9%9c%80%e8%a6%81%e7%9a%84%e6%95%b0%e6%8d%ae">#&lt;/a>
&lt;/h2>
&lt;p>有些查询会请求超过实际需要的数据，然后这些多余的数据会被应用程序丢弃。这会给MySQL服务器带来额外的负担，并增加网络开销(2)，另外也会消耗应用服务器的CPU和内存资源。&lt;/p>
&lt;p>这里有一些典型案例：&lt;/p>
&lt;p>查询不需要的记录&lt;/p>
&lt;p>一个常见的错误是常常会误以为MySQL会只返回需要的数据，实际上MySQL却是先返回全部结果集再进行计算。我们经常会看到一些了解其他数据库系统的人会设计出这类应用程序。这些开发者习惯使用这样的技术，先使用SELECT语句查询大量的结果，然后获取前面的N行后关闭结果集（例如在新闻网站中取出100条记录，但是只是在页面上显示前面10条）。他们认为MySQL会执行查询，并只返回他们需要的10条数据，然后停止查询。实际情况是MySQL会查询出全部的结果集，客户端的应用程序会接收全部的结果集数据，然后抛弃其中大部分数据。最简单有效的解决方法就是在这样的查询后面加上LIMIT。&lt;/p>
&lt;p>多表关联时返回全部列&lt;/p>
&lt;p>如果你想查询所有在电影&lt;em>Academy Dinosaur&lt;/em>中出现的演员，千万不要按下面的写法编写查询：&lt;/p>
&lt;pre>&lt;code> mysql&amp;gt; ** SELECT * FROM sakila.actor** 
 -&amp;gt; ** INNER JOIN sakila.film_actor USING(actor_id)** 
 -&amp;gt; ** INNER JOIN sakila.film USING(film_id)** 
 -&amp;gt; ** WHERE sakila.film.title = 'Academy Dinosaur';** 
&lt;/code>&lt;/pre>
&lt;p>这将返回这三个表的全部数据列。正确的方式应该是像下面这样只取需要的列：&lt;/p>
&lt;pre>&lt;code> mysql&amp;gt; ** SELECT sakila.actor.* FROM sakila.actor...;** 
&lt;/code>&lt;/pre>
&lt;p>总是取出全部列&lt;/p></description></item><item><title>第5章创建高性能的索引</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC5%E7%AB%A0%E5%88%9B%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%B4%A2%E5%BC%95/</link><pubDate>Sun, 05 Jan 2025 08:42:15 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC5%E7%AB%A0%E5%88%9B%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%B4%A2%E5%BC%95/</guid><description>&lt;p>第5章　创建高性能的索引&lt;/p>
&lt;p>索引（在MySQL中也叫做“键（key）”）是存储引擎用于快速找到记录的一种数据结构。这是索引的基本功能，除此之外，本章还将讨论索引其他一些方面有用的属性。&lt;/p>
&lt;p>索引对于良好的性能非常关键。尤其是当表中的数据量越来越大时，索引对性能的影响愈发重要。在数据量较小且负载较低时，不恰当的索引对性能的影响可能还不明显，但当数据量逐渐增大时，性能则会急剧下降(1)。&lt;/p>
&lt;p>不过，索引却经常被忽略，有时候甚至被误解，所以在实际案例中经常会遇到由糟糕索引导致的问题。这也是我们把索引优化放在了靠前的章节，甚至比查询优化还靠前的原因。&lt;/p>
&lt;p>索引优化应该是对查询性能优化最有效的手段了。索引能够轻易将查询性能提高几个数量级，“最优”的索引有时比一个“好的”索引性能要好两个数量级。创建一个真正“最优”的索引经常需要重写查询，所以，本章和下一章的关系非常紧密。&lt;/p>
&lt;h1 id="51索引基础">
 5.1　索引基础
 &lt;a class="anchor" href="#51%e7%b4%a2%e5%bc%95%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h1>
&lt;p>要理解MySQL中索引是如何工作的，最简单的方法就是去看看一本书的“索引”部分：如果想在一本书中找到某个特定主题，一般会先看书的“索引”，找到对应的页码。&lt;/p>
&lt;p>在MySQL中，存储引擎用类似的方法使用索引，其先在索引中找到对应值，然后根据匹配的索引记录找到对应的数据行。假如要运行下面的查询：&lt;/p>
&lt;pre>&lt;code> mysql&amp;gt; ** SELECT first_name FROM sakila.actor WHERE actor_id=5;** 
&lt;/code>&lt;/pre>
&lt;p>如果在actor_id列上建有索引，则MySQL将使用该索引找到actor_id为5的行，也就是说，MySQL先在索引上按值进行查找，然后返回所有包含该值的数据行。&lt;/p>
&lt;p>索引可以包含一个或多个列的值。如果索引包含多个列，那么列的顺序也十分重要，因为MySQL只能高效地使用索引的最左前缀列。创建一个包含两个列的索引，和创建两个只包含一列的索引是大不相同的，下面将详细介绍。&lt;/p>
&lt;p>&lt;strong>如果使用的是ORM，是否还需要关心索引？&lt;/strong>&lt;/p>
&lt;p>简而言之：是的，仍然需要理解索引，即使是使用对象关系映射（ORM）工具。&lt;/p>
&lt;p>ORM工具能够生产符合逻辑的、合法的查询（多数时候），除非只是生成非常基本的查询（例如仅是根据主键查询），否则它很难生成适合索引的查询。无论是多么复杂的ORM工具，在精妙和复杂的索引面前都是“浮云”。读完本章后面的内容以后，你就会同意这个观点的!很多时候，即使是查询优化技术专家也很难兼顾到各种情况，更别说ORM了。&lt;/p>
&lt;h2 id="511索引的类型">
 5.1.1　索引的类型
 &lt;a class="anchor" href="#511%e7%b4%a2%e5%bc%95%e7%9a%84%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>索引有很多种类型，可以为不同的场景提供更好的性能。在MySQL中，索引是在存储引擎层而不是服务器层实现的。所以，并没有统一的索引标准：不同存储引擎的索引的工作方式并不一样，也不是所有的存储引擎都支持所有类型的索引。即使多个存储引擎支持同一种类型的索引，其底层的实现也可能不同。&lt;/p>
&lt;p>下面我们先来看看MySQL支持的索引类型，以及它们的优点和缺点。&lt;/p>
&lt;h3 id="b-tree索引">
 B-Tree索引
 &lt;a class="anchor" href="#b-tree%e7%b4%a2%e5%bc%95">#&lt;/a>
&lt;/h3>
&lt;p>当人们谈论索引的时候，如果没有特别指明类型，那多半说的是B-Tree索引，它使用B-Tree数据结构来存储数据(2)。大多数MySQL引擎都支持这种索引。Archive引擎是一个例外：5.1之前Archive不支持任何索引，直到5.1才开始支持单个自增列（AUTO_INCREMENT）的索引。&lt;/p>
&lt;p>我们使用术语“B-Tree”，是因为MySQL在CREATE TABLE和其他语句中也使用该关键字。不过，底层的存储引擎也可能使用不同的存储结构，例如，NDB集群存储引擎内部实际上使用了T-Tree结构存储这种索引，即使其名字是BTREE；InnoDB则使用的是B+Tree，各种数据结构和算法的变种不在本书的讨论范围之内。&lt;/p>
&lt;p>存储引擎以不同的方式使用B-Tree索引，性能也各有不同，各有优劣。例如，MyISAM使用前缀压缩技术使得索引更小，但InnoDB则按照原数据格式进行存储。再如MyISAM索引通过数据的物理位置引用被索引的行，而InnoDB则根据主键引用被索引的行。&lt;/p>
&lt;p>B-Tree通常意味着所有的值都是按顺序存储的，并且每一个叶子页到根的距离相同。图5-1展示了B-Tree索引的抽象表示，大致反映了InnoDB索引是如何工作的。MyISAM使用的结构有所不同，但基本思想是类似的。&lt;/p>
&lt;p>&lt;img src="img/000001.jpeg" alt="" />
&lt;strong>图5-1：建立在B-Tree结构（从技术上来说是B+Tree）上的索引&lt;/strong>&lt;/p>
&lt;p>B-Tree索引能够加快访问数据的速度，因为存储引擎不再需要进行全表扫描来获取需要的数据，取而代之的是从索引的根节点（图示并未画出）开始进行搜索。根节点的槽中存放了指向子节点的指针，存储引擎根据这些指针向下层查找。通过比较节点页的值和要查找的值可以找到合适的指针进入下层子节点，这些指针实际上定义了子节点页中值的上限和下限。最终存储引擎要么是找到对应的值，要么该记录不存在。&lt;/p>
&lt;p>叶子节点比较特别，它们的指针指向的是被索引的数据，而不是其他的节点页（不同引擎的“指针”类型不同）。图5-1中仅绘制了一个节点和其对应的叶子节点，其实在根节点和叶子节点之间可能有很多层节点页。树的深度和表的大小直接相关。&lt;/p>
&lt;p>B-Tree对索引列是顺序组织存储的，所以很适合查找范围数据。例如，在一个基于文本域的索引树上，按字母顺序传递连续的值进行查找是非常合适的，所以像“找出所有以I到K开头的名字”这样的查找效率会非常高。&lt;/p>
&lt;p>假设有如下数据表：&lt;/p>
&lt;pre>&lt;code> CREATE TABLE People (
 last_name varchar(50) not null,
 first_name varchar(50) not null,
 dob date not null,
 gender enum('m', 'f') not null,
 key(last_name, first_name, dob)
 );
&lt;/code>&lt;/pre>
&lt;p>对于表中的每一行数据，索引中包含了last_name、frst_name和dob列的值，图5-2显示了该索引是如何组织数据的存储的。&lt;/p></description></item><item><title>第4章Schema与数据类型优化</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC4%E7%AB%A0Schema%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BC%98%E5%8C%96/</link><pubDate>Sun, 05 Jan 2025 08:42:14 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC4%E7%AB%A0Schema%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BC%98%E5%8C%96/</guid><description>&lt;p>第4章　Schema与数据类型优化&lt;/p>
&lt;p>良好的逻辑设计和物理设计是高性能的基石，应该根据系统将要执行的查询语句来设计schema，这往往需要权衡各种因素。例如，反范式的设计可以加快某些类型的查询，但同时可能使另一些类型的查询变慢。比如添加计数表和汇总表是一种很好的优化查询的方式，但这些表的维护成本可能会很高。MySQL独有的特性和实现细节对性能的影响也很大。&lt;/p>
&lt;p>本章和聚焦在索引优化的下一章，覆盖了MySQL特有的schema设计方面的主题。我们假设读者已经知道如何设计数据库，所以本章既不会介绍如何入门数据库设计，也不会讲解数据库设计方面的深入内容。这一章关注的是MySQL数据库的设计，主要介绍的是MySQL数据库设计与其他关系型数据库管理系统的区别。如果需要学习数据库设计方面的基础知识，建议阅读Clare Churcher的&lt;em>Beginning Database Design&lt;/em>（Apress出版社）一书。&lt;/p>
&lt;p>本章内容是为接下来的两个章节做铺垫。在这三章中，我们将讨论逻辑设计、物理设计和查询执行，以及它们之间的相互作用。这既需要关注全局，也需要专注细节。还需要理解整个系统以便弄清楚各个部分如何相互影响。如果在阅读完索引和查询优化章节后再回头来看这一章，也许会发现本章很有用，很多讨论的议题不能孤立地考虑。&lt;/p>
&lt;h1 id="41选择优化的数据类型">
 4.1　选择优化的数据类型
 &lt;a class="anchor" href="#41%e9%80%89%e6%8b%a9%e4%bc%98%e5%8c%96%e7%9a%84%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h1>
&lt;p>MySQL支持的数据类型非常多，选择正确的数据类型对于获得高性能至关重要。不管存储哪种类型的数据，下面几个简单的原则都有助于做出更好的选择。&lt;/p>
&lt;p>更小的通常更好。&lt;/p>
&lt;p>一般情况下，应该尽量使用可以正确存储数据的最小数据类型(1)。更小的数据类型通常更快，因为它们占用更少的磁盘、内存和CPU缓存，并且处理时需要的CPU周期也更少。&lt;/p>
&lt;p>但是要确保没有低估需要存储的值的范围，因为在schema中的多个地方增加数据类型的范围是一个非常耗时和痛苦的操作。如果无法确定哪个数据类型是最好的，就选择你认为不会超过范围的最小类型。（如果系统不是很忙或者存储的数据量不多，或者是在可以轻易修改设计的早期阶段，那之后修改数据类型也比较容易）。&lt;/p>
&lt;p>简单就好&lt;/p>
&lt;p>简单数据类型的操作通常需要更少的CPU周期。例如，整型比字符操作代价更低，因为字符集和校对规则（排序规则）使字符比较比整型比较更复杂。这里有两个例子：一个是应该使用MySQL内建的类型(2)而不是字符串来存储日期和时间，另外一个是应该用整型存储IP地址。稍后我们将专门讨论这个话题。&lt;/p>
&lt;p>尽量避免NULL&lt;/p>
&lt;p>很多表都包含可为NULL（空值）的列，即使应用程序并不需要保存NULL也是如此，这是因为可为NULL是列的默认属性(3)。通常情况下最好指定列为NOT NULL，除非真的需要存储NULL值。&lt;/p>
&lt;p>如果查询中包含可为NULL的列，对MySQL来说更难优化，因为可为NULL的列使得索引、索引统计和值比较都更复杂。可为NULL的列会使用更多的存储空间，在MySQL里也需要特殊处理。当可为NULL的列被索引时，每个索引记录需要一个额外的字节，在MyISAM里甚至还可能导致固定大小的索引（例如只有一个整数列的索引）变成可变大小的索引。&lt;/p>
&lt;p>通常把可为NULL的列改为NOT NULL带来的性能提升比较小，所以（调优时）没有必要首先在现有schema中查找并修改掉这种情况，除非确定这会导致问题。但是，如果计划在列上建索引，就应该尽量避免设计成可为NULL的列。&lt;/p>
&lt;p>当然也有例外，例如值得一提的是，InnoDB使用单独的位（bit）存储NULL值，所以对于稀疏数据(4)有很好的空间效率。但这一点不适用于MyISAM。&lt;/p>
&lt;p>在为列选择数据类型时，第一步需要确定合适的大类型：数字、字符串、时间等。这通常是很简单的，但是我们会提到一些特殊的不是那么直观的案例。&lt;/p>
&lt;p>下一步是选择具体类型。很多MySQL的数据类型可以存储相同类型的数据，只是存储的长度和范围不一样、允许的精度不同，或者需要的物理空间（磁盘和内存空间）不同。相同大类型的不同子类型数据有时也有一些特殊的行为和属性。&lt;/p>
&lt;p>例如，DATETIME和TIMESAMP列都可以存储相同类型的数据：时间和日期，精确到秒。&lt;/p>
&lt;p>然而TIMESTAMP只使用DATETIME一半的存储空间，并且会根据时区变化，具有特殊的自动更新能力。另一方面，TIMESTAMP允许的时间范围要小得多，有时候它的特殊能力会成为障碍。&lt;/p>
&lt;p>本章只讨论基本的数据类型。MySQL为了兼容性支持很多别名，例如INTEGER、BOOL，以及NUMERIC。它们都只是别名。这些别名可能令人不解，但不会影响性能。如果建表时采用数据类型的别名，然后用SHOW CREATE TABLE检查，会发现MySQL报告的是基本类型，而不是别名。&lt;/p>
&lt;h2 id="411整数类型">
 4.1.1　整数类型
 &lt;a class="anchor" href="#411%e6%95%b4%e6%95%b0%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>有两种类型的数字：整数（whole number）和实数（real number）。如果存储整数，可以使用这几种整数类型：TINYINT，SMALLINT，MEDIUMINT，INT，BIGINT。分别使用8，16，24，32，64位存储空间。它们可以存储的值的范围从−2（N−1）到2（N−1）−1，其中N是存储空间的位数。&lt;/p>
&lt;p>整数类型有可选的UNSIGNED属性，表示不允许负值，这大致可以使正数的上限提高一倍。例如TINYINT UNSIGNED可以存储的范围是0～255，而TINYINT的存储范围是−128～127。&lt;/p>
&lt;p>有符号和无符号类型使用相同的存储空间，并具有相同的性能，因此可以根据实际情况选择合适的类型。&lt;/p>
&lt;p>你的选择决定MySQL是怎么在内存和磁盘中保存数据的。然而，整数计算一般使用64位的BIGINT整数，即使在32位环境也是如此。（一些聚合函数是例外，它们使用DECIMAL或DOUBLE进行计算）。&lt;/p>
&lt;p>MySQL可以为整数类型指定宽度，例如INT（11），对大多数应用这是没有意义的：它不会限制值的合法范围，只是规定了MySQL的一些交互工具（例如MySQL命令行客户端）用来显示字符的个数。对于存储和计算来说，INT（1）和INT（20）是相同的。&lt;/p>
&lt;p>&lt;img src="img/000000.jpeg" alt="" />一些第三方存储引擎，比如Infobright，有时也有自定义的存储格式和压缩方案，并不一定使用常见的MySQL内置引擎的方式。&lt;/p>
&lt;h2 id="412实数类型">
 4.1.2　实数类型
 &lt;a class="anchor" href="#412%e5%ae%9e%e6%95%b0%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>实数是带有小数部分的数字。然而，它们不只是为了存储小数部分；也可以使用DECIMAL存储比BIGINT还大的整数。MySQL既支持精确类型，也支持不精确类型。&lt;/p>
&lt;p>FLOAT和DOUBLE类型支持使用标准的浮点运算进行近似计算。如果需要知道浮点运算是怎么计算的，则需要研究所使用的平台的浮点数的具体实现。&lt;/p>
&lt;p>DECIMAL类型用于存储精确的小数。在MySQL 5.0和更高版本，DECIMAL类型支持精确计算。MySQL 4.1以及更早版本则使用浮点运算来实现DECIAML的计算，这样做会因为精度损失导致一些奇怪的结果。在这些版本的MySQL中，DECIMAL只是一个“存储类型”。&lt;/p>
&lt;p>因为CPU不支持对DECIMAL的直接计算，所以在MySQL 5.0以及更高版本中，MySQL服务器自身实现了DECIMAL的高精度计算。相对而言，CPU直接支持原生浮点计算，所以浮点运算明显更快。&lt;/p>
&lt;p>浮点和DECIMAL类型都可以指定精度。对于DECIMAL列，可以指定小数点前后所允许的最大位数。这会影响列的空间消耗。MySQL 5.0和更高版本将数字打包保存到一个二进制字符串中（每4个字节存9个数字）。例如，DECIMAL（18,9）小数点两边将各存储9个数字，一共使用9个字节：小数点前的数字用4个字节，小数点后的数字用4个字节，小数点本身占1个字节。&lt;/p>
&lt;p>MySQL 5.0和更高版本中的DECIMAL类型允许最多65个数字。而早期的MySQL版本中这个限制是254个数字，并且保存为未压缩的字符串（每个数字一个字节）。然而，这些（早期）版本实际上并不能在计算中使用这么大的数字，因为DECIMAL只是一种存储格式；在计算中DECIMAL会转换为DOUBLE类型。&lt;/p>
&lt;p>有多种方法可以指定浮点列所需要的精度，这会使得MySQL悄悄选择不同的数据类型，或者在存储时对值进行取舍。这些精度定义是非标准的，所以我们建议只指定数据类型，不指定精度。&lt;/p>
&lt;p>浮点类型在存储同样范围的值时，通常比DECIMAL使用更少的空间。FLOAT使用4个字节存储。DOUBLE占用8个字节，相比FLOAT有更高的精度和更大的范围。和整数类型一样，能选择的只是存储类型；MySQL使用DOUBLE作为内部浮点计算的类型。&lt;/p>
&lt;p>因为需要额外的空间和计算开销，所以应该尽量只在对小数进行精确计算时才使用DECIMAL——例如存储财务数据。但在数据量比较大的时候，可以考虑使用BIGINT代替DECIMAL，将需要存储的货币单位根据小数的位数乘以相应的倍数即可。假设要存储财务数据精确到万分之一分，则可以把所有金额乘以一百万，然后将结果存储在BIGINT里，这样可以同时避免浮点存储计算不精确和DECIMAL精确计算代价高的问题。&lt;/p>
&lt;h2 id="413字符串类型">
 4.1.3　字符串类型
 &lt;a class="anchor" href="#413%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>MySQL支持多种字符串类型，每种类型还有很多变种。这些数据类型在4.1和5.0版本发生了很大的变化，使得情况更加复杂。从MySQL 4.1开始，每个字符串列可以定义自己的字符集和排序规则，或者说校对规则（collation）（更多关于这个主题的信息请参考第7章）。这些东西会很大程度上影响性能。&lt;/p></description></item><item><title>第3章服务器性能剖析</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC3%E7%AB%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E5%89%96%E6%9E%90/</link><pubDate>Sun, 05 Jan 2025 08:42:13 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC3%E7%AB%A0%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E5%89%96%E6%9E%90/</guid><description>&lt;p>第3章　服务器性能剖析&lt;/p>
&lt;p>在我们的技术咨询生涯中，最常碰到的三个性能相关的服务请求是：如何确认服务器是否达到了性能最佳的状态、找出某条语句为什么执行不够快，以及诊断被用户描述成“停顿”、“堆积”或者“卡死”的某些间歇性疑难故障。本章将主要针对这三个问题做出解答。我们将提供一些工具和技巧来优化整机的性能、优化单条语句的执行速度，以及诊断或者解决那些很难观察到的问题（这些问题用户往往很难知道其根源，有时候甚至都很难察觉到它的存在）。&lt;/p>
&lt;p>这看起来是个艰巨的任务，但是事实证明，有一个简单的方法能够从噪声中发现苗头。这个方法就是专注于测量服务器的时间花费在哪里，使用的技术则是性能剖析（profiling）。在本章，我们将展示如何测量系统并生成剖析报告，以及如何分析系统的整个堆栈（stack），包括从应用程序到数据库服务器到单个查询。&lt;/p>
&lt;p>首先我们要保持空杯精神，抛弃掉一些关于性能的常见的误解。这有一定的难度，下面我们一起通过一些例子来说明问题在哪里。&lt;/p>
&lt;h1 id="31性能优化简介">
 3.1　性能优化简介
 &lt;a class="anchor" href="#31%e6%80%a7%e8%83%bd%e4%bc%98%e5%8c%96%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>问10个人关于性能的问题，可能会得到10个不同的回答，比如“每秒查询次数”、“CPU利用率”、“可扩展性”之类。这其实也没有问题，每个人在不同场景下对性能有不同的理解，但本章将给性能一个正式的定义。我们将性能定义为完成某件任务所需要的时间度量，换句话说，性能即响应时间，这是一个非常重要的原则。我们通过任务和时间而不是资源来测量性能。数据库服务器的目的是执行SQL语句，所以它关注的任务是查询或者语句，如SELECT、UPDATE、DELETE等(1)。数据库服务器的性能用查询的响应时间来度量，单位是每个查询花费的时间。&lt;/p>
&lt;p>还有另外一个问题：什么是优化？我们暂时不讨论这个问题，而是假设性能优化就是在一定的工作负载下尽可能地(2)降低响应时间。&lt;/p>
&lt;p>很多人对此很迷茫。假如你认为性能优化是降低CPU利用率，那么可以减少对资源的使用。但这是一个陷阱，资源是用来消耗并用来工作的，所以有时候消耗更多的资源能够加快查询速度。很多时候将使用老版本InnoDB引擎的MySQL升级到新版本后，CPU利用率会上升得很厉害，这并不代表性能出现了问题，反而说明新版本的InnoDB对资源的利用率上升了。查询的响应时间则更能体现升级后的性能是不是变得更好。版本升级有时候会带来一些bug，比如不能利用某些索引从而导致CPU利用率上升。CPU利用率只是一种现象，而不是很好的可度量的目标。&lt;/p>
&lt;p>同样，如果把性能优化仅仅看成是提升每秒查询量，这其实只是吞吐量优化。吞吐量的提升可以看作性能优化的副产品(3)。对查询的优化可以让服务器每秒执行更多的查询，因为每条查询执行的时间更短了（吞吐量的定义是单位时间内的查询数量，这正好是我们对性能的定义的倒数）。&lt;/p>
&lt;p>所以如果目标是降低响应时间，那么就需要理解为什么服务器执行查询需要这么多时间，然后去减少或者消除那些对获得查询结果来说不必要的工作。也就是说，先要搞清楚时间花在哪里。这就引申出优化的第二个原则：无法测量就无法有效地优化。所以第一步应该测量时间花在什么地方。&lt;/p>
&lt;p>我们观察到，很多人在优化时，都将精力放在修改一些东西上，却很少去进行精确的测量。我们的做法完全相反，将花费非常多，甚至90％的时间来测量响应时间花在哪里。如果通过测量没有找到答案，那要么是测量的方式错了，要么是测量得不够完整。如果测量了系统中完整而且正确的数据，性能问题一般都能暴露出来，对症下药的解决方案也就比较明了。测量是一项很有挑战性的工作，并且分析结果也同样有挑战性，测出时间花在哪里，和知道为什么花在那里，是两码事。&lt;/p>
&lt;p>前面提到需要合适的测量范围，这是什么意思呢？合适的测量范围是说只测量需要优化的活动。有两种比较常见的情况会导致不合适的测量：&lt;/p>
&lt;ul>
&lt;li>在错误的时间启动和停止测量。&lt;/li>
&lt;li>测量的是聚合后的信息，而不是目标活动本身。&lt;/li>
&lt;/ul>
&lt;p>例如，一个常见的错误是先查看慢查询，然后又去排查整个服务器的情况来判断问题在哪里。如果确认有慢查询，那么就应该测量慢查询，而不是测量整个服务器。测量的应该是从慢查询的开始到结束的时间，而不是查询之前或查询之后的时间。&lt;/p>
&lt;p>完成一项任务所需要的时间可以分成两部分：执行时间和等待时间。如果要优化任务的执行时间，最好的办法是通过测量定位不同的子任务花费的时间，然后优化去掉一些子任务、降低子任务的执行频率或者提升子任务的效率。而优化任务的等待时间则相对要复杂一些，因为等待有可能是由其他系统间接影响导致，任务之间也可能由于争用磁盘或者CPU资源而相互影响。根据时间是花在执行还是等待上的不同，诊断也需要不同的工具和技术。&lt;/p>
&lt;p>刚才说到需要定位和优化子任务，但只是一笔带过。一些运行不频繁或者很短的子任务对整体响应时间的影响很小，通常可以忽略不计。那么如何确认哪些子任务是优化的目标呢？这个时候性能剖析就可以派上用场了。&lt;/p>
&lt;p>&lt;strong>如何判断测量是正确的？&lt;/strong>&lt;/p>
&lt;p>如果测量是如此重要，那么测量错了会有什么后果？实际上，测量经常都是错误的。对数量的测量并不等于数量本身。测量的错误可能很小，跟实际情况区别不大，但错的终归是错的。所以这个问题其实应该是：“测量到底有多么不准确？”这个问题在其他一些书中有详细的讨论，但不是本书的主题。但是要意识到使用的是测量数据，而不是其所代表的实际数据。通常来说，测量的结果也可能有多种模糊的表现，这可能导致推断出错误的结论。&lt;/p>
&lt;h2 id="311通过性能剖析进行优化">
 3.1.1　通过性能剖析进行优化
 &lt;a class="anchor" href="#311%e9%80%9a%e8%bf%87%e6%80%a7%e8%83%bd%e5%89%96%e6%9e%90%e8%bf%9b%e8%a1%8c%e4%bc%98%e5%8c%96">#&lt;/a>
&lt;/h2>
&lt;p>一旦掌握并实践面向响应时间的优化方法，就会发现需要不断地对系统进行性能剖析（profiling）。&lt;/p>
&lt;p>性能剖析是测量和分析时间花费在哪里的主要方法。性能剖析一般有两个步骤：测量任务所花费的时间；然后对结果进行统计和排序，将重要的任务排到前面。&lt;/p>
&lt;p>性能剖析工具的工作方式基本相同。在任务开始时启动计时器，在任务结束时停止计时器，然后用结束时间减去启动时间得到响应时间。也有些工具会记录任务的父任务。这些结果数据可以用来绘制调用关系图，但对于我们的目标来说更重要的是，可以将相似的任务分组并进行汇总。对相似的任务分组并进行汇总可以帮助对那些分到一组的任务做更复杂的统计分析，但至少需要知道每一组有多少任务，并计算出总的响应时间。通过性能剖析报告（&lt;em>profile report&lt;/em>）可以获得需要的结果。性能剖析报告会列出所有任务列表。每行记录一个任务，包括任务名、任务的执行时间、任务的消耗时间、任务的平均执行时间，以及该任务执行时间占全部时间的百分比。性能剖析报告会按照任务的消耗时间进行降序排序。&lt;/p>
&lt;p>为了更好地说明，这里举一个对整个数据库服务器工作负载的性能剖析的例子，主要输出的是各种类型的查询和执行查询的时间。这是从整体的角度来分析响应时间，后面会演示其他角度的分析结果。下面的输出是用Percona Toolkit中的&lt;em>pt-query-digest&lt;/em>（实际上就是著名的Maatkit工具中的&lt;em>mk-query-digest&lt;/em>）分析得到的结果。为了显示方便，对结果做了一些微调，并且只截取了前面几行结果：&lt;/p>
&lt;pre>&lt;code> Rank Response time Calls R/Call Item
 ==== ================ ===== ====== =======
 1 11256.3618 68.1% 78069 0.1442 SELECT InvitesNew
 2 2029.4730 12.3% 14415 0.1408 SELECT StatusUpdate
 3 1345.3445 8.1% 3520 0.3822 SHOW STATUS
&lt;/code>&lt;/pre>
&lt;p>上面只是性能剖析结果的前几行，根据总响应时间进行排名，只包括剖析所需要的最小列组合。每一行都包括了查询的响应时间和占总时间的百分比、查询的执行次数、单次执行的平均响应时间，以及该查询的摘要。通过这个性能剖析可以很清楚地看到每个查询相互之间的成本比较，以及每个查询占总成本的比较。在这个例子中，任务指的就是查询，实际上在分析MySQL的时候经常都指的是查询。&lt;/p>
&lt;p>我们将实际地讨论两种类型的性能剖析：基于执行时间的分析和基于等待的分析。基于执行时间的分析研究的是什么任务的执行时间最长，而基于等待的分析则是判断任务在什么地方被阻塞的时间最长。&lt;/p>
&lt;p>如果任务执行时间长是因为消耗了太多的资源且大部分时间花费在执行上，等待的时间不多，这种情况下基于等待的分析作用就不大。反之亦然，如果任务一直在等待，没有消耗什么资源，去分析执行时间就不会有什么结果。如果不能确认问题是出在执行还是等待上，那么两种方式都需要试试。后面会给出详细的例子。&lt;/p></description></item><item><title>第2章MySQL基准测试</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC2%E7%AB%A0MySQL%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</link><pubDate>Sun, 05 Jan 2025 08:42:12 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC2%E7%AB%A0MySQL%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</guid><description>&lt;p>第2章　MySQL基准测试&lt;/p>
&lt;p>基准测试（benchmark）是MySQL新手和专家都需要掌握的一项基本技能。简单地说，基准测试是针对系统设计的一种压力测试。通常的目标是为了掌握系统的行为。但也有其他原因，如重现某个系统状态，或者是做新硬件的可靠性测试。本章将讨论MySQL和基于MySQL的应用的基准测试的重要性、策略和工具。我们将特别讨论一下sysbench，这是一款非常优秀的MySQL基准测试工具。&lt;/p>
&lt;h1 id="21为什么需要基准测试">
 2.1　为什么需要基准测试
 &lt;a class="anchor" href="#21%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%9f%ba%e5%87%86%e6%b5%8b%e8%af%95">#&lt;/a>
&lt;/h1>
&lt;p>为什么基准测试很重要？因为基准测试是唯一方便有效的、可以学习系统在给定的工作负载下会发生什么的方法。基准测试可以观察系统在不同压力下的行为，评估系统的容量，掌握哪些是重要的变化，或者观察系统如何处理不同的数据。基准测试可以在系统实际负载之外创造一些虚构场景进行测试。基准测试可以完成以下工作，或者更多：&lt;/p>
&lt;ul>
&lt;li>验证基于系统的一些假设，确认这些假设是否符合实际情况。&lt;/li>
&lt;li>重现系统中的某些异常行为，以解决这些异常。&lt;/li>
&lt;li>测试系统当前的运行情况。如果不清楚系统当前的性能，就无法确认某些优化的效果如何。也可以利用历史的基准测试结果来分析诊断一些无法预测的问题。&lt;/li>
&lt;li>模拟比当前系统更高的负载，以找出系统随着压力增加而可能遇到的扩展性瓶颈。&lt;/li>
&lt;li>规划未来的业务增长。基准测试可以评估在项目未来的负载下，需要什么样的硬件，需要多大容量的网络，以及其他相关资源。这有助于降低系统升级和重大变更的风险。&lt;/li>
&lt;li>测试应用适应可变环境的能力。例如，通过基准测试，可以发现系统在随机的并发峰值下的性能表现，或者是不同配置的服务器之间的性能表现。基准测试也可以测试系统对不同数据分布的处理能力。&lt;/li>
&lt;li>测试不同的硬件、软件和操作系统配置。比如RAID 5还是RAID 10更适合当前的系统？如果系统从ATA硬盘升级到SAN存储，对于随机写性能有什么帮助？Linux 2.4系列的内核会比2.6系列的可扩展性更好吗？升级MySQL的版本能改善性能吗？为当前的数据采用不同的存储引擎会有什么效果？所有这类问题都可以通过专门的基准测试来获得答案。&lt;/li>
&lt;li>证明新采购的设备是否配置正确。笔者曾经无数次地通过基准测试来对新系统进行压测，发现了很多错误的配置，以及硬件组件的失效等问题。因此在新系统正式上线到生产环境之前进行基准测试是一个好习惯，永远不要相信主机提供商或者硬件供应商的所谓系统已经安装好，并且能运行多快的说法。如果可能，执行实际的基准测试永远是一个好主意。&lt;/li>
&lt;/ul>
&lt;p>基准测试还可以用于其他目的，比如为应用创建单元测试套件。但本章我们只关注与性能有关的基准测试。&lt;/p>
&lt;p>基准测试的一个主要问题在于其不是真实压力的测试。基准测试施加给系统的压力相对真实压力来说，通常比较简单。真实压力是不可预期而且变化多端的，有时候情况会过于复杂而难以解释。所以使用真实压力测试，可能难以从结果中分析出确切的结论。&lt;/p>
&lt;p>基准测试的压力和真实压力在哪些方面不同？有很多因素会影响基准测试，比如数据量、数据和查询的分布，但最重要的一点还是基准测试通常要求尽可能快地执行完成，所以经常给系统造成过大的压力。在很多案例中，我们都会调整给测试工具的最大压力，以在系统可以容忍的压力阈值内尽可能快地执行测试，这对于确定系统的最大容量非常有帮助。然而大部分压力测试工具不支持对压力进行复杂的控制。务必要记住，测试工具自身的局限也会影响到结果的有效性。&lt;/p>
&lt;p>使用基准测试进行容量规划也要掌握技巧，不能只根据测试结果做简单的推断。例如，假设想知道使用新数据库服务器后，系统能够支撑多大的业务增长。首先对原系统进行基准测试，然后对新系统做测试，结果发现新系统可以支持原系统40倍的TPS（每秒事务数），这时候就不能简单地推断说新系统一定可以支持40倍的业务增长。这是因为在业务增长的同时，系统的流量、用户、数据以及不同数据之间的交互都在增长，它们不可能都有40倍的支撑能力，尤其是相互之间的关系。而且当业务增长到40倍时，应用本身的设计也可能已经随之改变。可能有更多的新特性会上线，其中某些特性可能对数据库造成的压力远大于原有功能。而这些压力、数据、关系和特性的变化都很难模拟，所以它们对系统的影响也很难评估。&lt;/p>
&lt;p>结论就是，我们只能进行大概的测试，来确定系统大致的余量有多少。当然也可以做一些真实压力测试（和基准测试有区别），但在构造数据集和压力的时候要特别小心，而且这样就不再是基准测试了。基准测试要尽量简单直接，结果之间容易相互比较，成本低且易于执行。尽管有诸多限制，基准测试还是非常有用的（只要搞清楚测试的原理，并且了解如何分析结果所代表的意义）。&lt;/p>
&lt;h1 id="22基准测试的策略">
 2.2　基准测试的策略
 &lt;a class="anchor" href="#22%e5%9f%ba%e5%87%86%e6%b5%8b%e8%af%95%e7%9a%84%e7%ad%96%e7%95%a5">#&lt;/a>
&lt;/h1>
&lt;p>基准测试有两种主要的策略：一是针对整个系统的整体测试，另外是单独测试MySQL。这两种策略也被称为集成式（full-stack）以及单组件式（single-component）基准测试。针对整个系统做集成式测试，而不是单独测试MySQL的原因主要有以下几点：&lt;/p>
&lt;ul>
&lt;li>测试整个应用系统，包括Web服务器、应用代码、网络和数据库是非常有用的，因为用户关注的并不仅仅是MySQL本身的性能，而是应用整体的性能。&lt;/li>
&lt;li>MySQL并非总是应用的瓶颈，通过整体的测试可以揭示这一点。&lt;/li>
&lt;li>只有对应用做整体测试，才能发现各部分之间的缓存带来的影响。&lt;/li>
&lt;li>整体应用的集成式测试更能揭示应用的真实表现，而单独组件的测试很难做到这一点。&lt;/li>
&lt;/ul>
&lt;p>另外一方面，应用的整体基准测试很难建立，甚至很难正确设置。如果基准测试的设计有问题，那么结果就无法反映真实的情况，从而基于此做的决策也就可能是错误的。&lt;/p>
&lt;p>不过，有时候不需要了解整个应用的情况，而只需要关注MySQL的性能，至少在项目初期可以这样做。基于以下情况，可以选择只测试MySQL：&lt;/p>
&lt;ul>
&lt;li>需要比较不同的schema或查询的性能。&lt;/li>
&lt;li>针对应用中某个具体问题的测试。&lt;/li>
&lt;li>为了避免漫长的基准测试，可以通过一个短期的基准测试，做快速的“周期循环”，来检测出某些调整后的效果。&lt;/li>
&lt;/ul>
&lt;p>另外，如果能够在真实的数据集上执行重复的查询，那么针对MySQL的基准测试也是有用的，但是数据本身和数据集的大小都应该是真实的。如果可能，可以采用生产环境的数据快照。&lt;/p>
&lt;p>不幸的是，设置一个基于真实数据的基准测试复杂而且耗时。如果能得到一份生产数据集的拷贝，当然很幸运，但这通常不太可能。比如要测试的是一个刚开发的新应用，它只有很少的用户和数据。如果想测试该应用在规模扩张到很大以后的性能表现，就只能通过模拟大量的数据和压力来进行。&lt;/p>
&lt;h2 id="221测试何种指标">
 2.2.1　测试何种指标
 &lt;a class="anchor" href="#221%e6%b5%8b%e8%af%95%e4%bd%95%e7%a7%8d%e6%8c%87%e6%a0%87">#&lt;/a>
&lt;/h2>
&lt;p>在开始执行甚至是在设计基准测试之前，需要先明确测试的目标。测试目标决定了选择什么样的测试工具和技术，以获得精确而有意义的测试结果。可以将测试目标细化为一系列的问题，比如，“这种CPU是否比另外一种要快？”，或“新索引是否比当前索引性能更好？”&lt;/p>
&lt;p>有时候需要用不同的方法测试不同的指标。比如，针对延迟（latency）和吞吐量（throughput）就需要采用不同的测试方法。&lt;/p>
&lt;p>请考虑以下指标，看看如何满足测试的需求。&lt;/p>
&lt;p>吞吐量&lt;/p>
&lt;p>吞吐量指的是单位时间内的事务处理数。这一直是经典的数据库应用测试指标。一些标准的基准测试被广泛地引用，如TPC-C（参考&lt;em>
&lt;a target="_blank" href="http://www.tpc.org">http://www.tpc.org&lt;/a>&lt;/em>），而且很多数据库厂商都努力争取在这些测试中取得好成绩。这类基准测试主要针对在线事务处理（OLTP）的吞吐量，非常适用于多用户的交互式应用。常用的测试单位是每秒事务数（TPS），有些也采用每分钟事务数（TPM）。&lt;/p>
&lt;p>响应时间或者延迟&lt;/p>
&lt;p>这个指标用于测试任务所需的整体时间。根据具体的应用，测试的时间单位可能是微秒、毫秒、秒或者分钟。根据不同的时间单位可以计算出平均响应时间、最小响应时间、最大响应时间和所占百分比。最大响应时间通常意义不大，因为测试时间越长，最大响应时间也可能越大。而且其结果通常不可重复，每次测试都可能得到不同的最大响应时间。因此，通常可以使用百分比响应时间（percentile response time）来替代最大响应时间。例如，如果95％的响应时间都是5毫秒，则表示任务在95％的时间段内都可以在5毫秒之内完成。&lt;/p>
&lt;p>使用图表有助于理解测试结果。可以将测试结果绘制成折线图（比如平均值折线或者95％百分比折线）或者散点图，直观地表现数据结果集的分布情况。通过这些图可以发现长时间测试的趋势。本章后面将更详细地讨论这一点。&lt;/p>
&lt;p>并发性&lt;/p>
&lt;p>并发性是一个非常重要又经常被误解和误用的指标。例如，它经常被表示成多少用户在同一时间浏览一个Web站点，经常使用的指标是有多少个会话(1)。然而，HTTP协议是无状态的，大多数用户只是简单地读取浏览器上显示的信息，这并不等同于Web服务器的并发性。而且，Web服务器的并发性也不等同于数据库的并发性，而仅仅只表示会话存储机制可以处理多少数据的能力。Web服务器的并发性更准确的度量指标，应该是在任意时间有多少同时发生的并发请求。&lt;/p>
&lt;p>在应用的不同环节都可以测量相应的并发性。Web服务器的高并发，一般也会导致数据库的高并发，但服务器采用的语言和工具集对此都会有影响。注意不要将创建数据库连接和并发性搞混淆。一个设计良好的应用，同时可以打开成百上千个MySQL数据库服务器连接，但可能同时只有少数连接在执行查询。所以说，一个Web站点“同时有50000个用户”访问，却可能只有10～15个并发请求到MySQL数据库。&lt;/p>
&lt;p>换句话说，并发性基准测试需要关注的是正在工作中的并发操作，或者是同时工作中的线程数或者连接数。当并发性增加时，需要测量吞吐量是否下降，响应时间是否变长，如果是这样，应用可能就无法处理峰值压力。&lt;/p>
&lt;p>并发性的测量完全不同于响应时间和吞吐量。它不像是一个结果，而更像是设置基准测试的一种属性。并发性测试通常不是为了测试应用能达到的并发度，而是为了测试应用在不同并发下的性能。当然，数据库的并发性还是需要测量的。可以通过&lt;em>sysbench&lt;/em>指定32、64或者128个线程的测试，然后在测试期间记录MySQL数据库的Threads_running状态值。在第11章将讨论这个指标对容量规划的影响。&lt;/p>
&lt;p>可扩展性&lt;/p>
&lt;p>在系统的业务压力可能发生变化的情况下，测试可扩展性就非常必要了。第11章将更进一步讨论可扩展性的话题。简单地说，可扩展性指的是，给系统增加一倍的工作，在理想情况下就能获得两倍的结果（即吞吐量增加一倍）。或者说，给系统增加一倍的资源（比如两倍的CPU数），就可以获得两倍的吞吐量。当然，同时性能（响应时间）也必须在可以接受的范围内。大多数系统是无法做到如此理想的线性扩展的。随着压力的变化，吞吐量和性能都可能越来越差。&lt;/p>
&lt;p>可扩展性指标对于容量规范非常有用，它可以提供其他测试无法提供的信息，来帮助发现应用的瓶颈。比如，如果系统是基于单个用户的响应时间测试（这是一个很糟糕的测试策略）设计的，虽然测试的结果很好，但当并发度增加时，系统的性能有可能变得非常糟糕。而一个基于不断增加用户连接的情况下的响应时间测试则可以发现这个问题。&lt;/p>
&lt;p>一些任务，比如从细粒度数据创建汇总表的批量工作，需要的是周期性的快速响应时间。当然也可以测试这些任务纯粹的响应时间，但要注意考虑这些任务之间的相互影响。批量工作可能导致相互之间有影响的查询性能变差，反之亦然。&lt;/p>
&lt;p>归根结底，应该测试那些对用户来说最重要的指标。因此应该尽可能地去收集一些需求，比如，什么样的响应时间是可以接受的，期待多少的并发性，等等。然后基于这些需求来设计基准测试，避免目光短浅地只关注部分指标，而忽略其他指标。&lt;/p>
&lt;h1 id="23基准测试方法">
 2.3　基准测试方法
 &lt;a class="anchor" href="#23%e5%9f%ba%e5%87%86%e6%b5%8b%e8%af%95%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h1>
&lt;p>在了解基本概念之后，现在可以来具体讨论一下如何设计和执行基准测试。但在讨论如何设计好的基准测试之前，先来看一下如何避免一些常见的错误，这些错误可能导致测试结果无用或者不精确：&lt;/p>
&lt;ul>
&lt;li>使用真实数据的子集而不是全集。例如应用需要处理几百GB的数据，但测试只有1GB数据；或者只使用当前数据进行测试，却希望模拟未来业务大幅度增长后的情况。&lt;/li>
&lt;li>使用错误的数据分布。例如使用均匀分布的数据测试，而系统的真实数据有很多热点区域（随机生成的测试数据通常无法模拟真实的数据分布）。&lt;/li>
&lt;li>使用不真实的分布参数，例如假定所有用户的个人信息（profile）都会被平均地读取(2)。&lt;/li>
&lt;li>在多用户场景中，只做单用户的测试。&lt;/li>
&lt;li>在单服务器上测试分布式应用。&lt;/li>
&lt;li>与真实用户行为不匹配。例如Web页面中的“思考时间”。真实用户在请求到一个页面后会阅读一段时间，而不是不停顿地一个接一个点击相关链接。&lt;/li>
&lt;li>反复执行同一个查询。真实的查询是不尽相同的，这可能会导致缓存命中率降低。而反复执行同一个查询在某种程度上，会全部或者部分缓存结果。&lt;/li>
&lt;li>没有检查错误。如果测试的结果无法得到合理的解释，比如一个本应该很慢的查询突然变快了，就应该检查是否有错误产生。否则可能只是测试了MySQL检测语法错误的速度了。基准测试完成后，一定要检查一下错误日志，这应当是基本的要求。&lt;/li>
&lt;li>忽略了系统预热（warm up）的过程。例如系统重启后马上进行测试。有时候需要了解系统重启后需要多长时间才能达到正常的性能容量，要特别留意预热的时长。反过来说，如果要想分析正常的性能，需要注意，若基准测试在重启以后马上启动，则缓存是冷的、还没有数据，这时即使测试的压力相同，得到的结果也和缓存已经装满数据时是不同的。&lt;/li>
&lt;li>使用默认的服务器配置。第3章将详细地讨论服务器的优化配置。&lt;/li>
&lt;li>测试时间太短。基准测试需要持续一定的时间。后面会继续讨论这个话题。&lt;/li>
&lt;/ul>
&lt;p>只有避免了上述错误，才能走上改进测试质量的漫漫长路。&lt;/p></description></item><item><title>第1章MySQL架构与历史</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC1%E7%AB%A0MySQL%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%8E%86%E5%8F%B2/</link><pubDate>Sun, 05 Jan 2025 08:42:11 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC1%E7%AB%A0MySQL%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%8E%86%E5%8F%B2/</guid><description>&lt;p>第1章　MySQL架构与历史&lt;/p>
&lt;p>和其他数据库系统相比，MySQL有点与众不同，它的架构可以在多种不同场景中应用并发挥好的作用，但同时也会带来一点选择上的困难。MySQL并不完美，却足够灵活，能够适应高要求的环境，例如Web类应用。同时，MySQL既可以嵌入到应用程序中，也可以支持数据仓库、内容索引和部署软件、高可用的冗余系统、在线事务处理系统（OLTP）等各种应用类型。&lt;/p>
&lt;p>为了充分发挥MySQL的性能并顺利地使用，就必须理解其设计。MySQL的灵活性体现在很多方面。例如，你可以通过配置使它在不同的硬件上都运行得很好，也可以支持多种不同的数据类型。但是，MySQL最重要、最与众不同的特性是它的存储引擎架构，这种架构的设计将查询处理（Query Processing）及其他系统任务（Server Task）和数据的存储/提取相分离。这种处理和存储分离的设计可以在使用时根据性能、特性，以及其他需求来选择数据存储的方式。&lt;/p>
&lt;p>本章概要地描述了MySQL的服务器架构、各种存储引擎之间的主要区别，以及这些区别的重要性。另外也会回顾一下MySQL的历史背景和基准测试，并试图通过简化细节和演示案例来讨论MySQL的原理。这些讨论无论是对数据库一无所知的新手，还是熟知其他数据库的专家，都不无裨益。&lt;/p>
&lt;h1 id="11mysql逻辑架构">
 1.1　MySQL逻辑架构
 &lt;a class="anchor" href="#11mysql%e9%80%bb%e8%be%91%e6%9e%b6%e6%9e%84">#&lt;/a>
&lt;/h1>
&lt;p>如果能在头脑中构建出一幅MySQL各组件之间如何协同工作的架构图，就会有助于深入理解MySQL服务器。图1-1展示了MySQL的逻辑架构图。&lt;/p>
&lt;p>&lt;img src="img/000002.jpeg" alt="" />
&lt;strong>图1-1：MySQL服务器逻辑架构图&lt;/strong>&lt;/p>
&lt;p>最上层的服务并不是MySQL所独有的，大多数基于网络的客户端/服务器的工具或者服务都有类似的架构。比如连接处理、授权认证、安全等等。&lt;/p>
&lt;p>第二层架构是MySQL比较有意思的部分。大多数MySQL的核心服务功能都在这一层，包括查询解析、分析、优化、缓存以及所有的内置函数（例如，日期、时间、数学和加密函数），所有跨存储引擎的功能都在这一层实现：存储过程、触发器、视图等。&lt;/p>
&lt;p>第三层包含了存储引擎。存储引擎负责MySQL中数据的存储和提取。和GNU/Linux下的各种文件系统一样，每个存储引擎都有它的优势和劣势。服务器通过API与存储引擎进行通信。这些接口屏蔽了不同存储引擎之间的差异，使得这些差异对上层的查询过程透明。存储引擎API包含几十个底层函数，用于执行诸如“开始一个事务”或者“根据主键提取一行记录”等操作。但存储引擎不会去解析SQL(1)，不同存储引擎之间也不会相互通信，而只是简单地响应上层服务器的请求。&lt;/p>
&lt;h2 id="111连接管理与安全性">
 1.1.1　连接管理与安全性
 &lt;a class="anchor" href="#111%e8%bf%9e%e6%8e%a5%e7%ae%a1%e7%90%86%e4%b8%8e%e5%ae%89%e5%85%a8%e6%80%a7">#&lt;/a>
&lt;/h2>
&lt;p>每个客户端连接都会在服务器进程中拥有一个线程，这个连接的查询只会在这个单独的线程中执行，该线程只能轮流在某个CPU核心或者CPU中运行。服务器会负责缓存线程，因此不需要为每一个新建的连接创建或者销毁线程(2)。&lt;/p>
&lt;p>当客户端（应用）连接到MySQL服务器时，服务器需要对其进行认证。认证基于用户名、原始主机信息和密码。如果使用了安全套接字（SSL）的方式连接，还可以使用X.509证书认证。一旦客户端连接成功，服务器会继续验证该客户端是否具有执行某个特定查询的权限（例如，是否允许客户端对world数据库的Country表执行SELECT语句）。&lt;/p>
&lt;h2 id="112优化与执行">
 1.1.2　优化与执行
 &lt;a class="anchor" href="#112%e4%bc%98%e5%8c%96%e4%b8%8e%e6%89%a7%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;p>MySQL会解析查询，并创建内部数据结构（解析树），然后对其进行各种优化，包括重写查询、决定表的读取顺序，以及选择合适的索引等。用户可以通过特殊的关键字提示（hint）优化器，影响它的决策过程。也可以请求优化器解释（explain）优化过程的各个因素，使用户可以知道服务器是如何进行优化决策的，并提供一个参考基准，便于用户重构查询和schema、修改相关配置，使应用尽可能高效运行。第6章我们将讨论更多优化器的细节。&lt;/p>
&lt;p>优化器并不关心表使用的是什么存储引擎，但存储引擎对于优化查询是有影响的。优化器会请求存储引擎提供容量或某个具体操作的开销信息，以及表数据的统计信息等。例如，某些存储引擎的某种索引，可能对一些特定的查询有优化。关于索引与schema的优化，请参见第4章和第5章。&lt;/p>
&lt;p>对于SELECT语句，在解析查询之前，服务器会先检查查询缓存（Query Cache），如果能够在其中找到对应的查询，服务器就不必再执行查询解析、优化和执行的整个过程，而是直接返回查询缓存中的结果集。第7章详细讨论了相关内容。&lt;/p>
&lt;h1 id="12并发控制">
 1.2　并发控制
 &lt;a class="anchor" href="#12%e5%b9%b6%e5%8f%91%e6%8e%a7%e5%88%b6">#&lt;/a>
&lt;/h1>
&lt;p>无论何时，只要有多个查询需要在同一时刻修改数据，都会产生并发控制的问题。本章的目的是讨论MySQL在两个层面的并发控制：服务器层与存储引擎层。并发控制是一个内容庞大的话题，有大量的理论文献对其进行过详细的论述。本章只简要地讨论MySQL如何控制并发读写，因此读者需要有相关的知识来理解本章接下来的内容。&lt;/p>
&lt;p>以Unix系统的email box为例，典型的&lt;em>mbox&lt;/em>文件格式是非常简单的。一个&lt;em>mbox&lt;/em>邮箱中的所有邮件都串行在一起，彼此首尾相连。这种格式对于读取和分析邮件信息非常友好，同时投递邮件也很容易，只要在文件末尾附加新的邮件内容即可。&lt;/p>
&lt;p>但如果两个进程在同一时刻对同一个邮箱投递邮件，会发生什么情况？显然，邮箱的数据会被破坏，两封邮件的内容会交叉地附加在邮箱文件的末尾。设计良好的邮箱投递系统会通过锁（lock）来防止数据损坏。如果客户试图投递邮件，而邮箱已经被其他客户锁住，那就必须等待，直到锁释放才能进行投递。&lt;/p>
&lt;p>这种锁的方案在实际应用环境中虽然工作良好，但并不支持并发处理。因为在任意一个时刻，只有一个进程可以修改邮箱的数据，这在大容量的邮箱系统中是个问题。&lt;/p>
&lt;h2 id="121读写锁">
 1.2.1　读写锁
 &lt;a class="anchor" href="#121%e8%af%bb%e5%86%99%e9%94%81">#&lt;/a>
&lt;/h2>
&lt;p>从邮箱中读取数据没有这样的麻烦，即使同一时刻多个用户并发读取也不会有什么问题。因为读取不会修改数据，所以不会出错。但如果某个客户正在读取邮箱，同时另外一个用户试图删除编号为25的邮件，会产生什么结果？结论是不确定，读的客户可能会报错退出，也可能读取到不一致的邮箱数据。所以，为安全起见，即使是读取邮箱也需要特别注意。&lt;/p>
&lt;p>如果把上述的邮箱当成数据库中的一张表，把邮件当成表中的一行记录，就很容易看出，同样的问题依然存在。从很多方面来说，邮箱就是一张简单的数据库表。修改数据库表中的记录，和删除或者修改邮箱中的邮件信息，十分类似。&lt;/p>
&lt;p>解决这类经典问题的方法就是并发控制，其实非常简单。在处理并发读或者写时，可以通过实现一个由两种类型的锁组成的锁系统来解决问题。这两种类型的锁通常被称为共享锁（shared lock）和排他锁（exclusive lock），也叫读锁（read lock）和写锁（write lock）。&lt;/p>
&lt;p>这里先不讨论锁的具体实现，描述一下锁的概念如下：读锁是共享的，或者说是相互不阻塞的。多个客户在同一时刻可以同时读取同一个资源，而互不干扰。写锁则是排他的，也就是说一个写锁会阻塞其他的写锁和读锁，这是出于安全策略的考虑，只有这样，才能确保在给定的时间里，只有一个用户能执行写入，并防止其他用户读取正在写入的同一资源。&lt;/p>
&lt;p>在实际的数据库系统中，每时每刻都在发生锁定，当某个用户在修改某一部分数据时，MySQL会通过锁定防止其他用户读取同一数据。大多数时候，MySQL锁的内部管理都是透明的。&lt;/p>
&lt;h2 id="122锁粒度">
 1.2.2　锁粒度
 &lt;a class="anchor" href="#122%e9%94%81%e7%b2%92%e5%ba%a6">#&lt;/a>
&lt;/h2>
&lt;p>一种提高共享资源并发性的方式就是让锁定对象更有选择性。尽量只锁定需要修改的部分数据，而不是所有的资源。更理想的方式是，只对会修改的数据片进行精确的锁定。任何时候，在给定的资源上，锁定的数据量越少，则系统的并发程度越高，只要相互之间不发生冲突即可。&lt;/p>
&lt;p>问题是加锁也需要消耗资源。锁的各种操作，包括获得锁、检查锁是否已经解除、释放锁等，都会增加系统的开销。如果系统花费大量的时间来管理锁，而不是存取数据，那么系统的性能可能会因此受到影响。&lt;/p>
&lt;p>所谓的锁策略，就是在锁的开销和数据的安全性之间寻求平衡，这种平衡当然也会影响到性能。大多数商业数据库系统没有提供更多的选择，一般都是在表上施加行级锁（row-level lock），并以各种复杂的方式来实现，以便在锁比较多的情况下尽可能地提供更好的性能。&lt;/p>
&lt;p>而MySQL则提供了多种选择。每种MySQL存储引擎都可以实现自己的锁策略和锁粒度。在存储引擎的设计中，锁管理是个非常重要的决定。将锁粒度固定在某个级别，可以为某些特定的应用场景提供更好的性能，但同时却会失去对另外一些应用场景的良好支持。好在MySQL支持多个存储引擎的架构，所以不需要单一的通用解决方案。下面将介绍两种最重要的锁策略。&lt;/p>
&lt;h3 id="表锁table-lock">
 表锁（table lock）
 &lt;a class="anchor" href="#%e8%a1%a8%e9%94%81table-lock">#&lt;/a>
&lt;/h3>
&lt;p>表锁是MySQL中最基本的锁策略，并且是开销最小的策略。表锁非常类似于前文描述的邮箱加锁机制：它会锁定整张表。一个用户在对表进行写操作（插入、删除、更新等）前，需要先获得写锁，这会阻塞其他用户对该表的所有读写操作。只有没有写锁时，其他读取的用户才能获得读锁，读锁之间是不相互阻塞的。&lt;/p>
&lt;p>在特定的场景中，表锁也可能有良好的性能。例如，READ LOCAL表锁支持某些类型的并发写操作。另外，写锁也比读锁有更高的优先级，因此一个写锁请求可能会被插入到读锁队列的前面（写锁可以插入到锁队列中读锁的前面，反之读锁则不能插入到写锁的前面）。&lt;/p></description></item><item><title>第13章云端的MySQL</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC13%E7%AB%A0%E4%BA%91%E7%AB%AF%E7%9A%84MySQL/</link><pubDate>Sun, 05 Jan 2025 08:42:07 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC13%E7%AB%A0%E4%BA%91%E7%AB%AF%E7%9A%84MySQL/</guid><description>&lt;p>第13章　云端的MySQL&lt;/p>
&lt;p>许多人在云中使用MySQL，有时候规模还非常庞大，这并不奇怪。从我们的经验来看，大多数人使用的是Amazon Web Services平台（AWS）：特别是Amazon的弹性计算云（Elastic Compute Cloud，EC2），弹性块存储（Elastic Block Store，EBS），以及更小众的关系数据库服务（Relational Database Service，RDS）。&lt;/p>
&lt;p>为了便于讨论MySQL在云中的应用，可以将其粗略分为两类。&lt;/p>
&lt;p>IaaS（基础设施即服务）&lt;/p>
&lt;p>&lt;em>Iaas&lt;/em>是用于托管自有的MySQL服务器的云端基础架构。可以在云端购买虚拟的服务器资源来安装运行MySQL实例。也可以根据需求随意配置MySQL和操作系统，但没有权限也无法看到处于底层的物理硬件设备。&lt;/p>
&lt;p>&lt;em>DBaaS&lt;/em>（数据库即服务）&lt;/p>
&lt;p>MySQL本身作为由云端管理的资源。用户需要先收到MySQL服务器的访问许可（通常是一个连接串）才能访问。也可以配置一些MySQL选项，但没有权限去控制或查看底层的操作系统或虚拟服务器实例。例如 Amazon运行MySQL的RDS。其中一些服务器并非真的使用MySQL，但它们能兼容MySQL协议和查询语言。&lt;/p>
&lt;p>我们讨论的重点主要集中在第一类：云托管平台，例如AWS、Rackspace Cloud以及Joyent(1)。有许多很好的资源介绍如何部署和管理MySQL及其运行所需要的资源，并且也有非常多的平台来完全满足这样的需求，所以我们不会展示代码样例或讨论具体的操作技术。因此，本章关注的重点是，在云端运行MySQL还是在传统服务器上部署MySQL，它们在最终经济上和性能特性上的关键区别是什么。我们假定你对云计算很熟悉。这里不是对云计算概念的简单介绍，我们的目的只是帮助那些还不熟悉在云端部署MySQL的用户在使用时避免一些可能遇到的陷阱。&lt;/p>
&lt;p>一般来说，MySQL能够在云中很好地运行。在云中运行MySQL并不比在其他平台困难，但有一些非常重要的差别。你需要注意这些差别并据此设计应用和架构来获得好的效果。某些场景下在云端托管MySQL并不是非常适合，有时候则很适合，但大多数时候云仅仅是另外一个部署平台而已。&lt;/p>
&lt;p>云是一个部署平台，而不是一种架构，理解这一点很重要。架构会受平台的影响，但平台和架构明显不同。如果你把架构和平台搞混了，就可能会做出不合适的选择而给以后带来麻烦。这也正是我们要花时间讨论云端的MySQL到底有什么不同的原因。&lt;/p>
&lt;h1 id="131云的优点缺点和相关误解">
 13.1　云的优点、缺点和相关误解
 &lt;a class="anchor" href="#131%e4%ba%91%e7%9a%84%e4%bc%98%e7%82%b9%e7%bc%ba%e7%82%b9%e5%92%8c%e7%9b%b8%e5%85%b3%e8%af%af%e8%a7%a3">#&lt;/a>
&lt;/h1>
&lt;p>云计算有许多优点，但很少是为MySQL特别设计。有一些书籍已经介绍了相关的话题(2)，这里我们不再赘述。不过我们会列出一些比较重要的条目供参考，因为接下来会讨论到云计算的缺点，我们不希望你认为我们是在过分苛求云计算。&lt;/p>
&lt;ul>
&lt;li>云是一种将基础设施外包出去无须自己管理的方法。你不需要寻找供应商购买硬件，也不需要维护和供应商之间的关系，更无须替换失效的硬盘驱动器等。&lt;/li>
&lt;li>云一般是按照即用即付的方式支付，可以把前期的大量资本支出转换为持续的运营成本。&lt;/li>
&lt;li>随着供应商发布新的服务和成本降低，云提供的价值越来越大。你自己无须做任何事情（例如升级服务器），就可以从这些提升中获益；随着时间推移你会很容易地获得更多更好的选择并且费用更低。&lt;/li>
&lt;li>云能够帮助你轻松地准备好服务器和其他资源，在用完后直接将其关闭，而无须关注怎么处理它们，或者怎么卖掉它们收回成本。&lt;/li>
&lt;li>云代表了对基础设施的另一种思考方式——作为通过API来定义和控制的资源——支持更多的自动化操作。从“私有云”中也可以获得这些好处。&lt;/li>
&lt;/ul>
&lt;p>当然，不是所有跟云相关的东西都是好的。这里有一些缺点可能会构成挑战（在本章稍后部分我们会列出MySQL特有的缺点）。&lt;/p>
&lt;ul>
&lt;li>资源是共享并且不可预测的，实际上你可以获得比你支付的更多的资源。这听起来很不错，但却导致容量规划很难做。如果你在不知情的情况下获得了比理应享受到的更多的计算资源，那么就存在这样的风险：别人也许会索要他们应得的资源，这会使你的应用性能退化到应有的水平。一般来说，很难确切地知道本来应该得到多少（资源），大多数云托管服务提供商不会对此给出确切的答案。&lt;/li>
&lt;li>无法保证容量和可用性。你可能以为还可以获得新实例，但如果供应商已经超额销售了呢？这在有很多共享资源的情况下会发生，同样也会发生在云中。&lt;/li>
&lt;li>虚拟的共享资源导致排查故障更加困难，特别是在无法访问底层物理硬件的情况下无法检查并弄清到底发生了什么。例如，我们曾经看到过一些系统的&lt;em>iostat&lt;/em>显示的I/O很正常或者&lt;em>vmstat&lt;/em>显示的CPU很正常，而当实际衡量完成一个任务需要的时间时，资源却被系统上的其他东西严重占用了。如果在云平台上出现了性能问题，尤其需要去仔细地分析检测。如果对此并不擅长，可能就无法确认到底是底层系统性能差，还是你做了什么事情导致应用出现不合理的资源需求。&lt;/li>
&lt;/ul>
&lt;p>总的来说，云平台上对性能、可用性和容量的透明性和控制力都有所下降。最后，还有一些对云的误解需要记住。&lt;/p>
&lt;p>云天生具备更好的可扩展性&lt;/p>
&lt;p>应用、云的架构，以及管理云服务的组织是不是都是可扩展的。云并不是天生可扩展的，云也仅仅是云而已，选择一个可扩展的平台并不能自动使应用变得可扩展。的确，如果云托管提供商没有超售，那么你可以根据需求来购买资源，但在需要时能够获得资源仅仅是扩展性的一个方面而已。&lt;/p>
&lt;p>云可以自动改善甚至保证可用时间&lt;/p>
&lt;p>一般来说，个别在云端托管的服务器比那些经过良好设计的专用基础设施更容易发生故障或运行中断。但是许多人并没有意识到这一点。例如，有人这样写道：“我们将基础设施升级到基于云构建的系统以保证100％的可用时间和可扩展性”。而就在这之前AWS遭受了两次大规模的运行中断故障，导致很大一部分用户受影响。好的架构能够用不可靠的组件设计出可靠的系统，但通常更可靠的基础设施可以获得更高的可用性。（当然不可能有100％的可用时间的系统。）&lt;/p>
&lt;p>另一方面，购买云计算服务，实际上是购买一个由专家构建的平台。他们已经考虑了许多底层的东西，这意味着你可以更专注于上层工作。如果构建自己的平台而对其中的那些细枝末节并不精通，就可能犯一些初学者的错误，早晚会导致一些宕机时间。从这一点来说，云计算能够帮助改善可用时间。&lt;/p>
&lt;p>云是唯一能提供[这里填入任意的优点]的东西&lt;/p>
&lt;p>事实上，许多云的优点是继承自构建云平台所用到的技术，即使不使用云也可以获得(3)。例如，通过管理得当的虚拟化和容量规划，可以像任何一个云平台那样简单快速地启动（spin up）一台新的机器。完全没必要专门使用云来做到这一点。&lt;/p>
&lt;p>云是一个“银弹”（silver bullet）&lt;/p>
&lt;p>虽然大部分人会认为这很荒谬，但确实有人会这么认为。实际上完全没有这回事。&lt;/p>
&lt;p>无可否认，云计算提供了独特的优点，随着时间的推移，关于云计算是什么，以及它们在什么情况下会有帮助，我们会获得更多的共识。但有一点非常肯定：它是全新的，我们现在所做的任何预测都未必经得起时间的考验。我们会在本书讨论相对安全的部分，而将剩下的部分留给读者讨论。&lt;/p>
&lt;h1 id="132mysql在云端的经济价值">
 13.2　MySQL在云端的经济价值
 &lt;a class="anchor" href="#132mysql%e5%9c%a8%e4%ba%91%e7%ab%af%e7%9a%84%e7%bb%8f%e6%b5%8e%e4%bb%b7%e5%80%bc">#&lt;/a>
&lt;/h1>
&lt;p>在一些场景下云托管比传统的服务器部署方式更经济。以我们的经验来看，云托管比较适合尚处于初级阶段的企业，或者那些持续接触新概念并且本质上是以适用为主的企业，例如移动应用开发者或游戏开发者。这些技术的市场随着移动计算的扩张出现了爆炸式增长，并且仍然是快速发展的领域。在许多情况下，成功的因素并不为开发者所控制，例如口口相传的推荐或者恰逢重要国际事件的时机。&lt;/p>
&lt;p>我们已经帮助很多公司在云中构建移动应用、社交网络以及游戏应用。其中一个他们大量使用的策略是尽可能又快又便宜地开发和发布应用。如果一个应用碰巧变得流行了，公司将投入资源扩大其规模；否则就会很快终结这些应用。一些公司构建并发布的应用的生命周期甚至只有几个星期，在这样的环境下，可以毫不犹豫地选择云托管。&lt;/p>
&lt;p>如果是一个小规模的公司，可能无法提供足够的硬件来自建数据中心以满足一个非常流行的Facebook应用的发展曲线。我们也协助过一些大型的Facebook应用进行扩展，它们能够以今人惊讶的速度增长——有时甚至会快到让一个主机托管公司耗尽资源。更为严重的是，这些应用的增长是完全无法预测的；它们可能只有极少量的用户（也可能突然有了爆炸性的用户数量增长）。我们在数据中心和云中都遇到过这样的应用。如果是一个小公司，云可以帮你避免前期快速注入大量的资金来获得更快更大规模的风险。&lt;/p>
&lt;p>云的另一种潜在的大用途是运行不是很重要的基础设施，例如集成环境、开发测试平台，以及评估环境。假设部署周期是两个星期。你会每天每个小时都测试部署一次，还是只在项目最后的冲刺时测试？许多用户只是偶尔需要筹划和部署测试环境。在这种场景下，云可以帮助节约不少钱。&lt;/p>
&lt;p>以下是我们使用云的两种方式。第一个是作为我们对技术职员面试的一部分，我们会询问如何解决一些实际的问题。我们使用AMI（Amazon Machine Images）来模拟一些被“破坏”的机器，然后让求职者登录并在服务器上执行一系列任务。我们不必开放他们到内部网络的授权，这种方案显然要方便得多。另一个是作为新项目的工作平台和开发服务器。有一个这样的项目已经在一台云端开发服务器上运行了数个月，而花费不足一美元！这在我们自己的基础设施上是不可能做到的。单是发送一封邮件给系统管理员申请开发服务器的时间价值就不止一美元。&lt;/p>
&lt;p>但是另一方面，云托管对于长期项目而言可能会更加昂贵。如果打算长远地使用云，就需要花时间来计算一下（它是否划算）。除了猜想未来的创新能给云计算和商用硬件带来什么，还需要做基准测试以及一个完整的总体持有成本（TCO）账单。为了理清事情的本质并考虑全面所有相关的细节，你需要把所有的事情最终归结为一个数字：每美元的业务交易数。事情变化得太快，所以我们将这个留给读者思考。&lt;/p>
&lt;h1 id="133云中的mysql的可扩展性和高可用性">
 13.3　云中的MySQL的可扩展性和高可用性
 &lt;a class="anchor" href="#133%e4%ba%91%e4%b8%ad%e7%9a%84mysql%e7%9a%84%e5%8f%af%e6%89%a9%e5%b1%95%e6%80%a7%e5%92%8c%e9%ab%98%e5%8f%af%e7%94%a8%e6%80%a7">#&lt;/a>
&lt;/h1>
&lt;p>正如我们之前提到的，MySQL并不会在云端自动变得更具扩展性。事实上，如果机器的性能较差，会导致过早使用横向扩展策略。况且云托管服务器相比专用的硬件可靠性和可预测性要更差些，所以想在云端获得高可用性需要更多的创新。&lt;/p>
&lt;p>但是总的来说，在云端中扩展MySQL和在其他地方扩展没有太多的差别。最大的不同就是按需提供服务器的能力。但是也有某些限制会导致扩展和高可用实现起来有点麻烦，至少在有些云环境中是这样的。例如，在AWS云平台中，无法使用类似虚拟IP地址的功能来完成快速原子故障转移。像这种对资源的有限控制意味着你需要使用其他办法，例如代理。（ScaleBase也值得去看看。）&lt;/p>
&lt;p>云另外一个迷惑人的地方是梦想中的自动扩展——就是根据需求的增加或减少来启动或关闭实例。尽管对于诸如Web服务器这样的无状态部分是可行的，但对于数据库服务器而言则很难做到，因为它是有状态的。对于一些特定的场景，例如以读为主的应用，可以通过增加备库的方式来获得有限的自动扩展(4)，但这并不是一个通用的解决方案。实际上，虽然许多应用在Web层使用了自动扩展，但MySQL并不具备在一个无共享（Shared Nothing）集群中的对等角色服务器之间迁移的能力。你可以通过分片架构来自动重新分片并自动增长或收缩(5)，但MySQL本身是无法自动扩展的。&lt;/p>
&lt;p>事实上，因为数据库通常是一个应用系统中主要或唯一的有状态并且持久化的组件，所以把应用服务迁移到云端是很普遍的事情，因为除数据库之外的所有部分都可以从云中收益——Web服务器、工作队列服务器、缓存等——而MySQL只需要处理剩下的东西。毕竟，数据库并非世界的中心。如果应用系统其他部分获得的好处，超过了让MySQL运行得足够好而投入的额外开销和必需的工作量，那这不是一个是否会发生的问题，而是怎么发生的问题。要回答这个问题，最好先了解你在云中可能碰到的额外的挑战。这些通常围绕着数据库服务器的可用资源。&lt;/p>
&lt;h1 id="134四种基础资源">
 13.4　四种基础资源
 &lt;a class="anchor" href="#134%e5%9b%9b%e7%a7%8d%e5%9f%ba%e7%a1%80%e8%b5%84%e6%ba%90">#&lt;/a>
&lt;/h1>
&lt;p>MySQL需要四种基础资源来完成工作：CPU周期、内存、I/O，以及网络。这四种资源的特性和重要程度在不同的云平台上各不相同。可以通过了解它们的不同之处和对MySQL的影响，以决定是否选择在云中托管MySQL。&lt;/p></description></item><item><title>第12章高可用性</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC12%E7%AB%A0%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7/</link><pubDate>Sun, 05 Jan 2025 08:42:06 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC12%E7%AB%A0%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7/</guid><description>&lt;p>第12章　高可用性&lt;/p>
&lt;p>本章将讲述我们提到的复制、可扩展性以及高可用性三个主题中的第三个。归根结底，高可用性实际上意味着“更少的宕机时间”。然而糟糕的是，高可用性经常和其他相关的概念混淆，例如冗余、保障数据不丢失，以及负载均衡。我们希望之前的两章已经为清楚地理解高可用性做了足够的铺垫。跟其他两章一样，这一章也不仅仅是关注高可用性的内容，一些相关的话题也会综合阐述。&lt;/p>
&lt;h1 id="121什么是高可用性">
 12.1　什么是高可用性
 &lt;a class="anchor" href="#121%e4%bb%80%e4%b9%88%e6%98%af%e9%ab%98%e5%8f%af%e7%94%a8%e6%80%a7">#&lt;/a>
&lt;/h1>
&lt;p>高可用性实际上有点像神秘的野兽。它通常以百分比表示，这本身也是一种暗示：高可用性不是绝对的，只有相对更高的可用性。100％的可用性是不可能达到的。可用性的“9”规则是表示可用性目标最普遍的方法。你可能也知道，“5个9”表示99.999％的正常可用时间。换句话说，每年只允许5分钟的宕机时间。对于大多数应用这已经是令人惊叹的数字，尽管还有一些人试图获得更多的“9”。&lt;/p>
&lt;p>每个应用对可用性的需求各不相同。在设定一个可用时间的目标之前，先问问自己，是不是确实需要达到这个目标。可用性每提高一点，所花费的成本都会远超之前；可用性的效果和开销的比例并不是线性的。需要保证多少可用时间，取决于能够承担多少成本。高可用性实际上是在宕机造成的损失与降低宕机时间所花费的成本之间取一个平衡。换句话说，如果需要花大量金钱去获得更好的可用时间，但所带来的收益却很低，可能就不值得去做。总的来说，应用在超过一定的点以后追求更高的可用性是非常困难的，成本也会很高，因此我们建议设定一个更现实的目标并且避免过度设计。幸运的是，建立2个9或3个9的可用时间的目标可能并不困难，具体情况取决于应用。&lt;/p>
&lt;p>有时候人们将可用性定义成服务正在运行的时间段。我们认为可用性的定义还应该包括应用是否能以足够好的性能处理请求。有许多方法可以让一个服务器保持运行，但服务并不是真正可用。对一个很大的服务器而言，重启MySQL之后，可能需要几个小时才能充分预热以保证查询请求的响应时间是可以接受的，即使服务器只接收了正常流量的一小部分也是如此。&lt;/p>
&lt;p>另一个需要考虑的问题是，即使应用并没有停止服务，但是否可能丢失了数据。如果服务器遭遇灾难性故障，可能多少都会丢失一些数据，例如最近已经写入（最新丢失的）二进制日志但尚未传递到备库的中继日志中的事务。你能够容忍吗？大多数应用能够容忍；因为替代方案大多非常昂贵且复杂，或者有一些性能开销。例如，可以使用同步复制，或是将二进制日志放到一个通过DRBD进行复制的设备上，这样就算服务器完全失效也不用担心丢失数据。（但是整个数据中心也有可能会掉电。）&lt;/p>
&lt;p>一个良好的应用架构通常可以降低可用性方面的需求，至少对部分系统而言是这样的，良好的架构也更容易做到高可用。将应用中重要和不重要的部分进行分离可以节约不少工作量和金钱，因为对于一个更小的系统改进可用性会更容易。可以通过计算“风险敞口（risk exposure）”，将失效概率与失效代价相乘来确认高优先级的风险。画一个简单的风险计算表，以概率、代价和风险敞口作为列，这样很容易找到需要优先处理的项目。&lt;/p>
&lt;p>在前一章我们通过讨论如何避免导致糟糕的可扩展性的原因，来推出如何获得更好的可扩展性。这里也会使用相似的方法来讨论可用性，因为我们相信，理解可用性最好的方法就是研究它的反面——宕机时间。接下来的小节我们会讨论为什么会出现宕机。&lt;/p>
&lt;h1 id="122导致宕机的原因">
 12.2　导致宕机的原因
 &lt;a class="anchor" href="#122%e5%af%bc%e8%87%b4%e5%ae%95%e6%9c%ba%e7%9a%84%e5%8e%9f%e5%9b%a0">#&lt;/a>
&lt;/h1>
&lt;p>我们经常听到导致数据库宕机最主要的原因是编写的SQL查询性能很差，真的是这样吗？2009年我们决定分析我们客户的数据库所遇到的问题，以找出那些真正引起宕机的问题，以及如何避免这些问题(1)。结果证实了一些我们已有的猜想，但也否定了一些（错误的）认识，我们从中学到了很多。&lt;/p>
&lt;p>我们首先对宕机事件按表现方式而非导致的原因进行分类。一般来说，“运行环境”是排名第一的宕机类别，大约35％的事件属于这一类。运行环境可以看作是支持数据库服务器运行的系统和资源集合，包括操作系统、硬盘以及网络等。性能问题紧随其后，也是约占35％；然后是复制，占20％；最后剩下的10％包含各种类型的数据丢失或损坏，以及其他问题。&lt;/p>
&lt;p>我们对事件按类型进行分类后，确定了导致这些事件的原因。以下是一些需要注意的地方：&lt;/p>
&lt;ul>
&lt;li>在运行环境的问题中，最普遍的问题是磁盘空间耗尽。&lt;/li>
&lt;li>在性能问题中，最普遍的宕机原因确实是运行很糟糕的SQL，但也不一定都是这个原因，比如也有很多问题是由于服务器Bug或错误的行为导致的。&lt;/li>
&lt;li>糟糕的Schema和索引设计是第二大影响性能的问题。&lt;/li>
&lt;li>复制问题通常由于主备数据不一致导致。&lt;/li>
&lt;li>数据丢失问题通常由于DROP TABLE的误操作导致，并总是伴随着缺少可用备份的问题。&lt;/li>
&lt;/ul>
&lt;p>复制虽然常被人们用来改善可用时间，但却也可能导致宕机。这主要是由于不正确的使用导致的，即便如此，它也阐明了一个普遍的情况：许多高可用性策略可能会产生反作用，我们会在后面讨论这个话题。&lt;/p>
&lt;p>现在我们已经知道了主要宕机类别，以及有什么需要注意，下面我们将专门介绍如何获得高可用性。&lt;/p>
&lt;h1 id="123如何实现高可用性">
 12.3　如何实现高可用性
 &lt;a class="anchor" href="#123%e5%a6%82%e4%bd%95%e5%ae%9e%e7%8e%b0%e9%ab%98%e5%8f%af%e7%94%a8%e6%80%a7">#&lt;/a>
&lt;/h1>
&lt;p>可以通过同时进行以下两步来获得高可用性。首先，可以尝试避免导致宕机的原因来减少宕机时间。许多问题其实很容易避免，例如通过适当的配置、监控，以及规范或安全保障措施来避免人为错误。第二，尽量保证在发生宕机时能够快速恢复。最常见的策略是在系统中制造冗余，并且具备故障转移能力。这两个维度的高可用性可以通过两个相关的度量来确定：平均失效时间（MTBF）和平均恢复时间（MTTR）。一些组织会非常仔细地追踪这些度量值。&lt;/p>
&lt;p>第二步——通过冗余快速恢复——很不幸，这里是最应该注意的地方，但预防措施的投资回报率会很高。接下来我们来探讨一些预防措施。&lt;/p>
&lt;h2 id="1231提升平均失效时间mtbf">
 12.3.1　提升平均失效时间（MTBF）
 &lt;a class="anchor" href="#1231%e6%8f%90%e5%8d%87%e5%b9%b3%e5%9d%87%e5%a4%b1%e6%95%88%e6%97%b6%e9%97%b4mtbf">#&lt;/a>
&lt;/h2>
&lt;p>其实只要尽职尽责地做好一些应做的事情，就可以避免很多宕机。在分类整理宕机事件并追查导致宕机的根源时，我们还发现，很多宕机本来是有一些方法可以避免的。我们发现大部分宕机事件都可以通过全面的常识性系统管理办法来避免。以下是从我们的白皮书中摘录的指导性建议，在白皮书中有我们详细的分析结果。&lt;/p>
&lt;ul>
&lt;li>测试恢复工具和流程，包括从备份中恢复数据。&lt;/li>
&lt;li>遵从最小权限原则。&lt;/li>
&lt;li>保持系统干净、整洁。&lt;/li>
&lt;li>使用好的命名和组织约定来避免产生混乱，例如服务器是用于开发还是用于生产环境。&lt;/li>
&lt;li>谨慎安排升级数据库服务器。&lt;/li>
&lt;li>在升级前，使用诸如Percona Toolkit中的&lt;em>pt-upgrade&lt;/em>之类的工具仔细检查系统。&lt;/li>
&lt;li>使用InnoDB并进行适当的配置，确保InnoDB是默认存储引擎。如果存储引擎被禁止，服务器就无法启动。&lt;/li>
&lt;li>确认基本的服务器配置是正确的。&lt;/li>
&lt;li>通过skip_name_resolve禁止DNS。&lt;/li>
&lt;li>除非能证明有效，否则禁用查询缓存。&lt;/li>
&lt;li>避免使用复杂的特性，例如复制过滤和触发器，除非确实需要。&lt;/li>
&lt;li>监控重要的组件和功能，特别是像磁盘空间和RAID卷状态这样的关键项目，但也要避免误报，只有当确实发生问题时才发送告警。&lt;/li>
&lt;li>尽量记录服务器的状态和性能指数，如果可能就尽量久地保存。&lt;/li>
&lt;li>定期检查复制完整性。&lt;/li>
&lt;li>将备库设置为只读，不要让复制自动启动。&lt;/li>
&lt;li>定期进行查询语句审查。&lt;/li>
&lt;li>归档并清理不需要的数据。&lt;/li>
&lt;li>为文件系统保留一些空间。在GNU/Linux中，可以使用-&lt;em>m&lt;/em>选项来为文件系统本身保留空间。还可以在LVM卷组中留下一些空闲空间。或者，更简单的方法，仅仅创建一个巨大的空文件，在文件系统快满时，直接将其删除。(2)&lt;/li>
&lt;li>养成习惯，评估和管理系统的改变、状态以及性能信息。&lt;/li>
&lt;/ul>
&lt;p>我们发现对系统变更管理的缺失是所有导致宕机的事件中最普遍的原因。典型的错误包括粗心的升级导致升级失败并遭遇一些Bug，或是尚未测试就将Schema或查询语句的更改直接运行到线上，或者没有为一些失败的情况制定计划，例如达到了磁盘容量限制。另外一个导致问题的主要原因是缺少严格的评估，例如因为疏忽没有确认备份是否是可以恢复的。最后，可能没有正确地监控MySQL的相关信息。例如缓存命中率报警并不能说明出现问题，并且可能产生大量的误报，这会使监控系统被认为不太有用，于是一些人就会忽略报警。有时候监控系统失效了，甚至没人会注意到，直至你的老板质问你，“为什么Nagios没有告诉我们磁盘已经满了”。&lt;/p>
&lt;h2 id="1232降低平均恢复时间mttr">
 12.3.2　降低平均恢复时间（MTTR）
 &lt;a class="anchor" href="#1232%e9%99%8d%e4%bd%8e%e5%b9%b3%e5%9d%87%e6%81%a2%e5%a4%8d%e6%97%b6%e9%97%b4mttr">#&lt;/a>
&lt;/h2>
&lt;p>之前提到，可以通过减少恢复时间来获得高可用性。事实上，一些人走得更远，只专注于减少恢复时间的某个方面：通过在系统中建立冗余来避免系统完全失效，并避免单点失效问题。&lt;/p>
&lt;p>在降低恢复时间上进行投资非常重要，一个能够提供冗余和故障转移能力的系统架构，则是降低恢复时间的关键环节。但实现高可用性不单单是一个技术问题，还有许多个人和组织的因素。组织和个人在避免宕机和从宕机事件中恢复的成熟度和能力层次各不相同。&lt;/p>
&lt;p>团队成员是最重要的高可用性资产，所以为恢复制定一个好的流程非常重要。拥有熟练技能、应变能力、训练有素的雇员，以及处理紧急事件的详细文档和经过仔细测试的流程，对从宕机中恢复有巨大的作用。但也不能完全依赖工具和系统，因为它们并不能理解实际情况的细微差别，有时候它们的行为在一般情况下是正确的，但在某些场景下却会是个灾难！&lt;/p>
&lt;p>对宕机事件进行评估有助于提升组织学习能力，可以帮助避免未来发生相似的错误，但是不要对“事后反思”或“事后的调查分析”期待太高。后见之明被严重曲解，并且一味想找到导致问题的唯一根源，这可能会影响你的判断力(3)。许多流行的方法，例如“五个为什么”，可能会被过度使用，导致一些人将他们的精力集中在找到唯一的替罪羊。很难去回顾我们解决的问题当时所处的状况，也很难理解真正的原因，因为原因通常是多方面的。因此，尽管事后反思可能是有用的，但也应该对结论有所保留。即使是我们给出的建议，也是基于长期研究导致宕机事件的原因以及如何预防它们所得，并且只是我们的观点而已。&lt;/p>
&lt;p>这里我们要反复提醒：所有的宕机事件都是由多方面的失效联合在一起导致的。因此，可以通过利用合适的方法确保单点的安全来避免。整个链条必须要打断，而不仅仅是单个环节。例如，那些向我们求助恢复数据的人不仅遭受数据丢失（存储失效，DBA误操作等），同时还缺少一个可用的备份。&lt;/p></description></item><item><title>第11章可扩展的MySQL</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC11%E7%AB%A0%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84MySQL/</link><pubDate>Sun, 05 Jan 2025 08:42:05 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC11%E7%AB%A0%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84MySQL/</guid><description>&lt;p>第11章　可扩展的MySQL&lt;/p>
&lt;p>本章将展示如何构建一个基于MySQL的应用，并且当规模变得越来越庞大时，还能保证快速、高效并且经济。&lt;/p>
&lt;p>有些应用仅仅适用于一台或少数几台服务器，那么哪些可扩展性建议是和这些应用相关的呢？大多数人从不会维护超大规模的系统，并且通常也无法效仿在主流大公司所使用的策略。本章会涵盖这一系列的策略。我们已经建立或者协助建立了许多应用，包括从单台或少量服务器的应用到使用上千台服务器的应用。选择一个合适的策略能够大大地节约时间和金钱。&lt;/p>
&lt;p>MySQL经常被批评很难进行扩展，有些情况下这种看法是正确的，但如果选择正确的架构并很好地实现，就能够非常好地扩展MySQL。但是扩展性并不是一个很好理解的主题，所以我们先来理清一些容易混淆的地方。&lt;/p>
&lt;h1 id="111什么是可扩展性">
 11.1　什么是可扩展性
 &lt;a class="anchor" href="#111%e4%bb%80%e4%b9%88%e6%98%af%e5%8f%af%e6%89%a9%e5%b1%95%e6%80%a7">#&lt;/a>
&lt;/h1>
&lt;p>人们常常把诸如“可扩展性”、“高可用性”以及“性能”等术语在一些非正式的场合用作同义词，但事实上它们是完全不同的。在第3章已经解释过，我们将性能定义为响应时间。我们也可以很精确地定义可扩展性，稍后将完整讨论。简要地说，可扩展性表明了当需要增加资源以执行更多工作时系统能够获得划算的等同提升（equal bang for the buck）的能力。缺乏扩展能力的系统在达到收益递减的转折点后，将无法进一步增长。&lt;/p>
&lt;p>容量是一个和可扩展性相关的概念。系统容量表示在一定时间内能够完成的工作量(1)，但容量必须是可以有效利用的。系统的最大吞吐量并不等同于容量。大多数基准测试能够衡量一个系统的最大吞吐量，但真实的系统一般不会使用到极限。如果达到最大吞吐量，则性能会下降，并且响应时间会变得不可接受地大且非常不稳定。我们将系统的真实容量定义为在保证可接受的性能的情况下能够达到的吞吐量。这就是为什么基准测试的结果通常不应该简化为一个单独的数字。&lt;/p>
&lt;p>容量和可扩展性并不依赖于性能。以高速公路上的汽车来类比的话：&lt;/p>
&lt;ul>
&lt;li>性能是汽车的时速。&lt;/li>
&lt;li>容量是车道数乘以最大安全时速。&lt;/li>
&lt;li>可扩展性就是在不减慢交通的情况下，能增加更多车和车道的程度。&lt;/li>
&lt;/ul>
&lt;p>在这个类比中，可扩展性依赖于多个条件：换道设计得是否合理、路上有多少车抛锚或者发生事故，汽车行驶速度是否不同或者是否频繁变换车道——但一般来说和汽车的引擎是否强大无关。这并不是说性能不重要，性能确实重要，只是需要指出，即使系统性能不是很高也可以具备可扩展性。&lt;/p>
&lt;p>从较高层次看，可扩展性就是能够通过增加资源来提升容量的能力。&lt;/p>
&lt;p>即使MySQL架构是可扩展的，但应用本身也可能无法扩展，如果很难增加容量，不管原因是什么，应用都是不可扩展的。之前我们从吞吐量方面来定义容量，但同样也需要从较高的层次来看待容量问题。从有利的角度来看，容量可以简单地认为是处理负载的能力，从不同的角度来考虑负载很有帮助。&lt;/p>
&lt;p>数据量&lt;/p>
&lt;p>应用所能累积的数据量是可扩展性最普遍的挑战，特别是对于现在的许多互联网应用而言，这些应用从不删除任何数据。例如社交网站，通常从不会删除老的消息或评论。&lt;/p>
&lt;p>用户量&lt;/p>
&lt;p>即使每个用户只有少量的数据，但在累计到一定数量的用户后，数据量也会开始不成比例地增长且速度快过用户数增长。更多的用户意味着要处理更多的事务，并且事务数可能和用户数不成比例。最后，大量用户（以及更多的数据）也意味着更多复杂的查询，特别是查询跟用户关系相关时（用户间的关联数可以用N×（N−1）来计算，这里N表示用户数）。&lt;/p>
&lt;p>用户活跃度&lt;/p>
&lt;p>不是所有的用户活跃度都相同，并且用户活跃度也不总是不变的。如果用户突然变得活跃，例如由于增加了一个吸引人的新特性，那么负载可能会明显提升。用户活跃度不仅仅指页面浏览数，即使同样的页面浏览数，如果网站的某个需要执行大量工作的部分变得流行，也可能导致更多的工作。另外，某些用户也会比其他用户更活跃：他们可能比一般人有更多的朋友、消息和照片。&lt;/p>
&lt;p>相关数据集的大小&lt;/p>
&lt;p>如果用户间存在关系，应用可能需要在整个相关联用户群体上执行查询和计算，这比处理一个一个的用户和用户数据要复杂得多。社交网站经常会遇到由那些人气很旺的用户组或朋友很多的用户所带来的挑战(2)。&lt;/p>
&lt;h2 id="1111正式的可扩展性定义">
 11.1.1　正式的可扩展性定义
 &lt;a class="anchor" href="#1111%e6%ad%a3%e5%bc%8f%e7%9a%84%e5%8f%af%e6%89%a9%e5%b1%95%e6%80%a7%e5%ae%9a%e4%b9%89">#&lt;/a>
&lt;/h2>
&lt;p>有必要探讨一下可扩展性在数学上的定义了，这有助于在更高层次的概念上清晰地理解可扩展性。如果没有这样的基础，就可能无法理解或精确地表达可扩展性。不过不用担心，这里不会涉及高等数学，即使不是数学天才，也能够很直观地理解它。&lt;/p>
&lt;p>关键是之前我们使用的短语：“划算的等同提升（equal bang for the buck）”。另一种说法是，可扩展性是当增加资源以处理负载和增加容量时系统能够获得的投资产出率（ROI）。假设有一个只有一台服务器的系统，并且能够测量它的最大容量，如图11-1所示。&lt;/p>
&lt;p>&lt;img src="img/000001.jpeg" alt="" />
&lt;strong>图11-1：一个只有一台服务器的系统&lt;/strong>&lt;/p>
&lt;p>假设现在我们增加一台服务器，系统的能力加倍，如图11-2所示。&lt;/p>
&lt;p>&lt;img src="img/000002.jpeg" alt="" />
&lt;strong>图11-2：一个线性扩展的系统能由两台服务器获得两倍容量&lt;/strong>&lt;/p>
&lt;p>这就是线性扩展。我们增加了一倍的服务器，结果增加了一倍的容量。大部分系统并不是线性扩展的，而是如图11-3所示的扩展方式。&lt;/p>
&lt;p>&lt;img src="img/000003.jpeg" alt="" />
&lt;strong>图11-3：一个非线性扩展的系统&lt;/strong>&lt;/p>
&lt;p>大部分系统都只能以比线性扩展略低的扩展系数进行扩展。越高的扩展系数会导致越大的线性偏差。事实上，多数系统最终会达到一个最大吞吐量临界点，超过这个点后增加投入反而会带来负回报——继续增加更多工作负载，实际上会降低系统的吞吐量。(3)&lt;/p>
&lt;p>这怎么可能呢？这些年产生了许多可扩展性模型，它们有着不同程度的良好表现和实用性。我们这里所讲的可扩展性模型是基于某些能够影响系统扩展的内在机制。这就是Neil J. Gunther博士提出的通用可扩展性定律（Universal Scalability Law，USL）。Gunther博士将这些详尽地写到了他的书中，包括&lt;em>Guerrilla Capacity Planning&lt;/em> （Springer）。这里我们不会深入到背后的数学理论中，如果你对此感兴趣，他撰写的书籍以及由他的公司Performance Dynamics提供的训练课程可能是比较好的资源。(4)&lt;/p>
&lt;p>简而言之，USL说的是线性扩展的偏差可通过两个因素来建立模型：无法并发执行的一部分工作，以及需要交互的另外一部分工作。为第一个因素建模就有了著名的Amdahl定律，它会导致吞吐量趋于平缓。如果部分任务无法并行，那么不管你如何分而治之，该任务至少需要串行部分的时间。&lt;/p>
&lt;p>增加第二个因素——内部节点间或者进程间的通信——到Amdahl定律就得出了USL。这种通信的代价取决于通信信道的数量，而信道的数量将按照系统内工作者数量的二次方增长。因此最终开销比带来的收益增长得更快，这是产生扩展性倒退的原因。图11-4阐明了目前讨论到的三个概念：线性扩展、Amdahl扩展，以及USL扩展。大多数真实系统看起来更像USL曲线。&lt;/p>
&lt;p>&lt;img src="img/000004.jpeg" alt="" />
&lt;strong>图11-4：线性扩展、AmdahI扩展以及USL扩展定律&lt;/strong>&lt;/p>
&lt;p>USL可以应用于硬件和软件领域。对于硬件，横轴表示硬件的数量，例如服务器数量或CPU数量。每个硬件的工作量、数据大小以及查询的复杂度必须保持为常量(5)。对于软件，横轴表示并发度，例如用户数或线程数。每个并发的工作量必须保持为常量。&lt;/p>
&lt;p>有一点很重要，USL并不能完美地描述真实系统，它只是一个简化模型。但这是一个很好的框架，可用于理解为什么系统增长无法带来等同的收益。它也揭示了一个构建高可扩展性系统的重要原则：在系统内尽量避免串行化和交互。&lt;/p>
&lt;p>可以衡量一个系统并使用回归来确定串行和交互的量。你可以将它作为容量规划和性能预测评估的最优上限值。也可以检查系统是怎么偏离USL模型的，将其作为最差下限值以指出系统的哪一部分没有表现出它应有的性能。这两种情况下，USL给出了一个讨论可扩展性的参考。如果没有USL，那即使盯着系统看也无法知道期望的结果是什么。如果想深入了解这个主题，最好去看一下对应的书籍。Gunther博士已经写得很清楚，因此我们不会再深入讨论下去。&lt;/p>
&lt;p>另外一个理解可扩展性问题的框架是约束理论，它解释了如何通过减少依赖事件和统计变化（statistical variation）来改进系统的吞吐量和性能。这在Eliyahu M. Goldratt所撰写的&lt;em>The Goal&lt;/em>（North River）一书中有描述，其中有一个关于管理制造业设备的延伸的比喻。尽管这看起来和数据库服务器没有什么关联，但其中包含的法则和排队理论以及其他运筹学方面是一样的。&lt;/p></description></item><item><title>第10章复制</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC10%E7%AB%A0%E5%A4%8D%E5%88%B6/</link><pubDate>Sun, 05 Jan 2025 08:42:04 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_%E9%AB%98%E6%80%A7%E8%83%BDMySQL_/%E7%AC%AC10%E7%AB%A0%E5%A4%8D%E5%88%B6/</guid><description>&lt;p>第10章　复制&lt;/p>
&lt;p>MySQL内建的复制功能是构建基于MySQL的大规模、高性能应用的基础，这类应用使用所谓的“水平扩展”的架构。我们可以通过为服务器配置一个或多个备库(1)的方式来进行数据同步。复制功能不仅有利于构建高性能的应用，同时也是高可用性、可扩展性、灾难恢复、备份以及数据仓库等工作的基础。事实上，可扩展性和高可用性通常是相关联的话题，我们会在接下来的三章详细阐述。&lt;/p>
&lt;p>本章将阐述所有与复制相关的内容，首先简要介绍复制如何工作，然后讨论基本的复制服务搭建，包括与复制相关的配置以及如何管理和优化复制服务器。虽然本书的主题是高性能，但对于复制来说，我们同样需要关注其准确性和可靠性，因此我们也会讲述复制在什么情况下会失败，以及如何使其更好地工作。&lt;/p>
&lt;h1 id="101复制概述">
 10.1　复制概述
 &lt;a class="anchor" href="#101%e5%a4%8d%e5%88%b6%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h1>
&lt;p>复制解决的基本问题是让一台服务器的数据与其他服务器保持同步。一台主库的数据可以同步到多台备库上，备库本身也可以被配置成另外一台服务器的主库。主库和备库之间可以有多种不同的组合方式。&lt;/p>
&lt;p>MySQL支持两种复制方式：基于行的复制和基于语句的复制。基于语句的复制（也称为逻辑复制）早在MySQL 3.23版本中就存在，而基于行的复制方式在5.1版本中才被加进来。这两种方式都是通过在主库上记录二进制日志(2)、在备库重放日志的方式来实现异步的数据复制。这意味着，在同一时间点备库上的数据可能与主库存在不一致，并且无法保证主备之间的延迟。一些大的语句可能导致备库产生几秒、几分钟甚至几个小时的延迟。&lt;/p>
&lt;p>MySQL复制大部分是向后兼容的，新版本的服务器可以作为老版本服务器的备库，但反过来，将老版本作为新版本服务器的备库通常是不可行的，因为它可能无法解析新版本所采用的新的特性或语法，另外所使用的二进制文件的格式也可能不相同。例如，不能从MySQL 5.1复制到MySQL 4.0。在进行大的版本升级前，例如从4.1升级到5.0，或从5.1升级到5.5，最好先对复制的设置进行测试。但对于小版本号升级，如从5.1.51升级到5.1.58，则通常是兼容的。通过阅读每次版本更新的ChangeLog可以找到不同版本间做了什么修改。&lt;/p>
&lt;p>复制通常不会增加主库的开销，主要是启用二进制日志带来的开销，但出于备份或及时从崩溃中恢复的目的，这点开销也是必要的。除此之外，每个备库也会对主库增加一些负载（例如网络I/O开销），尤其当备库请求从主库读取旧的二进制日志文件时，可能会造成更高的I/O开销。另外锁竞争也可能阻碍事务的提交。最后，如果是从一个高吞吐量（例如5000或更高的TPS）的主库上复制到多个备库，唤醒多个复制线程发送事件的开销将会累加。&lt;/p>
&lt;p>通过复制可以将读操作指向备库来获得更好的读扩展，但对于写操作，除非设计得当，否则并不适合通过复制来扩展写操作。在一主库多备库的架构中，写操作会被执行多次，这时候整个系统的性能取决于写入最慢的那部分。&lt;/p>
&lt;p>当使用一主库多备库的架构时，可能会造成一些浪费，因为本质上它会复制大量不必要的重复数据。例如，对于一台主库和10台备库，会有11份数据拷贝，并且这11台服务器的缓存中存储了大部分相同的数据。这和在服务器上有11路RAID 1类似。这不是一种经济的硬件使用方式，但这种复制架构却很常见，本章我们将讨论解决这个问题的方法。&lt;/p>
&lt;h2 id="1011复制解决的问题">
 10.1.1　复制解决的问题
 &lt;a class="anchor" href="#1011%e5%a4%8d%e5%88%b6%e8%a7%a3%e5%86%b3%e7%9a%84%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;p>下面是复制比较常见的用途：&lt;/p>
&lt;p>数据分布&lt;/p>
&lt;p>MySQL复制通常不会对带宽造成很大的压力，但在5.1版本引入的基于行的复制会比传统的基于语句的复制模式的带宽压力更大。你可以随意地停止或开始复制，并在不同的地理位置来分布数据备份，例如不同的数据中心。即使在不稳定的网络环境下，远程复制也可以工作。但如果为了保持很低的复制延迟，最好有一个稳定的、低延迟连接。&lt;/p>
&lt;p>负载均衡&lt;/p>
&lt;p>通过MySQL复制可以将读操作分布到多个服务器上，实现对读密集型应用的优化，并且实现很方便，通过简单的代码修改就能实现基本的负载均衡。对于小规模的应用，可以简单地对机器名做硬编码或使用DNS轮询（将一个机器名指向多个IP地址）。当然也可以使用更复杂的方法，例如网络负载均衡这一类的标准负载均衡解决方案，能够很好地将负载分配到不同的MySQL服务器上。Linux虚拟服务器（Linux Virtual Server，LVS）也能够很好地工作，第11章将详细地讨论负载均衡。&lt;/p>
&lt;p>备份&lt;/p>
&lt;p>对于备份来说，复制是一项很有意义的技术补充，但复制既不是备份也不能够取代备份。&lt;/p>
&lt;p>高可用性和故障切换&lt;/p>
&lt;p>复制能够帮助应用程序避免MySQL单点失败，一个包含复制的设计良好的故障切换系统能够显著地缩短宕机时间，我们将在第12章讨论故障切换。&lt;/p>
&lt;p>MySQL升级测试&lt;/p>
&lt;p>这种做法比较普遍，使用一个更高版本的MySQL作为备库，保证在升级全部实例前，查询能够在备库按照预期执行。&lt;/p>
&lt;h2 id="1012复制如何工作">
 10.1.2　复制如何工作
 &lt;a class="anchor" href="#1012%e5%a4%8d%e5%88%b6%e5%a6%82%e4%bd%95%e5%b7%a5%e4%bd%9c">#&lt;/a>
&lt;/h2>
&lt;p>在详细介绍如何设置复制之前，让我们先看看MySQL实际上是如何复制数据的。总的来说，复制有三个步骤：&lt;/p>
&lt;ol>
&lt;li>在主库上把数据更改记录到二进制日志（Binary Log）中（这些记录被称为二进制日志事件）。&lt;/li>
&lt;li>备库将主库上的日志复制到自己的中继日志（Relay Log）中。&lt;/li>
&lt;li>备库读取中继日志中的事件，将其重放到备库数据之上。&lt;/li>
&lt;/ol>
&lt;p>以上只是概述，实际上每一步都很复杂，图10-1更详细地描述了复制的细节。&lt;/p>
&lt;p>&lt;img src="img/000002.jpeg" alt="" />
&lt;strong>图10-1：MySQL复制如何工作&lt;/strong>&lt;/p>
&lt;p>第一步是在主库上记录二进制日志（稍后介绍如何设置）。在每次准备提交事务完成数据更新前，主库将数据更新的事件记录到二进制日志中。MySQL会按事务提交的顺序而非每条语句的执行顺序来记录二进制日志。在记录二进制日志后，主库会告诉存储引擎可以提交事务了。&lt;/p>
&lt;p>下一步，备库将主库的二进制日志复制到其本地的中继日志中。首先，备库会启动一个工作线程，称为I/O线程，I/O线程跟主库建立一个普通的客户端连接，然后在主库上启动一个特殊的二进制转储（&lt;em>binlog dump&lt;/em>）线程（该线程没有对应的SQL命令），这个二进制转储线程会读取主库上二进制日志中的事件。它不会对事件进行轮询。如果该线程追赶上了主库，它将进入睡眠状态，直到主库发送信号量通知其有新的事件产生时才会被唤醒，备库I/O线程会将接收到的事件记录到中继日志中。&lt;/p>
&lt;p>&lt;img src="img/000001.jpeg" alt="" />MySQL 4.0之前的复制与之后的版本相比改变很大，例如MySQL最初的复制功能没有使用中继日志，所以复制只用到了两个线程，而不是现在的三个线程。目前大部分人都是使用的最新版本，因此在本章我们不会去讨论关于老版本复制的更多细节。&lt;/p>
&lt;p>备库的SQL线程执行最后一步，该线程从中继日志中读取事件并在备库执行，从而实现备库数据的更新。当SQL线程追赶上I/O线程时，中继日志通常已经在系统缓存中，所以中继日志的开销很低。SQL线程执行的事件也可以通过配置选项来决定是否写入其自己的二进制日志中，它对于我们稍后提到的场景非常有用。&lt;/p>
&lt;p>图10-1显示了在备库有两个运行的线程，在主库上也有一个运行的线程：和其他普通连接一样，由备库发起的连接，在主库上同样拥有一个线程。&lt;/p>
&lt;p>这种复制架构实现了获取事件和重放事件的解耦，允许这两个过程异步进行。也就是说I/O线程能够独立于SQL线程之外工作。但这种架构也限制了复制的过程，其中最重要的一点是在主库上并发运行的查询在备库只能串行化执行，因为只有一个SQL线程来重放中继日志中的事件。后面我们将会看到，这是很多工作负载的性能瓶颈所在。虽然有一些针对该问题的解决方案，但大多数用户仍然受制于单线程。&lt;/p>
&lt;h1 id="102配置复制">
 10.2　配置复制
 &lt;a class="anchor" href="#102%e9%85%8d%e7%bd%ae%e5%a4%8d%e5%88%b6">#&lt;/a>
&lt;/h1>
&lt;p>为MySQL服务器配置复制非常简单。但由于场景不同，基本的步骤还是有所差异。最基本的场景是新安装的主库和备库，总的来说分为以下几步：&lt;/p>
&lt;ol>
&lt;li>在每台(3)服务器上创建复制账号。&lt;/li>
&lt;li>配置主库和备库。&lt;/li>
&lt;li>通知备库连接到主库并从主库复制数据。&lt;/li>
&lt;/ol>
&lt;p>这里我们假定大部分配置采用默认值即可，在主库和备库都是全新安装并且拥有同样的数据（默认MySQL数据库）时这样的假设是合理的。接下来我们将展示如何一步步配置复制：假设有服务器server1（IP地址192.168.0.1）和服务器server2（IP地址192.168.0.2），我们将解释如何给一个已经运行的服务器配置备库，并探讨推荐的复制配置。&lt;/p>
&lt;h2 id="1021创建复制账号">
 10.2.1　创建复制账号
 &lt;a class="anchor" href="#1021%e5%88%9b%e5%bb%ba%e5%a4%8d%e5%88%b6%e8%b4%a6%e5%8f%b7">#&lt;/a>
&lt;/h2>
&lt;p>MySQL会赋予一些特殊的权限给复制线程。在备库运行的I/O线程会建立一个到主库的TCP/IP连接，这意味着必须在主库创建一个用户，并赋予其合适的权限。备库I/O线程以该用户名连接到主库并读取其二进制日志。通过如下语句创建用户账号：&lt;/p></description></item><item><title>附录-附表-后记</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E9%99%84%E5%BD%95-%E9%99%84%E8%A1%A8-%E5%90%8E%E8%AE%B0/</link><pubDate>Sat, 04 Jan 2025 16:42:37 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E9%99%84%E5%BD%95-%E9%99%84%E8%A1%A8-%E5%90%8E%E8%AE%B0/</guid><description>&lt;h1 id="附录">
 附录
 &lt;a class="anchor" href="#%e9%99%84%e5%bd%95">#&lt;/a>
&lt;/h1>
&lt;h2 id="西周金文初吉之研究">
 西周金文“初吉”之研究
 &lt;a class="anchor" href="#%e8%a5%bf%e5%91%a8%e9%87%91%e6%96%87%e5%88%9d%e5%90%89%e4%b9%8b%e7%a0%94%e7%a9%b6">#&lt;/a>
&lt;/h2>
&lt;p>一、传统解说难于否定&lt;/p>
&lt;p>西周行用朔望月历制，朔与望至关重要。朔称初吉、月吉，或称吉，又叫既死霸(取全是背光面之义，死霸指背光面)，或叫朔月。这种种名称，反映了周人对月相的重视以及朔日在历制中的特殊地位。&lt;/p>
&lt;p>传统的解说，初吉即朔。&lt;/p>
&lt;p>《诗·小明》“正月初吉”，毛传：初吉，朔日也。&lt;/p>
&lt;p>《国语·周语》“自今至于初吉”，韦昭注初吉：二月朔日也。&lt;/p>
&lt;p>《周礼》“月吉则属民而读邦法”，郑注月吉：每月朔日也。&lt;/p>
&lt;p>《论语》“吉月必朝服而朝”，孔曰：吉月，月朔也。&lt;/p>
&lt;p>《诗·十月之交》“朔月辛卯”，唐石经作“朔日辛卯”。&lt;/p>
&lt;p>《礼记·祭义》：“朔月月半，君巡牲。”&lt;/p>
&lt;p>《礼记·玉藻》“朔月大牢”，陈澔《礼记集说》：朔月，月朔也。&lt;/p>
&lt;p>日本竹添光鸿《毛诗会笺》云：古人朔日称朔月。《仪礼》《礼记》皆有朔月之文。《尚书》或称元日、上日而不曰朔日。即望亦但曰月几望或既望而不曰望日，故知经文定当以朔月为是也。凡月朔皆称朔月。《论语》亦以月吉为吉月。古人多倒语，犹《书》之“月正元日”乃正月元日也。&lt;/p>
&lt;p>《周礼》“正月之吉”，郑注：吉谓朔日。&lt;/p>
&lt;p>《周礼》“及四时之孟月吉日”，郑注：四孟之月朔日。&lt;/p>
&lt;p>郑玄作为两汉经学之集大成者，对朔为吉日的认识是十分明确的，或称月吉，或称吉日，或称吉，都肯定了朔为吉日这一点。&lt;/p>
&lt;p>朔即月初一，故称初吉，亦属自然，这与望为吉日亦相对应。朔望月历制，朔为吉日，望亦为吉日。《易·归妹》“月几望，吉”可证。&lt;/p>
&lt;p>毛传释初吉为朔日，韦昭注《国语》“初吉”为朔日，反映古人对“初吉”的正确认识。&lt;/p>
&lt;p>尤其当注意的是，初吉为朔的解说，两千年来没有任何一位严肃的学者持有异议。&lt;/p>
&lt;p>我们没有理由不尊重文献。应当说，传统对于初吉的解说是难于否定的，是不容否定的。&lt;/p>
&lt;p>二、朔望月历制&lt;/p>
&lt;p>西周是明白无误的朔望月历制，绝对不是什么“朏为月首”。&lt;/p>
&lt;p>我们从载籍文字中可以找到若干证据：&lt;/p>
&lt;p>《周礼·大史》“掌建邦之六典，以逆邦国之治。……正岁年以序事，颁之于官府及都鄙。(郑注：中数曰岁，朔数曰年。中朔大小不齐，正之以闰若今时历日矣。定四时，以次序授民时之事。)颁告朔于邦国。(郑注：天子班朔于诸侯，诸侯藏之于祖庙。至朔，朝于庙，告而受行之。郑司农云，以十二月朔布告天下诸侯。)”&lt;/p>
&lt;p>这里的告朔之制，当然也包括西周一代。依郑玄说，岁指回归年长度(阳历)，年指十二个朔望月长度(阴历)，两者不一致，添加闰月来协调，这就是周代的阴阳合历体制。&lt;/p>
&lt;p>西周一代，“保章氏掌天星以志星辰日月之变动”，强调天象的观察与记录；“冯相氏掌十有二岁，十有二月，十有二辰”(《周礼》)，侧重在历术的推求。&lt;/p>
&lt;p>《礼记·玉藻》：“天子听朔于南门之外。闰月则阖门左扉，立于其中。”陈澔《集说》引“方氏曰：天子听朔于南门，示受之于天。诸侯听朔于太庙，示受之于祖。原其所自也”。&lt;/p>
&lt;p>历术是皇权的象征，掌握在周天子手中，天子于南门从冯相氏得每年十二个月朔的安排，然后颁朔于诸侯，诸侯藏之祖庙。至朔，朝于庙(即“听朔于太庙”)，告而受行之。历术推求的依据是天象，所以“示受之于天”，“原其所自也”。&lt;/p>
&lt;p>《逸周书·史记解》“朔望以闻”，是记周穆王时事。朔望月历制是明明白白的。&lt;/p>
&lt;p>《礼记·祭义》“朔月月半，君巡牲”，这当然是说，初一与十五，人君巡视之。这难道不是朔望月的明证？&lt;/p>
&lt;p>《吕氏春秋》保存了先秦的若干旧说，上至三皇五帝，史料价值不可忽视。《贵因》载：“夫审天者，察列星而知四时，因也。推历者视月行而知晦朔，因也。”&lt;/p>
&lt;p>视月行，就是月相的观察。干什么？确定晦朔而已。很明白，观察月相就是为了确定一年十二个月朔的干支，以“颁告朔于邦国”。&lt;/p>
&lt;p>《逸周书·宝典解》“维王三祀二月丙辰朔”，历日清清楚楚。过去说此篇是记武王的。事实上，历日唯合成王亲政三年，《宝典解》反映了西周初期朔望月历制。《逸周书》成书于西周以后，而这个历日当是前朝的实录，绝不是后人的伪造或推加。这是“朏为月首”说无法作出解释的。&lt;/p>
&lt;p>《汉书·世经》云：“古文《月采》篇曰‘三日曰朏’。”师古注：《月采》，说月之光采，其书则亡。——这也许是记录月相的专著，可惜我们已不能见到了。刘歆是见过的，他持定点说当有充分依据。《月采》明确朏是初三。“朏为月首”是没有依据的。&lt;/p>
&lt;p>大量出土的西周器物证实，西周历制是朔望月而不是“朏为月首”。&lt;/p>
&lt;p>《作册令方彝》：隹八月辰在甲申……丁亥……；隹十月月吉癸未……甲申……乙酉……”“辰在××”是周人表达朔日的一种固定格式，出土器物已有二十余例，校比天象无一不是朔日。推比历朔知：八月甲申朔，初四丁亥；九月甲寅朔(或癸丑朔)；十月癸未朔，甲申初二，乙酉初三。“月吉癸未”即朔日癸未，与文献记载亦相吻合。《令方彝》的八月、十月，中间无闰月可插，一个月就只有一个朔日即一个月吉，这怎么能“说明西周时代每个月都可能有若干个吉日”呢？&lt;/p>
&lt;p>西周金文记载初吉尤多，初吉即朔，也只能证明西周是朔望月制而不是“朏为月首”。&lt;/p>
&lt;p>常识告诉我们，历术是关于年月日的协调。日因于太阳出没，白昼黑夜，是计时的基本单位；年以太阳的回归年长度为依据，表现为寒来暑往，草木荣枯，《尧典》“期三百有六旬有六日，以闰月定四时成岁”；而月亮的隐现圆缺，只能靠肉眼观察。西周制历，尚未找到年月日的调配规律，只能随时观察随时置闰，一年十二个月朔的确定也靠“观月行”。这就是西周人频频记录月相的缘由。&lt;/p>
&lt;p>日与年易于感知，观象授时的主要内容是观察月相，两望之间必朔，两朔之间必望，朔望月也是不难掌握的。何况司历专职，勤劬观察，不会将初一说成初二，更不会说成初三。肉眼观察的失朔限度也只在半日之内。&lt;/p>
&lt;p>董作宾先生以为，知道日食就会知道朔，知道月食就会知道望。朔望月历制当追溯到殷商。&lt;/p>
&lt;p>持“朏为月首”说者以为，“朔”字在西周后期才出现，猜想西周前期当是“朏为月首”。殊不知，殷商后期以来，朔望的概念十分明确，表达朔日的词语甚多，初吉为朔，既死霸为朔，月吉(吉月)为朔，“辰在××”为朔，并非一定要用“朔”字不可。&lt;/p>
&lt;p>西周一代，未找到协调年月日的规律，月相的观察就显得特别重要，文献以及出土器物有关月相的记载也就特别的多。到了春秋中期以后，十九年七闰已很明确，连大月设置也逐渐有了规律，朔日的推演已不为难事。所以，鲁文公“四不视朔”，“子贡欲去告朔之饩羊”，不仅证实西周以来的告朔礼制已经走向衰败没落，还反映出四分术的推演已为司历者大体掌握。历术已由观象授时上升到推步制历，已从室外观月步入室内推算。这样，月相的观察与记录自然就不那么重要了。这就是春秋以后，作为月相的“既死霸”“既生霸”“既望”在金文中基本消失的原因。&lt;/p>
&lt;p>三、初吉即朔&lt;/p>
&lt;p>西周金文大量使用“初吉”，凡可考知的，无一不是朔日。&lt;/p>
&lt;p>有的器铭，年、月、月相、日干支俱全，校比天象，十分方便。利用张培瑜先生《中国先秦史历表》，便可一目了然。&lt;/p>
&lt;p>例1，攸从鼎：隹卅又一年三月初吉壬辰。(郭沫若：《两周金文辞大系图录考释》，下简称《大系录》，118)&lt;/p>
&lt;p>校比公元前848年厉王三十一年天象，丑正，三月壬辰朔。&lt;/p>
&lt;p>例2，无其簋：隹十又三年正月初吉壬寅。(《大系录》107)&lt;/p>
&lt;p>校比公元前829年共和十三年天象，丑正，正月壬寅朔。&lt;/p>
&lt;p>例3，虢季子白盘：隹王十有二年，正月初吉丁亥。(《大系录》88)&lt;/p>
&lt;p>校比公元前816年宣王十二年天象，子正，正月丁亥朔(定朔戊子03h49m，合朔在后半夜，失朔不到四小时)。&lt;/p>
&lt;p>例4，叔尃父：隹王元年六月初吉丁亥。(《考古》65.9)&lt;/p>
&lt;p>校比公元前770年平王元年天象，丑正六月丁亥朔(定朔戊子02h01m，失朔仅两小时)。&lt;/p>
&lt;p>厉王以前的若干铜器，因王年尚无共识的结论，仅举几例说明。&lt;/p>
&lt;p>例5，谏簋：隹五年三月初吉庚寅。(《大系录》101)&lt;/p>
&lt;p>校比公元前889年夷王五年天象，丑正，三月庚寅朔。&lt;/p>
&lt;p>例6，王臣簋：隹二年三月初吉庚寅。(《文物》80.5)&lt;/p>
&lt;p>校比公元前915年懿王二年天象，丑正，三月庚寅朔。&lt;/p>
&lt;p>例7，柞钟：隹王三年四月初吉甲寅。(《文物》61.7)&lt;/p>
&lt;p>校比公元前914年懿王三年天象，丑正，四月甲寅朔。此器与王臣簋历日前后连贯，丝毫不乱，列为同一王世之器，更可证初吉即朔。&lt;/p>
&lt;p>总之，初吉即朔，这是金文历日明确记载的，绝不是泛指某月中的任何一日。&lt;/p>
&lt;p>四、关于静簋&lt;/p>
&lt;p>刘雨先生在《再论金文“初吉”》(《中国文物报》，1997-04-20)中把静簋历日作为立论的主要依据，以此否定初吉为朔，这就有必要重点讨论了。&lt;/p>
&lt;p>刘先生说：西周金文中……只有静簋记有两个“初吉”，而且相距不到三个月，没有历律和年代等未知因素干扰，是西周金文中最能说明“初吉”性质的珍贵资料。——这就是他为什么特别重视静簋的原因。&lt;/p>
&lt;p>过去我将静簋视为厉王三十五年器，“六月初吉丁卯”合公元前844年天象，“八月初吉庚寅”合公元前843年天象，两个初吉间隔一年，与何幼琦先生的认识暗合。刘雨先生此文给我以启发，两初吉确实当为一年之内的两初吉，不必间隔一年。不过，两初吉的解说都当指朔日，而不是泛指某月中任何一日。&lt;/p>
&lt;p>排比静簋历朔知：六月丁卯朔，七月当丙申朔(或丁酉朔)，八月丙寅朔。&lt;/p></description></item><item><title>第6讲-第7讲</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E7%AC%AC6%E8%AE%B2-%E7%AC%AC7%E8%AE%B2/</link><pubDate>Sat, 04 Jan 2025 16:42:36 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E7%AC%AC6%E8%AE%B2-%E7%AC%AC7%E8%AE%B2/</guid><description>&lt;h1 id="第六讲四分历的应用">
 第六讲四分历的应用
 &lt;a class="anchor" href="#%e7%ac%ac%e5%85%ad%e8%ae%b2%e5%9b%9b%e5%88%86%e5%8e%86%e7%9a%84%e5%ba%94%e7%94%a8">#&lt;/a>
&lt;/h1>
&lt;p>四分历法是观象授时高度发展的产物，古人制定四分历法就是为了取代观象授时，服务于人类社会的生产和生活，这是毫无疑义的。因此，年代学的基础课题就是掌握四分历法，用它来推算上古历点，为解决有关的学术问题服务。特别是近代，出土文物越来越多，古史古事的考订，都需要我们确定其年代及月日。我们依据四分历法仍可以求得密近的实际天象，解决其中的疑难。这正是文史工作者学习古天文历法的目的之一。&lt;/p>
&lt;h2 id="一应用四分历的原则">
 一、应用四分历的原则
 &lt;a class="anchor" href="#%e4%b8%80%e5%ba%94%e7%94%a8%e5%9b%9b%e5%88%86%e5%8e%86%e7%9a%84%e5%8e%9f%e5%88%99">#&lt;/a>
&lt;/h2>
&lt;p>明确了殷历甲寅元(即《历术甲子篇》)创制于公元前427年，就可以将四分历在实际考证中普遍应用，推算古代典籍及出土的地下器物所载的历点，并在推算中验证殷历甲寅元的正确性。&lt;/p>
&lt;p>四分历是战国初期创制并行用，大体到三国时期的蜀汉废止。如果将四分历广泛应用，必须明确几个问题。&lt;/p>
&lt;p>第一，殷历甲寅元一经创制行用，就成为中华民族的共同财富，通行于当时各国。战国纷争，诸侯力征，不统于王，各国用历也标新立异，所以后人总认为“战国时代各国历法不同”。这只看到了问题的表象。四分历于战国初期行用，这一法则在当时就是不可改变的了。各国用历虽花样繁多，名号各殊，或岁首不同，或建正有异，都只能在四分历法则内改头换面，实质不变也变不了。我们用四分历推算有关历点，是掌握了一个普遍的原则，所得结果自然不会有误。&lt;/p>
&lt;p>战国时代，各国是否一致行用四分历法呢？&lt;/p>
&lt;p>不难明白，历法不是产生于某国某君某人之手，而是历代星历家血汗的结晶。可能经过某些君王(比如魏文侯)的提倡归功于某些星历家(比如楚人甘德、魏人石申)的勤劬。但历法一旦创制就不可能为某国某君所垄断，必然普施于华夏人民足迹之所至。谁会舍先进的历法不用而去吃观象授时的苦头？且战国初期，朝秦暮楚的士大夫比比皆是，历法一经行用自然不受国界的约束。因此四分历必能普施于战国时期各诸侯国。&lt;/p>
&lt;p>再说，经商周至战国初年，干支纪年已千百年不紊，各国都使用一个共同的干支日历，月球的朔望又人人可见，日与月的一致自不待言。有这样一个共同的月历、日历作为基础，历法普施于战国才有可能。&lt;/p>
&lt;p>从现有文献资料看，《孟子》所记时令与《楚辞》所记，仅只是岁首不同而已。据《孟子》载：“七八月之间雨集，沟浍皆盈”(《孟子·离娄下》)；又“七八月之间旱则苗槁矣，天油然作云沛然下雨，则苗浡然兴之矣”(《孟子·梁惠王上》)。讲的是下暴雨。我国山东一带下暴雨的时间，当是夏历五、六月。因《孟子》一书的用历是取建子为正，所以与建寅为正的夏历有两月之差，究其实则是指同一天象，《孟子》用的也是四分历。&lt;/p>
&lt;p>据《楚辞·怀沙》载：“滔滔孟夏兮，草木莽莽。”孟夏即四月，草木繁茂，与建寅为正的夏历合。又《楚辞·抽思》：“望孟夏之短夜兮，何晦明之若岁。”讲初夏昼长夜短明显起来，正合夏历。&lt;/p>
&lt;p>秦用四分历，从《史记·秦本纪》中也有反映：“(昭襄王)四十八年十月韩献垣雍。……正月兵罢复守上党，其十月五大夫陵攻赵邯郸。又四十九年正月益发卒佐陵。陵战不善，免，王龁代将，其十月将军张唐攻魏。”此两处，先记秦十月、正月，再记“其十月”(它的十月)。因为兵入赵魏之地，故用赵魏之月序记。足证秦与赵魏同用四分历，只不过秦以十月为岁首，三晋用夏正罢了。&lt;/p>
&lt;p>燕国僻远，用历无考，以理推之，密近三晋。一句话，《历术甲子篇》通用于七国，战国时代实际全用四分历。&lt;/p>
&lt;p>由于齐鲁建子为正，秦历又建亥为首，与楚、晋各异，似乎战国有多种历法了，这便给“三正论”者以生事的机会，造成后世的惑乱。&lt;/p>
&lt;p>战国用历原本四分术，然而为什么名目如此繁多呢？&lt;/p>
&lt;p>首先，列强出于政治斗争的需要，在用历上往往变换一些手法，以示与周王朝分庭抗礼，尽管都用四分历却有意标新立异，独树一帜。&lt;/p>
&lt;p>其次，自封为王，欲兼天下，必然要利用“君权神授”的观念，这就是历志上“改正朔，易服色”的记载，用以表明“受命于天”，从而威天下而揽民心。&lt;/p>
&lt;p>再次，托古作伪以自重，也是列强君王惯用的手法。四分历创制之初，就曾伪称“成汤用事十三年”把创立之功归于前代圣王。秦历托名“颛顼”，也同样出于托古自重。战国时代所谓“周历”“夏历”，莫不如此。汉代有“古六历”之说(黄帝历、颛顼历、夏历、殷历、周历、鲁历)，那虽是后人的附会，实际也可见托古作伪的痕迹。&lt;/p>
&lt;p>战国用历从表现形式看，或建正不同(齐鲁建子为正，秦楚三晋建寅为正)，或岁首不同(齐以子月为岁首，楚三晋以寅月为岁首，秦以十月为岁首)，或历名不同(秦称颛顼历，以别于殷历)，如此而已。而其所宗之“法”，也都为四分术。在当时的条件下四分历的周密与完整是无法取代的。&lt;/p>
&lt;p>这种种名目，却给“三正论”制造者以可乘之机。按照“三正论”者对“周正建子、殷正建丑、夏正建寅”的解释，夏、商、周三代使用了不同的历法，即夏代之历以寅月为正，殷代之历以丑月为正，周朝之历以子月为正。夏商周三朝迭相替代，故“改正朔”以示“受命于天”。秦王迷于“三正论”，继周之后以十月为岁首，也有绍续前朝，秉天所命之意。实际上，四分历产生之前，还只是观象授时，根本不存在完整的行用于夏时之夏历，行用于殷商时代之殷历，行用于西周之周历，所谓夏历、殷历、周历，纯然是后人的概念。&lt;/p>
&lt;p>懂得了战国用历的实质，排除“三正论”的干扰，就可以运用四分历进行具体历点的推算。&lt;/p>
&lt;p>第二，四分历取岁实36514日，与实际回归年长度必有误差，307年盈一日。如果将一日化为940分，940÷307=3.06(分／年)，即每年有3.06分的误差。这样，以公元前427年四分历行用之时为基点，在它以后的年份每年有+3.06分的误差，在它以前的年份，每年有-3.06分的误差。因此，在推算实际天象时，公元前427年之前的年份，每年要加3.06分；公元前427年之后的年份，每年要减3.06分。这就是前加后减的原则。只有这样，才能得出密近的实际天象。3.06分就是推求实际天象的改正值。&lt;/p>
&lt;p>在四分历行用的年代，由于时人不了解这个误差，自然不可能将误差计算进去。所以，典籍中总有历法与天象不符的记载，汉初“日食在晦”的文字就属此类。我们在考究战国至汉末这段时期的历点时，除了顾及朝代交接和改历等重大问题外，应用四分历进行推算时，不必使用“前加后减”的原则。因为追求实际天象除了验证朔望，反而与实际用历相违。实际用历还不知道这个3.06分。&lt;/p>
&lt;p>第三，公元前427年之前的年份，仍可用四分历推算月日。公元前427年之前，未行用四分历法，还是观象授时阶段。但月相在天，有目共睹，干支纪日从殷商时代已延续不断，人皆遵用。这就构成了历法推算的基础。前代学者依据《春秋》所载月日干支，编制出春秋时代的历谱。张汝舟先生《西周经朔谱》《春秋经朔谱》就立足于殷历的朔闰，取密近的实际天象，将古代文献所记这两个时期的年、月、日一一归队入谱，贯穿解说，对前人之误见逐次加以澄清。因此，“两谱”既是对两周文献纪日的研究成果，也是广大文史工作者研究两周文史的极好工具。&lt;/p>
&lt;p>要之，编定历谱或考释历点，都得以《历术甲子篇》为依据，将四分历普遍地应用于文史研究工作中。&lt;/p>
&lt;h2 id="二失闰与失朔">
 二、失闰与失朔
 &lt;a class="anchor" href="#%e4%ba%8c%e5%a4%b1%e9%97%b0%e4%b8%8e%e5%a4%b1%e6%9c%94">#&lt;/a>
&lt;/h2>
&lt;p>年、月、日能够有规律地进行调配的真正历法(四分历)产生于战国初期，有历法之前都还是观象授时。观象授时就是制历。制历的主要内容就是告朔和置闰两件大事。告朔是定每月朔日的干支，朔日干支一经确定，其余日序自有干支。置闰是定节气，一年之气，冬至最要紧。冬至一经确定，闰与不闰及全年月序就自然清楚。&lt;/p>
&lt;p>在观象授时阶段，告朔就全凭月相。古人凭月相告朔，承大月二日朏，月牙初见，承小月三日朏，月牙初见(见《说文》)。同理，承大月十五日望，月满圆，承小月十六日望，月满圆。月相分明，只在一天。&lt;/p>
&lt;p>在观象授时阶段，置闰须观斗柄所指方位，观二十八宿中天位置，验之气象、物象，加以土圭测影。随着长年的经验积累，观测仪器的精当，测定气节的准确程度必然逐有提高。前已述及，到春秋中期，十九年七闰的规律就已完全掌握了。&lt;/p>
&lt;p>四分历的回归年长度定为36514日，且使用平朔、平气，所以失闰，特别是失朔还不能完全避免。更何况春秋、西周还处在观象授时的时代，失闰与失朔当是屡见不鲜的。比如，实际是乙丑朔，因为分数小，司历定为甲子朔。如果乙丑分数大，司历定为丙寅朔。这叫失朔。&lt;/p>
&lt;p>失闰，说得确切些，就是失气。实际是子月初冬至，司历错到亥月末，亥月就成了岁首(建亥)。冬至若在下旬，司历错到丑月，丑月就成了岁首(建丑)。失闰由失气而起，我们还叫失闰。&lt;/p>
&lt;p>失朔，失闰，《春秋》有宝贵资料。例如，昭公十五年经朔：&lt;/p>
&lt;p>子月大，己未623分合朔&lt;/p>
&lt;p>丑月小，己丑182分合朔&lt;/p>
&lt;p>寅月大，戊午681分合朔&lt;/p>
&lt;p>卯月大，戊子240分合朔&lt;/p>
&lt;p>辰月大，丁巳740分合朔&lt;/p>
&lt;p>……&lt;/p>
&lt;p>《春秋》载：“二月癸酉，有事于武宫。”“六月丁巳朔，日有食之。”以此二条验谱，己未朔，癸酉乃十五日，子月实《春秋》所书“二月”。“六月丁巳朔”正合辰月。这一年必是建亥为正，子月顺次定为“二月”，辰月顺次定为“六月”，全合。大量材料证实，春秋后期建子为正，现在正月到了亥月，这就是失闰之铁证。&lt;/p>
&lt;p>将一部《春秋》进行研究，可以发现：&lt;/p>
&lt;p>隐、桓、庄、闵共63年49年建丑，8年建寅，6年建子；&lt;/p>
&lt;p>僖、文、宣、成共87年58年建子，16年建丑，13年建亥。&lt;/p>
&lt;p>这说明，前四公，即春秋前期，建丑为正，建子、建寅都算失闰，而没有建亥的。后四公，即春秋后期，建子为正，建亥、建丑都算失闰，而没有建寅的。这又说明，失闰不会超过一个月。按平气计算，一般失闰都在半月之内，只有周幽王六年失闰十七天(据《诗经·十月之交》所给历点推算)。&lt;/p>
&lt;p>《春秋》记37次日食，有5个书月日不书朔。《左传》认为“史失之”，未免武断。因为食不在朔，所以《公羊传》云“或失之前，或失之后”，是正确的。失朔一般在半天之内，只有鲁文公元年“二月癸亥，日有食之”，失朔508分，超过半天(一日940分)。&lt;/p>
&lt;p>为什么要掌握一个失闰限、失朔限呢？这是应用四分历推演经朔考订古籍古器历点必须遵循的准则。如果历点与实际天象所确定的朔、闰相差甚远，失闰超过一月，失朔超过一天，就宁可存疑也断不可硬套，去企求得出一个相合的结论。如果没有一个失闰、失朔限，古器物上的历点就可左右逢源，安在哪一年都会大致相符。记有历点的出土文物，一到专家的手里，考证出的结论往往大相径庭，其道理就在这里。可见，确定失闰限、失朔限是多么重要。它提醒你，要严谨，不可信口雌黄。&lt;/p>
&lt;p>有没有“再失闰”的情况？古籍中确有记载。《汉书·律历志》载，襄公二十七年“九月乙亥朔，是建申之月也。鲁史书：‘十二月乙亥朔，日有食之。’传曰：‘冬十一月乙亥朔，日有食之，於是辰在申，司历过也，再失闰矣。’言时实行以为十一月也，不察其建，不考之于天也”。&lt;/p>
&lt;p>《春秋》经文杜注：“今长历推为十一月朔，非十二月。传曰辰在申，再失闰。若是十二月，则为三失闰，故知经误。”&lt;/p>
&lt;p>《左传》杜注：“谓斗建指申，周十一月今之九月，斗当建戌而在申，故知再失闰也。文十一年三月甲子至今七十一岁应有二十六闰，今长历推得二十四闰，通计少再闰。释例言之详矣。”&lt;/p>
&lt;p>杜预这两条注，将《春秋》经传所记，辨析明白，断定经误传是。传文“再失闰”是可信的。杜以自编《经传长历》验证，确为“再失闰”。《汉书·律历志》解释说，当时是记为十一月的，这种“再失闰”是不观察斗柄所指，不考之于天象的原因。可见，观象授时阶段失闰是不足为怪的，但已不可能在春秋时代出现“再失闰”的怪现象。&lt;/p>
&lt;p>如果用《历术甲子篇》推演，襄公二十七年(公元前546年)朔闰如次。&lt;/p>
&lt;p>是年入辛卯蔀(蔀余27)第三十四年。&lt;/p>
&lt;p>太初三十四年：前大余四十八，小余五百五十二先天+364分&lt;/p>
&lt;p>子月朔己卯552分916己卯十五&lt;/p>
&lt;p>丑月朔己酉111分475己酉 四十五&lt;/p>
&lt;p>寅月朔戊寅610分34 己卯 十五&lt;/p>
&lt;p>卯月朔戊申169分533戊申 四十四&lt;/p>
&lt;p>辰月朔丁丑668分92 戊寅 十四&lt;/p>
&lt;p>巳月朔丁未227分591丁未 四十三&lt;/p></description></item><item><title>第4讲-第5讲</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E7%AC%AC4%E8%AE%B2-%E7%AC%AC5%E8%AE%B2/</link><pubDate>Sat, 04 Jan 2025 16:42:35 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E7%AC%AC4%E8%AE%B2-%E7%AC%AC5%E8%AE%B2/</guid><description>&lt;h1 id="第四讲二十四节气">
 第四讲二十四节气
 &lt;a class="anchor" href="#%e7%ac%ac%e5%9b%9b%e8%ae%b2%e4%ba%8c%e5%8d%81%e5%9b%9b%e8%8a%82%e6%b0%94">#&lt;/a>
&lt;/h1>
&lt;p>古代劳动人民在认识自然、改造自然的过程中，创造了先进的耕作制度，形成了精耕细作的优良传统，推动了农业生产不断发展。在漫长的岁月中，对与农业生产紧密相关的农业气象条件，进行过精细的观察、深入的研究，逐步形成了二十四节气，概括了黄河中下游地区农业气候特征。它利用简要的两个字，把这一地区的日地关系、气候特点以及相应的农事活动恰当地表达出来。可以说，二十四节气是古代天文、气候和农业生产实践最成功的结合，从古到今都起着一种简明而又切合农业生产需要的农事历的作用。&lt;/p>
&lt;p>二十四节气一旦形成，劳动人民就因时、因地加以发展，它的应用就不仅仅局限于黄河中下游地区了，而是逐步推广到全国各地，几乎渗透到我们这个农业大国的各个领域，甚至涉及人们的衣食住行。所以，对依据古代天文而形成的这样一部农事历——二十四节气进行一番研究，就是很有必要的了。&lt;/p>
&lt;h2 id="一先民定时令">
 一、先民定时令
 &lt;a class="anchor" href="#%e4%b8%80%e5%85%88%e6%b0%91%e5%ae%9a%e6%97%b6%e4%bb%a4">#&lt;/a>
&lt;/h2>
&lt;p>有了年、月、日的时间概念，并不等于就能得心应手地安排好时令。汉枚乘诗：“野人无历日，鸟啼知四时。”讲的是当时的“野人”，亦可想见先民的时令观念。《后汉书·乌桓鲜卑传》云“见鸟兽孳乳，以别四节”，道理亦同。《魏书》卷一百一讲到宕昌羌族“俗无文字，但候草木荣枯，记其岁时”。宋代洪皓《松漠纪闻》亦云：“女真……其民皆不知记年，问之则曰我见草青几度矣。盖以草青为一岁也。”据此推知，先民的时令，最早主要是靠物象——动植物的表象来确定的。&lt;/p>
&lt;p>《山海经》记载了先民观察太阳升落位置以定季节的材料。《大荒东经》上记有六座日出之山：&lt;/p>
&lt;p>东海之外，大荒之中，有山名曰大言，日月所出。&lt;/p>
&lt;p>大荒之中，有山名曰合虚，日月所出。&lt;/p>
&lt;p>大荒之中，有山名曰明星，日月所出。&lt;/p>
&lt;p>大荒之中，有山名曰鞠陵，于天东极离瞀，日月所出。&lt;/p>
&lt;p>大荒之中，有山名曰猗天苏门，日月所出。&lt;/p>
&lt;p>大荒之中，有山名曰壑明俊疾，日月所出。&lt;/p>
&lt;p>《大荒西经》上记有六座日入之山：&lt;/p>
&lt;p>西海之外，大荒之中，有方山者，上有青树，名曰柜格之松，日月所出入也。&lt;/p>
&lt;p>大荒之中，有山名曰丰沮玉门，日月所入。&lt;/p>
&lt;p>大荒之中，有龙山，日月所入。&lt;/p>
&lt;p>大荒之中，有山名曰日月山，天枢也。吴姖天门，日月所入。&lt;/p>
&lt;p>大荒之中，有山名曰鏖鏊钜，日月所入者。&lt;/p>
&lt;p>大荒之中，有山名曰常阳之山，日月所入。&lt;/p>
&lt;p>大荒之中，有山名曰大荒之山，日月所入。&lt;/p>
&lt;p>这是在不同季节、不同月份，观察到的太阳出山入山的不同位置。这种观察方法同观察鸟啼、鸟兽孳乳、草木荣枯的方法一样，是凭着经验，凭着目睹耳闻的感受，其粗疏是自不待言的。因为观察者的地域毕竟狭小，局限性很大，以此定季节势必误差很大。&lt;/p>
&lt;p>观察太阳运行的另一种方法是观察日影长度的变化。最早当是利用自然的影长，进一步发展就是人为的立竿测影。&lt;/p>
&lt;p>太阳视运动的轨迹无法在天空中标示，反映到地面上就是事物的投影。高山、土阜、树木、房舍，晴日白昼都会留下或长或短的影子。《吕氏春秋》“审堂下之阴，而知日月之行，阴阳之变”，就是这个意思。根据这些影子的长短可以判明时间的早晚，有经验的老人往往判断得十分精确，这无疑是依靠长期的经验积累。&lt;/p>
&lt;p>如果要有意测影以确定时令，这得人为地在平地上立一根规定长度的竿子，把它的影子在地面上标示出来。这根竿子就是“表”，《周髀算经》中称之为“髀”。“表”的影子，古字写作“景”。这就是土圭测景。&lt;/p>
&lt;p>从出土的甲骨文中考察殷商文化，可以明白地看到，殷商时代测定方向、时刻都已比较准确。卜辞中将一天的时刻分为：明(旦)、大采、大食、中日、昃、小食、小采、暮等时间段落。甲骨文中的“昃”字，就是人侧影的象形。作为时段，日侧之时为昃。发掘出的殷代宫殿基址是南北方向的，其方向所指与今天的指南针方向无异。这种方向的确定及中日、昃等时刻的测定，显然和观测日影紧密相关。&lt;/p>
&lt;p>这都说明，殷商时代已有了早期的圭表。实践证明，通过长期测日影的实践就会认识到冬至、夏至、春分、秋分。甲骨卜辞中，有一些文字很可能就是至日的记录。&lt;/p>
&lt;p>有了圭表，就能够比较准确地确定分、至，就可以对闰月的设置(闰在岁末)加以规律化的安排。所以，推知殷商之历应该比较规整，岁首应该比较固定，误差不会大于一个月。有人统计了记有月名的“今何月雨”“田”，其他农事季节及其他天文气象卜辞，证明了殷代月名和季节基本上已有了固定关系。《尧典》“期三百有六旬有六日，以闰月定四时成岁”的记载，大体符合这个时代的情况。&lt;/p>
&lt;h2 id="二土圭测景">
 二、土圭测景
 &lt;a class="anchor" href="#%e4%ba%8c%e5%9c%9f%e5%9c%ad%e6%b5%8b%e6%99%af">#&lt;/a>
&lt;/h2>
&lt;p>日影的长短与寒暑变化有关，这是先民积累的生活常识。要准确地测量寒来暑往的季节变化，很自然地就产生了立竿测影的方法。这是用最简易的天文仪器来研究历法、确定时令，是天文学发展的一次飞跃。&lt;/p>
&lt;p>立竿测影又称土圭测景、圭表测景。表是直立的竿子，圭是平放在地上的玉版。《说文》云：“圭，瑞玉也。上圆下方。”日影长短就从平放的圭上显示出来。土，度也，测量的意思。土圭，就是度圭，测量圭上日影的长短以定时令。远在周代，“表”就规定为八尺，已有了长度标准。《周礼·考工记》云：“土圭尺有五寸，以致日，以土地。”致是推算义，土是量度义。土圭长一尺五，来推算节气日期，量度土地远近。《周礼·夏官司马》云：“土方氏，掌土圭之法以致日景。以土地相宅而建邦国都鄙。”注曰：土方氏，主四方邦国之土地。可见，周代已有人家来掌管土圭测景了。&lt;/p>
&lt;p>《周礼·地官大司徒》云：“日至之影，尺有五寸。”这是说，夏至时，圭上影子有一尺五寸长。这样看来，圭长一尺五寸就远远不够了。《周礼·春官冯相氏》郑玄注云：“冬至，日在牵牛，景丈三尺；夏至，日在东井，景尺五寸。此长短之极，极则气至。冬无潜阳，夏无伏阴。春分，日在娄；秋分，日在角；而月弦于牵牛东井，亦以其景知气至不。春秋冬夏气皆至，则是四时之叙正矣。”圭有多长？当在一丈三尺以上。&lt;/p>
&lt;p>根据《史记》记载，圭表测景当更早在传说中的黄帝时代。《史记·历书》“索隐”说：“黄帝使羲和占日，常仪占月，臾区占星气，伶纶造律品，大挠造甲子，隶首作算数，容成综此六术而著调历也。”不仅有专门测定日影的专家，并在测量日、月、星有关数据的基础上，利用甲子推算，创制时历。《尚书·尧典》“期三百有六旬有六日，以闰月定四时成岁”，可看作是远古时代测量日、月、星而后制历的发展。这就是以岁实366日为基本数据的我国有文字记载的最早的阴阳历。&lt;/p>
&lt;p>制历调历是一件神圣的工作，《尧典》说“允厘百工，庶绩咸熙”，起到一个信治百官、兴起众功的作用。正因为这样，圭表测景就不可能是民间百姓的事，只能在天子或君王旨意下由专职官员负责进行。周代的测景遗址——周公测景台还保留在今天河南登封告成镇(古称阳城)这个地方。&lt;/p>
&lt;p>阳城地处中原，物产丰富，文化发达。周公想迁都中原，视阳城为“地中”，居天下九州中心的意思。《周礼·地官大司徒》云：“以土圭之法测土深，正日景，以求地中。日南则景短，多暑。日北则景长，多寒。日东则景夕，多风。日西则景朝，多阴。日至之景，尺有五寸，谓之地中。天地之所和也，四时之所交也，风雨之所会也，阴阳之所合也。然则百物阜安，乃建王国焉。”如此详细地叙述求地中的方法，“地中”地理位置如此重要，占尽地理之便。这就是周公为迁都造下的舆论。实际上，所谓地中，是指当时国土南北的中心线而已。&lt;/p>
&lt;p>告成镇的周公测景台，有一个高耸的测量台，相当于一个坚固的“表”，平铺于地面的是“量天尺”，也就是一个放大了的石“圭”。现今遗留的测景台，元代初建，明代重修。重修的测景台是正南正北走向，高出圭面8.5米，下面的圭长30.3米。&lt;/p>
&lt;p>从周公在这里主持测景后，历代都在这里进行过测量，至今还有公元724年唐代所立的石“表”，上面刻有“周公测景台”五字。&lt;/p>
&lt;h2 id="三冬至点的测定">
 三、冬至点的测定
 &lt;a class="anchor" href="#%e4%b8%89%e5%86%ac%e8%87%b3%e7%82%b9%e7%9a%84%e6%b5%8b%e5%ae%9a">#&lt;/a>
&lt;/h2>
&lt;p>我国古代以冬至作为一个天文年度的起算点，冬至的时刻确定得准不准，关系着全年节气的预报。古代天文学家的一项重要任务就是测定准确的冬至时刻。测出两次冬至时刻，就能得到一年的时间长度。这样定出的年，就是回归年，古代称为“岁实”。《后汉书·律历志》说：“日发其端，周而为岁，然其景不复。四周，千四百六十一日而景复初，是则日行之终。以周除日，得三百六十五四分日之一，为岁之日数。”四分历的岁实36514日就是这样测出来的，这是利用冬至日正午日影长度四年之后变化一周这一实测得出的数据。这样的数据，四年之后误差积累才有0.0312日，即不到45分钟。这已是测得很精确的了。可以认为，过四年后，冬至日正午影长大体复回到最初的长度。&lt;/p>
&lt;p>下面介绍祖冲之测刘宋武帝(刘骏)大明五年(公元461年)十一月冬至时刻的方法。文载《宋书·历志》。&lt;/p>
&lt;p>十月十日影一丈七寸七分半&lt;/p>
&lt;p>十月十日影长10.7750尺&lt;/p>
&lt;p>十一月二十五日一丈八寸一分太&lt;/p>
&lt;p>十一月二十五日影长10.8175尺&lt;/p>
&lt;p>二十六日一丈七寸五分强&lt;/p>
&lt;p>二十六日影长10.7508尺&lt;/p>
&lt;p>折取其中，则中天冬至&lt;/p>
&lt;p>冬至应在十月十日与十一月二十五日之间&lt;/p>
&lt;p>应在十一月三日&lt;/p>
&lt;p>正中那一天，即十一月三日&lt;/p>
&lt;p>求其早晚&lt;/p>
&lt;p>求冬至时刻在早晚什么时候&lt;/p>
&lt;p>令后二日影相减，则一日差率也&lt;/p>
&lt;p>一日差率=10.8175-10.7508=0.0667&lt;/p>
&lt;p>倍之为法&lt;/p>
&lt;p>法=0.0667×2=0.1334&lt;/p>
&lt;p>前二日减，以百刻乘之为实&lt;/p>
&lt;p>实=(10.8175-10.7750)×100刻=4.25刻&lt;/p>
&lt;p>以法除实，得冬至加时，在夜半后三十一刻&lt;/p>
&lt;p>冬至时刻=实÷法=4.25÷0.1334=31.86&lt;/p>
&lt;p>因为十月十日和十一月二十五日正午之间的中点是在十一月三日的子夜，冬至时刻从子夜起算。又，古历计算中通常不进位，故31.86刻记为31刻。又，“太”即34；“强”即112。&lt;/p>
&lt;p>不难看出，在只有圭表测影的时代，祖冲之测定冬至时刻的方法确实是大大进步了。&lt;/p>
&lt;p>前已提到，冬至点是指冬至时太阳在恒星间的位置，现代天文学是以赤经、赤纬来表示，我国古代是以距离二十八宿距星的赤经差(称入宿度)来表示。四分历明确记载，冬至点在牵牛初度。冬至点这个数据如何测定，没有留下任何文字记录。《左传》上有两次“日南至”的记载：一是僖公五年“春王正月辛亥朔，日南至”；一是昭公二十年“春王二月己丑，日南至”。说明鲁僖公时代有过日南至的观测，可是没有留下如何观测的记录。唐代僧一行(张遂)在《大衍历议·日度议》提到，古代测定太阳位置的方法是测定昏旦时刻的中星，由此可以推算出夜半时刻中星的位置，在它相对的地方就是夜半时刻太阳的位置。这是间接推求冬至点的方法。《大衍历议》也提到，后来采用直接测量夜半时刻中星的办法。这就要求漏刻(计时工具)有比较稳定的精确度。利用太阳日行一度的规律，求出某日夜半时刻太阳在星空间的位置，就不难求得冬至时刻太阳所在位置，即冬至点的位置。&lt;/p></description></item><item><title>第1讲-第3讲</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E7%AC%AC1%E8%AE%B2-%E7%AC%AC3%E8%AE%B2/</link><pubDate>Sat, 04 Jan 2025 16:42:34 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E7%AC%AC1%E8%AE%B2-%E7%AC%AC3%E8%AE%B2/</guid><description>&lt;ul>
&lt;li>这是一个测试阿克斯酱豆腐卡就是看到房价看就ask发&lt;/li>
&lt;li>上的飞机啊看的风景开始打飞机看就卡机刷卡附件按实际付款金卡上空的飞机爱看就喀什觉得反馈解开&lt;/li>
&lt;/ul>
&lt;h1 id="第一讲为什么要了解古天文历法">
 第一讲为什么要了解古天文历法
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%80%e8%ae%b2%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e4%ba%86%e8%a7%a3%e5%8f%a4%e5%a4%a9%e6%96%87%e5%8e%86%e6%b3%95">#&lt;/a>
&lt;/h1>
&lt;p>我国是世界上文明古国之一，先民出于农事需要，积累了丰富的天文学知识。随着文明的进化，这些丰富的天文学知识，必然反映到记载古代文化的书籍典册之中，遗留于后世。出土的殷商时代甲骨刻辞早就有了某些星宿名称和日食、月食记载。《周易》《尚书》《诗经》《春秋》《国语》《左传》《吕氏春秋》《礼记》《尔雅》《淮南子》等书更有大量的详略不同的星宿记载和天象叙述。《史记·天官书》《汉书·天文志》更是古天文学的专门之作。文史工作者随时接触古代典籍，势必常与古代天文历法打交道。如果对此一知半解或不甚了了，很难谈得上进行深入的研究。就是一般爱好文史的青年，有一定的古天文学知识，对阅读古书也是大有帮助的。&lt;/p>
&lt;p>常识告诉我们，一切与古代典籍有关的学科，无不与时间的记载，也就是古代天文历法有关。清人汪日桢说：“读史而考及于月日干支，小事也，然亦难事也。欲知月日，必求朔闰；欲求朔闰，必明推步……盖其事甚小，为之则难。不知推步者，欲为之而不能为；知推步者，能为之而不屑为也。”(见《历代长术辑要》载《二十四史月日考序目》)可见，古人深知“推步”的重要和“推步”的甘苦。白寿彝教授也指出：“关于时间的记载，是历史记载必要的构成部分，年代学的研究是历史文献学研究的主要课题。”(《人民日报》，1980年12月30日)&lt;/p>
&lt;p>当今的现状是，有关古天文之学众说纷纭，头绪繁杂，令人不知从何下手，欲读不能。一般著述往往博大疏浅，叙史而已，或者演算繁难，玄秘莫测，“不把金针度与人”。读者终书，竟无法找到打开古天文历法大门的钥匙，未免望之兴叹，视为畏途。此篇以基本的天文常识入手，依据本师张汝舟先生星历观点，深入浅出，意欲将古籍中需要涉及的古天文学问题，逐一展开讨论，希望能对校读古籍有所助益，且能由一般文史工作者自行独立推演年月日时，掌握一套基本的“推步”技术，为深入的研究打下扎实的基础。&lt;/p>
&lt;h2 id="一时间与天文历法">
 一、时间与天文历法
 &lt;a class="anchor" href="#%e4%b8%80%e6%97%b6%e9%97%b4%e4%b8%8e%e5%a4%a9%e6%96%87%e5%8e%86%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;p>中国古代，合天文历法为一事，历法以天象为依据，历法属于实用天文学的重要内容。所以，中国古代文学与年、月、日、时这些时间观念紧密相依。学习古代天文学，就从认识“时间”这个概念开头吧！&lt;/p>
&lt;p>中央人民广播电台每日整点都发出“嘟——嘟——”的时间讯号，以此统一全国民用时间。全国各行各业都按这个统一的标准时间学习和工作。没有统一的时间观念，一切工作都无法正常进行，社会将发生混乱。可知，人类社会对于时间的首要要求，就是有统一的计量标准，不能各自为政，自行其是。远古时代，人类分为若干互不交往的群体，各有自己的一套计时方法。随着社会的进步，交流的频繁，彼此认识到生活在地球这个大家庭里，还必须有统一的国际标准时间来协调全人类的活动，才能促进社会的更大发展。&lt;/p>
&lt;p>在古代，人们对于时间的精确度要求不高，最早是把一天分为朝、午、昏、夜四个时段，后来又分为十个时段、十二个时段，也就大体够用了。随着生产力的发展，要求时间的精确度越来越高。现代科学技术，更要求计量时间不能有一秒的误差。测定人造卫星的位置，如果误差1秒，就有7～8公里的差距。精密的电子工业，无线电技术，运输通讯，卫星、导弹的发射，要求的精确度都很高。因此，现代生活要求有精确的统一的时间计量标准，指导全人类的生产劳动。&lt;/p>
&lt;p>时间不是人的主观臆造。时间是客观存在的与物质运动紧密相连的一种物质存在的形式。人们只能依据物质的运动来规定时间，寻找计时的单位。&lt;/p>
&lt;p>我国古代，先民以太阳东升西落确定一天的时间，单位是日；以月亮的隐现圆缺定一月的时间，单位是月；以寒来暑往及草木禾稼的荣枯定一年的时间，单位是年。远古时代人们的时间计量单位之所以仍有作用，今天还在指导着人们的活动，就在于完全符合人类对时间计量方法的基本要求：既承认时间是物质存在的形式，又以有规律的、匀速的、周而复始的运动形式作为计量标准。这种从不间断的、匀速的、重复出现的物质运动形式，在人们的周围是存在着的，这就是日月星辰的出没所组成的若干天文现象。时间计量单位的确定完全以天象为依据，就是这个道理。尽管上古先民长期坚持“地心说”，认为日月星辰都在围绕着地球转动，但这种周而复始的物质运动形式却是古今一致的。&lt;/p>
&lt;p>在所有的计时单位中，人们把地球自转一周作为计时的最基本单位——日，古人认为是太阳东升西落绕了地球一圈。月、年是比日更大的计时单位。时辰、小时、刻、分、秒，是比日小的计时单位。时、分是日的分数，古人称为日之余分。&lt;/p>
&lt;p>明确了时间的计量单位，还有一个时段和时刻的问题。换句话说，通常所谓“时间”，包含着两个含义：一是指某一瞬间，即古人所谓“时刻”；一是指两个瞬时之间隔，即一个有始有终的长度。从时刻的含义出发，时间有早迟之分。从时段的含义出发，时间有长久与短暂之别。历法中的节气与节气的交替(交节)，月亮运行在太阳、地球之间的平面上成一直线的天象(合朔)，日与日的交接(夜半0点整)等都应该是指时刻而言，十分确切，具体到某时几分几秒的那一瞬间，毫无含糊。月亮最圆的时间，与合朔时间一样只有那么一瞬时。差一秒还不是最圆，过一秒也不可能最圆。电台报时的“嘟——嘟——”那最后特殊一响，就是时刻概念的具体化。而平常所说的几分、几小时、几日，都是指的一个时段，它必有一个起算时刻。计时的基本单位——日，是从夜半0点起算的，止于24点整。任何一个更长的时段，比如百年、千年，都必须明确它的起算时刻。任何历法都很强调它的起算点，都希望找一个理想的起算时刻作为它的初始，这就是历法之“元”，称“历元”。&lt;/p>
&lt;p>我们的先民，十分重视时间，特别是与农事有关的天时，古籍中记载特多。其实，古人的“天时”，是指一年四季包括风、雨、雷、电等直接关系农事活动的自然现象，古人认为这些是上天主宰的，所以称为“天时”。&lt;/p>
&lt;p>《孟子》云：“不违农时，谷不可胜食也。”&lt;/p>
&lt;p>《荀子》云：“春耕、夏耘、秋收、冬藏，四时不失时，故五谷不绝而百姓有余食也。”&lt;/p>
&lt;p>《韩非子》云：“非天时，虽十尧不能冬生一穗。”&lt;/p>
&lt;p>《吕氏春秋》有：“夫稼，为之者人也，生之者地也，养之者天也。是故得时之稼兴，失时之稼约。”&lt;/p>
&lt;p>《齐民要术》有：“顺天时，量地利，则用力少而成功多，任情返道，劳而无获。”&lt;/p>
&lt;p>《农书》有：“力不失时，则食不困。……故知时为上，知土次之。”&lt;/p>
&lt;p>这些典籍中所谓“时”“天时”，实际是指关系农事成败的气候。气候的变动，与时令的推移有关，也直接与天象关联着，所以也应视为古代天文历法的内容。&lt;/p>
&lt;p>《说文解字》云：“时，四时也。”指的是春夏秋冬四季。据吴泽先生的研究，在殷墟甲骨文中，已出现春夏秋冬四字。春字字形像枝木条达的形状；夏字字形一像草木繁茂之状，一像蝉形，蝉是夏虫，被认为是夏的象征；秋字像果实累累，谷物成熟，正是收获之时；冬字则形如把谷物藏于仓廪之中。这四个字，都与农业有关。春种、夏长、秋收、冬藏，季节、时令都同农事密切相关。&lt;/p>
&lt;p>时间，关系到人类社会的政治、生产、生活等各方面的活动。自古以来，我们的祖先就十分重视年、月、日、时的安排，创制了多种多样的历法；对各项活动发生的年、月、日、时也做了大量的准确记录，保存在浩如烟海的典籍之中。古史古事就靠这些年、月、日、时的记载有了一个清晰的脉络，我们据此研究古代人类社会生活的各个方面。如果没有年、月、日、时的记载，众多的典籍史料就成了一堆杂乱无章的文字记录，其价值也就可想而知。中国古代大量珍贵史料就是靠年、月、日、时的记载而保存下来的。我们还可以用后代的历法依据古籍中年、月、日、时的记载推演出当时的实际天象，解决历史上若干悬而未决的年代问题。如果没有关于时间的文字记载，这种推算也就无法进行。&lt;/p>
&lt;h2 id="二天文与历法">
 二、天文与历法
 &lt;a class="anchor" href="#%e4%ba%8c%e5%a4%a9%e6%96%87%e4%b8%8e%e5%8e%86%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;p>什么是天文？什么是历法？这是首先应该弄清楚的问题。&lt;/p>
&lt;p>《说文》云“文，错画也。象交文”，又说“仰则观象于天”。高诱注《淮南子·天文训》说：“文者象也。天先垂文象日月五星及彗孛，皆谓以谴告一人。故曰天文。”王逸注《楚辞》“象”字云“法也”。《易·系辞》：“天垂象见吉凶，圣人则之。”可见，天文就是天象，就是天法，就是日月星辰在天幕呈现的有规律的运动形式。它不以人的意志为转移，反而影响着支配着人类的各种活动。正因为这样，远古的人就视之为神圣，把天象看成是上帝、上天给人的吉凶预兆，敬若神明。历代君王重视天文，因为它是上天意旨的体现，它直接关系着人类的生产、生活，影响帝王统治权力的基础。&lt;/p>
&lt;p>繁体曆法之曆，最早的写法是秝，后写作、厤，再后写作曆。《玉篇》曰：“稀疏秝秝然。”段玉裁以为：“从二禾，禾之疏密有章也。”《说文》释：“厤，治也。”“，和也。”《释诂》释：“厤，数也。”从这些释义看，就是均匀调治之义。从二禾，禾的生长受日月星辰运行的天象支配，即受日月运行所确定的季节的支配，所以秝、厤与天象有关。&lt;/p>
&lt;p>秝，古书写作，表示人在有庄稼的地里行走，引申为日月运行及日月运行所确定的季节、时令等时间计量。首先，这种运行是有规律的，“疏密有章”；其次，还需要调治，要均匀地调治，使日月运行的时日彼此协调。所以，秝就是均匀地调治天象所显示的年、月、日、时等计量时间单位的手段。&lt;/p>
&lt;p>《史记·历书》以厤为推步学，以象为占验学，把两者的区别说得清清楚楚。占验，当然指天象，指上天通过天象显示给人们的吉凶预兆。推步，就是对日月星辰，主要是日月的运行时间进行计算，使日绕地球一圈所形成的寒暑交替与月绕地球一圈所呈现的圆缺隐现彼此配合得大体一致。这就是制历，也就是推步学。&lt;/p>
&lt;p>历是什么，简单说就是计量年、月、日的方法，就是年、月、日的安排。这种安排、计量的依据是天象变化的规律，是依据日月星辰有规律的运行来确定年、月、日、时和四季、节气，或者说推算天象以定岁时。作为一种纪时系统，目的只能是服务于人类的生产生活。&lt;/p>
&lt;p>一般将历法之“法”，解释为制历的方法。不对。这个“法”，正如语法之“法”，指法则、规律。远古时代的夏商周，当然有它的年月日安排的方法，虽然还比较粗疏，但还有它那时的“历”以指导人的社会生产活动。这种历是否成“法”呢？如果确定一年为“三百有六旬有六日”(《尧典》)，是不可能有规律地调配年月日的，还形不成“法”。只有到春秋中期以后，测量出一回归年为36514日，到战国初期创制、行用四分历，才可能有“法”可依，才称得上有了历法。有历法之前，都是根据天象的观测，调整年月日，随时观测，随时调整，这还是观象授时的时代。到了有“法”可依的时代，就有可能将天象的数据抽象化，就有可能依据日月星辰运行的规律，通过演算，上推千百年，下推千百年，考求、预定年、月、日、时。我国最早的一部历法——四分历，就具备了这种条件。 可见，历与历法不能混为一谈。什么是历法呢？历法就是利用天象的变化规律调配年、月、日、时的一种纪时法则。&lt;/p>
&lt;p>历法与天象那么紧密不可分，正是我国古代历法独具的特点。在我国古代，历法就包含在古天文学之中，历法是古代天文学中一个很重要的领域。历法的普遍内容包括节气的安排，一年中月的安排，一月中日的安排以及闰月安插规则，等等。我国古代历法还有关于日食、月食的预报和五大行星运行的推算。总之，离开天文就无所谓历法，历法反映了大量的天文现象，历法中有丰富的天文学内容，历法就是古天文学的一个部分。我国古代合天文、历法为一事，就是这个道理。同样的原因，古人称天文历法为历算、星算、天算、星历……总是将天文、历法合在一起加以表述。&lt;/p>
&lt;p>历法的内容，一部分属于实用天文学的范围，另一部分属于理论天文学的范围。测时与制历就是天文学为生产服务的主要工作。我国古代历法重视对天象的推算，不仅反映了对天文学的重视，也常常以此来考核历法的准确性。古代历法史上的多次改革，其直接原因之一就是由于日食等天象的预推出现了差误。从一定程度上来说，我国古代的编历工作，也就是一种编算天文年历的工作。由此可见，我国古代天文学家何等重视实践与理论的结合。&lt;/p>
&lt;p>正因为这样，当我们谈到古代天文学，那实际已经包括了古代历法的内容。&lt;/p>
&lt;h2 id="三天文常识">
 三、天文常识
 &lt;a class="anchor" href="#%e4%b8%89%e5%a4%a9%e6%96%87%e5%b8%b8%e8%af%86">#&lt;/a>
&lt;/h2>
&lt;p>人类社会各个民族生活的地域不同，星象与季节的相应关系也不同，但是用天象定岁时都是共同的。古代埃及人重视观测天狼星，因为每年天狼星与太阳一起升起的时候，就预示着尼罗河要泛滥，而尼罗河泛滥带来的肥沃土壤，正是埃及人播种的需要。我国上古的夏朝，重视参宿三星的观察，每年三星昏见西方，就意味着春耕季节的开始，参宿就成了夏族主祭祀的星了。晚起的商族，着重观察黄昏现于东方地平线上的亮星，看中了心宿三星，最亮的心宿二就是“大火”。大火昏见东方，也正是春耕季节播种的日子。大火就成了商族主祭祀的星。所以《公羊传·昭公十七年》载：“大火为大辰，伐为大辰，北极亦为大辰。”何休《公羊解诂》云：“大火谓心星，伐为参星。大火与伐，所以示民时之早晚。”这里所谓“大辰”，就是观察天象的标准星，均指恒星而言。大火为大辰，是就商代而言；伐为大辰，是就夏朝而言；北极亦为大辰，当指以北极星为观察天象的标准的更古时代。于此可见，我国上古对于北极星的认识，起源更早。&lt;/p>
&lt;p>现代天文学知识告诉我们，在太阳系里有水星、金星、地球、火星、木星、土星、天王星、海王星共八大行星围绕着太阳，按照各自的轨道和速度运行着。——古人凭肉眼观测，以地球为中心，早就认识了五大行星(金、木、水、火、土)并了解到它们绕地球一圈的时间，掌握了它们的运行规律。&lt;/p>
&lt;p>地球绕太阳公转的同时，还在自转。公转一周为365.24219日，自转一周为24小时。由于地球自转轨道与公转轨道有23°26′的倾斜角，地球表面受到太阳照射的程度不同(直射或斜射，斜射还有角度的不同)，便有了春夏秋冬四季冷暖的变化。&lt;/p>
&lt;p>月球是地球的卫星，它围绕着地球旋转，运行一周为29.53059日，月球本身不发光，人们所见到的月相是月球对太阳光的反射。随着地球、月球与太阳相互位置的变化，月相也周期性变化着。当月亮的背光面对着地球，人们看不到有光的月面，即为朔日(阴历初一)；当月亮的受光面全部对着地球，人们看到一轮满月，即为望日(阴历十五)。从朔日到望日，望日到朔日之间还有各种月相。人们根据月相变化和月亮出没时间，便知道阴历的日期。俗话说：“初三初四蛾眉月，初七初八月半边，十五十六月团圆。”这种以月相变化为依据，从朔到朔或从望到望的周期长度，叫朔望月，就是阴历的一个月。&lt;/p>
&lt;p>每一个朔望月，月球都要行经地球和太阳之间的空间一次，如果大体在一个平面上，月球遮住了太阳射向地球的光线，就会发生日食；当地球运行到太阳和月球中间(每月有一次机会)，如果大体在一个平面上，地球就会挡住太阳射向月球的光线，就要发生月食。因此，日食总是发生在朔日，月食总是发生在望日。古人特别重视日食的记载，认为是上天对君主的警告，是凶兆。古代天文学家还以日食检验历法的准确性，食不在朔，便据以调历。&lt;/p>
&lt;p>前人是怎样以地球为中心表述日食、月食这些天象的？我们用曾运乾先生《尚书正读》注文来回答这个问题，至少可以给我们一些启发。注云：当朔而日为月所掩，是为日食。当望而月为日所冲，是为月食。又说，古人制字，“朔”“望”“有”均从月得义。朔字从月从屰(屰，不顺也)。月与日同经度而不同纬度，则相屰而为合朔。若同经度而又同纬度，则相屰而为日食。望，为月食专字。从月从壬(壬，朝廷也)，取日月相对望也。从亡，遇食则有亡象焉。有，为日食专字。从月，月光蔽其明也。从又，一指蔽前，泰山不见也。则知日月食之由于蔽也。《说文》：“有，不宜有也。春秋传曰，日月又食之。从月又声。”段氏注云：“谓本是不当有而有之称，引申遂为凡有之称。”&lt;/p>
&lt;p>古代先民只是直观地以地球为中心来观测天体的运行，这就是西方科学未传入中国之前我国古代长期行用的地心说。日月星辰的东升西落，实际是因为地球从西向东在转动。这种地心说并非全无道理。比如上和下，是一种比较的说法。在地球上的上与下，其实都是在和地球中心比较，拿地球中心做标准来比较是有道理的。舍此，就无所谓上与下。同样，国际通用的标准时自有好处，而各个地方时更为各地的使用者称便。道理都一样，地心说对观测者似更方便。古人想象，地球四周被巨大的天球包围着，所有的日月星辰都在天球上运行。太阳系八大行星，古人凭肉眼观测，以地球为中心，只能见到金、木、水、火、土五大行星，并掌握了它们各自绕地球一圈的时间及运行规律，记之甚详。古代典籍关于天象的记载，立足于地心说。古代星图、天球仪之类也据此成象。阅读古籍者不可不知。&lt;/p>
&lt;h2 id="四历的种类">
 四、历的种类
 &lt;a class="anchor" href="#%e5%9b%9b%e5%8e%86%e7%9a%84%e7%a7%8d%e7%b1%bb">#&lt;/a>
&lt;/h2>
&lt;p>人类对天象进行观测以确定计时标准，其中观测的主要对象是日、月的运行，依据日、月的运行周期以制定各自的历法。迄今为止，世界上的历法可分为三类：太阴历、太阳历和阴阳合历。&lt;/p>
&lt;p>甲，太阴历。它是以月球受光面的圆缺晦明变动为基础，利用月球运行周期(朔望月)为标准制定的历法。月亮运行的周期是29.53日，太阴历就用大月(30日)、小月(29日)相间，一大一小来调整。因为每两月有0.06日盈余，还需要配置连大月才能保证月初必朔，月中必望。太阴历以十二个朔望月为一年计算，共354日或355日。它把月相与日期固定地联系在一起，见月相而知日期，知日期亦知月相。这在上古，无疑给人们的生产和生活带来方便。其致命的弱点是，十二个朔望月(平年354日)与太阳的运行周期(即回归年长度365.2422日)不相吻合，太阴历每年与回归年有11日多的时差，积三年就相差34日。这就必将搅乱月份与回归年长度确定的春夏秋冬四季的关系，冷暖四季与月份的关系错乱，又会给人们的生产、生活带来困难。&lt;/p>
&lt;p>从古代历史记载得知，世界上最早制历的国家都首先使用过太阴历，因为月球的盈亏变化对人类而言较为明显而又亲切。上古时代，日苦其短，年嫌其长，月的周期最能适应宗教仪式的需要，朔望月自然就占有了重要的地位。&lt;/p>
&lt;p>伊斯兰教用于祭祀节日的回回历就是现存的唯一纯太阴历。回历以公元622年7月16日，即穆罕默德避难麦加的次日为元年元日，以朔望月计，十二月为一年，每月以月牙初见为第一日，单月30日，双月29日，大月小月相间，全年354日，不置闰月。由于十二个朔望月共354日8时48分34秒，每年多出8小时有余，积三年就多出一天有余。所以，回历每三十年共置十一个闰日。在三十年中，第2、5、7、10、13、16、18、21、24、26、29年为闰年，每年355日，闰日放在十二月。&lt;/p>
&lt;p>由于太阴历和回归年的日差，回历的岁首和节日(如肉孜节、古尔邦节)寒暑不定，便是可以理解的了。&lt;/p>
&lt;p>陈垣先生《二十史朔闰表》附有回历与公元历、阴历的日期对照，便于检查。&lt;/p>
&lt;p>乙，太阳历。它是以太阳的回归年周期为基本数据制定的历法。欧洲太阳历是古罗马恺撒在公元前46年请埃及天文学家索西琴尼斯协助制定的，世称“儒略历”或“旧太阳历”。当时测得的回归年长度为36514日。因此，儒略历规定，每四年中前三年为平年365日，第四年为闰年366日，即逢四或逢四的倍数的年份为闰年。一年十二个月，单月为大月31天，双月为小月30天。起自3月，终于2月，与月相完全无关。因为罗马帝国每年2月(年终)处决犯人，视为不吉，所以减去一日，平年只有29日，闰年为30日。又因为恺撒养子屋大维(奥古斯都)生于8月(小月)，又从2月减一日加到8月，变8月小为8月大(31日)。这样，2月即为28日(闰年为29日)。为了避免由于2月小、8月大而造成的7月、8月、9月三个月连大，又改为7月、8月连大，9月、11月为小月，10月、12月为大月。这都是人为的规定。&lt;/p>
&lt;p>公元325年，罗马帝国召开宗教会议，决定统一采用儒略历，并依据当时的天文观测，定3月21日为春分日。&lt;/p>
&lt;p>回归年长度为365.24219日，即365日5时48分46秒。而儒略历是以36514日，即365日6时为数据制定的。两者有11分14秒之差，长期积累就会形成明显误差(128年差1日)，这在当时并不为人所知。到公元1582年，人们发现春分点竟在3月11日，与公元325年的春分点相差十日之多，即1258年间(325—1582)间差十日，相当于每400年误差3日。为此，罗马教皇格里高利十三世只好召集学者研究，改革儒略历，采取每400年取消3闰(即400年97闰)的方法，规定把1582年10月4日以后的一天算为1582年10月15日，所有百位数以上的年数能被400除尽者才能算闰年(如1600年，2000年)。这样，一方面纠正了儒略历的误差，另一方面又提高了太阳历的精度。改革以后的儒略历称为格里历，其精确度很高：&lt;/p>
&lt;p>365×400+97=146097(日)&lt;/p>
&lt;p>146097÷400=365.2425(日)&lt;/p>
&lt;p>格里历这个回归年长度365.2425日比现代实测回归年长度只有0.0003日(即近26秒)之差，积累3320年才会有一日的误差。这对日用历来说，已是十分精确的了。&lt;/p>
&lt;p>我国元代郭守敬至元十八年(公元1281年)制定的“授时历”，其回归年长度已达到365.2425日的精确度，比格里历早了三百年。&lt;/p>
&lt;p>当今世界通用公元纪年，共同使用的就是格里历。而公元纪年并不开始于公元元年，而是开始于公元532年(据说基督就诞生在公元532年之前，532年正是我国南朝梁武帝中大通四年)。这是出于宗教的考虑。因为532这个数字正是星期日数7、闰年周期4和所谓月周(即一定历日的时间地球上看到月面形状变化的周期)19(年)的最小公倍数。每过532年，基督教的节日(比如复活节)又会是同一日期、星期和月相。因此，公元532年之前的公元纪年都是后来逆推而定的。&lt;/p>
&lt;p>太阳历以回归年周期为依据，四季与月份的关系稳定。中国古历形成的二十四节气就比较固定地配合在太阳历的一些日子里。&lt;/p></description></item><item><title>版权-序-前言</title><link>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E7%89%88%E6%9D%83-%E5%BA%8F-%E5%89%8D%E8%A8%80/</link><pubDate>Sat, 04 Jan 2025 16:42:33 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E5%8F%A4%E4%BB%A3%E5%A4%A9%E6%96%87%E5%8E%86%E6%B3%95%E8%AE%B2%E5%BA%A7/%E7%89%88%E6%9D%83-%E5%BA%8F-%E5%89%8D%E8%A8%80/</guid><description>&lt;h1 id="版权信息">
 版权信息
 &lt;a class="anchor" href="#%e7%89%88%e6%9d%83%e4%bf%a1%e6%81%af">#&lt;/a>
&lt;/h1>
&lt;p>图书在版编目（CIP）数据&lt;/p>
&lt;p>古代天文历法讲座／张闻玉著．—2版．—桂林： 广西师范大学出版社，2017.10 （中华优秀传统文化名家讲座） ISBN 978-7-5495-9716-1&lt;/p>
&lt;p>Ⅰ．①古… Ⅱ．①张… Ⅲ．①古历法－基本知识－ 中国 Ⅳ．①P194.3&lt;/p>
&lt;p>中国版本图书馆CIP数据核字（2017）第106428号&lt;/p>
&lt;p>广西师范大学出版社出版发行（ 广西桂林市中华路22号 邮政编码：541001 ）&lt;/p>
&lt;p>出版人：张艺兵&lt;/p>
&lt;p>全国新华书店经销&lt;/p>
&lt;p>开本：700 mm × 970 mm 1/16&lt;/p>
&lt;p>印张：23 字数：280千字&lt;/p>
&lt;p>2017年10月第2版 2017年10月第1次印刷&lt;/p>
&lt;p>印数：0 001~4 000册 定价：59. 80元&lt;/p>
&lt;p>&lt;strong>目录&lt;/strong>&lt;/p>
&lt;p>版权信息&lt;/p>
&lt;p>《古代天文历法讲座》新版序&lt;/p>
&lt;p>序&lt;/p>
&lt;p>前言&lt;/p>
&lt;p>第一讲为什么要了解古天文历法
一、时间与天文历法&lt;/p>
&lt;p>二、天文与历法&lt;/p>
&lt;p>三、天文常识&lt;/p>
&lt;p>四、历的种类&lt;/p>
&lt;p>五、古天文学与星占&lt;/p>
&lt;p>六、古代天文学在阅读古籍中的作用&lt;/p>
&lt;p>七、怎样学好古天文历法&lt;/p>
&lt;p>第二讲纪时系统
一、纪年法&lt;/p>
&lt;p>二、纪月法&lt;/p>
&lt;p>三、纪日法&lt;/p>
&lt;p>四、纪时法&lt;/p>
&lt;p>第三讲观象授时
一、地平方位&lt;/p>
&lt;p>二、三垣二十八宿&lt;/p>
&lt;p>三、《尧典》及四仲中星&lt;/p>
&lt;p>四、《礼记·月令》的昏旦中星&lt;/p>
&lt;p>五、北极与北斗&lt;/p>
&lt;p>六、分野&lt;/p>
&lt;p>七、五星运行&lt;/p>
&lt;p>八、《诗·七月》的用历&lt;/p>
&lt;p>九、观象授时要籍对照表&lt;/p>
&lt;p>第四讲二十四节气
一、先民定时令&lt;/p>
&lt;p>二、土圭测景&lt;/p>
&lt;p>三、冬至点的测定&lt;/p>
&lt;p>四、岁差&lt;/p>
&lt;p>五、节气的产生&lt;/p>
&lt;p>六、二十四节气的意义&lt;/p>
&lt;p>七、节气的分类&lt;/p></description></item><item><title>下篇</title><link>https://lwmfjc.github.io/zh/docs/culture/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/%E4%B8%8B%E7%AF%87/</link><pubDate>Fri, 03 Jan 2025 23:48:35 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/%E4%B8%8B%E7%AF%87/</guid><description>&lt;h1 id="下篇宏观现象">
 下篇　宏观现象
 &lt;a class="anchor" href="#%e4%b8%8b%e7%af%87%e5%ae%8f%e8%a7%82%e7%8e%b0%e8%b1%a1">#&lt;/a>
&lt;/h1>
&lt;p>上篇介绍了地方政府推动经济发展的模式。这种模式的第一个特点是城市化过程中“重土地、轻人”，优点是可以快速推进城市化和基础设施建设，缺点是公共服务供给不足，推高了房价和居民债务负担，拉大了地区差距和贫富差距。第五章分析这些内容，并介绍土地流转和户籍改革等要素市场的改革。第二个特点是招商引资竞争中“重规模、重扩张”，优点是推动了企业成长和快速工业化，缺点是加重了债务负担。企业、地方政府、居民三部门债务互相作用，加大了经济整体的债务和金融风险。第六章分析这些内容，并介绍“供给侧结构性改革”，详述“去库存、去产能、去杠杆”及“防范化解重大金融风险”。第三个特点是发展战略“重投资、重生产、轻消费”，优点是拉动了经济快速增长，扩大了对外贸易，使我国迅速成为制造业强国，缺点是经济结构不平衡。对内，资源向企业部门转移，居民收入和消费占比偏低，不利于经济长期稳定发展；对外，国内无法消纳的产能向国外输出，加剧了贸易冲突。第七章分析这些内容，并介绍党的十九大重新定义“主要矛盾”后的相关改革，详述“形成以国内大循环为主体、国内国际双循环相互促进的新发展格局”所需要的改革。&lt;/p>
&lt;h1 id="第五章城市化与不平衡">
 第五章　城市化与不平衡
 &lt;a class="anchor" href="#%e7%ac%ac%e4%ba%94%e7%ab%a0%e5%9f%8e%e5%b8%82%e5%8c%96%e4%b8%8e%e4%b8%8d%e5%b9%b3%e8%a1%a1">#&lt;/a>
&lt;/h1>
&lt;p>教书久了，对年轻人不同阶段的心态深有体会。大一新生刚从中学毕业，无忧无虑，爱思考“为什么”；大四毕业生和研究生则要走向社会，扛起工作和生活的重担，普遍焦虑，好琢磨“怎么办”。大多数人的困境可以概括为：有心仪工作的城市房价太高，而房价合适的城市没有心仪的工作。梦想买不起，故乡回不去。眼看着大城市一座座高楼拔地而起，却难觅容身之所。为什么房子这么贵？为什么归属感这么低？为什么非要孤身在外地闯荡，不能和父母家人在一起？这些问题都与地方政府推动经济发展的模式有关。&lt;/p>
&lt;p>城市化需要投入大量资金建设基础设施，“土地财政”和“土地金融”是非常有效的融资手段。通过出让城市土地使用权，可以积累以土地为信用基础的原始资本，推动工业化和城市化快速发展。中国特有的城市土地国有制度，为政府垄断土地一级市场创造了条件，将这笔隐匿的财富变成了启动城市化的巨大资本，但也让地方财源高度依赖土地价值，依赖房地产和房价。房价连着地价，地价连着财政，财政连着基础设施投资，于是经济增长、地方财政、银行、房地产之间就形成了“一荣俱荣，一损俱损”的复杂关系。&lt;/p>
&lt;p>这种以土地为中心的城市化忽视了城市化的真正核心：人。地价要靠房价拉动，但房价要由老百姓买单，按揭要靠买房者的收入来还。所以土地的资本化，实质是个人收入的资本化。支撑房价和地价的，是人的收入。忽略了人，忽略了城市化本该服务于人，本该为人创造更好的环境和更高的收入，城市化就入了歧途。&lt;/p>
&lt;p>1980年，我国城镇常住人口占总人口比重不足两成，2019年超过了六成（见图5-1）。短短40年，超过5亿人进了城，这是不折不扣的城市化奇迹。但若按户籍论，2019年的城镇户籍人口只占总人口的44%，比常住人口占比少了16个百分点。也就是说有超过2亿人虽然常住城镇，却没有当地户口，不能完全享受到应有的公共服务（如教育），因为这些服务的供给是按户籍人数来规划的。这种巨大的供需矛盾，让城市新移民没有归属感，难以在城市中安身立命，也让“留守儿童、留守妇女、留守老人”成为巨大的社会问题。近年来一系列改革措施的出台，都是为了扭转这种现状，让城市化以人为本。&lt;/p>
&lt;p>&lt;img src="img/000014.jpeg" alt="" />
图5-1　城镇人口占总人口比重&lt;/p>
&lt;p>数据来源：万得数据库与国家统计局历年《国民经济和社会发展统计公报》。&lt;/p>
&lt;p>本章第一节分析房价和土地供需间的关系，讨论高房价带来的日益沉重的居民债务负担。第二节分析地区间发展不平衡，其根源之一在于土地和人口等生产要素流动受限，所以近年来在土地流转和户籍制度等方面的改革非常重要。第三节分析我国经济发展过程中出现的贫富差距，这一现象也和房价以及要素市场改革有关。&lt;/p>
&lt;h2 id="第一节房价与居民债务">
 第一节　房价与居民债务
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%80%e8%8a%82%e6%88%bf%e4%bb%b7%e4%b8%8e%e5%b1%85%e6%b0%91%e5%80%ba%e5%8a%a1">#&lt;/a>
&lt;/h2>
&lt;p>1994年分税制改革（第二章）是很多重大经济现象的分水岭，也是城市化模式的分水岭。1994年之前实行财政包干制，促进了乡镇企业的崛起，为工业化打下了基础，但农民离土不离乡，大多就地加入乡镇企业，没有大量向城市移民。分税制改革后，乡镇企业式微，农民工大潮开始形成。从图5-1中可以清楚地看到，城镇常住人口自1995年起加速上涨，城市化逐渐进入了以“土地财政”和“土地金融”为主要推手的阶段。这种模式的关键是房价，所以城市化的矛盾焦点也是房价。房价短期内受很多因素影响，但中长期主要由供求决定。无论是发达国家还是发展中国家，房屋供需都与人口结构密切相关，因为年轻人是买房主力。年轻人大都流入经济发达城市，但这些城市的土地供应又受政策限制，因此房屋供需矛盾突出，房价居高不下。&lt;/p>
&lt;h4 id="房价与土地供需">
 房价与土地供需
 &lt;a class="anchor" href="#%e6%88%bf%e4%bb%b7%e4%b8%8e%e5%9c%9f%e5%9c%b0%e4%be%9b%e9%9c%80">#&lt;/a>
&lt;/h4>
&lt;p>现代经济集聚效应很强，经济活动及就业越来越向大城市集中。随着收入增长和生活水平提高，人们高价竞争城市住房。这种需求压力是否会推升房价，取决于房屋和住宅用地供给是否灵活。若政策严重限制了供给，房价上涨就快。一个地区的土地面积虽然固定，但建造住宅的用地指标可以调整；同一块住宅开发用地上，容积率和绿化面积也可以调整。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>1&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">1&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 这些调整都受政策的影响。美国虽然是土地私有制，但城市建设和用地规划也要受政府管制。比如旧金山对新建住房的管制就特别严格，所以即使在20世纪90年代房价也不便宜。在21世纪初的房地产投机大潮中，旧金山的住房建设指标并没有增加，房价于是飙升。再比如亚特兰大，住房建设指标能够灵活调整，因此虽然也有大量人口涌入，但房价一直比较稳定。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>2&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">2&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 &lt;/p>
&lt;p>我国的城市化速度很快，居民收入增长的速度也很快，所以住房需求和房价上涨很快。按照国家统计局的数据，自1998年住房商品化改革以来，全国商品房均价在20年间涨了4.2倍。但各地涨幅大不相同。三四线城市在2015年实行货币化棚改（见第六章）之前，房价涨幅和当地人均收入涨幅差不多；但在二线城市，房价就比人均收入涨得快了；到了一线城市，房价涨幅远远超过了收入：2015年之前的十年间，北、上、广、深房价翻了两番，年均增速13%。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>3&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">3&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 &lt;/p>
&lt;p>地区房价差异的主要原因是供需失衡。人口大量涌入的大城市，居住用地的供给速度远赶不上人口增长。2006年至2014年，500万人和1 000万人以上的大城市城区人口增量占全国城区人口增量的近四成，但居住用地增量才占全国增量的两成，房价自然快速上涨。而在300万人以下尤其是100万人以下的小城市中，居住用地增量比城镇人口增量更快，房价自然涨不上去。从地理分布上看，东部地区的城镇人口要比用地增速高出近10%，住房十分紧张；而西部和东北地区则反过来，建设用地指标增加得比人口快。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>4&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">4&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 &lt;/p>
&lt;p>中国对建设用地指标实行严格管理，每年的新增指标由中央分配到省，再由省分配到地方。这些指标无法跨省交易，所以即使面对大量人口流入，东部也无法从西部调剂用地指标。2003年后的十年间，为了支持西部大开发并限制大城市人口规模，用地指标和土地供给不但没有向人口大量流入的东部倾斜，反而更加向中西部和中小城市倾斜。2003年，中西部土地供给面积占全国新增供给的比重不足三成，2014年上升到了六成。2002年，中小城市建成区面积占全国的比重接近一半，2013年上升到了64%。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>5&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">5&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 土地流向与人口流向背道而驰，地区间房价差距因此越拉越大。&lt;/p>
&lt;p>然而这种土地倾斜政策并不能改变人口流向，人还是不断向东部沿海和大城市集聚。这些地区不仅房价一直在涨，大学的高考录取分数也一直在涨。中西部房价虽低，但年轻人还是愿意到房价高的东部，因为那里有更多的工作机会和资源。倾斜的土地政策并没有留住人口，也很难留住其他资源。很多资本利用了西部的优惠政策和廉价土地，套取了资源，又回流到东部去“炒”房地产，没在西部留下可持续发展的经济实体，只给当地留下了一堆债务和一片空荡荡的工业园区。&lt;/p>
&lt;p>建设用地指标不能在全国交易，土地使用效率很难提高。地方政府招商引资竞争虽然激烈，也经常以土地作为手段，却很难持续提高土地资源利用效率。发达地区土地需求旺盛，地价大涨，本应增加用地指标，既满足需求也抑制地价。但因为土地分配受制于行政边界，结果却是欠发达地区能以超低价格（甚至免费）大量供应土地。这种“东边干旱，西边浇水”的模式需要改革。2020年，中央提出要对建设用地指标的跨区域流转进行改革，探索建立全国性建设用地指标跨区域交易机制（见第二节），已是针对这一情况的改革尝试。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>6&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">6&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 &lt;/p>
&lt;h4 id="房价与居民债务欧美的经验和教训">
 房价与居民债务：欧美的经验和教训
 &lt;a class="anchor" href="#%e6%88%bf%e4%bb%b7%e4%b8%8e%e5%b1%85%e6%b0%91%e5%80%ba%e5%8a%a1%e6%ac%a7%e7%be%8e%e7%9a%84%e7%bb%8f%e9%aa%8c%e5%92%8c%e6%95%99%e8%ae%ad">#&lt;/a>
&lt;/h4>
&lt;p>居民债务主要来自买房，房价越高，按揭就越高，债务负担也就越重。各国房价上涨都是因为供不应求，一来城市化过程中住房需求不断增加；二来土地和银行按揭的供给都受政治因素影响。&lt;/p>
&lt;p>在西方，“自有住房”其实是个比较新的现象，“二战”之前，大部分人并没有自己的房子。哪怕在人少地多的美国，1900—1940年的自有住房率也就45%左右。“二战”后这一比率才开始增长，到2008年全球金融危机之前达到68%。英国也差不多，“二战”前的自有住房率基本在30%，战后才开始增长，全球金融危机前达到70%。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>7&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">7&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 正因为在很长一段时间里英美大部分人都租房，所以主流经济学教材在讲述供需原理时，几乎都会用房租管制举例。1998年，我第一次了解到房租管制，就是在斯蒂格利茨的《经济学》教科书中。逻辑虽容易理解，但并没有直观感受，因为当时我认识的人很少有租房的，农民有宅基地，城里人有单位分房。城市住房成为全民热议的话题，也是个新现象。&lt;/p>
&lt;p>欧美自有住房率不断上升，有两个后果。第一是对待房子的态度变化。对租房族来说，房子就是个住的地方，但对房主来说，房子是最重要的资产。随着房子数量和价格的攀升，房产成了国民财富中最重要的组成部分。1950年至2010年，英国房产价值占国民财富的比例从36%上升到57%，法国从28%升到61%，德国从28%升到57%，美国从38%升到42%。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>8&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">8&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 第二个变化是随着房主越来越多，得益于房价上涨的人就越来越多。所以政府为讨好这部分选民，不愿让房价下跌。无房者也想尽快买房，赶上房价上涨的财富快车，政府于是顺水推舟，降低了买房的首付门槛和按揭利率。&lt;/p>
&lt;p>美国房地产市场和选举政治紧密相关。美国的收入不平等从20世纪七八十年代开始迅速扩大，造成了很多政治问题。而推行根本性的教育或税制等方面的改革，政治阻力很大，且难以在短期见效。相比之下，借钱给穷人买房就容易多了，既能缓解穷人的不满，让人人都有机会实现“美国梦”，又能抬高房价，让房主的财富也增加，拉动他们消费，创造更多就业，可谓一举多得。于是政府开始利用房利美（Fannie Mae）和房地美（Freddie Mac）公司（以下简称“两房”）来支持穷人贷款买房。“两房”可以买入银行的按揭贷款，相当于借钱给银行发放更多按揭。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>9&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">9&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 1995年，克林顿政府规定“两房”支持低收入者的房贷要占到总资产的42%。2000年，也就是克林顿执政的最后一年，这一比率提高到50%。2004年，小布什政府将这一比率进一步提高到56%。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>10&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">10&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 “两房”也乐此不疲，因为给穷人的贷款利润较高，风险又似乎很低。此外，对购房首付的管制也越来越松。2008年全球金融危机前很多房贷的首付为零，引发了投机狂潮，推动房价大涨。根据Case-Shiller房价指数，2002年至2007年，美国房价平均涨了将近60%。危机之后，房价从2007年的最高点一直下跌到2012年，累积跌幅27%，之后逐步回升，2016年才又回到十年前的高点。&lt;/p>
&lt;p>房价下挫和收入下降会加大家庭债务负担，进而抑制消费。消费占美国GDP的七成，全球金融危机中消费大幅下挫，把经济推向衰退。危机前房价越高的地区，危机中消费下降越多，经济衰退也越严重，失业率越高。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>11&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">11&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 欧洲情况也大致如此。大多数欧洲国家在2008年之前也经历了长达十年的房价上涨。涨幅越大的国家居民债务负担越重（绝大多数债务是房贷），危机中消费下降也越多。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>12&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">12&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 &lt;/p>
&lt;p>房地产常被称作“经济周期之母”，根源就在于其内在的供需矛盾：一方面，银行可以通过按揭创造几乎无限的新购买力；而另一方面，不可再生的城市土地供给却有限。这对矛盾常常会导致资产泡沫与破裂的周期循环，是金融和房地产不稳定的核心矛盾。而房地产不仅连接着银行，还连接着千家万户的财富和消费，因此影响很大。&lt;/p>
&lt;h4 id="房价与居民债务我国的情况">
 房价与居民债务：我国的情况
 &lt;a class="anchor" href="#%e6%88%bf%e4%bb%b7%e4%b8%8e%e5%b1%85%e6%b0%91%e5%80%ba%e5%8a%a1%e6%88%91%e5%9b%bd%e7%9a%84%e6%83%85%e5%86%b5">#&lt;/a>
&lt;/h4>
&lt;p>2008年之后的10年，我国房价急速上涨，按揭总量越来越大，居民债务负担上涨了3倍多（图5-2）。2018年末，居民债务占GDP的比重约为54%，虽仍低于美国的76%，但已接近德国和日本。根据中国人民银行的信贷总量数据，居民债务中有53%是住房贷款，24%是各类消费贷（如车贷）。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>13&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">13&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 这一数据可能还低估了与买房相关的债务。实际上一些消费贷也被用来买了房，比如违规用于购房首付。而且人民银行的数据还无法统计到民间借贷等非正规渠道。&lt;/p>
&lt;p>&lt;img src="img/000005.jpeg" alt="" />
图5-2　居民债务占GDP比重&lt;/p>
&lt;p>数据来源：IMF全球债务数据库。此处债务仅包括银行贷款和债券。&lt;/p>
&lt;p>图5-2中债务负担的分母是GDP，这一比率常用于跨国比较，但它低估了居民的实际债务负担。还债不能用抽象的GDP，必须用实实在在的收入。2019年末，中国人民银行调查统计司调查了全国3万余户城镇居民（农民负债率一般较低，大多没有房贷）的收入和债务情况。接近六成家庭有负债，平均债务收入比为1.6，也就是说债务相当于1.6倍的家庭年收入。这个负担不低，接近美国。2000年，美国家庭负债收入比约为1.5，2008全球金融危机前飙升至2.1，之后回落到1.7左右。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>14&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">14&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 &lt;/p>
&lt;p>根据中国人民银行的这项调查，城镇居民2019年的负债中有76%是房贷。而从资产端看，城镇居民的主要财产也就是房子。房产占了家庭资产的近七成，其中六成是住房，一成是商铺。而在美国居民的财富中，72%是金融资产，房产占比不到28%。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>15&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">15&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 中国人财富的压舱石是房子，美国人财富的压舱石是金融资产。这个重大差别可以帮助理解两国的一些基本政策，比如中国对房市的重视以及美国对股市的重视。&lt;/p>
&lt;p>总体看来，我国居民的债务负担不低，且仍在快速上升。最主要的原因是房价上涨。居民债务的攀升已然影响到了消费。以买车为例，这是房子之外最贵的消费品类，对宏观经济非常重要，约占我国社会商品零售总额的10%。车是典型的奢侈品，需求收入弹性很大，收入增加时需求大增，收入减少时需求大减。随着居民债务增加，每月还债后的可支配收入减少，所以经济形势一旦变差，买车需求就会大减。我国家用轿车市场经历了多年高速增长，2018年的私家车数量是2005年的14倍。但是从2018年下半年开始，“贸易战”升级，未来经济形势不确定性增大，轿车销量开始下降，一直到2019年底，几乎每个月同比都在下降。在新冠肺炎疫情影响之下，2020年2月份的销量同比下跌八成，3月份同比下跌四成，各地于是纷纷出台刺激汽车消费的政策。&lt;/p>
&lt;h4 id="房价与居民债务风险">
 房价与居民债务风险
 &lt;a class="anchor" href="#%e6%88%bf%e4%bb%b7%e4%b8%8e%e5%b1%85%e6%b0%91%e5%80%ba%e5%8a%a1%e9%a3%8e%e9%99%a9">#&lt;/a>
&lt;/h4>
&lt;p>按照中国人民银行的调查数据，北京居民的户均总资产（不是净资产，未扣除房贷和其他负债）是893万元，上海是807万元，是新疆（128万元）和吉林（142万元）的六七倍。这个差距大部分来自房价。房价上涨也拉大了同城之内的不平等。房价高的城市房屋空置率往往也高，一边很多人买不起房，一边很多房子空置。如果把房子在内的所有家庭财富（净资产）算在一起的话，按照上述中国人民银行的调查数据，2019年最富有的10%的人占有总财富的49%，而最穷的40%的人只占有总财富的8%。
 
 
 
 
 
 
 
 &lt;span class="katex">&lt;math xmlns="http://www.w3.org/1998/Math/MathML">&lt;semantics>&lt;mrow>&lt;mn>16&lt;/mn>&lt;/mrow>&lt;annotation encoding="application/x-tex">16&lt;/annotation>&lt;/semantics>&lt;/math>&lt;/span>
 
 &lt;/p></description></item><item><title>上篇</title><link>https://lwmfjc.github.io/zh/docs/culture/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/%E4%B8%8A%E7%AF%87/</link><pubDate>Fri, 03 Jan 2025 23:42:32 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E7%BD%AE%E8%BA%AB%E4%BA%8B%E5%86%85/%E4%B8%8A%E7%AF%87/</guid><description>&lt;p>&lt;img src="img/000003.jpeg" alt="" />&lt;/p>
&lt;p>图书在版编目（CIP）数据&lt;/p>
&lt;p>置身事内：中国政府与经济发展／兰小欢著．—上海：上海人民出版社，2021&lt;/p>
&lt;p>ISBN 978-7-208-17133-6&lt;/p>
&lt;p>Ⅰ．①置…　Ⅱ．①兰…　Ⅲ．①行政管理部门—关系—经济发展—研究—中国　Ⅳ．①D630.1②F124&lt;/p>
&lt;p>中国版本图书馆CIP数据核字（2021）第095010号&lt;/p>
&lt;p>书　　名：置身事内：中国政府与经济发展&lt;/p>
&lt;p>作　　者：兰小欢&lt;/p>
&lt;p>出品人：姚映然&lt;/p>
&lt;p>责任编辑：贾忠贤　曹迪辉&lt;/p>
&lt;p>转　　码：欣博友&lt;/p>
&lt;p>ISBN：978-7-208-17133-6/F·2693&lt;/p>
&lt;p>本书版权，为北京世纪文景文化传播有限责任公司所有，非经书面授权，不得在任何地区以任何方式进行编辑、翻印、仿制或节录。&lt;/p>
&lt;p>&lt;img src="img/000000.jpeg" alt="" />&lt;/p>
&lt;p>豆瓣小站：世纪文景&lt;/p>
&lt;p>新浪微博：@世纪文景&lt;/p>
&lt;p>微信号：shijiwenjing2002&lt;/p>
&lt;p>发邮件至wenjingduzhe@126.com订阅文景每月书情&lt;/p>
&lt;p>&lt;img src="img/000010.jpeg" alt="" />&lt;/p>
&lt;h1 id="目-录">
 目 录
 &lt;a class="anchor" href="#%e7%9b%ae-%e5%bd%95">#&lt;/a>
&lt;/h1>
&lt;p>前言　从了解现状开始&lt;/p>
&lt;p>上篇　微观机制&lt;/p>
&lt;p>第一章　地方政府的权力与事务&lt;/p>
&lt;p>第一节　政府治理的特点&lt;/p>
&lt;p>第二节　外部性与规模经济&lt;/p>
&lt;p>第三节　复杂信息&lt;/p>
&lt;p>第四节　激励相容&lt;/p>
&lt;p>第五节　招商引资&lt;/p>
&lt;p>结语&lt;/p>
&lt;p>扩展阅读&lt;/p>
&lt;p>第二章　财税与政府行为&lt;/p>
&lt;p>第一节　分税制改革&lt;/p>
&lt;p>第二节　土地财政&lt;/p>
&lt;p>第三节　纵向不平衡与横向不平衡&lt;/p>
&lt;p>结语&lt;/p>
&lt;p>扩展阅读&lt;/p>
&lt;p>第三章　政府投融资与债务&lt;/p>
&lt;p>第一节　城投公司与土地金融&lt;/p>
&lt;p>第二节　地方政府债务&lt;/p>
&lt;p>第三节　招商引资中的地方官员&lt;/p></description></item><item><title> 下编-中国文化史</title><link>https://lwmfjc.github.io/zh/docs/culture/%E4%B8%AD%E5%9B%BD%E9%80%9A%E5%8F%B2%E5%90%95%E6%80%9D%E5%8B%89/%E4%B8%8B%E7%AF%87-%E4%B8%AD%E5%9B%BD%E6%96%87%E5%8C%96%E5%8F%B2/</link><pubDate>Thu, 02 Jan 2025 23:23:41 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E4%B8%AD%E5%9B%BD%E9%80%9A%E5%8F%B2%E5%90%95%E6%80%9D%E5%8B%89/%E4%B8%8B%E7%AF%87-%E4%B8%AD%E5%9B%BD%E6%96%87%E5%8C%96%E5%8F%B2/</guid><description>&lt;h1 id="第三十七章婚姻">
 第三十七章　婚姻
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%89%e5%8d%81%e4%b8%83%e7%ab%a0%e5%a9%9a%e5%a7%bb">#&lt;/a>
&lt;/h1>
&lt;p>《易经》的《序卦传》说：“有天地，然后有万物；有万物，然后有男女；有男女，然后有夫妇；有夫妇，然后有父子；有父子，然后有君臣。”这是古代哲学家所推想的社会起源。他们以为隆古的社会，亦像后世一般，以一夫一妇为基本，成立一个家庭，由此互相联结，成为更大的组织。此等推想，确乎和我们根据后世的制度，以推想古代的情形的脾胃相合。所以几千年来，会奉为不刊之典。然而事实是否如此，却大是一个疑问了。&lt;/p>
&lt;p>自有历史以来，不过几千年，社会的情形，却已大有改变了。设使我们把历史抹杀了，根据现在的情形，去臆测周、秦、汉、魏、唐、宋时的状况，那给研究过历史的人听了，一定是一场大笑话，何况邃古之事，去今业已几万年几十万年呢？不知古代的真相，而妄以己意推测，其结果，必将以为自古至今，不过如此，实系因缘起灭的现象，都将认为天经地义，不可变更。这就将发生许多无谓的争执，不必要的保守，而进化的前途被其阻碍了。所以近几十年来，史前史的发现，实在是学术上的一个大进步。而其在社会组织方面，影响尤大。&lt;/p>
&lt;p>据近代社会学家所研究：人类男女之间，本来是没有什么禁例的。其后社会渐有组织，依年龄的长幼，分别辈行。当此之时，同辈行之男女，可以为婚，异辈行则否。更进，乃于亲族之间，加以限制。最初是施诸同母的兄弟姊妹的。后来渐次扩充，至凡同母系的兄弟姊妹，都不准为婚，就成所谓氏族（Sib）了。此时异氏族之间，男女仍是成群的，此一群之男，人人可为彼一群之女之夫；彼一群之女，人人可为此一群之男之妻；绝无所谓个别的夫妇。其后禁例愈繁，不许相婚之人愈多。于是一个男子，有一个正妻；一个女子，有一个正夫。然除此之外，尚非不许与其他的男女发生关系，而夫妻亦不必同居，其关系尚极疏松。更进，则夫妻必须同居（一夫一妻，或一夫多妻），关系更为永久，遂渐成后世的家庭了。所以人类的婚姻，是以全无禁例始，逐渐发生加繁其禁例，即缩小其通婚的范围，而成为今日的形态的。以一夫一妻的家庭，为原始的男女关系，实属错误。&lt;/p>
&lt;p>主张一夫一妻的家庭，为男女原始关系的形态的，不过说：人类是从猿猴进化而来的，猿猴已有家庭，何况人类？然谓猿猴均有家庭，其观察本不正确（详见李安宅译《两性社会学》附录《近代人类学与阶级心理》第四节。商务印书馆本）。即舍此勿论，猿猴也是人类祖先的旁支，而非其正系。据生物学家之说，动物的聚居，有两种形式：一如猫虎等，雌雄同居，以传种之时为限；幼儿成长，即与父母分离，是为家庭动物。一如犬马等，其聚居除传种外，兼以互相保卫为目的；历时可以甚久，为数可以甚多，是为社群动物。人类无爪牙齿角以自卫，倘使其聚居亦以家庭为限，在隆古之世，断乎无以自存，而且语言也必不会发达。所以原始人类的状况，我们虽不得而知，其为社群而非家庭，则殆无疑义。猿类的进化不如人类，以生物界的趋势论，实渐走上衰亡之路，怕正以其群居本能，不如人类之故。而反说人类的邃初，必与猿猴一样，实未免武断偏见了。何况人类的性质，如妒忌及性的羞耻等，均非先天所固有（此观小孩便可知。动物两性聚居，只有一夫一妻，一夫多妻两种形式，人类独有一妻多夫，尤妒忌非先天性质之明证）；母爱亦非专施诸子女等，足以证明其非家庭动物的，还很多呢。&lt;/p>
&lt;p>现代的家庭，与其说是源于人的本性，倒不如说是源于生活情形（道德不道德的观念，根于习惯；习惯源于生活）。据社会学家所考究：在先史时期，游猎的阶级极为普遍。游猎之民，都是喜欢掠夺的，而其时可供掠夺之物极少，女子遂成为掠夺的目的。其后虑遭报复，往往掠夺之后，遗留物件，以为交换。此时的掠夺，实已渐成为贸易。女子亦为交换品之一。是为掠夺的变相，亦开卖买的渊源。掠夺来的女子，是和部族中固有的女子，地位不同的。她是掠夺她的人的奴隶，须负担一切劳役。此既足以鼓励男子，使之从事于掠夺，又婚姻之禁例渐多，本部族中的女子，可以匹合者渐少，亦益迫令男子从事于向外掠夺。所以家庭的起源，是由于女子的奴役；而其需要，则是立在两性分工的经济原因上的。与满足性欲，实无多大关系。原始人除专属于他的女子以外，满足性欲的机会，正多着呢。游猎之民，渐进而为畜牧，其人之好战斗，喜掠夺，亦与游猎之民同（凡畜牧之民，大抵兼事田猎），而其力且加强（因其食物充足，能合大群；营养佳良，体格强壮之故），牧群须人照管，其重劳力愈甚，而掠夺之风亦益烈。只有农业是源于搜集的，最初本是女子之事。低级的农业，亦率由女子任其责。其后逐渐发达，成为生活所必资。此时经济的主权，操于女子之手。土田室屋及农具等，率为女子所有。部族中人，固不愿女子出嫁；女子势亦无从出嫁；男子与女子结婚者，不得不入居女子族中，其地位遂成为附属品。此时女子有组织，男子则无（或虽有之而不关重要），所以社会上有许多公务，其权皆操于女子之手（如参与部族会议，选举酋长等。此时之女子，亦未尝不从事于后世家务一类的事务，然其性质，亦为公务，与后世之家务，迥乎不同），实为女子的黄金时代。所谓服务婚的制度，即出现于此时。因为结婚不能徒手，而此时的男子，甚为贫乏，除劳力之外，实无可以为聘礼之物之故。其后农业更形重要，男子从事于此者益多。导致以男子为之主，而女子为之辅。于是经济的主权，再入男子之手。生活程度既高，财产渐有赢余，职业日形分化。如工商等业，亦皆为男子之事。个人私产渐兴，有财富者即有权力，不乐再向女子的氏族中作苦，乃以财物偿其部族的损失，而娶女以归。于是服务婚渐变为卖买婚，女子的地位，又形低落了。&lt;/p>
&lt;p>以上所述，都是社会学家的成说。返观我国的古事，也无乎不同。《白虎通义·三皇篇》说，古代的人，“知其母而不知其父”，这正是古代的婚姻，无所谓夫妇的证据。人类对于男女性交，毫无限制的时代，去今已远，在书本上不易找到证据。至于辈行婚的制度，则是很明白无疑的。《礼记·大传》说宗子合族之礼道：“同姓从宗合族属，异姓主名治际会。名著而男女有别。其夫属乎父道者，妻皆母道也；其夫属乎子道者，妻皆妇道也。谓弟之妻为妇者，是嫂亦可谓之母乎？名者，人治之大者也，可无慎乎？”这正是古代婚姻，但论辈行一个绝好的遗迹。这所谓同姓，是指父系时代本氏族里的人。用现在的话来说，就是老太爷、老爷、少爷们。异姓，郑《注》说：“谓来嫁者”，就是老太太、太太、少太太们。从宗，是要依着血系的枝分派别的，如先分为老大房、老二房、老三房，再各统率其所属的房分之类，参看下章自明。主名，郑《注》说：“主于妇与母之名耳。”谓但分别其辈行，而不复分别其枝派。质而言之，就是但分为老太太、太太、少太太，而不再问其孰为某之妻，孰为某之母。“谓弟之妻为妇者，是嫂亦可谓之母乎。”翻做现在的话，就是：“把弟媳妇称为少太太，算做儿媳妇一辈，那嫂嫂难道可称为老太太，算做母亲一辈么？”如此分别，就可以称为男女有别，可见古代婚姻，确有一个专论辈行的时代，在周代的宗法中，其遗迹还未尽泯。夏威夷人对于父、伯叔父、舅父，都用同一的称呼。中国人对于舅，虽有分别，父与伯叔父，母与伯叔母、从母，也是没有分别的。伯父只是大爷，叔父、季父，只是三爷、四爷罢了。再推而广之，则上一辈的人，总称为父兄，亦称父老。老与考为转注（《说文》），最初只是一语，而考为已死之父之称。下一辈则总称子弟。《公羊》何《注》说：“宋鲁之间，名结婚姻为兄弟。”（僖公二十五年）可见父母兄弟等，其初皆非专称。资本主义的社会学家说：这不是野蛮人不知道父与伯叔父、舅父之别，乃是知道了而对于他们，仍用同一的称呼。殊不知野蛮人的言语，总括的名词，虽比我们少，各别的名词却比我们多。略知训诂的人皆知之（如古鸟称雌雄，兽称牝牡，今则总称雌雄，即其一例）。既知父与伯叔父、舅父之别，而仍用同一的称呼，这在我们，实在想不出这个理由来。难者将说：父可以不知道，母总是可以知道的，为什么母字亦是通称呢？殊不知大同之世，“人不独亲其亲，不独子其子”，生物学上的母，虽止一个，社会学上的母，在上一辈中，是很普遍的。父母之恩，不在生而在养，生物学上的母，实在是无甚关系的，又何必特立专名呢？然则邃初所谓夫妇之制和家庭者安在？《尔雅·释亲》：兄弟之妻，“长妇谓稚妇为娣妇，娣妇谓长妇为姒妇”，这就是现在的妯娌。而女子同嫁一夫的，亦称先生者为姒，后生者为娣。这也是辈行婚的一个遗迹。&lt;/p>
&lt;p>社会之所以有组织，乃是用以应付环境的。其初，年龄间的区别，实在大于两性间的区别（后来受文化的影响，此等区别，才渐渐转变。《商君书·兵守篇》说，军队的组织，以壮男为一军，壮女为一军，男女之老弱者为一军，其视年龄的区别，仍重于两性的区别）。所以组织之始，是按年龄分辈分的。而婚姻的禁例，亦起于此。到后来，便渐渐依血统区别了。其禁例，大抵起于血缘亲近之人之间。违犯此等禁例者，俗语谓之“乱伦”，古语则谓之“鸟兽行”，亦谓之“禽兽行”。惩罚大抵是很严重的。至于扩而充之，对母方或父方有血缘关系之人，概不许结婚，即成同姓不婚之制（中国古代的姓，相当于现在社会学上所谓氏族，参看下章）。同姓不婚的理由，昔人说是“男女同姓，其生不蕃”（《左传》僖公二十三年郑叔詹说）。“美先尽矣，则相生疾。”（同上，昭公七年郑子产说）又说是同姓同德，异姓异德（《国语·晋语》司空季子说），好像很知道遗传及健康上的关系的。然（一）血族结婚，有害遗传，本是俗说，科学上并无证据。（二）而氏族时代所谓同姓，亦和血缘远近不符。（三）至谓其有害于健康，则更无此说。然则此等都是后来附会之说，并不是什么真正的理由。以实际言，此项禁例，所以能维持久远的，大概还是由于《礼记·郊特牲》所说的“所以附远厚别”。因为文化渐进，人和人之间，妒忌之心，渐次发达，争风吃醋的事渐多，同族之中，必有因争色而致斗乱的，于是逐渐加繁其禁例，最后，遂至一切禁断。而在古代，和亲的交际，限于血缘上有关系的人。异姓间的婚姻，虽然始于掠夺，其后则渐变为卖买，再变为聘娶，彼此之间，无复敌意，而且可以互相联络了。试看春秋战国之世，以结婚姻为外交手段者之多，便可知《郊特牲》附远二字之确。这是同姓不婚之制，所以逐渐普遍，益臻固定的理由。及其既经普遍固定之后，则制度的本身，就具有很大的威权，更不必要什么理由了。&lt;/p>
&lt;p>妒忌的感情，是何从而来的呢？前文不是说，妒忌不是人的本性么？然两性间的妒忌，虽非人之本性，而古人大率贫穷，物质上的缺乏，逼着他不能不生出产业上的嫉妒来。掠夺得来的女子，既是掠夺者的财产，自然不能不努力监视着她。其监视，固然是为着经济上的原因，然他男子设或与我的奴隶，发生性的关系，就很容易把她带走，于是占有之欲，自物而扩及于人，而和此等女子发生性的关系，亦非得其主人许可，或给以某种利益，以为交换不可了（如租凭、借贷、交换等。《左传》襄公二十八年，庆封与卢蒲嫳易内；昭公二十八年，祁胜与邬臧通室；现在有等地方，还有租妻之俗，就是这种制度的遗迹）。再进，产业上的妒忌，渐变成两性间的妒忌，而争风吃醋之事遂多。内婚的禁忌，就不得不加严，不得不加密了。所以外婚的兴起，和内婚的禁止，也是互为因果的。&lt;/p>
&lt;p>掠夺婚起于游猎时代，在中国古书上，也是确有证据的。《礼记·月令》《疏》引《世本》说：太昊始制嫁娶以俪皮为礼。托诸太昊，虽未必可信，而俪皮是两鹿皮，见《公羊》庄公二十二年何《注》，这确是猎人之物。古婚礼必用雁，其理由，怕亦不过如此。又婚礼必行之昏时，亦当和掠夺有关系。&lt;/p>
&lt;p>中国农业起于女子，捕鱼在古代，亦为女子之事，说见第四十七章。农渔之民，都是食物饶足，且居有定地的，畋猎对于社会的贡献比较少，男子在经济上的权力不大，所以服务婚之制，亦发生于此时。赘婿即其遗迹。《战国·秦策》说：太公望是齐之逐夫，当即赘婿。古代此等婚姻，在东方，怕很为普遍的。《汉书·地理志》说：齐襄公淫乱，姑姊妹不嫁。“于是下令国中：民家长女不得嫁，名曰巫儿，为家主祠，嫁者不利其家。民至今以为俗。”把此等风俗的原因，归诸人君的一道命令，其不足信，显而易见。其实齐襄公的姑姊妹不嫁，怕反系受这种风俗的影响罢？《公羊》桓公二年，有楚王妻媦之语（何《注》：媦，妹也）。可见在东南的民族，内婚制维持较久。《礼记·大传》说：“四世而缌，服之穷也。五世袒免，杀同姓也。六世亲属竭矣，其庶姓别于上（庶姓见下章），而戚单于下（单同殚），婚姻可以通乎？系之以姓而弗别，缀之以族而弗殊，虽百世而婚姻不通者，周道然也。”然则男系同族，永不通婚，只是周道。自殷以上，六世之后，婚姻就可以通的。殷也是东方之国。《汉书·地理志》又说燕国的风俗道：“初太子丹宾养勇士，不爱后宫美女，民化以为俗，至今犹然。宾客相过，以妇侍宿。嫁娶之夕，男女无别，反以为荣。后稍颇止，然终未改。”不知燕丹的举动，系受风俗的影响，反以为风俗源于燕丹，亦与其论齐襄公同病。而燕国对于性的共有制，维持较久，则于此可见。燕亦是滨海之地。然则自东南亘于东北，土性肥沃，水利丰饶，农渔二业兴盛之地，内婚制及母系氏族，都是维持较久的。父系氏族，当起于猎牧之民。此可见一切社会制度，皆以经济状况为其根本原因。&lt;/p>
&lt;p>人类对于父母亲族，总只能注意其一方，这是无可如何的。所以在母系氏族内，父方的亲族，并不禁止结婚；在父系氏族内，母方的亲族亦然；且有两个氏族，世为婚姻的。中国古代，似亦如此。所以夫之父与母之兄弟同称（舅）。夫之母与父之姊妹同称（姑）。可见母之兄弟，所娶者即父之姊妹（并非亲姊妹，不过同氏族的姊妹行而已）。而我之所嫁，亦即父之氏族中之男子，正和我之母与我之父结婚同。古代氏族，又有在氏族之中，再分支派的。如甲乙两部族，各分为一二两组。甲一之女，必与乙二之男结婚，生子则属于甲二。甲二之女，必与乙一之男结婚，生子则属于甲一。乙组的女子亦然（此系最简单之例，实际还可以更繁复）。如此，则祖孙为同族人，父子则否。中国古代，似亦如此。所以祭祀之礼：“孙可以为王父尸，子不可以为父尸。”（《礼记·曲礼》）。殇与无后者，必从祖祔食，而不从父祔食（《礼记·曾子问》）。&lt;/p>
&lt;p>近亲结婚，在法律上本有禁令的，并不限于父系。如《清津》：“娶己之姑舅两姨姊妹者，杖八十，并离异。”即是。然因此等风俗，根深柢固，法律就成为具文了。&lt;/p>
&lt;p>古代所谓同姓，是自认为出于同一始祖的（在父系氏族，则为男子。在母系氏族，则为女子），虽未必确实，他们固自以为如此。同姓与否，和血缘的远近，可谓实无关系。然他们认为同姓则同德，不可结婚，异姓则异德，可以结婚，理由虽不确实，办法尚觉一致。至后世所谓同姓，则并非同出于一源；而同出于一源的，却又不必同姓。如王莽，以姚、妫、陈、田皆黄、虞后，与己同姓，令元城王氏，勿得与四姓相嫁娶（《汉书·莽传》），而王、孙咸，以得姓不同，其女转嫁为莽妻（《汉书·传》），此等关系，后世都置诸不论了。所谓同姓异姓，只是以父系的姓，字面上的同异为据，在理论上，可谓并无理由，实属进退失据。此因同姓不婚之制，已无灵魂，仅剩躯壳之故。总而言之，现在的所谓姓氏，从各方面而论，都已毫无用处，不过是社会组织上的老废物罢了。参看下章自明。&lt;/p>
&lt;p>婚礼中的聘礼，即系卖买婚的遗迹，古礼称为“纳征”。《礼记·内则》说：“聘则为妻，奔则为妾”；《曲礼》说：“买妾不知其姓则卜之”；则买妾是真给身价的，聘妻虽具礼物，不过仅存形式，其意已不在于利益了。&lt;/p>
&lt;p>古代婚礼，传于后世的，为《仪礼》中的《士昏礼》。其节目有六：即（一）纳采（男氏遣使到女氏去求婚），（二）问名（女氏许婚之后，再请问许婚的是哪一位姑娘？因为纳采时只申明向女氏的氏族求婚，并未指明哪一个人之故），（三）纳吉（女氏说明许婚的系哪一位姑娘之后，男氏归卜之于庙。卜而得吉，再使告女氏），（四）纳征（亦谓之纳币。所纳者系玄束帛及俪皮），（五）请期（定吉日。吉日系男氏所定，三请于女氏，女氏不肯定，然后告之），（六）亲迎（新郎亲到女氏。执雁而入，揖让升堂，再拜奠雁。女父带着新娘出来，交结他。新郎带着新娘出门。新娘升车，新郎亲为之御。车轮三转之后，新郎下车，由御者代御。新郎先归，在门首等待。新娘车至，新郎揖之而入。如不亲迎的，则新郎三月后往见舅姑。亲迎之礼，儒家赞成，墨家是反对的，见《礼记·哀公问》、《墨子·非儒篇》），是为六礼。亲迎之夕，共牢而食，合卺而酳（古人的宴会，猪牛羊等，都是每人一份的。夫妻则两个人合一份，是谓同牢。把一个瓢破而为两，各用其半，以为酒器，是为合卺。这表示“合体，同尊卑”的意思）。其明天，“赞妇见于舅姑”。又明天，“舅姑共飨妇”。礼成之后，“舅姑先降自西阶（宾阶），妇降自阼阶。”（东阶，主人所行。古人说地道尊右，故让客人走西阶。）表明把家事传给他，自己变做客人的意思。此礼是限于适妇的，谓之“著代”，亦谓之“授室”。若舅姑不在，则三月而后庙见。《礼记·曾子问》说：“女未庙见而死，归葬于女氏之党，示未成妇。”诸侯嫁女，亦有致女之礼，于三月之后，遣大夫操礼而往，见《公羊》成公九年。何《注》说：“必三月者，取一时，足以别贞信。”然则古代的婚礼，是要在结婚三个月之后，才算真正成立的。若在三月之内分离，照礼意，还只算婚姻未完全成立，算不得离婚。这也可见得婚姻制度初期的疏松。&lt;/p>
&lt;p>礼经所说的婚礼，是家族制度全盛时的风俗，所以其立意，全是为家族打算的。《礼记·内则》说：“子甚宜其妻，父母不说，出。子不宜其妻，父母曰：是善事我，子行夫妇之礼焉，没身不衰。”可见家长权力之大。《昏义》说：“成妇礼，明妇顺，又申之以著代，所以重责妇顺焉也。妇顺也者，顺于舅姑，和于室人，而后当于夫，以成丝麻布帛之事，以审守委积盖藏。是故妇顺备而后内和理，内和理而后家可长久也，故圣王重之。”尤可见娶妇全为家族打算的情形。《曾子问》说：“嫁女之家，三夜不息烛，思相离也”，这是我们容易了解的。又说：“取妇之家，三日不举乐，思嗣亲也。”此意我们就不易了解了。原来现代的人，把结婚看作个人的事情，认为是结婚者的幸福，所以多有欢乐的意思。古人则把结婚看做为家族而举行的事情。儿子到长大能娶妻，父母就近于凋谢了，所以反有感伤的意思。《曲礼》说：“昏礼不贺，人之序也”，也是这个道理。此亦可见当时家族主义的昌盛，个人价值，全被埋没的一斑。&lt;/p>
&lt;p>当这时代，女子遂成为家族的奴隶，奴隶是需要忠实的，所以贞操就渐渐的被看重。“贞妇”二字，昉见于《礼记·丧服四制》。春秋时，鲁君的女儿，有一个嫁给宋国的，称为宋伯姬。一天晚上，宋国失火，伯姬说：“妇人夜出，必待傅姆。”（傅姆是老年的男女侍从。必待傅姆，是不独身夜行，以避嫌疑的意思）傅姆不至，不肯下堂，遂被火烧而死。《春秋》特书之，以示奖励（《公羊》襄公三十年）。此外儒家奖励贞节之说，还有许多，看刘向的《列女传》可知。刘向是治鲁诗的，《列女传》中，有许多是儒家相传的诗说。秦始皇会稽刻石说：“饰省宣义，有子而嫁，倍死不贞。防隔内外，禁止淫佚，男女洁诚。夫为寄豭，杀之无罪，男秉义程。妻为逃嫁，子不得母，咸化廉清。”按《管子·八观篇》说：“闾干无阖，外内交通，则男女无别矣。”又说：“食谷水，巷凿井；场圃接，树木茂；宫墙毁坏，门户不闭，外内交通；则男女之别，无自正矣。”（《汉书·地理志》说：郑国土陋而险，山居谷汲，男女亟聚会，故其俗淫）。这即是秦始皇所谓防隔内外。乃是把士大夫之家，“深宫固门，阍寺守之，男不入，女不出”的制度（见《礼记·内则》），推广到民间去。再嫁未必能有什么禁令，不过宣布其是倍死不贞，以示耻辱，正和奖励贞节，用意相同。寄豭是因奸通而寄居于女子之家的，杀之无罪；妻为逃嫁，则子不得母，其制裁却可谓严厉极了。压迫阶级所组织的国家，其政令，自然总是为压迫阶级张目的。&lt;/p>
&lt;p>虽然如此，罗马非一日之罗马，古代疏松的婚姻制度，到底非短期间所能使其十分严紧的。所以表显于古书上的婚姻，要比后世自由得多。《左传》昭公元年，载郑国徐吾犯之妹美，子南业经聘定了她，子皙又要强行纳聘。子皙是个强宗，国法奈何不得他。徐吾犯乃请使女自择，以资决定。这虽别有用意，然亦可见古代的婚嫁，男女本可自择。不过“男不亲求，女不亲许”（见《公羊》僖公十四年），必须要有个媒妁居间；又必须要“为酒食以召乡党僚友”（《礼记·典礼》），以资证明罢了。婚约的解除，也颇容易。前述三月成妇之制，在结婚三个月之后，两造的意见，觉得不合，仍可随意解除，这在今日，无论哪一国，实都无此自由。至于尚未同居，则自然更为容易。《礼记·曾子问》说：“昏礼：既纳币，有吉日，女之父母死，则如之何？孔子曰：婿使人吊。如婿之父母死，则女之家亦使人吊。婿已葬，婿之伯父，致命女氏曰：某之子有父母之丧，不得嗣为兄弟，使某致命。女氏许诺，而弗敢嫁，礼也。婿免丧，女之父母使人请，婿弗取而后嫁之，礼也。女之父母死，婿亦如之。”一方等待三年，一方反可随意解约，实属不近情理。迂儒因生种种曲说。其实这只是《礼记》文字的疏忽。孔子此等说法，自为一方遭丧而一方无意解约者言之。若其意欲解约，自然毫无限制。此乃当然之理，在当日恐亦为常行之事，其事无待论列，故孔子不之及。记者贸然下了“而弗敢嫁，礼也”六字，一似非等待不可的，就引起后人的误会了。离婚的条件，有所谓七出，亦谓之七弃（一、无子，二、淫佚，三、不事舅姑，四、口舌，五、盗窃，六、嫉妒，七、恶疾）。又有所谓三不去（一、尝更三年丧不去，二、贱取贵不去，三、有所受无所归不去）。与五不娶并列（一、丧妇长女，二、世有恶疾，三、世有刑人，四、乱家女，五、逆家女），见于《大戴礼记·本命篇》，和《公羊》庄公二十七年何《注》，皆从男子方面立说。此乃儒家斟酌习俗，认为义所当然，未必与当时的法律习惯密合。女子求去，自然也有种种条件，为法律习惯所认许的，不过无传于后罢了。观汉世妇人求去者尚甚多（如朱买臣之妻等），则知古人之于离婚，初不重视。夫死再嫁，则尤为恒事。这是到宋以后，理学盛行，士大夫之家，更看重名节，上流社会的女子，才少有再嫁的，前代并不如此。《礼记·郊特牲》说：“一与之齐，终身不改，故夫死不嫁。”这是现在讲究旧礼教的迂儒所乐道的。然一与之齐，终身不改，乃是说不得以妻为妾，并非说夫死不嫁。《白虎通义·嫁娶篇》引《郊特牲》，并无“故夫死不嫁”五字，郑《注》亦不及此义，可见此五字为后人所增。郑《注》又说：“齐或为醮”，这字也是后人所改的。不过郑氏所据之本，尚作齐字，即其所见改为醮字之本，亦尚未窜入“故夫死不嫁”五字罢了。此可见古书逐渐窜改之迹。&lt;/p>
&lt;p>后世男子的权利，愈行伸张，则其压迫女子愈甚。此可于其重视为女时的贞操，及其贱视再醮妇见之。女子的守贞，实为对于其夫之一种义务。以契约论，固然只在婚姻成立后，持续时为有效，以事实论，亦只须如此。所以野蛮社会的风俗，无不是如此的，而所谓文明社会，却有超过这限度的要求。此无他，不过压迫阶级的要求，更进一步而已。女子的离婚，在后世本较古代为难，因为古代的财产，带家族共有的意思多，一家中人，当然都有享受之份。所以除所谓有所受无所归者外，离婚的女子，都不怕穷无所归。后世的财产，渐益视为个人所有，对于已嫁大归之女，大都不愿加以扶养；而世俗又贱视再醮之妇，肯娶者少，弃妇的境遇，就更觉凄惨可怜了。法律上对于女子，亦未尝加以保护。如《清律》：“凡妻无应出及义绝之状而出之者，杖八十。虽犯七出，有三不去而出之者，减二等，追还完聚。”似乎是为无所归的女子特设的保护条文。然追还完聚之后，当如何设法保障，使其不为夫及夫之家族中人所虐待，则绝无办法。又说：“若夫妻不相和谐而两愿离者不坐。”不相和谐，即可离异，似极自由。然夫之虐待其妻者，大都榨取其妻之劳力以自利，安能得其愿离？离婚而必以两愿为条件，直使被虐待者永无脱离苦海之日。而背夫私逃之罪，则系“杖一百，从夫嫁卖”。被虐待的女子，又何以自全呢？彻底言之：现在所谓夫妇制度，本无维持之价值。然进化非一蹴所可几，即制度非旦夕所能改。以现在的立法论，在原则上当定：一、离婚之诉，自妻提出者无不许。二、其生有子女者，抚养归其母，费用则由其父负担。三、夫之财产中，其一部分，应视为其妻所应得，离婚后当给与其妻。四、夫妻异财者勿论。其同财者，嫁资应视为妻之私财，离婚时给还其妻；其业经销用者应赔偿。这固不是根本解决的办法，然在今日，立法上亦只得如此了。而在今日，立法上亦正该如此。&lt;/p>
&lt;p>古书中所载的礼，大抵是父系家庭时代的习惯风俗。后世社会组织，迄未改变，所以奉其说为天经地义。而因此等说法，被视为天经地义之故，亦有助于此制度之维持。天下事原总是互为因果的。但古书中的事实，足以表示家族主义形成前的制度的亦不少，此亦不可不注意。《礼记·礼运》：“合男女，颁爵位，必当年德。”《管子·幼官篇》，亦有“合男女”之文。合男女，即《周官》媒氏及《管子·入国篇》的合独之政。《周官》媒氏：“凡男女自成名以上，皆书年月日名焉。令男三十而娶，女二十而嫁。中春之月，令会男女。于是时也，奔者不禁（谓不备聘娶之礼，说见下）。司男女之无夫家者而会之。”合独为九惠之政之一。其文云：“取鳏寡而和合之，与田宅而家室之，三年然后事之。”此实男女妃合，不由家族主持，而由部族主持之遗迹。其初盖普遍如此。到家族发达之后，部族于通常之结婚，才置诸不管，而只干涉其违法者，而救济其不能婚嫁者了。当男女婚配由部族主持之世，结婚的年龄，和每年中结婚的季节，都是有一定的。婚年：儒家的主张，是男三十而娶，女二十而嫁。《礼记·曲礼》、《内则》等篇，都是如此。《大戴礼记·本命篇》说，这是中古之礼。太古五十而室，三十而嫁。《墨子》（《节用》）、《韩非子》（《外储说右下》），则说男二十而娶，女十五而嫁。结婚的年龄，当然不能斠若画一。王肃说：男十六而精通，女十四而能化，自此以往，便可结婚；所谓三十、二十等，乃系为之极限，使不可过。又所谓男三十，女二十，不过大致如此，并非必以三十之男，配二十之女，其说自通（见《诗·摽有梅疏》）。《大戴礼》说：三十而室，二十而嫁，天子庶人同礼。《左传》说：天子十五而生子；三十而室，乃庶人之礼（《五经异义》）。贵族生计，较庶人为宽裕，结婚年龄，可以提早，说亦可通。至《墨子》、《韩非子》之说，则系求蕃育人民之意，古代此等政令甚多，亦不足怪。所可怪者，人类生理，今古相同，婚配的要求，少壮之时，最为急切，太古时何以能迟至五十、三十？按罗维（Robert H.Lowie）所著的《初民社会》（吕叔湘译，商务印书馆本），说巴西的波洛洛人（Bororo），男女性交和结婚，并非一事。当其少年时，男女之间，早已发生性的关系，然常是过着浪漫的生活，并不专于一人。倒是年事较长，性欲较淡，彼此皆欲安居时，才择定配偶，相与同居。按人类的性质，本是多婚的。男女同居，乃为两性间的分工互助，实与性欲无甚关系。巴洛洛人的制度，实在是较为合理的。社会制度，往往早期的较后期的为合理（这是因已往的文化，多有病态，时期愈晚，病态愈深之故）。中国太古之世，婚年较晚的理由，也可以借鉴而明了。人类性欲的开始，实在二七、二八之年。自此以往，更阅数年，遂臻极盛（此系中国古说，见《素问·上古天真论》。《大戴礼记》、《韩诗外传》、《孔子家语》等说皆同），根于生理的欲念，宜宣泄不宜抑压。抑压之，往往为精神病的根源。然后世将经济上的自立，责之于既结婚的夫妇，则非十余龄的男女所及；又教养子女之责，专由父母任之，亦非十余龄的男女所能，遂不得不将结婚的年龄展缓。在近代，并有因生计艰难，而抱独身主义的。性欲受抑压而横溢，个人及社会两方面，均易招致不幸的结果。这亦是社会制度与人性不能调和的一端。倘使将经济及儿童教养的问题，和两性问题分开，就不至有此患了。所以目前的办法在以节育及儿童公育，以救济迟婚及独身问题。结婚的季节，《春秋繁露》说：“霜降逆女，冰泮杀止。”（《循天之道篇》）《荀子》同（《大略篇》）。王肃说：自九月至正月（见《诗·绸缪疏》）。其说良是。古人冬则居邑，春则居野（参看第四十二、第五十章）。结婚的月份，实在是和其聚居的时期相应的。仲春则婚时已过，至此而犹不克婚，则其贫不能备礼可知，所以奔者不禁了。&lt;/p>
&lt;p>多妻之源，起于男子的淫侈。生物界的事实，两性的数目，常大略相等。婚姻而无禁例，或虽有禁例而不严密则已，若既限定对于法定的配偶以外，不许发生性的关系，而又有若干人欲多占异性为己有，则有多占的人，即有无偶的人。所以古今中外，有夫妇之制的社会，必皆以一夫一妻为原则。但亦总有若干例外。古代贵族，妻以外发生性的关系的人有两种：一种是妻家带来的，谓之媵。一种是自己家里所固有的，谓之妾（后世媵之实消灭，故其名称亦消灭，但以妾为配偶以外发生性的关系之人之总称）。媵之义为送，即妻家送女的人（并限于女子，如伊尹为有莘氏媵臣是），与婿家跟着新郎去迎接新娘的御相同。媵御的原始，实犹今日结婚时之男女傧相，本无可发生性的关系的理由。后来有特权的男子，不止娶于一家，正妻以外的旁妻，无以名之，亦名之曰媵，媵遂有正妻以外之配偶之义。古代的婚姻，最致谨于辈行，而此规则，亦为有特权者所破坏。娶一妻者，不但兼及其娣，而且兼及其姪，于是有诸侯一娶九女之制。取一国则二国往媵，各以侄娣从。一娶九女之制，据《白虎通义·嫁娶篇》说，天子与诸侯同。亦有以为天子娶十二女的，如《春秋繁露·爵国篇》是。此恐系以天子与诸侯同礼为不安而改之。其实在古代，天子诸侯，在实际上，未必有多大的区别。《礼记·昏义》末节说：天子有一后，三夫人，九嫔，二十七世妇，八十一御妻。按《昏义》为《仪礼·士昏礼》之传，传文皆以释经，独《昏义》此节，与经无涉，文亦不类传体，其说在他处又无所见，而适与王莽立后，备和、嫔、美、御，和人三，嫔人九，美人二十七，御人八十一之制相合（见《汉书·莽传》），其为后人窜入，自无可疑。《冠义》说：“无大夫冠礼而有其昏礼？古者五十而后爵，何大夫冠礼之有？”五十而后娶，其为再娶可知。诸侯以一娶九女之故，不得再娶（《公羊》庄公十九年）。大夫若亦有媵，安得再娶？管氏有三归，孔子讥其不俭（《论语·八佾》：包咸云：三归，娶三姓女），即系讥其僭人君之礼。所以除人君以外，是决无媵的。至于妾，则为家中的女子，得与家主相接之义。家族主义发达的时代，门以内的事情，国法本不甚干涉。家主在家庭中的地位，亦无人可以制裁他。家中苟有女奴，家主要破坏她的贞操，自无从加以制裁。所以有妾与否，是个事实问题，在法律上，或者并无制限。然古代依身份而立别的习惯，是非常之多的，或有制限，亦未可知。后世等级渐平，依身份而立区别的习惯，大半消除，娶妾遂成为男子普遍的权利了。虽然如此，法律上仍有依身份之贵贱，而定妾之有无多寡的。如《唐书·百官志》：亲王有孺人二人，媵十人；二品媵八人；国公及三品媵六人；四品媵四人；五品媵三人。《明律》：民年四十以上无子者，方听娶妾，违者笞四十。但此等法律，多成具文，而在事实上，则多妻之权利，为富者所享受。适庶之别，古代颇严。因为古代等级，本来严峻，妻和妾一出于贵族，一出于贱族，其在社会上的身份，本相悬殊之故。后世等级既平，妻妾之身份，本来的相差，不如前代之甚，所以事实上贵贱之相差亦较微。仅在法律上、风俗上，因要维持家庭间的秩序，不得不略存区别而已。&lt;/p>
&lt;p>《颜氏家训》说：“江左不讳庶孽，丧室之后，多以妾媵终家事。河北鄙于侧室，不预人流，是以必须重娶，至于三四。”这是江左犹沿古代有媵不再娶的旧风，河北就荡然了。但以妾媵终家事，必本有妾媵而后能然。如其无之，自不能不再娶。再娶自不能视之为妾。《唐书·儒学传》说：“郑余庆庙有二妣，疑于袝祭，请于有司。博士韦公肃议曰：古诸侯一娶九女，故庙无二适。自秦以来有再娶，前娶后继皆适也，两袝无嫌。”自秦以来有再娶，即因封建破坏，无复一娶九女及三归等制度之故。韦公肃之议，为前娶后继，皆为适室礼文上的明据。但从礼意上说，同时不能有二嫡的，所以世俗所谓兼祧双娶，为法律所不许（大理院解释，以后娶者为妾）。&lt;/p>
&lt;p>人类的性质，本来是多婚的（男女皆然），虽由社会的势力，加以压迫，终不能改变其本性。所以压迫之力一弛，本性随即呈露。在现社会制度之下，最普遍而易见的，是为通奸与卖淫。通奸，因其为秘密之事，无从统计其多少。然就现社会和历史记载上观察，实可信其极为普遍。卖淫亦然。社会学家说：“凡是法律和习惯限制男女性交之处，即有卖淫之事，随之出现。”史家推原卖淫之始，多以为起于宗教卖淫。王书奴著《中国倡伎会》（生活书店本），亦力主此说。然原始宗教界中淫乱的现象，实未可称为卖淫。因为男女的交际，其初本极自由。后来强横的男子，虽把一部分女子占为己有，然只限于平时。至于众人集会之时，则仍须回复其故态。所以各个民族，往往大集会之时，即为男女混杂之际。如郑国之俗，三月上巳之日，于溱、洧两水之上，招魂续魄，拂除不祥，士女往观而相谑（《韩诗》说，据陈乔枞《三家诗遗说考》）。《史记·滑稽列传》载淳于髡说：“州闾之会，男女杂坐。行酒稽留，六博投壶，相引为曹。握手无罚，目眙不禁。前有堕珥，后有遗簪。”“日暮酒阑，合尊促坐。男女同席，履舄交错，杯盘狼籍。堂上烛灭，主人留髡而送客。罗襦襟解，微闻芗泽。”又如前文所引的燕国“嫁娶之夕，男女无别”都是。宗教上的寺院等，也是大众集会之地；而且是圣地；其地的习惯，是不易破坏的。《汉书·礼乐志》说：汉武帝立乐府，“采诗夜诵”。颜师古《注》说：“其言辞或秘，不可宣露，故于夜中歌诵。”按《后汉书·高句骊传》说：其俗淫。暮夜辄男女群聚为倡乐。高句骊是好祠鬼神的，而乐府之立，亦和祭礼有关。然则采诗夜诵，怕不仅因其言辞或秘罢？男女混杂之事，后世所谓邪教中，亦恒有之，正和邪有何标准？不过古代之俗，渐与后世不合，则被目为邪而已。然则宗教中初期的淫乱，实不可谓之卖淫。不过限制男女交际的自由，往往与私有财产制度，伴随而起。既有私有财产，自有所谓卖买；既有所谓卖买，淫亦自可为卖买的标的。在此情形之下，本非卖买之事，变为卖买的多了，亦不仅淫之一端。&lt;/p>
&lt;p>卖淫的根源，旧说以为起于齐之女闾。其事见于《战国策》的《东周策》。《东周策》载一个辩士的话道：“国必有诽誉。忠臣令诽在己，誉在上。齐桓公宫中七市，女闾七百，国人非之，管仲故为三归之家，以掩桓公非，自伤于民也。”则市与女闾，确为淫乐之地。《商君书·垦令篇》说：“令军市无有女子”；又说：“轻惰之民，不游军市，则农民不淫”，亦市为淫乐之地之一证。女闾则他处无文。按《太平御览》引《吴越春秋》说：“勾践输有过寡妇于山上，使士之忧思者游之，以娱其意”（今本无），亦即女闾之类。女闾，盖后世所谓女户者所聚居。女户以女为户主，可见其家中是没有壮男的。《周官》内宰：“凡建国，佐后立市”；《左传》昭公二十年，晏婴说：“内宠之妾，肆夺于市”，则古代的市，本由女子管理。所以到后来，聚居市中的女子还很多。市和女闾，都不过因其为女子聚居之所，遂成为纵淫之地罢了。其初，也未必是卖淫的。&lt;/p>
&lt;p>卖淫的又一来源，是为女乐。女乐是贵族家里的婢妾，擅长歌舞等事的，令其“执技以事上”。婢妾的贞操，本来是没有保障的，自不因其为音乐队员而有异。封建制度破坏，贵族的特权，为平民所僭者甚多，自将流布于民间。《史记·货殖列传》说：赵国的女子，“鼓鸣瑟，跕屣（现在的拖鞋，在古时为舞屣），游媚贵富，入后宫，遍诸侯。”“郑、卫俗与赵相类。”又说：“今夫赵女郑姬，设形容，揳鸣琴，揄长袂，蹑利屣，目挑心招，出不远千里，不择老少者，奔富厚也。”即其事。倡伎本来是对有技艺的人的称谓，并非专指女子。所以女子有此等技艺的，还特称为女伎。然其实是性的诱惑的成分多，欣赏其技艺的成分少。于是倡伎转变为女子卖淫者的称谓，其字也改从女旁了（即娼妓。男子之有技艺者，不复称倡伎）。为倡伎之女子，本系婢妾之流，故自古即可卖买。《战国·韩策》说：“韩卖美人，秦买之三千金”其证。后世当娼妓的，也都是经济上落伍的人，自然始终是可以买卖的了。资本的势力愈盛，遂并有买得女子，使操淫业以谋利的。古代的女伎，系婢妾所为，后世政治上还沿袭其遗制，是为乐户。系以罪人家属没入者为之。唐时，其籍属于太常。其额设的乐员，属于教坊司。此系国家的女乐队员，但因其本为贱族，贞操亦无保障，官员等皆可使之执技荐寝以自娱，是为官妓。军营中有时亦有随营的女子，则谓之营妓。民间女子卖淫的，谓之私娼。在本地的称土娼，在异乡的称流娼。清世祖顺治十六年，停止教坊女乐，改用内监。世宗雍正七年，改教坊司为和声署。是时各地方的乐户，亦皆除籍为民。于是在法律上除去一种贱族，亦无所谓官妓。但私娼在当时则是无从禁止的。律例虽有“举贡生员，宿娼者斥革”的条文，亦不过为管束举、贡、生员起见而已，并非禁娼。&lt;/p>
&lt;p>古代掠夺婚姻的习惯，仍有存于后世的。赵翼《陔余丛考》说：“村俗有以婚姻议财不谐，而纠众劫女成婚者，谓之抢亲。《北史·高昂传》：昂兄乾，求博陵崔圣念女为婚，崔不许。昂与兄往劫之。置女村外，谓兄曰：何不行礼？于是野合而归。是劫婚之事，古亦有之。然今俗劫婚，皆已经许字者，昂所劫则未字，固不同也。”按《清律》：“凡豪势之人，强夺良家妻女，奸占为妻妾者绞。配与子孙、弟侄、家人者，罪亦如之。”此指无婚姻契约而强抢的。又说：“应为婚者，虽已纳聘财，期未至，而男家强娶者，笞五十。”（指主婚人）“女家悔盟，男家不告官司强抢者，照强娶律减二等。”此即赵氏所谓已经许字之女，照法律亦有罪，但为习俗所囿，法律多不能实行。又有男女两家，因不能负担结婚时的费用，私相协议，令男家以强抢的形式出之的。则其表面为武力的，内容实为经济的了。抢孀等事，亦自古即有。《潜夫论·断讼篇》云：“贞洁寡妇，遭直不仁世叔、无义兄弟，或利其聘币，或贪其财贿，或私其儿子，则迫胁遣送，有自缢房中，饮药车上，绝命丧躯，孤捐童孩者。”又有“后夫多设人客，威力胁载者”。这其中，亦含有武力的经济的两种成分。&lt;/p>
&lt;p>卖买婚姻，则无其名而有其实。《断讼篇》又说：“诸女一许数家，虽生十子，更百赦，勿令得蒙一，还私家，则此奸绝矣。不则髡其夫妻，徙千里外剧县，乃可以毒其心而绝其后。”《抱朴子·弭讼篇》，述其姑子刘士由之论说：“末世举不修义，许而弗与。讼阋秽缛，烦塞官曹。今可使诸争婚者，未及同牢，皆听义绝，而倍还酒礼，归其币帛。其尝已再离，一倍裨聘（裨即现在赔偿的赔字）。其三绝者，再倍裨聘。如此，离者不生讼心，贪者无利重受。”葛洪又申说自己的意见道：“责裨聘倍，贫者所惮，丰于财者，则适其愿矣。后所许者，或能富殖，助其裨聘，必所甘心。然则先家拱默，不得有言，原情论之，能无怨叹乎？”葛洪之意，要令“女氏受聘，礼无丰约（谓不论聘财多少），皆以即日报版。又使时人署姓名于别版，必十人以上，以备远行及死亡。又令女之父兄若伯叔，答婿家书，必手书一纸。若有变悔而证据明者，女氏父母兄弟，皆加刑罚罪”。可见汉晋之世卖买婚姻之盛。后世契约效力较强，此等事无人敢做，但嫁女计较聘礼，娶妻觊觎妆奁，其内容还是一样的，此非经济制度改变，无法可以改良了。&lt;/p>
&lt;p>后世的婚姻，多全由父母做主，本人概不与闻，甚至有指腹为婚等恶习（见《南史·韦放传》。按《清律》，指腹为婚有禁），这诚然是很坏的。然论者遂以夫妇之道苦，概归咎于婚姻的不自由，则亦未必其然。人之性，本是多婚的，男女皆然，所以爱情很难持之永久。即使结婚之时，纯出两情爱慕，绝无别种作用，搀杂其间，尚难保其永久，何况现在的婚姻，有别种作用搀杂的，且居多数呢？欲救夫妇道苦之弊，与其审慎于结婚之时，不如宽大于离婚之际，因为爱情本有变动，结婚时无论如何审慎，也控制不住后来的变化的。习俗所以重视离婚，法律也尽力禁阻，不过是要维持家庭。然家庭制度，实不是怎么值得维持的东西，参看下章可明。&lt;/p>
&lt;p>统观两性关系，自氏族时代以后，即已渐失其正常。其理由：因女子在产育上，所负的责任，较男子为多。因而其斗争的力量，较男子为弱。不论在人类凭恃武力相斗争，或凭恃财力相斗争的时代，女子均渐沦于被保护的地位，失其独立，而附属于男子。社会的组织，宜于宽平坦荡，个个人与总体直接。若多设等级，使这一部分人，隶属于那一部分人，那不公平的制度就要逐渐发生，积久而其弊愈深了。近代女权的渐渐伸张，实因工业革命以来，女子渐加入社会的机构，非如昔日蛰居家庭之中，专做辅助男子的事情之故。女子在产育上多尽了责任，男子就该在别一方面多尽些义务，这是公道。乘此机会压迫女子，多占权利，是很不正当的。而欲实行公道，则必自铲除等级始。所以有人说：社群制度是女子之友，家庭制度是女子之敌。然则“女子回到家庭去”这口号，当然只有开倒车的人，才会去高呼了。人家都说现在的女学生坏了，不如从前旧式的女子，因其对于家政生疏了，且不耐烦。殊不知这正是现代女子进步之征兆。因为对于家政生疏，对于参与社会的工作，却熟练了。这正是小的、自私的、自利的组织，将逐渐破坏；大的、公平的、博爱的制度，将逐渐形成的征兆。贤母良妻，只是贤奴良隶。此等教育，亦只好落伍的国家去提倡。我们该教一切男女以天下为公的志愿，广大无边的组织。&lt;/p>
&lt;h1 id="第三十八章族制">
 第三十八章　族制
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%89%e5%8d%81%e5%85%ab%e7%ab%a0%e6%97%8f%e5%88%b6">#&lt;/a>
&lt;/h1>
&lt;p>人是非团结不能生存的。当用何法团结呢？过去的事情，已非我们所能尽知；将来的事情，又非我们所能预料。我们现在只能就我们所知道的，略加说述而已。&lt;/p>
&lt;p>在有史时期，血缘是人类团结的一个重要因素。人恒狃于其所见闻，遂以此为人类团结唯一的因素，在过去都是如此，在将来也非如此不可了。其实人类的团结，并非是专恃血缘的。极远之事且勿论，即上章所说的以年龄分阶层之世，亦大率是分为老、壮、幼三辈（间有分为四辈的，但以分做三辈为最普通。《礼记·礼运》说：“使老有所终，壮有所用，幼有所长”；《论语·雍也篇》说：“老者安之，朋友信之，少者怀之”，亦都是分为三辈），而不再问其人与人间的关系的。当此之时，哪有所谓夫妇、父子、兄弟之伦呢？《礼记·礼运》说：大同之世，“人不独亲其亲，不独子其子”，《左传》载富辰的话，也说“大上以德抚民，其次亲亲，以相及也”（僖公二十四年）。可见亲族关系，是后起的情形了。&lt;/p>
&lt;p>人类愈进步，则其分化愈甚，而其组织的方法亦愈多。于是有所谓血族团体。血族团体，其初必以女子为中心。因为夫妇之伦未立，父不可知；即使可知，而父子的关系，亦不如母子之密之故。如上章所述，人类实在是社群动物，而非家庭动物，所以其聚居，并不限于两代。母及同母之人以外，又有母的母，母的同母等。自己而下推，亦是如此。逐渐成为母系氏族。每一个母系氏族，都有一个名称，是即所谓姓。一姓总有一个始祖母的，如殷之简狄，周之姜嫄即是。简狄之子契，姜嫄之子稷，都是无父而生的。因为在传说中，此等始祖母，本来无夫之故。记载上又说她俩都是帝喾之妃，一定是后来附会的（契、稷皆无父而生，见《诗·玄鸟》、《生民》。《史记·殷周本纪》所载，即是《诗》说。据陈乔枞《三家诗遗说考》所考证，太史公是用鲁诗说的。姜嫄、简狄，皆帝喾之妃，见《大戴礼记·帝系篇》。《史记·五帝本纪》，亦用其说）。&lt;/p>
&lt;p>女系氏族的权力，亦有时在男子手中（参看下章），此即所谓舅权制。此等权力，大抵兄弟相传，而不父子相继。因为兄弟是同氏族人，父子则异氏族之故。我国商朝和春秋时的鲁国、吴国，都有兄弟相及的遗迹（鲁自庄公以前，都一代传子，一代传弟，见《史记·鲁世家》），这是由于东南一带，母系氏族消灭较晚之故，已见上章。&lt;/p>
&lt;p>由于生业的转变，财产和权力，都转入男子手中，婚姻非复男子入居女子的氏族，而为女子入居男子的氏族（见上章）。于是组织亦以男为主，而母系氏族，遂变为父系氏族。商周自契稷以后，即奉契、稷为始祖，便是这种转变的一件史实。&lt;/p>
&lt;p>族之组织，是根据于血缘的。血缘之制既兴，人类自将据亲等的远近，以别亲疏。一姓的人口渐繁，又行外婚之制，则同姓的人，血缘不必亲，异姓的人，血缘或转相接近。所谓族与姓，遂不得不分化为两种组织。族制，我们所知道的，是周代的九族：一、父姓五服以内。二、姑母和他的儿子。三、姊妹和他的儿子。四、女儿和他的儿子。是为父族四；五、母的父姓，即现在所谓外家。六、母的母姓，即母亲的外家。七、母的姊妹和她们的儿子。是为母族三；八、妻之父姓。九、妻之母姓。是为妻族二。这是汉代今文家之说，见于《五经异义》（《诗·葛藟疏》引），《白虎通·宗族篇》同。古文家说，以上自高祖，下至玄孙为九族，此乃秦汉时制，其事较晚，不如今文家所说之古了。然《白虎通义》又载或说，谓尧时父母妻之族各三，周贬妻族以附父族，则今文家所说，亦已非极古之制。《白虎通义》此段，文有脱误，尧时之九族，无从知其详。然观下文引《诗》“邢侯之姨”，则其中该有妻之姊妹。总而言之：族制是随时改变的，然总是血缘上相近的人，和后世称父之同姓为族人，混同姓与同族为一不同，则是周以前所同的。九族中人，都是有服的。其无服的，则谓之党（《礼记·奔丧》郑《注》），是为父党，母党，妻党。&lt;/p>
&lt;p>同姓的人，因人口众多，血缘渐见疏远，其团结，是否因此就松懈了呢？不。所谓九族者，除父姓外，血缘上虽然亲近，却不是同居的。同姓则虽疏远而仍同居，所以生活共同，利害亦共同。在同居之时，固有其紧密的组织；即到人口多了，不能不分居，而彼此之间，仍有一定的联结，此即所谓宗法。宗法和古代的社会组织，有极大的关系。今略述其制如下：&lt;/p>
&lt;p>（一）凡同宗的人，都同奉一个始祖（均系此始祖之后）。&lt;/p>
&lt;p>（二）始祖的嫡长子，为大宗宗子。自此以后，嫡长子代代承袭，为大宗宗子。凡始祖的后人，都要尊奉他，受他的治理。穷困的却亦可以受他的救济。大宗宗子和族人的关系，是不论亲疏远近，永远如此的，是谓大宗“百世不迁”。&lt;/p>
&lt;p>（三）始祖之众子（嫡长子以外之子），皆别为小宗宗子。其嫡长子为继祢小宗。继祢小宗的嫡长子为继祖小宗。继祖小宗的嫡长子为继曾祖小宗。继曾祖小宗的嫡长子为继高祖小宗。继祢小宗，亲兄弟宗事他（受他治理，亦受他救济）。继祖小宗，从兄弟宗事他。继曾祖小宗，再从兄弟宗事他。继高祖小宗，三从兄弟宗事他。至四从兄弟，则与继六世祖之小宗宗子，亲尽无服，不再宗事他。是为小宗“五世则迁”（以一人之身论，当宗事与我同高、曾、祖、考四代的小宗宗子及大宗宗子。故曰：“小宗四，与大宗凡五。”）&lt;/p>
&lt;p>（四）如此，则或有无宗可归的人。但大宗宗子，还是要管理他，救济他的。而同出于一始祖之人，设或殇与无后，大宗的宗子，亦都得祭祀他。所以有一大宗宗子，则活人的治理、救济，死人的祭祀问题，都解决了。所以小宗可绝，大宗不可绝。大宗宗子无后，族人都当绝后以后大宗。&lt;/p>
&lt;p>以上是周代宗法的大略，见于《礼记·大传》的。《大传》所说大宗的始祖，是国君的众子。因为古者诸侯不敢祖天子，大夫不敢祖诸侯（《礼记·郊特牲》谓不敢立其庙而祭之。其实大宗的始祖，非大宗宗子，亦不敢祭。所以诸侯和天子，大夫和诸侯，大宗宗子和小宗宗子，小宗宗子和非宗子，其关系是一样的），所以国君的众子，要别立一宗。郑《注》又推而广之，及于始适异国的大夫。据此，宗法之立，实缘同出一祖的人太多了，一个承袭始祖的地位的人，管理有所不及，乃不得不随其支派，立此节级的组织，以便管理。迁居异地的人，旧时的族长，事实上无从管理他。此等组织，自然更为必要了。观此，即知宗法与封建，大有关系。因为封建是要将本族的人，分一部分出去的。有宗法的组织，则封之者和所封者之间，就可保持着一种联结了。然则宗法确能把同姓中亲尽情疏的人，联结在一起。他在九族之中，虽只联结得父姓一族。然在父姓之中，所联结者，却远较九族之制为广。怕合九族的总数，还不足以敌他。而且都是同居的人，又有严密的组织。母系氏族中，不知是否有与此相类的制度。即使有之，其功用，怕亦不如父系氏族的显著。因为氏族从母系转变到父系，本是和斗争有关系的。父系氏族而有此广大严密的组织，自然更能发挥其斗争的力量。我们所知，宗法之制，以周代为最完备，周这个氏族，在斗争上，是得到胜利的。宗法的组织，或者也是其中的一个原因。&lt;/p>
&lt;p>有族制以团结血缘相近的人，又有宗法以团结同出一祖的人，人类因血族而来的团结，可谓臻于极盛了。然而当其极盛之时，即其将衰之候。这是什么原因呢？社会组织的变化，经济实为其中最重要的原因。当进化尚浅之时，人类的互助，几于有合作而无分工。其后虽有分工，亦不甚繁复。大家所做的事，既然大致相同，又何必把过多的人联结在一起？所以人类联结的广大，是随着分工的精密而进展的。分工既密之后，自能将毫不相干的人，联结在一起。此等互相倚赖的人，虽然彼此未必相知，然总必直接间接，互相接触。接触既繁，前此因不相了解而互相猜忌的感情，就因之消除了。所以商业的兴起，实能消除异部族间敌对的感情。分工使个性显著。有特殊才能的人，容易发挥其所长，获得致富的机会。氏族中有私财的人逐渐多，卖买婚即于此时成立。说见上章。于是父权家庭成立了。孟子说：当时农夫之家，是五口和八口。说者以为一夫上父母下妻子；农民有弟，则为余夫，要另行授田（《梁惠王》及《滕文公上篇》），可见其家庭，已和现在普通的家庭一样了。士大夫之家，《仪礼·丧服传》说大功同财，似乎比农民的家庭要大些。然又说当时兄弟之间的情形道：“有东宫，有西宫，有南宫，有北宫，异居而同财。有余则归之宗，不足则资之宗。”则业已各住一所屋子，各有各的财产，不过几房之中，还保有一笔公款而已。其联结，实在是很薄弱的，和农夫的家庭，也相去无几了。在当时，只有有广大封土的人，其家庭要大些。这因为（一）他的原始，是以一氏族征服异氏族，而食其租税以自养的，所以宜于聚族而居，常作战斗的戒备。只要看《礼记》的《文王世子》，就知道古代所谓公族者，是怎样一个组织了。后来时异势殊，这种组织，实已无存在的必要。然既已习为故常，就难于猝然改革。这是一切制度，都有这惰性的。（二）其收入既多，生活日趋淫侈，家庭中管事服役的奴仆，以及技术人员，非常众多，其家庭遂特别大。这只要看《周官》的《天官》，就可以知道其情形。然此等家庭，随着封建的消灭，而亦渐趋消灭了。虽不乏新兴阶级的富豪，其自奉养，亦与素封之家无异，但毕竟是少数。于是氏族崩溃，家庭代之而兴。家庭的组织，是经济上的一个单位，所以是尽相生相养之道的。相生相养之道，是老者需人奉养，幼者需人抚育。这些事，自氏族崩溃后，既已无人负责，而专为中间一辈所谓一夫一妇者的责任。自然家庭的组织，不能不以一夫上父母下妻子为范围了。几千年以来，社会的生活情形，未曾大变，所以此种组织，迄亦未曾改变。&lt;/p>
&lt;p>看以上所述，可见族制的变迁，实以生活为其背景；而生活的变迁，则以经济为其最重要的原因。因为经济是最广泛，和社会上个个人，都有关系；而且其关系，是永远持续，无时间断的。自然对于人的影响，异常深刻，各种上层组织，都不得不随其变迁而变迁；而精神现象，亦受其左右而不自知了。在氏族时代，分工未密，一个氏族，在经济上，就是一个自给自足的团体。生活既互相倚赖，感情自然容易密切。不但对于同时的人如此，即对于以往的人亦然。因为我所赖以生存的团体，是由前人留遗下来的。一切知识技术等，亦自前辈递传给后辈。这时候的人，其生活，实与时间上已经过去的人关系深，而与空间上并时存在的人关系浅。尊祖、崇古等观念，自会油然而生。此等观念，实在是生活情形所造成的。后人不知此理，以为这是伦理道德上的当然，而要据之以制定人的生活，那就和社会进化的趋势，背道而驰了。大家族、小家庭等字样，现在的人用来，意义颇为混淆。西洋人学术上的用语，称一夫一妇，包括未婚子女的为小家庭；超过于此的为大家庭。中国社会，（一）小家庭和（二）一夫上父母下妻子的家庭，同样普遍。（三）兄弟同居的，亦自不乏。（四）至于五世同居，九世同居，宗族百口等，则为罕有的现象了。赵翼《陔余丛考》，尝统计此等极大的家庭（第四种），见于正史孝义、孝友传的：《南史》三人，《北史》十二人，《唐书》三十八人，《五代史》二人，《宋史》五十人，《元史》五人，《明史》二十六人。自然有（一）不在孝义、孝友传，而散见于他篇的；（二）又有正史不载，而见于他书的；（三）或竟未见记载的。然以中国之大，历史上时间之长，此等极大的家庭，总之是极少数，则理有可信。此等虽或由于伦理道德的提倡（顾炎武《华阴王氏宗祠记》：“程朱诸子，卓然有见于遗经。金元之代，有志者多求其说于南方，以授学者。及乎有明之初，风俗淳厚，而爱亲敬长之道，达诸天下。其能以宗法训其家人，或累世同居，称为义门者，往往而有。”可见同居之盛，由于理学家的提倡者不少），恐仍以别有原因者居多（《日知录》：“杜氏《通典》言：北齐之代，瀛、冀诸刘，清河张、宋，并州王氏，濮阳侯族，诸如此辈，将近万室。《北史·薛胤传》：为河北太守，有韩马两姓，各二千余家。今日中原北方，虽号甲族，无有至千丁者。户口之寡，族姓之衰，与江南相去敻绝。”陈宏谋《与杨朴园书》：“今直省惟闽中、江西、湖南，皆聚族而居，族各有祠。”则聚居之风，古代北盛于南，近世南盛于北，似由北齐之世，丧乱频仍，民皆合族以自卫；而南方山岭崎岖之地进化较迟，土著者既与合族而居之时，相去未远；流移者亦须合族而居，互相保卫之故）。似可认为古代氏族的遗迹，或后世家族的变态。然氏族所以崩溃，正由家族潜滋暗长于其中。此等所谓义门，纵或有古代之遗，亦必衰颓已甚。况又有因环境的特别，而把分立的家庭，硬行联结起来的。形式是而精神非，其不能持久，自然无待于言了。《后汉书·樊宏传》，说他先代三世共财，有田三百余顷。自己的田地里，就有陂渠，可以互相灌注。又有池鱼，牧畜，有求必给。“营理产业，物无所弃（这是因其生产的种类较多之故）。课役童隶，各得其宜。”（分工之法）要造器物，则先种梓漆。简直是一个大规模的生产自给自足的团体。历代类乎氏族的大家族，多有此意。此岂不问环境所可强为？然社会的广大，到底非此等大家族所能与之相敌，所以愈到后世，愈到开化的地方，其数愈少。这是类乎氏族的大家族，所以崩溃的真原因，毕竟还在经济上。但在政治上，亦自有其原因。因为所谓氏族，不但尽相生相养之责，亦有治理其族众之权。在国家兴起以后，此项权力，实与国权相冲突。所以国家在伦理上，对于此等大家族，虽或加以褒扬，而在政治上，又不得不加以摧折。所谓强宗巨家，遂多因国家的干涉，而益趋于崩溃了。略大于小家庭的家庭（第二、第三种）表面上似为伦理道德的见解所维持（历代屡有禁民父母在别籍异财等诏令，可参看《日知录》卷十三《分居》条），实则亦为经济状况所限制。因为在经济上，合则力强，分则力弱，以昔时的生活程度论，一夫一妇，在生产和消费方面，实多不能自立的。儒者以此等家庭之多，夸奖某地方风俗之厚，或且自诩其教化之功，就大谬不然了。然经济上虽有此需要，而私产制度，业已深入人心，父子兄弟之间，亦不能无分彼此。于是一方面牵于旧见解，迫于经济情形，不能不合；另一方面，则受私有财产风气的影响，而要求分；暗斗明争，家庭遂成为苦海。试看旧时伦理道德上的教训，戒人好货财、私妻子。而薄父母兄弟之说之多，便知此项家庭制度之岌岌可危。制度果然自己站得住，何须如此扶持呢？所以到近代，除极迂腐的人外，亦都不主张维持大家庭。如李绂有《别籍异财议》，即其一证。至西洋文化输入，论者更其提倡小家庭，而排斥大家庭了。然小家庭又是值得提倡的么？&lt;/p>
&lt;p>不论何等组织，总得和实际的生活相应，才能持久。小家庭制度，是否和现代人的生活相应呢？历来有句俗话，叫做“养儿防老，积谷防饥”。可见所谓家庭，实以扶养老者、抚育儿童，为其天职。然在今日，此等责任，不但苦于知识之不足（如看护病人，抚养教育儿童，均须专门知识），实亦为其力量所不及（兼日力财力言之。如一主妇不易看顾多数儿童，兼操家政。又如医药、教育的费用，不易负担）。在古代，劳力重于资本，丁多即可致富，而在今日，则适成为穷困的原因。因为生产的机键，自家庭而移于社会了，多丁不能增加生产，反要增加消费（如纺织事业）。儿童的教育，年限加长了，不但不能如从前，稍长大即为家庭挣钱，反须支出教育费。而一切家务，合之则省力，分之则多费的（如烹调、浣濯）。又因家庭范围太小，而浪费物质及劳力。男子终岁劳动，所入尚不足以赡其家。女子忙得和奴隶一般，家事还不能措置得妥帖。于是独身、晚婚等现象，相继发生。这些都是舶来品，和中国旧俗，大相径庭，然不久，其思想即已普遍于中流社会了。凡事切于生活的，总是容易风行的，从今以后，穷乡僻壤的儿女，也未必死心塌地，甘做家庭的奴隶了。固然，个人是很难打破旧制度，自定办法的。而性欲出于天然，自能把许多可怜的儿女，牵入此陈旧组织之中。然亦不过使老者不得其养，幼者不遂其长，而仍以生子不举等人为淘汰之法为救济罢了。这种现象，固已持续数千年，然在今日，业经觉悟之后，又何能坐视其如此呢？况且家庭的成立，本是以妇女的奴役为其原因的。在今日个人主义抬头，人格要受尊重的时代，妇女又何能长此被压制呢？资本主义的学者，每说动物有雌雄两性，共同鞠育其幼儿，而其同居期限，亦因以延长的，以为家庭的组织，实根于人类的天性，而无可改变。姑无论其所说动物界的情形，并不确实。即使退一步，承认其确实，而人是人，动物是动物；人虽然亦是动物之一，到底是动物中的人；人类的现象，安能以动物界的现象为限？他姑弗论，动物雌雄协力求食，即足以哺育其幼儿，人，为什么有夫妇协力，尚不能养活其子女的呢？或种动物，爱情限于家庭，而人类的爱情，超出于此以外，这正是人之所以为人，人之所以异于动物。论者不知人之爱家，乃因社会先有家庭的组织，使人之爱，以此形式而出现，正犹水之因方而为圭，遇圆而成璧；而反以为人类先有爱家之心，然后造成家庭制度；若将家庭破坏，便要“疾病不养；老幼孤独，不得其所”（《礼记·乐记》：“强者胁弱，众者暴寡；知者诈愚，勇者苦怯；疾病不养，老幼孤独，不得其所，此大乱之道也”），这真是倒果为因。殊不知家庭之制，把人分为五口八口的小团体，明明是互相倚赖的，偏使之此疆彼界，处于半敌对的地位，这正是疾病之所以不养，老幼孤独之所以不得其所。无后是中国人所引为大戚的，论者每说，这是拘于“不孝有三，无后为大”之义（《孟子·离娄上篇》）。而其以无后为不孝，则是迷信“鬼犹求食”（见《左传》宣公四年），深虑祭祀之绝。殊不知此乃古人的迷信，今人谁还迷信鬼犹求食来？其所以深虑无后，不过不愿其家之绝；所以不愿其家之绝，则由于人总有尽力经营的一件事，不忍坐视其灭亡，而家是中国人所尽力经营的，所以如此。家族之制，固然使人各分畛域，造成互相敌对的情形，然此自制度之咎，以爱家者之心论：则不但（一）夫妇、父子、兄弟之间，互尽扶养之责。（二）且推及于凡与家族有关系的人（如宗族姻亲等）。（三）并且悬念已死的祖宗。（四）以及未来不知谁何的子孙。前人传给我的基业，我必不肯毁坏，必要保持之，光大之，以传给后人，这正是极端利他心的表现。利他心是无一定形式的，在何种制度之下，即表现为何种形式。然而我们为什么要拘制着他，一定只许他在这种制度中表现呢？&lt;/p>
&lt;p>以上论族制的变迁，大略已具。现再略论继承之法。一个团体，总有一个领袖。在血缘团体之内，所谓父或母，自然很容易处于领袖地位的。父母死后，亦当然有一个继承其地位的人。女系氏族，在中国历史上，可考的有两种继承之法：（一）是以女子承袭财产，掌管祭祀。前章所述齐国的巫儿，即其遗迹。这大约是平时的族长。（二）至于战时及带有政治性质的领袖，则大约由男子尸其责，而由弟兄相及。殷代继承之法，是其遗迹。男系氏族，则由父子相继。其法又有多端：（一）如《左传》文公元年所说：“楚国之举，恒在少者。”这大约因幼子恒与父母同居，所以承袭其遗产（蒙古人之遗产，即归幼子承袭。其幼子称斡赤斤，译言守灶）。（二）至于承袭其父之威权地位，则自以长子为宜，而事实上亦以长子为易。（三）又古代妻妾，在社会上之地位亦大异。妻多出于贵族，妾则出于贱族，或竟是无母家的。古重婚姻，强大的外家及妻家，对于个人，是强有力的外援（如郑庄公的大子忽，不婚于齐，后来以无外援失位）；对于部族，亦是一个强有力的与国，所以立子又以嫡为宜。周人即系如此。以嫡为第一条件，长为第二条件。后来周代的文化，普行于全国，此项继承之法，遂为法律和习惯所共认了。然这只是承袭家长的地位，至于财产，则总是众子均分的（《清律》：分析家财、田产，不问妻、妾、婢生，但以子数均分。奸生之子，依子量与半分。无子立继者，与私生子均分）。所以中国的财产，不因遗产承袭，而生不均的问题。这是众子袭产，优于一子袭产之点。&lt;/p>
&lt;p>无后是人所不能免的，于是发生立后的问题。宗法盛行之世，有一大宗宗子，即生者的扶养，死者的祭祀，都可以不成问题，所以立后问题，容易解决。宗法既废，势非人人有后不可，就难了。在此情形之下，解决之法有三：（一）以女为后。（二）任立一人为后，不问其为同异姓。（三）在同姓中择立一人为后。（一）于情理最近，但宗祧继承，非徒承袭财产，亦兼掌管祭祀。以女为后，是和习惯相反的（春秋时，郑国以外孙为后，其外孙是莒国的儿子，《春秋》遂书“莒人灭郑”，见《公羊》襄公五、六年。按此实在是论国君承袭的，乃公法上的关系，然后世把经义普遍推行之于各方面，亦不管其为公法私法了）。既和习惯相反，则觊觎财产的人，势必群起而攻，官厅格于习俗，势必不能切实保护。本欲保其家的，或反因此而发生纠纷，所以势不能行。（二）即所谓养子，与家族主义的重视血统，而欲保其纯洁的趋势不合。于是只剩得第（三）的一途。法律欲维持传统观念，禁立异姓为后，在同姓中并禁乱昭穆之序（谓必辈行相当，如不得以弟为子等。其实此为古人所不禁，所谓“为人后者为之子”，见《公羊》成公十五年）。于是欲人人有后益难，清高宗时，乃立兼祧之法，以济其穷（一人可承数房之祀。生子多者，仍依次序，分承各房之后。依律例：大宗子兼祧小宗，小宗子兼祧大宗，皆以大宗为重，为大宗父母服三年，为小宗父母服期。小宗子兼祧小宗，以本生为重，为本生父母服三年，为兼祧父母服期。此所谓大宗，指长房，所谓小宗，指次房以下，与古所谓大宗小宗者异义。世俗有为本生父母及所兼祧之父母均服三年的，与律例不合）。宗祧继承之法，进化至此，可谓无遗憾了。然其间却有一难题。私有财产之世，法律理应保护个人的产权。他要给谁就给谁，要不给谁就不给谁。为后之子，既兼有承袭财产之权利，而法律上替他规定了种种条件，就不啻干涉其财产的传授了。于是传统的伦理观念，和私有财产制度，发生了冲突。到底传统的伦理观念是个陈旧不切实际的东西，表面上虽然像煞有介事，很有威权，实际上已和现代人的观念不合了。私有财产制度，乃现社会的秩序的根柢，谁能加以摇动？于是冲突之下，伦理观念，乃不得不败北而让步。法律上乃不得不承认所谓立爱，而且多方保护其产权（《清律例》：继子不得于所后之亲，听其告官别立。其或择立贤能，及所亲爱者，不许宗族以次序告争，并官司受理）。至于养子，法律虽禁其为嗣（实际上仍有之），亦不得不听其存在，且不得不听其酌给财产（亦见《清律例》）。因为国家到底是全国人民的国家，在可能范围内，必须兼顾全国人民各方面的要求，不能专代表家族的排外自私之念。在现制度之下，既不能无流离失所之人；家族主义者流，既勇于争袭遗产，而怯于收养同宗；有异姓的人肯收养他，国家其势说不出要禁止。不但说不出要禁止，在代表人道主义和维持治安的立场上说，无宁还是国家所希望的。既承认养子的存在，在事实上，自不得不听其酌给遗产了。这也是偏私的家族观念，对于公平的人道主义的让步，也可说是伦理观念的进步。&lt;/p>
&lt;p>假使宗祧继承的意思，而真是专于宗祧继承，则拥护同姓之男，排斥亲生之女，倒也还使人心服。因为立嗣之意，无非欲保其家，而家族的存在，是带着几分斗争性质的。在现制度之下，使男子从事于斗争，确较女子为适宜（这并非从个人的身心能力上言，乃是从社会关系上言），这也是事实。无如世俗争继的，口在宗祧，心存财产，都是前人所谓“其言蔼如，其心不可问”的。如此而霸占无子者的财产，排斥其亲生女，就未免使人不服了。所以有国民政府以来，废止宗祧继承，男女均分遗产的立法。这件事于理固当，而在短时间内，能否推行尽利，却是问题。旧律，遗产本是无男归女，无女入官的（近人笔记云：“宋初新定《刑统》，户绝资产下引《丧葬令》；诸身丧户绝者，所有部曲、客女、奴婢、店宅、资财，并令近亲转易货卖，将营葬事，及量营功德之外，余财并与女。无女均入以次近亲。无亲戚者，官为检校。若亡人在日，自有遗嘱处分，证验分明者，不用此令。此《丧葬令》乃《唐令》，知唐时所谓户绝，不必无近亲。虽有近亲，为营丧葬，不必立近亲为嗣子，而远亲不能争嗣，更无论矣。虽有近亲，为之处分，所余财产，仍传之亲女，而远亲不能争产，更无论矣。此盖先世相传之法，不始于唐。”按部曲、客女，见第四十章）。入官非人情所愿，强力推行，必多流弊，或至窒碍难行（如隐匿遗产，或近亲不易查明，以致事悬不决，其间更生他弊等）。归之亲女，最协人情。然从前的立嗣，除祭祀外，尚有一年老奉养的问题。而家族主义，是自私的。男系家族，尤其以男子为本位，而蔑视女子的人格。女子出嫁之后，更欲奉养其父母，势实有所为难。所以旧时论立嗣问题的人，都说最好是听其择立一人为嗣，主其奉养、丧葬、祭祀，而承袭其遗产。这不啻以本人的遗产，换得一个垂老的扶养，和死后的丧葬祭祀。今欲破除迷信，祭祀固无问题，对于奉养及丧葬，似亦不可无善法解决。不有遗产以为交易，在私有制度之下，谁肯顾及他人的生养死葬呢？所以有子者遗产男女均分，倒无问题，无子者财产全归于女，倒是有问题的。所以变法贵全变，革命要彻底。枝枝节节而为之，总只是头痛医头，脚痛医脚的对症疗法。&lt;/p>
&lt;p>姓氏的变迁，今亦须更一陈论。姓的起源，是氏族的称号，由女系易而为男系，说已见前。后来姓之外又有所谓氏。什么叫做氏呢？氏是所以表一姓之中的支派的。如后稷之后都姓姬，周公封于周，则以周为氏；其子伯禽封于鲁，则以鲁为氏（国君即以国为氏）；鲁桓公的三子，又分为孟孙、叔孙、季孙三氏是。始祖之姓，谓之正姓，氏亦谓之庶姓。正姓是永远不改的，庶姓则随时可改。因为同出于一祖的人太多了，其支分派别，亦不可无专名以表之，而专名沿袭太久，则共此一名的人太多，所以又不得不改（改氏的原因甚多，此只举其要改的根本原理。此外如因避难故而改氏以示别族等，亦是改氏的一种原因）。《后汉书·羌传》说：羌人种姓中，出了一个豪健的人，便要改用他的名字做种姓。如爰剑之后，五世至研，豪健，其子孙改称研种；十三世至烧当，复豪健，其子孙又改称烧当种是。这正和我国古代的改氏，原理相同。假如我们在鲁国，遇见一个人，问他尊姓，他说姓姬。这固然足以表示他和鲁君是一家。然而鲁君一家的人太多了，鲁君未必能个个照顾到，这个人，就未必一定有势力，我们听了，也未必肃然起敬。假若问他贵氏，他说是季孙，我们就知道他是赫赫有名的正卿的一家。正卿的同族，较之国君的同姓，人数要少些，其和正卿的关系，必较密切，我们闻言之下，就觉得炙手可热，不敢轻慢于他了。这是举其一端，其余可以类推（如以技为官，以官为氏，问其氏，即既可知其官，又可知其技）。所以古人的氏，确是有用的。至于正姓，虽不若庶姓的亲切，然婚姻之可通与否，全论正姓的异同。所以也是有用的。顾炎武《原姓篇》说春秋以前，男子称氏，女子称姓（在室冠之以序，如叔隗、季隗之类。出嫁，更冠以其夫之氏族，如宋伯姬、赵姬、卢蒲姜之类。在其所适之族，不必举出自己的氏族来，则亦以其父之氏族冠之，如骊姬、梁嬴之类。又有冠之以谥的，如成风、敬姜之类），这不是男子不论姓，不过举氏则姓可知罢了。女子和社会上无甚关系，所以但称姓而不称其氏，这又可以见得氏的作用。&lt;/p>
&lt;p>贵族的世系，在古代是有史官为之记载的。此即《周官》小史之职。记载天子世系的，谓之帝系；记载诸侯卿大夫世系的，谓之世本。这不过是后来的异名，其初原是一物。又瞽矇之职，“讽诵诗，世奠系”（疑当作奠世系）。《注》引杜子春说：谓瞽矇“主诵诗，并诵世系”。世系而可诵，似乎除统绪之外，还有其性行事迹等。颇疑《大戴礼记》的《帝系姓》，原出于小史所记；《五帝德》则是原出于瞽矇所诵的（自然不是完全的），这是说贵族。至于平民，既无人代他记载，而他自己又不能记载，遂有昧于其所自出的。《礼记·曲礼》谓买妾不知其姓，即由于此。然而后世的士大夫，亦多不知其姓氏之所由来的。这因为谱牒掌于史官，封建政体的崩溃，国破家亡，谱牒散失，自然不能知其姓氏之所由来了。婚姻的可通与否，既不复论古代的姓，新造姓氏之事亦甚少。即有之，亦历久不改。阅一时焉，即不复能表示其切近的关系，而为大多数人之所共，与古之正姓同。姓遂成为无用的长物，不过以其为人人之所有，囿于习惯，不能废除罢了。然各地方的强宗巨家，姓氏之所由来，虽不可知，而其在实际上的势力自在。各地方的人，也还尊奉他。在秦汉之世，习为固然，不受众人的注意。汉末大乱，各地方的强宗巨家，开始播迁，到了一个新地方，还要表明其本系某地方的某姓；而此时的选举制度，又重视门阀。于是又看重家世，而有魏晋以来的谱学了。见第四十章。&lt;/p>
&lt;h1 id="第三十九章政体">
 第三十九章　政体
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%89%e5%8d%81%e4%b9%9d%e7%ab%a0%e6%94%bf%e4%bd%93">#&lt;/a>
&lt;/h1>
&lt;p>社会发达到一定的程度，国家就出现了。在国家出现之前，人类团结的方法，只靠血缘，其时重要的组织，就是氏族，对内的治理，对外的防御，都靠着它。世运渐进，血缘相异的人，接触渐多，人类的组织，遂不复以血统相同为限，聚居一地方的，亦不限于血统相同的人。于是氏族进而为部落。统治者的资格，非复族长而为酋长。其统治亦兼论地域，开国家领土的先河了。&lt;/p>
&lt;p>从氏族变为部落，大概经过这样的情形。在氏族的内部，因职业的分化，家族渐渐兴起。氏族的本身，遂至崩溃。各家族非如其在氏族时代，绝对平等，而有贫富之分。财富即是权力，氏族平和的情形，遂渐渐破坏，贫者和富者之间，发生了矛盾，不得不用权力统治。其在异氏族之间，则战斗甚烈。胜者以败者为俘虏，使服劳役，是为奴隶。其但征收其贡赋的，则为农奴。农奴、奴隶和主人之间，自然有更大的矛盾，需要强力镇压。因此故，益促成征服氏族的本身，发生变化。征服氏族的全体，是为平民。其中掌握事权的若干人，形成贵族。贵族中如有一个最高的首领，即为君主的前身。其初是贵族与平民相去近，平民和农奴、奴隶相去远。其后血统相同的作用渐微，掌握政权与否之关系渐大，则平民与农奴、奴隶相去转近，而其与贵族相去转远（参看下章）。但平民总仍略有参政之权，农奴和奴隶则否。政权的决定，在名义上最后属于一人的，是为君主政体。属于较少数人的，是为贵族政体。属于较多数人的，是为民主政体。这种分类之法，是出于亚里斯多德（Aristotle）的。虽与今日情形不同，然以论古代的政体，则仍觉其适合。&lt;/p>
&lt;p>氏族与部落，在实际上，是不易严密区分的。因为进化到部落时代，其内部，总还保有若干氏族时代的意味。从理论上言，则其团结，由于血统相同（虽实际未必相同，然苟被收容于其团体之内，即亦和血统相同的人，一律看待），而其统治，亦全本于亲族关系的，则为氏族。其不然的，则为部落。因其二者杂糅，不易区别，我们亦可借用《辽史》上的名词，称之为部族（见《营卫志》）。至于古代所谓国家，其意义，全和现在不同。古所谓国，是指诸侯的私产言之。包括（一）其住居之所，（二）及其有收益的土地。大夫之所谓家者亦然（古书上所谓国，多指诸侯的都城言。都城的起源，即为诸侯的住所。诸侯的封域以内，以财产意义言，并非全属诸侯所私有。其一部分，还是要用以分封的。对于此等地方，诸侯仅能收其贡而不能收其税赋。其能直接收其税赋，以为财产上的收入的，亦限于诸侯的采地。《尚书大传》说：“古者诸侯始受封，必有采地。其后子孙虽有罪黜，其采地不黜，使子孙贤者守之世世，以祠其始受封之人，此之谓兴灭国，继绝世”，即指此。采地从财产上论，是应该包括于国字之内的。《礼记·礼运》说：“天子有田以处其子孙，诸侯有国以处其子孙。”乃所谓互言以相备。说天子有田，即见得诸侯亦有田；说诸侯有国，即见得天子亦有国。在此等用法之下，田字的意义，亦包括国，国字的意义，亦包括田。乃古人语法如此）。今之所谓国家，古无此语。必欲求其相近的，则为“社稷”二字或“邦”字。社是土神，稷是谷神，是住居于同一地方的人，所共同崇奉的。故说社稷沦亡，即有整个团体覆灭之意。邦和封是一语。封之义为累土。两个部族交界之处，把土堆高些，以为标识，则谓之封。引申起来，任用何种方法，以表示疆界，都可以谓之封（如掘土为沟，以示疆界，亦可谓之封。故今辽宁省内，有地名沟帮子。帮字即邦字，亦即封字。上海洋泾浜之浜字，亦当作封）。疆界所至之地，即谓之邦。古邦字和国字，意义本各不同。汉高祖名邦，汉人讳邦字，都改作国。于是国字和邦字的意义混淆了。现在古书中有若干国字，本来是当作邦字的。如《诗经》里的“日辟国百里”、“日蹙国百里”便是。封域可以时有赢缩，城郭是不能时时改造的（國与域同从或声，其初当亦系一语，则国亦有界域之意。然久已分化为两语了。古书中用国字域字，十之九，意义是不同的）。&lt;/p>
&lt;p>贵族政体和民主政体，在古书上，亦未尝无相类的制度。然以大体言之，则君权之在中国，极为发达。君主的第一个资格，是从氏族时代的族长，沿袭而来的，所以古书上总说君是民之父母。其二则为政治或军事上之首领。其三则兼为宗教上之首领。所以天子祭天地，诸侯祭社稷等（《礼记·王制》），均有代表其群下而为祭司之权，而《书经》上说：“天降下民，作之君，作之师”（《孟子·梁惠王下篇》引），君主又操有最高的教育之权。&lt;/p>
&lt;p>君主前身，既然是氏族的族长，所以他的继承法，亦即是氏族族长的继承法。已见前章。在母系社会，则为兄终弟及，在父系社会，则为父死子继。当其为氏族族长时，无甚权利可争，而其关系亦小，所以立法并不十分精密。《左传》昭公二十六年，王子朝告诸侯，说周朝的继承法，适庶相同则论年，“年钧以德，德钧则卜”。两个人同年，是很容易的事情，同月，同日，同时则甚难，何至辨不出长幼来，而要用德、卜等漫无标准的条件？可见旧法并不甚密。《公羊》隐公元年何《注》说：“礼：适夫人无子，立右媵。右媵无子，立左媵。左媵无子，立适姪娣。适姪娣无子，立右媵姪娣。右媵姪娣无子，立左媵姪娣。质家亲亲先立娣。文家尊尊先立姪（《春秋》以殷为质家，周为文家），适子有孙而死，质家亲亲先立弟，文家尊尊先立孙。其双生，质家据见立先生，文家据本意立后生。”定得非常严密。这是后人因国君的继承，关系重大而为之补充的，乃系学说而非事实。&lt;/p>
&lt;p>周厉王被逐，宣王未立，周召二公，共和行政，凡十四年。主权不属于一人，和欧洲的贵族政体，最为相像。按《左传》襄公十四年，卫献公出奔，卫人立公孙剽，孙林父、甯殖相之，以听命于诸侯，此虽有君，实权皆在二相，和周召的共和，实际也有些相像。但形式上还是有君的。至于鲁昭公出奔，则鲁国亦并未立君，季氏对于国政，决不能一人专断，和共和之治，相像更甚了。可见贵族政体，古代亦有其端倪，不过未曾发达而成为一种制度。&lt;/p>
&lt;p>至于民主政治，则其遗迹更多了。我们简直可以说：古代是确有这种制度，而后来才破坏掉的。《周官》有大询于众庶之法，乡大夫“各帅其乡之众寡而致于朝”，小司寇“摈以序进而问焉”。其事项：为询国危，询国迁，询立君。按《左传》定公八年，卫侯欲叛晋，朝国人，使王孙贾问焉。哀公元年，吴召陈怀公，怀公亦朝国人而问，此即所谓询国危；盘庚要迁都于殷，人民不肯，盘庚“命众悉造于庭”，反复晓谕。其言，即今《书经》里的《盘庚篇》。周太王要迁居于岐，“属其父老而告之”（《孟子·梁惠王下篇》），此即所谓询国迁；《左传》昭公二十四年，周朝的王子朝和敬王争立，晋侯使士景伯往问。士伯立于乾祭（城门名），而问于介众（介众，大众）。哀公二十六年，越人纳卫侯，卫人亦致众而问。此即所谓询立君。可见《周官》之言，系根据古代政治上的习惯，并非理想之谈。《书经·洪范》：“汝则有大疑，谋及乃心，谋及卿士，谋及庶人，谋及卜筮。汝则从，龟从，筮从，卿士从，庶民从，是之谓大同。身其康强，子孙其逢，吉。汝则从，龟从，筮从，卿士逆，庶民逆，吉。卿士从，龟从，筮从，汝则逆，庶民逆，吉。庶民从，龟从，筮从，汝则逆，卿士逆，吉。汝则从，龟从，筮逆，卿士逆，庶民逆，作内吉，作外凶。龟筮共违于人，用静吉，用作凶。”此以一君主，二卿士，三庶人，四龟，五筮，各占一权，而以其多少数定吉凶，亦必系一种会议之法。并非随意询问。至于随意询问之事，如《孟子》所谓“国人皆曰贤，然后察之，见贤焉，然后用之”，“国人皆曰不可，然后察之，见不可焉，然后去之”，“国人皆曰可杀，然后察之，见可杀焉，然后杀之”（《梁惠王下篇》），以及《管子》所谓啧室之议等（见《桓公问篇》），似乎不过是周谘博采，并无必从的义务。然其初怕亦不然。野蛮部落，内部和同，无甚矛盾，舆论自极忠实。有大事及疑难之事，会议时竟有须全体通过，然后能行，并无所谓多数决的。然则舆论到后来，虽然效力渐薄，竟有如郑人游于乡校，以议执政，而然明欲毁乡校之事（见《左传》襄公三十年）。然在古初，必能影响行政，使当局者不能不从，又理有可信了。原始的制度，总是民主的。到后来，各方面的利害、冲突既深；政治的性质，亦益复杂，才变而由少数人专断。这是普遍的现象，无足怀疑的。有人说：中国自古就是专制，国人的政治能力，实在不及西人，固然抹杀史实。有人举此等民权遗迹以自豪，也是可以不必的。&lt;/p>
&lt;p>以上所述，是各部族内部的情形。至于合全国而观之，则是时正在部族林立之世。从前的史家，率称统一以前为封建时代，此语颇须斟酌。学术上的用语，不该太拘于文字的初诂。封建二字，原不妨扩而充之，兼包列国并立的事实，不必泥定字面，要有一个封他的人。然列国本来并立，和有一个封他的人，二者之间，究应立一区别。我以为昔人所谓封建时代，应再分为（一）部族时代，或称先封建时代；（二）封建时代较妥。所谓封建，应指（甲）慑服异部族，使其表示服从；（乙）打破异部族，改立自己的人为酋长；（丙）使本部族移殖于外言之。&lt;/p></description></item><item><title>上编-中国政治史</title><link>https://lwmfjc.github.io/zh/docs/culture/%E4%B8%AD%E5%9B%BD%E9%80%9A%E5%8F%B2%E5%90%95%E6%80%9D%E5%8B%89/%E4%B8%8A%E7%AF%87-%E4%B8%AD%E5%9B%BD%E6%94%BF%E6%B2%BB%E5%8F%B2/</link><pubDate>Thu, 02 Jan 2025 23:20:15 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E4%B8%AD%E5%9B%BD%E9%80%9A%E5%8F%B2%E5%90%95%E6%80%9D%E5%8B%89/%E4%B8%8A%E7%AF%87-%E4%B8%AD%E5%9B%BD%E6%94%BF%E6%B2%BB%E5%8F%B2/</guid><description>&lt;h1 id="第一章中国民族的由来">
 第一章　中国民族的由来
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%80%e7%ab%a0%e4%b8%ad%e5%9b%bd%e6%b0%91%e6%97%8f%e7%9a%84%e7%94%b1%e6%9d%a5">#&lt;/a>
&lt;/h1>
&lt;p>社会是整个的，作起文化史来，分门别类，不过是我们分从各方面观察，讲到最后的目的，原是要集合各方面，以说明一个社会的盛衰，即其循着曲线进化的状况的。但是这件事很不容易。史事亡失的多了，我们现在，对于各方面，所知道的多很模糊（不但古代史籍缺乏之时，即至后世，史籍号称完备，然我们所要知道的事，仍很缺乏而多伪误。用现代新史学的眼光看起来，现在人类对于过去的知识，实在是很贫乏的），贸贸然据不完不备的材料，来说明一时代的盛衰，往往易流于武断。而且从中学到大学，永远是以时为经、以事为纬的，将各时代的事情，复述一遍，虽然详略不同，而看法失之单纯，亦难于引起兴趣。所以我这部书，变换一个方法，下册依文化的项目，把历代的情形，加以叙述，这一册依据时代，略述历代的盛衰。读者在读这一册时，对于历代的社会状况，阅读下册就会略有所知，则涉及时措辞可以从略，不至有头绪纷繁之苦；而于历代盛衰的原因，亦更易于明了了。&lt;br>
叙述历代的盛衰，此即向来所谓政治史。中国从前的历史，所以被人讥诮为帝王的家谱，为相斫书，都由其偏重这一方面之故。然而矫枉过正，以为这一方面，可以视为无足重轻，也是不对的。现在的人民，正和生物在进化的中途需要外骨保护一样。这话怎样说呢？世界尚未臻于大同之境，人类不能免于彼此对立，就不免要靠着武力或者别种力量互相剥削。在一个团体之内，虽然有更高的权力，以评判其是非曲直，而制止其不正当的竞争，在各个团体之间，却至今还没有，到被外力侵犯之时，即不得不以强力自卫，此团体即所谓国家。一个国家之中，总包含着许多目的简单，有意用人力组成的团体，如实业团体、文化团体等都是。此等团体，和别一个国家内性质相同的团体，是用不着分界限的，能合作固好，能合并则更好。无如世界上现在还有用强力压迫人家，掠夺人家的事情，我们没有组织，就要受到人家的压迫、掠夺，而浸至无以自存了。这是现今时代国家所以重要的原因。世界上的人多着呢？为什么有些人能合组一个国家，有些人却要分做两国呢？这个原因，最重要的，就是民族的异同，而民族的根柢，则为文化。世界文化的发达，其无形的目的，总是向着大同之路走的，但非一蹴可几。未能至于大同之时，则文化相同的人民可以结为一体，通力合作，以共御外侮；文化不相同的则不能然，此即民族国家形成的原理。在现今世界上，非民族的国家固多，然总不甚稳固。其内部能平和相处，强大民族承认弱小民族自决权利的还好，其不然的，往往演成极激烈的争斗；而一民族强被分割的，亦必出死力以求其合，这是世界史上数见不鲜的事。所以民族国家，在现今，实在是一个最重要的组织。若干人民，其文化能互相融和而成为一个民族，一个民族而能建立一个强固的国家，都是很不容易的事。苟其能之，则这一个国家，就是这一个民族在今日世界上所以自卫，而对世界的进化尽更大的责任的良好工具了。&lt;/p>
&lt;p>中国是世界上最大的一个民族国家，这是无待于言的。一个大民族，固然总是融合许多小民族而成，然其中亦必有一主体。为中国民族主体的，无疑是汉族了。汉族的由来，在从前是很少有人提及的。这是因为从前人地理知识的浅薄，不知道中国以外还有许多地方之故。至于记载邃古的时代，自然是没有的。后来虽然有了，然距邃古的时代业已很远，又为神话的外衣所蒙蔽。一个民族不能自知其最古的历史，正和一个人不能自知其极小时候的情形一样。如其开化较晚，而其邻近有先进的民族，这一个民族的古史，原可藉那一个民族而流传，中国却又无有。那么，中国民族最古的情形，自然无从知道了。直至最近，中国民族的由来，才有人加以考究，而其初还是西人，到后来，中国人才渐加注意。从前最占势力的是“西来说”，即说中国民族，自西方高地而来。其中尤被人相信的，为中国民族来自黄河上源昆仑山之说。此所谓黄河上源，乃指今新疆的于阗河；所谓昆仑山，即指于阗河上源之山。这是因为：一、中国的开化，起于黄河流域；二、汉武帝时，汉使穷河源，说河源出于于阗。《史记·大宛列传》说，天子案古图书，河源出于昆仑。后人因汉代去古未远，相信武帝所案，必非无据之故。其实黄河上源，明明不出于阗。若说于阗河伏流地下，南出而为黄河上源，则为地势所不容，明明是个曲说。而昆仑的地名，在古书里也是很神秘的，并不能实指其处，这只要看《楚辞》的《招魂》、《淮南子》的《地形训》和《山海经》便知。所以以汉族开化起于黄河流域，而疑其来自黄河上源，因此而信今新疆西南部的山为汉族发祥之地，根据实在很薄弱。这一说，在旧时诸说中，是最有故书雅记做根据的，而犹如此，其他更不必论了。&lt;/p>
&lt;p>&lt;img src="img/000000.jpg" alt="" />&lt;br>
●北京猿人复原图&lt;/p>
\[Peking Man。按此名为安特生所名，协和医学院解剖学教授步达生（Davidson Black）名之为Sinanthropus Pekinensis，叶为耽名之曰震旦人，见所著《震旦人与周口店文化》，商务印书馆本\]&lt;p>。据考古学家的研究，其时约距今四十万年。其和中国人有无关系，殊不可知，不过因此而知东方亦是很古的人类起源之地罢了。其和历史时代可以连接的，则为民国十年辽宁锦西沙锅屯，河南渑池仰韶村，及十二三年甘肃临夏、宁定、民勤，青海贵德及青海沿岸所发现的彩色陶器，和俄属土耳其斯单所发现的酷相似。考古家安特生（J.G.Andersson）因谓中国民族，实自中亚经新疆、甘肃而来。但彩陶起自巴比仑，事在公元前3500年，传至小亚细亚，约在公元前2500年至前2000年，传至古希腊，则在前2000年至前1000年，俄属土耳其斯单早有铜器，河南、甘肃、青海之初期则无之，其时必在公元2500年之前，何以传播能如是之速？制铜之术，又何以不与制陶并传？斯坦因（Sir Aurel Stein）在新疆考古，所得汉、唐遗物极多，而先秦之物，则绝无所得，可见中国文化在先秦世实尚未行于西北，安特生之说，似不足信了（此说据金兆梓《中国人种及文化由来》，见《东方杂志》第二十六卷第二期）。民国十九年以后，山东历城的城子崖，滕县的安上村，都发现了黑色陶器。江苏武进的奄城，金山的戚家墩，吴县的磨盘山、黄壁山，浙江杭县的古荡、良渚，吴兴的钱山漾，嘉兴的双栖，平湖的乍浦，海盐的澉浦，亦得有新石器时代的石器、陶器，其中杭县的黑陶，颇与山东相类。又河域所得陶器，皆为条纹及席纹；南京、江、浙和山东邹县，福建武平，辽宁金县貔子窝及香港的陶器，则其文理为几何形。又山东、辽宁有有孔石斧，朝鲜、日本有有孔石厨刀，福建厦门、武平有有沟石锛，南洋群岛有有沟石斧，大洋洲木器所刻动物形，有的和中国铜器上的动物相像。北美阿拉斯加的土器，也有和中国相像的。然则中国沿海一带，实自有其文化。据民国十七年以后中央研究院在河南所发掘，安阳的侯家庄，濬县的大赉店，兼有彩色、黑色两种陶器，而安阳县北的小屯村，即1898、1899年发现甲骨文字之处，世人称为殷墟的，亦有几何纹的陶器。又江、浙石器中，有戈、矛及钺，河域惟殷墟有之。鬲为中国所独有，为鼎之前身，辽东最多，仰韶亦有之，甘肃、青海，则至后期才有。然则中国文化，在有史以前，似分东、西两系。东系以黑陶为代表，西系以彩陶为代表，而河南为其交会之地。彩陶为西方文化东渐的，代表中国固有的文化的，实为黑陶。试以古代文化现象证之：一、“国君无故不杀牛，大夫无故不杀羊，士无故不杀犬豕”，而鱼鳖则为常食。二、衣服材料，以麻、丝为主，裁制极其宽博。三、古代的人民，是巢居或湖居的。四、其货币多用贝。五、在宗教上又颇敬畏龙蛇。皆足证其文化起于东南沿海之处；彩陶文化之为外铄，似无疑义了。在古代，亚洲东方的民族，似可分为三系，而其处置头发的方法，恰可为其代表，这是一件极有趣味的事，即北族辫发、南族断发、中原冠带。《尔雅·释言》说：“齐，中也。”《释地》说：“自齐州以南戴日为丹穴，北戴斗极为空同，东至日所出为大平，西至日所入为大蒙。”“齐”即今之“脐”字，本有中央之义。古代的民族，总是以自己所居之地为中心的，齐州为汉族发祥之地，可无疑义了。然则齐州究在何处呢？我们固不敢断言其即后来的齐国，然亦必与之相近。又《尔雅·释地》说“中有岱岳”，而泰山为古代祭天之处，亦必和我民族起源之地有关。文化的发展，总是起于大河下流的，埃及和小亚细亚即其明证。与其说中国文化起于黄河上流，不如说其起于黄河下流的切于事情了。近来有些人，窥见此中消息，却又不知中国和南族之别，甚有以为中国人即是南族的，这个也不对。南族的特征是断发文身，断发即我国古代的髡刑，文身则是古代的黥刑。以南族的装饰为刑，可见其曾与南族相争斗，而以其俘虏为奴隶。近代的考古学，证明长城以北的古物，可分为三类：一、打制石器，其遗迹西起新疆，东至东三省，而限于西辽河、松花江以北，环绕着沙漠。二、细石器，限于兴安岭以西。与之相伴的遗物，有类似北欧及西伯利亚的，亦有类似中欧及西南亚的，两者均系狩猎或畜牧民族所为。三、磨制石器，北至黑龙江昂昂溪，东至朝鲜北境，则系黄河流域的农耕民族所为，其遗物多与有孔石斧及类鬲的土器并存，与山东龙口所得的土器极相似。可见我国民族，自古即介居南北两民族之间，而为东方文化的主干了（步达生言仰韶村、沙锅屯的遗骸，与今华北人同，日本清野谦次亦谓貔子窝遗骸，与仰韶村遗骸极相似）。&lt;/p>
&lt;p>&lt;img src="img/000001.jpg" alt="" />
●彩陶盆　仰韶文化半坡类型，公元前5000年—公元前4000年，陕西西安半坡遗址出土，高16.4厘米、口径40厘米，内绘鱼、鱼和人面相结合的花纹，这是仰韶文化早期流行的纹饰。有观点认为，鱼便是仰韶文化半坡类型的图腾&lt;/p>
&lt;h1 id="第二章中国史的年代">
 第二章　中国史的年代
 &lt;a class="anchor" href="#%e7%ac%ac%e4%ba%8c%e7%ab%a0%e4%b8%ad%e5%9b%bd%e5%8f%b2%e7%9a%84%e5%b9%b4%e4%bb%a3">#&lt;/a>
&lt;/h1>
&lt;p>讲历史要知道年代，正和讲地理要知道经纬线一般。有了经纬线，才知道某一地方在地球面上的某一点，和其余的地方距离如何，关系如何。有了年代，才知道某一件事发生在悠远年代中的某一时，当时各方面的情形如何，和其前后诸事件的关系如何。不然，就毫无意义了。&lt;/p>
&lt;p>正确的年代，原于（一）正确，（二）不断的记载。中国正确而又不断的记载，起于什么时候呢？那就是周朝厉、宣两王间的共和元年。下距民国纪元2752年，公历纪元841年，在世界各国中，要算是很早的了。但是比之于人类的历史，还如小巫之见大巫。世界之有人类，其正确的年代虽不可知，总得在四五十万年左右。历史确实的纪年，只有二千余年，正像人活了一百岁，只记得一年不到的事情，要做正确的年谱，就很难了。虽然历史无完整的记载，历史学家仍有推求之法。那便是据断片的记载，涉及天地现象的，用历法推算。中国用这方法的也很多。其中较为通行的，一为《汉书·律历志》所载刘歆之所推算，一为宋朝邵雍之所推算。刘歆所推算：周朝867年，殷朝629年，夏朝432年，虞舜在位五十年，唐尧在位七十年。周朝的灭亡，在民国纪元前2167年，公历纪元前256年，则唐尧的元年，在民国纪元前4215年，公历纪元前2305年。据邵雍所推算，则唐尧元年，在民国纪元前4268年，公历纪元前2357年。据历法推算，本是极可信据的，但前人的记载，未必尽确，后人的推算，也不能无误，所以也不可尽信。不过这所谓不可信，仅系不密合，论其大概，还是不误的。《孟子·公孙丑下篇》说：“由周而来，七百有余岁矣。”《尽心下篇》说：“由尧、舜至于汤，五百有余岁；由汤至于文王，五百有余岁；由文王至于孔子，五百有余岁。”乐毅报燕惠王书，称颂昭王破齐之功，说他“收八百岁之蓄积”。《韩非子·显学篇》说：“殷、周七百余岁，虞、夏二千余岁。”（此七百余岁但指周言）都和刘歆、邵雍所推算，相去不远。古人大略的记忆，十口相传，是不会大错的。然则我国历史上可知而不甚确实的年代，大约在四千年以上了。&lt;/p>
&lt;p>自此以上，连断片的记录，也都没有，则只能据发掘所得，推测其大略，是为先史时期。人类学家把人类所用的工具，分别它进化的阶段，最早的为旧石器时期，次之为新石器时期，都在有史以前，更次之为青铜器时期，更次之为铁器时期，就在有史以后了。我国近代发掘所得，据考古学家的推测：周口店的遗迹，约在旧石器前期之末，距今二万五千年至七万年。甘、青、河南遗迹，早的在新石器时期，在公历纪元前2600至3500年之间；&lt;/p>
&lt;p>晚的在青铜器时期，在公历纪元前1700至2600年之间。按古代南方铜器的发明，似较北方为早，则实际上，我国开化的年代，或许还在此以前。&lt;/p>
&lt;p>&lt;img src="img/000002.jpg" alt="" />
●旧石器时代·刮削器和尖状器山西省阳高县许家窑遗址出土。最长的5.6厘米，最短的2.7厘米。是10万年前的石器&lt;/p>
&lt;p>中国古书上，有的把古史的年代，说得极远而且极确实的，虽然不足为凭，然因其由来甚远，亦不可不一发其覆。按《续汉书律历志》载蔡邕议历法的话，说《元命苞》、《乾凿度》都以为自开辟至获麟（获麟是《春秋》的末一年，在公元前481年），二百七十六万岁。司马贞《补三皇本纪》，则说《春秋纬》称自开辟至获麟，凡三百二十七万六千岁，分为十纪。据《汉书·律历志》刘歆的三统历法，以十九年为一章，四章为一蔀，二十蔀为一纪，三纪为一元。二百七十五万九千二百八十年，乃是六百十三元之数。《汉书·王莽传》说：莽下三万六千岁历，三万六千被乘于九十一，就是三百二十七万六千年了。这都是乡壁虚造之谈，可谓毫无历史上的根据。&lt;/p>
&lt;p>&lt;img src="img/000003.jpg" alt="" />
●新石器时代·白陶山东维坊姚官庄出土。温酒器，高29.7厘米。是山东龙山文化遗存&lt;/p>
&lt;h1 id="第三章古代的开化">
 第三章　古代的开化
 &lt;a class="anchor" href="#%e7%ac%ac%e4%b8%89%e7%ab%a0%e5%8f%a4%e4%bb%a3%e7%9a%84%e5%bc%80%e5%8c%96">#&lt;/a>
&lt;/h1>
&lt;p>中国俗说，最早的帝王是盘古氏。古书有的说他和天地开辟并生，有的说他死后身体变化而成日月、山河、草木等。（徐整《三五历记》说：“天地混沌如鸡子，盘古生其中。万八千岁，天地开辟，阳清为天，阴浊为地，盘古在其中……天日高一丈，地日厚一丈，盘古日长一丈。如此万八千岁，天数极高，地数极深，盘古极长。”《五运历年记》说：“首生盘古，垂死化身：气成风云，声为雷霆，左眼为日，右眼为月，四肢、五体为四极、五岳，血液为江河，筋脉为地理，肌肉为田土，发髭为星辰，皮毛为草木，齿骨为金石，精髓为珠玉，汗流为雨，身之诸虫，因风所感，化为黎虻。”）这自然是附会之辞，不足为据。《后汉书·南蛮传》说：汉时长沙、武陵蛮（长沙、武陵，皆后汉郡名。长沙，治今湖南长沙县。武陵，治今湖南常德县）的祖宗，唤做盘瓠，乃是帝喾高辛氏的畜狗。当时有个犬戎国，为中国之患。高辛氏乃下令，说有能得犬戎吴将军的头的，赏他黄金万镒，还把自己的女儿嫁给他。令下之后，盘瓠衔了吴将军的头来。遂背了高辛氏的公主，走入南山，生了六男六女，自相夫妻，成为长沙、武陵蛮的祖宗。现在广西一带，还有祭祀盘古的。闽、浙的畲民，则奉盘瓠为始祖，其画像仍作狗形。有人说：盘古就是盘瓠，这话似乎很确。但是《后汉书》所记，只是长沙、武陵一支，而据古书所载，则盘古传说，分布之地极广，而且绝无为帝喾畜狗之说（据《路史》：会昌有盘古山，湘乡有盘古堡，雩都有盘古祠，成都、淮安、京兆亦皆有盘古庙。会昌，令江西会昌县。湘乡，今湖南湘乡县。雩都，今江西雩都县。成都，今四川成都县。淮安，今江苏淮安县。京兆，今西京），则盘古、盘瓠，究竟是一是二，还是一个疑问。如其是一，则盘古本非中国民族的始祖；如其是二，除荒渺的传说外，亦无事迹可考，只好置诸不论不议之列了。&lt;/p>
&lt;p>在盘古之后，而习惯上认为很早的帝王的，就是三皇、五帝。三皇、五帝之名，见于《周官》外史氏，并没说他是谁。后来异说甚多（三皇异说：《白虎通》或说，无遂人而有祝融。《礼记·曲礼正义》说：郑玄注《中候敕省图》引《运斗枢》，无遂人而有女娲。按《淮南子·天文训》、《览冥训》，《论衡·谈天》、《顺鼓》两篇，都说共工氏触不周之山，天柱折，地维缺，女娲炼五色石以补天，断鳌足以立四极。而司马贞《补三皇本纪》说系共工氏与祝融战，则女娲、祝融一人。祝融为火神，燧人是发明钻木取火的，可见其仍系一个部族。五帝异说：则汉代的古学家，于黄帝、颛顼之间，增加了一个少昊，于是五帝变成六人。郑玄注《中候敕省图》，乃谓德合五帝坐星，即可称帝，故“实六人而为五”。然总未免牵强。东晋晚出的《伪古文尚书》的《伪孔安国传序》，乃将三皇中的燧人除去，而将黄帝上升为三皇，于是六人为五的不通，给他弥缝过去了。《伪古文尚书》今已判明其为伪，人皆不之信，东汉古学家之说，则尚未显被推翻。但古学家此说，不过欲改五德终始说之相胜为相生，而又顾全汉朝之为火德，其作伪实无以异，而手段且更拙。按五德终始之说，创自邹衍，本依五行相胜的次序。依他的说法，是虞土、夏木、殷金、周火，所以秦始皇自以为水德，而汉初自以为土德。到刘向父子出，改五德的次序为五行相生，又以汉为尧后。而黄帝的称号为黄，黄为土色，其为土德，无可移易。如此，依五帝的旧次，颛顼金德，帝喾水德，尧是木德，与汉不同德了。于其间增一少昊为金德，则颛顼水德，帝喾木德，尧为火德，与汉相同；尧以后则虞土，夏金，殷水，周木，而汉以火德承之，秦人则被视为闰位，不算入五德相承次序。这是从前汉末年发生，至后汉而完成的一套五德终始的新说，其说明见于《后汉书·贾逵传》，其不能据以言古代帝王的统系，是毫无疑义的了），其较古的，还是《风俗通》引《含文嘉》，以燧人、伏羲、神农为三皇，《史记·五帝本纪》以黄帝、颛顼、帝喾、尧、舜为五帝之说。燧人、伏羲、神农，不是“身相接”的，五帝则有世系可考。&lt;/p>
&lt;p>据《史记·五帝本纪》及《大戴礼记·帝系篇》，其统系如下：&lt;/p>
&lt;p>&lt;img src="img/000004.jpg" alt="" />&lt;/p>
&lt;p>按五帝之说，源于五德终始，五德终始之说，创自邹衍，邹衍是齐人，《周官》所述的制度，多和《管子》相合，疑亦是齐学。古代本没有一个天子是世代相承的；即一国的世系较为连贯的，亦必自夏以后。夏、殷两代，后世的史家，都认为是当时的共主，亦是陷于时代错误的。据《史记·夏本纪》、《史记·殷本纪》所载，明明还是盛则诸侯来朝，衰则诸侯不至，何况唐、虞以上？所以三皇、五帝，只是后人造成的一个古史系统，实际上怕全不是这么一回事。但自夏以后，一国的世系，既略有可考；而自黄帝以后，诸帝王之间，亦略有不很正确的世系，总可藉以推测古史的大略了。&lt;/p>
&lt;p>古代帝王的称号，有所谓德号及地号（服虔说，见《礼记·月令》、《疏》），德号是以其所做的事业为根据的，地号则以其所居之地为根据。按古代国名、地名，往往和部族之名相混，还可以随着部族而迁移，所以虽有地号，其部族究在何处，仍难断言。至于德号，更不过代表社会开化的某阶段；或者某一个部族，特长于某种事业；并其所在之地而不可知，其可考见的真相，就更少了。然既有这些传说，究可略据之以为推测之资。传说中的帝王，较早而可考见社会进化的迹象的，是有巢氏和燧人氏。有巢氏教民构木为巢，燧人氏教民钻木取火，见于《韩非子》的《五蠹篇》。稍后则为伏羲、神农。伏羲氏始画八卦，作结绳而为网罟，以佃以渔；神农氏斫木为耜，揉木为耒，日中为市，见于《易经》的《系辞传》。有巢、燧人、神农都是德号，显而易见。伏羲氏，《易传》作包牺氏，包伏一声之转。据《风俗通》引《含文嘉》，是“下伏而化之”之意，羲化亦是一声。他是始画八卦的，大约在宗教上很有权威，其为德号，亦无疑义。这些都不过代表社会进化的一个阶段，究有其人与否，殊不可知。但各部族的进化，不会同时，某一个部族，对于某一种文化，特别进步得早，是可能有的。如此，我们虽不能说在古代确有发明巢居、取火、佃渔、耕稼的帝王，却不能否认对于这些事业，有一个先进的部族。既然有这部族，其时、地就该设法推考了。伏羲古称为太昊氏，风姓，据《左传》僖公二十一年所载，任、宿、须句、颛臾四国，是其后裔。任在今山东的济宁县，宿和须句都在东平县，颛臾在费县。神农，《礼记·月令》《疏》引《春秋说》，称为大庭氏。《左传》昭公十八年，鲁有大庭氏之库。鲁国的都城，即今山东曲阜县（《帝王世纪》说伏羲都陈，乃因左氏有“陈太昊之墟”之语而附会，不足信，见下文。又说神农氏都陈徙鲁，则因其承伏羲之后而附会的）。然则伏羲、神农，都在今山东东南部，和第一章所推测的汉族古代的根据地，是颇为相合的了。&lt;/p>
&lt;p>神农亦称炎帝，炎帝之后为黄帝，炎、黄之际，是有一次战事可以考见的，古史的情形，就更较明白了。《史记·五帝本纪》说：神农氏世衰，诸侯相侵伐，弗能征，而蚩尤氏最为暴。“黄帝乃征师诸侯，与蚩尤战于涿鹿之野，遂擒杀蚩尤。”又说：“炎帝欲侵陵诸侯，诸侯咸归轩辕。”（《史记·五帝本纪》说黄帝名轩辕，他书亦有称为轩辕氏的。按古书所谓名，兼包一切称谓，不限于名字之名。）轩辕“与炎帝战于阪泉之野，三战，然后得其志”。其说有些矛盾。《史记》的《五帝本纪》，和《大戴礼记》的《五帝德》，是大同小异的，《大戴礼记》此处，却只有和炎帝战于阪泉，而并没有和蚩尤战于涿鹿之事。神农、蚩尤，都是姜姓。《周书·史记篇》说“阪泉氏徙居独鹿”，独鹿之即涿鹿，亦显而易见。然则蚩尤、炎帝，即是一人，涿鹿、阪泉，亦系一地。《太平御览·州郡部》引《帝王世纪》转引《世本》，说涿鹿在彭城南，彭城是今江苏的铜山县（服虔谓涿鹿为汉之涿郡，即今河北涿县。皇甫谧、张晏谓在上谷，则因汉上谷郡有涿鹿县而云然，皆据后世的地名附会，不足信。汉涿鹿县即今察哈尔涿鹿县）。《世本》是古书，是较可信据的，然则汉族是时的发展，仍和鲁东南不远了。黄帝之后是颛顼，颛顼之后是帝喾，这是五帝说的旧次序。后人于其间增一少昊，这是要改五德终始之说相胜的次序为相生，又要顾全汉朝是火德而云然，无足深论。但是有传于后，而被后人认为共主的部族，在古代总是较强大的，其事迹仍旧值得考据，则无疑义。《史记·周本纪正义》引《帝王世纪》说：炎帝、黄帝、少昊，都是都于曲阜的，而黄帝自穷桑登帝位，少昊氏邑于穷桑，颛顼则始都穷桑，后徙帝丘。它说“穷桑在鲁北，或云穷桑即曲阜也”。《帝王世纪》，向来认为不足信之书，但只是病其牵合附会，其中的材料，还是出于古书的，只要不轻信其结论，其材料仍可采用。《左传》定公四年说伯禽封于少昊之墟，昭公二十年说：“少昊氏有四叔，世不失职，遂济穷桑”，则穷桑近鲁，少昊氏都于鲁之说，都非无据。帝丘地在今河北濮阳县，为后来卫国的都城。颛顼徙帝丘之说，乃因《左传》昭公十七年“卫颛顼之虚”而附会，然《左传》此说，与“陈太昊之墟”，“宋大辰之虚”，“郑祝融之虚”并举，大辰，无论如何，不能说为人名或国名（近人或谓即《后汉书》朝鲜半岛的辰国，证据未免太乏），则太昊、祝融、颛顼，亦系天神，颛顼徙都帝丘之说，根本不足信了。《史记·五帝本纪》说：黄帝正妃“嫘祖生二子，其后皆有天下。其一曰玄嚣，是为青阳，青阳降居江水”，此即后人指为少昊的。“其二曰昌意，降居若水，生高阳。”高阳即帝颛顼。后人以今之金沙江释此文的江水，鸦龙江释此文的若水，此乃大误。古代南方之水皆称江。《史记·殷本纪》引《汤诰》，说“东为江，北为济，西为河，南为淮，四渎己修，万民乃有居”，其所说的江，即明明不是长江（淮、泗、汝皆不入江，而《孟子·滕文公上篇》说禹“决汝、汉，排淮、泗，而注之江”，亦由于此）。《吕览·古乐篇》说：“帝颛顼生自若水，实处空桑，乃登为帝。”可见若水实与空桑相近。《山海经·海内经》说：“南海之内，黑水、青水之间，有木焉，名曰若木，若水出焉。”《说文》桑字作&lt;img src="img/000005.jpg" alt="i-" />，若水之若，实当作&lt;img src="img/000006.jpg" alt="i-" />，仍系桑字，特加&lt;img src="img/000007.jpg" alt="i-" />以象根形，后人认为若字实误。《楚辞》的若木，亦当作桑木，即神话中的扶桑，在日出之地（此据王筠说，见《说文释例》）。然则颛顼、帝喾，踪迹仍在东方了。&lt;/p>
&lt;p>继颛顼之后的是尧，继尧之后的是舜，继舜之后的是禹。尧、舜、禹的相继，据儒家的传说，是纯出于公心的，即所谓“禅让”，亦谓之“官天下”。但《庄子·盗跖篇》有尧杀长子之说，《吕览·去私》、《求人》两篇，都说尧有十子，而《孟子·万章上篇》和《淮南子·泰族训》，都说尧只有九子，很像尧的大子是被杀的（俞正燮即因此疑之，见所著《癸巳类稿·奡证》）。后来《竹书纪年》又有舜囚尧，并偃塞丹朱，使不与尧相见之说。刘知幾因之作《疑古篇》，把尧、舜、禹的相继，看作和后世的篡夺一样。其实都不是真相。古代君位与王位不同，在第三十九章中，业经说过。尧、舜、禹的相继，乃王位而非君位，这正和蒙古自成吉思汗以后的汗位一样。成吉思汗以后的大汗，也还是出于公举的（详见第二十七章）。前一个王老了，要指定一人替代，正可见得此时各部族之间，已有较密切的关系，所以共主之位，不容空缺。自夏以后，变为父子相传，古人谓之“家天下”，又可见得被举为王的一个部族，渐次强盛，可以久居王位了。&lt;/p>
&lt;p>尧、舜、禹之间，似乎还有一件大事，那便是汉族的开始西迁。古书中屡次说颛顼、帝喾、尧、舜、禹和共工、三苗的争斗（《淮南子·天文训》、《兵略训》，都说共工与颛顼争，《原道训》说共工与帝喾争。《周书·史记篇》说：共工亡于唐氏。《书经·尧典》说：舜流共工于幽州。《荀子·议兵篇》说：禹伐共工。《书经·尧典》又说：舜迁三苗于三危。《甫刑》说：“皇帝遏绝苗民，无世在下。”皇帝，《疏》引郑注以为颛顼，与《国语》、《楚语》相合。而《战国·魏策》，《墨子》的《兼爱》、《非攻》，《韩非子》的《五蠹》，亦均载禹征三苗之事）。共工、三苗都是姜姓之国，似乎姬、姜之争，历世不绝，而结果是姬姓胜利的。我的看法，却不是如此。《国语·周语》说：“共工欲壅防百川，堕高堙卑，鲧称遂共工之过，禹乃高高下下，疏川导滞。”似乎共工和鲧，治水都是失败的，至禹乃一变其法。然《礼记·祭法德》说“共工氏之霸九州也，其子曰后土，能平九州”，则共工氏治水之功，实与禹不相上下。后人说禹治水的功绩，和唐、虞、夏间的疆域，大抵根据《书经》中的《禹贡》，其实此篇所载，必非禹时实事。《书经》的《皋陶谟》载禹自述治水之功道：“予决九川，距四海，濬畎浍距川。”九川特极言其多。四海的海字，乃晦暗之义。古代交通不便，又各部族之间，多互相敌视，本部族以外的情形，就茫昧不明，所以夷、蛮、戎、狄，谓之四海（见《尔雅·释地》，中国西北两面均无海，而古称四海者以此）。州洲本系一字，亦即今之岛字，说见第五十章。《说文》川部：“州，水中可居者。昔尧遭洪水，民居水中高土，故曰九州。”此系唐、虞、夏间九州的真相，决非如《禹贡》所述，跨今黄河、长江两流域。同一时代的人，知识大抵相类，禹的治水，能否一变共工及鲧之法，实在是一个疑问。堙塞和疏导之法，在一个小区域之内，大约共工、鲧、禹，都不免要并用的。但区域既小，无论堙塞，即疏导，亦决不能挽回水灾的大势，所以我疑心共工、鲧、禹，虽然相继施功，实未能把水患解决，到禹的时代，汉族的一支，便开始西迁了。尧的都城，《汉书·地理志》说在晋阳，即今山西的太原县。郑玄《诗谱》说他后迁平阳，在今山西的临汾县。《帝王世纪》说舜都蒲阪，在今山西的永济县。又说禹都平阳，或于安邑，或于晋阳，安邑是今山西的夏县。这都是因后来的都邑而附会。《太平御览·州郡部》引《世本》说：尧之都后迁涿鹿；《孟子·离娄下篇》说：“舜生于诸冯，迁于负夏，卒于鸣条”。这都是较古之说。涿鹿在彭城说已见前。诸冯、负夏、鸣条皆难确考。然鸣条为后来汤放桀之处，桀当时是自西向东走的，则鸣条亦必在东方。而《周书·度邑解》说：“自洛汭延于伊汭，居易无固，其有夏之居。”这虽不就是禹的都城，然自禹的儿子启以后，就不闻有和共工、三苗争斗之事，则夏朝自禹以后，逐渐西迁，似无可疑。然则自黄帝至禹，对姜姓部族争斗的胜利，怕也只是姬姓部族自己夸张之辞，不过只有姬姓部族的传说，留遗下来，后人就认为事实罢了。为什么只有姬姓部族的传说，留遗于后呢？其中仍有个关键。大约当时东方的水患，是很烈的，而水利亦颇饶。因其水利颇饶，所以成为汉族发祥之地。因其水患很烈，所以共工、鲧、禹，相继施功而无可如何。禹的西迁，大约是为避水患的。当时西边的地方，必较东边为瘠，所以非到水久治无功时，不肯迁徙。然既迁徙之后，因地瘠不能不多用人力，文明程度转而因此进步，而留居故土的部族，反落其后了。这就是自夏以后，西方的历史传者较详，而东方较为茫昧之故。然则夏代的西迁，确是古史上的一个转折，而夏朝亦确是古史上的一个界划了。&lt;/p>
&lt;h1 id="第四章夏殷西周的事迹">
 第四章　夏殷西周的事迹
 &lt;a class="anchor" href="#%e7%ac%ac%e5%9b%9b%e7%ab%a0%e5%a4%8f%e6%ae%b7%e8%a5%bf%e5%91%a8%e7%9a%84%e4%ba%8b%e8%bf%b9">#&lt;/a>
&lt;/h1>
&lt;p>夏代事迹，有传于后的，莫如太康失国少康中兴一事。这件事，据《左传》、《周书》、《墨子》、《楚辞》所载（《左传》襄公四年、哀公元年，《周书·尝麦解》，《墨子·非乐》，《楚辞·离骚》），大略是如此的。禹的儿子启，荒于音乐和饮食。死后，他的儿子太康兄弟五人，起而作乱，是为五观。太康因此失国，人民和政权，都入于有穷后羿之手。太康传弟仲康，仲康传子相（夏朝此时，失掉的是王位，并非君位，所以仍旧相传）。羿因荒于游畋，又为其巨寒浞所杀。寒浞占据了羿的妻妾，生了两个儿子：一个唤做浇，一个唤做豷。夏朝这时候，依靠他同姓之国斟灌和斟寻。寒浞使浇把他们都灭掉，又灭掉夏后相。使浇住在唤做过，豷住在唤做戈的地方。夏后相的皇后，是仍国的女儿，相被灭时，正有身孕，逃归母家，生了一个儿子，是为少康。做了仍国的牧正。寒浞听得他有才干，使浇去寻找他。少康逃到虞国。虞国的国君，把两个女儿嫁给他，又把唤做纶的地方封他。有一个唤做靡的，当羿死时，逃到有鬲氏，就从有鬲氏收合斟灌、斟寻的余众，把寒浞灭掉。少康灭掉了浇，少康的儿子杼又灭掉了豷。穷国就此灭亡。这件事，虽然带些神话和传说的性质，然其匡廓尚算明白，颇可据以推求夏代的情形。旧说的释地，是全不足据的。《左传》说“后羿自迁于穷石”，又说羿“因夏民以代夏政”，则穷石即非夏朝的都城，亦必和夏朝的都城相近。《路史》说安丰有穷谷、穷水，就是穷国所在，其地在今安徽霍邱县。《汉书·地理志》《注》引应劭说：有穷是偃姓之国，皋陶之后。据《史记·五帝本纪》，皋陶之后，都是封在安徽六安一带的。过不可考。戈，据《左传》，地在宋、郑之间（见《左传》哀公十二年）。《春秋》桓公五年，天王使仍叔之子来聘，仍，《榖梁》作任，地在今山东的济宁县。虞国当系虞舜之后，旧说在今河南的虞城县。《周书》称太康兄弟五人为“殷之五子”。又说：“皇天哀禹，赐以彭寿，思正夏略。”殷似即后来的亳殷，在今河南的偃师县（即下文所引《春秋繁露》说汤作官邑于下洛之阳的。官宫二字古通用，作官邑就是造房屋和城郭。商朝的都城所在，都称为亳，此地大约本名殷，商朝所以又称殷朝）。彭寿该是立国于彭城的。按《世本》说禹都阳城，地在今河南的登封县，西迁未必能如此之速。综观自太康至少康之事，似乎夏朝的根据地，本在安徽西部，而逐渐迁徙到河南去，入于上章所引《周书》所说的“自洛汭延于伊汭”这一个区城的。都阳城该是夏朝后代的事，而不是禹时的事。从六安到霍邱，地势比较高一些，从苏北鲁南避水患而迁于此，又因战争的激荡而西北走向河南，似乎于情事还合。&lt;/p>
&lt;p>&lt;img src="img/000008.jpg" alt="" />
●夏·乳钉纹平底爵高22.5厘米，流至尾长31.5厘米，1975年河南偃师二里头出土&lt;/p>
&lt;p>但在这时候，东方的势力，亦还不弱，所以后来夏朝卒亡于商。商朝的始祖名契，封于商。郑玄说地在大华之阳，即今陕西的商县，未免太远。《史记·殷本纪》说：“自契至于成汤八迁。”《世本》说契居蕃，契的儿子昭明居砥石，昭明的儿子相土居商丘，扬雄《兖州牧箴》说“成汤五徙，卒归于亳”，合之恰得八数。蕃当即汉朝的蕃县，为今山东的滕县。商丘，当即后来宋国的都城，为今河南的商丘县。五迁地难悉考。据《吕览·慎大》、《具备》两篇，则汤尝居郼，郼即韦，为今河南的滑县。《春秋繁露·三代改制质文篇》说“汤受命而王，作官邑于下洛之阳”，此当即亳殷之地。《诗·商颂》说：“韦，顾既伐，昆吾，夏桀。”顾在今山东的范县。昆吾，据《左传》昭公十二年《传》楚灵王说“昔我皇祖伯父昆吾，旧许是宅”，该在今河南的许昌县，而哀公十七年，又说卫国有昆吾之观，卫国这时候，在今河北的濮阳县，则昆吾似自河北迁于河南。《史记·殷本纪》说：“汤自把钺以伐昆吾，遂伐桀。”“桀败于有娀之虚，桀奔于鸣条。”《左传》昭公四年“夏桀为仍之会，有缗叛之”，《韩非子·十过篇》亦有这话，仍作娀，则有娀，即有仍。鸣条为舜卒处，已见上章。合观诸说，商朝似乎兴于今鲁、豫之间，汤先平定了河南的北境，然后向南攻桀，桀败后是反向东南逃走的。观桀之不向西走而向东逃，可见此时伊、洛以西之地，还未开辟。&lt;/p>
&lt;p>据《史记》的《夏本纪》、《殷本纪》，夏朝传国共十七代，商朝则三十代。商朝的世数所以多于夏，大约是因其兼行兄终弟及之制而然。后来的鲁国，自庄公以前，都是一生一及，吴国亦有兄终弟及之法，请见第三十八章，这亦足以证明商朝的起于东方。商朝的事迹，较夏朝传者略多。据《史记》：成汤以后，第四代大甲，第九代大戊，第十三代祖乙，第十九代盘庚，第二十二代武丁，都是贤君，而武丁之时，尤其强盛。商朝的都城，是屡次迁徙的。第十代仲丁迁于隞地，在今河南荥泽县（隞，《书序》作嚣，《书序》不一定可信，所以今从《史记》。隞的所在，亦有异说。但古书皆东周至汉的人所述，尤其大多数是汉朝人写下来的，所以用的大抵多是当时的地名，所以古书的释地，和东周、秦、汉时地名相近的，必较可信。如隞即敖，今之荥泽县，为秦汉间敖仓所在，以此释仲丁所迁之隞，确实性就较大些。这是治古史的通例，不能一一具说，特于此发其凡）。第十二代河亶甲居相，在今河南内黄县。第十三代祖乙迁于邢，在今河北邢台县。到盘庚才迁回成汤的旧居亳殷。第二十七代武乙，复去亳居河北。今河南安阳县北的小屯村，即发现龟甲兽骨之处，据史学家所考证，其地即《史记·项羽本纪》所谓殷墟，不知是否武乙时所都。至共第三十代即最后一个君主纣，则居于朝歌，在今河南淇县。综观商朝历代的都邑，都在今河南省里的黄河两岸，还是汤居郼，营下洛之阳的旧观。周朝的势力，却更深入西北部了。&lt;/p>
&lt;p>周朝的始祖名弃，是舜之时居稷官的，封于邰。历若干代，至不窋，失官，奔于戎狄之间。再传至公刘，居邠，仍从事于农业。又十传至古公亶父，复为狄所逼，徙岐山下。邰，旧说是今陕西的武功县。邠是今陕西的邠县，岐是今陕西的岐山县。近人钱穆说，《左传》昭公元年说金天氏之裔子台骀封于汾川，《周书·度邑篇》说武王升汾之阜以望商邑，汾即邠，邰则因台骀之封而得名，都在今山西境内。亶父逾梁山而至岐，梁山在今陕西韩城县，岐山亦当距梁山不远（见所著《周初地理考》）。据他这说法，则后来文王居丰，武王居镐，在今陕西鄠县界内的，不是东下，乃是西上了。河、汾下流和渭水流域，地味最为肥沃，周朝是农业部族，自此向西拓展，和事势是很合的。古公亶父亦称太王，周至其时始强盛。传幼子季历以及文王，《论语》说他“三分天下有其二”（见《泰伯下篇》）。文王之子武王，遂灭纣。文王时曾打破耆国，而殷人振恐，武王则渡孟津而与纣战，耆国，在今山西的黎城县，自此向朝歌，乃今出天井关南下的隘道，孟津在今河南孟县南，武王大约是出今潼关到此的，这又可以看出周初自西向东发展的方向。然武王虽胜纣，并未能把商朝灭掉，仍以纣地封其子武庚，而使其弟管叔、蔡叔监之。武王崩，子成王幼，武王弟周公摄政，管、蔡和武庚都叛。据《周书·作雒解》，是时叛者，又有徐、奄及熊、盈。徐即后来的徐国，地在泗水流域，奄即后来的鲁国，熊为楚国的氏族，盈即嬴，乃秦国的姓。可见东方诸侯，此时皆服商而不服周。然周朝此时，颇有新兴之气。周公自己东征，平定了武庚和管叔、蔡叔，灭掉奄国。又使其子伯禽平定了淮夷、徐戎。于是封周公于鲁，使伯禽就国，又封太公望于齐，又经营今洛阳之地为东都，东方的旧势力，就给西方的新势力压服了。周公平定东方之后，据说就制礼作乐，摄政共七年，而归政于成王。周公死后，据说又有所谓“雷风之变”。这件事情，见于《书经》的《金縢篇》。据旧说：武王病时，周公曾请以身代，把祝策藏在金縢之匮中。周公死，成王葬以人臣之礼。天大雷雨，又刮起大风，田禾都倒了，大木也拔了出来。成王大惧，开金縢之匮，才知道周公请代武王之事，乃改用王礼葬周公，这一场灾异，才告平息。据郑玄的说法，则武王死后三年，成王服满了，才称自己年纪小，求周公摄政。摄政之后，管叔、蔡叔散布谣言，说周公要不利于成王，周公乃避居东都。成王尽执周公的属党。遇见了雷风之变，才把周公请回来。周公乃重行摄政。此说颇不合情理，然亦不会全属子虚。《左传》昭公七年，昭公要到楚国去，梦见襄公和他送行。子服惠伯说：“先君未尝适楚，故周公祖以道之，襄公适楚矣，而祖以道君。”据此，周公曾到过楚国，而《史记·蒙恬列传》，亦有周公奔楚之说，我颇疑心周公奔楚及其属党被执，乃是归政后之事。后来不知如何，又回到周朝。周公是否是善终，亦颇有可疑，杀害了一个人，因迷信的关系，又去求媚于他，这是野蛮时代常有的事，不足为怪。如此，则两说可通为一。楚国封于丹阳，其地实在丹、淅两水的会口（宋翔凤说，见《过庭录·楚鬻熊居丹阳武王徙郢考》），正当自武关东南出之路，据周公奔楚一事，我们又可见得周初发展的一条路线了。&lt;/p>
&lt;p>成王和他的儿子康王之时，称为西周的盛世。康王的儿子昭王，“南巡守不返，卒于江上”（《史记·周本纪》文）。这一个江字，也是南方之水的通称。其实昭王是伐楚而败，淹死在汉水里的，所以后来齐桓公伐楚，还把这件事情去诘问楚国（见《左传》僖公四年）。周朝对外的威力，开始受挫了。昭王子穆王，西征犬戎。其时徐偃王强，《后汉书·东夷传》谓其“率九夷以伐宗周，西至河上”。《后汉书》此语，未知何据（《博物志》亦载徐偃王之事，但《后汉书》所据，并不就是《博物志》，该是同据某一种古说的）。《礼记·檀弓下篇》载徐国容居的话，说“昔我先君驹王，西讨济于河”。驹王疑即偃王，则《后汉书》之说亦非全属子虚，被压服的东方，又想恢复其旧势了。然穆王使楚伐徐，偃王走死，则仍为西方所压服。穆王是周朝的雄主，在位颇久，当其时，周朝的声势，是颇振起的，穆王死后，就无此盛况了。穆王五传至厉王，因暴虐，为国人所逐，居外十四年。周朝的卿士周公、召公当国行政，谓之共和。厉王死于外，才立其子宣王。宣王号称中兴，然其在位之三十九年，与姜氏之戎战于千，为其所败。千在今山西的介休县，则周朝对于隔河的地方，业经控制不住，西方戎狄的势力，也渐次抬头了。至子幽王，遂为犬戎和南阳地方的申国所灭。幽王灭亡的事情，《史记》所载的，恢诡有类平话，决不是真相。《左传》昭公二十六年，载周朝的王子朝告诸侯的话，说这时候“携王干命，诸侯替之，而建王嗣，用迁郏鄏”（即东都之地，见《左传》宣公三年）。则幽王死后，西畿之地，还有一个携王。周朝当时，似乎是有内忧兼有外患的。携王为诸侯所废，周朝对于西畿之地，就不能控制了。而且介休败了；出武关向丹、淅的路，又已不通，只有对于东畿，还保存着相当的势力。平王于是迁居洛阳，号称东周，其事在公元前770年。&lt;/p>
&lt;h1 id="第五章春秋战国的竞争和秦国的统一">
 第五章　春秋战国的竞争和秦国的统一
 &lt;a class="anchor" href="#%e7%ac%ac%e4%ba%94%e7%ab%a0%e6%98%a5%e7%a7%8b%e6%88%98%e5%9b%bd%e7%9a%84%e7%ab%9e%e4%ba%89%e5%92%8c%e7%a7%a6%e5%9b%bd%e7%9a%84%e7%bb%9f%e4%b8%80">#&lt;/a>
&lt;/h1>
&lt;p>文化是从一个中心点，逐渐向各方面发展的。西周以前所传的，只有后世认为共主之国一个国家的历史，其余各方面的情形，都很茫昧。固然，书阙有间，不能因我们之无所见而断言其无有，然果有文化十分发达的地方，其事实也决不会全然失传的，于此，就可见得当时的文明，还是限于一个小区域之内了。东周以后则不然，斯时所传者，以各强国和文化较发达的地方的事迹为多，所谓天子之国，转若在无足重轻之列。原来古代所谓中原之地，不过自泰岱以西，华岳以东，太行以南，淮、汉以北，为今河南、山东的大部分，河北、山西的小部分。渭水流域的开发，怕还是西周兴起以来数百年间之事。到春秋时代，情形就大不然了。当时号称大国的，有晋、楚、齐、秦，其兴起较晚的，则有吴、越，乃在今山西的西南境，山东的东北境，陕西的中部，甘肃的东部，及江苏、浙江、安徽之境。在向来所称为中原之地的鲁、卫、宋、郑、陈、蔡、曹、许等，反夷为二三等国了。这实在是一个惊人的文化扩张。其原因何在呢？居于边地之国，因为和异族接近，以竞争磨砺而强，而其疆域亦易于拓展，该是其中最主要的。&lt;/p>
&lt;p>“周之东迁，晋、郑焉依。”（见《左传》隐公六年）即此便可见得当时王室的衰弱。古代大国的疆域，大约方百里，至春秋时则夷为三等国，其次等国大约方五百里，一等国则必方千里以上，请见第三十九章。当西周之世，合东西两畿之地，优足当春秋时的一个大国而有余，东迁以后，西畿既不能恢复，东畿地方，又颇受列国的剥削，周朝自然要夷于鲁、卫了。古语说“天无二日，民无二王”，这只是当时的一个希望。事实上，所谓王者，亦不过限于一区域之内，并不是普天之下，都服从他的。当春秋时，大约吴、楚等国称雄的区域，原不在周朝所管辖的范围内，所以各自称王。周天子所管辖的区域，因强国不止一个，没有一国能尽数慑服各国，所以不敢称王，只得以诸侯之长，即所谓霸主自居，这话在第三十九章中，亦已说过。所以春秋时代，大局的变迁，系于几个霸国手里。春秋之世，首起而称霸的是齐桓公。当时异民族杂居内地的颇多，也有相当强盛的，同族中的小国，颇受其压迫。（一）本来古代列国之间，多有同姓或婚姻的关系。（二）其不然的，则大国受了小国的朝贡，亦有加以保护的义务。（三）到这时候，文化相同之国，被文化不同之国所压迫，而互相救援，那更有些甫有萌芽的微茫的民族主义在内了。所以攘夷狄一举，颇为当时之人所称道。在这一点上，齐桓公的功绩是颇大的。他曾却狄以存邢、卫，又尝伐山戎以救燕（这个燕该是南燕，在今河南的封丘县。《史记》说它就是战国时的北燕，在今河北蓟县，怕是弄错了的，因为春秋时单称为燕的，都是南燕。即北燕的初封，我疑其亦距封丘不远，后来才迁徙到今蓟县，但其事无可考）。而他对于列国，征伐所至亦颇广。曾南伐楚，西向干涉晋国内乱，晚年又曾经略东夷。古人说“五霸桓公为盛”，信非虚语了。齐桓公的在位，系自前685至643年。桓公死后，齐国内乱，霸业遽衰。宋襄公欲继之称霸。然宋国较小，实力不足，前638年，为楚人所败，襄公受伤而死，北方遂无霸主。前632年，晋文公败楚于城濮（今山东濮县），楚国的声势才一挫。此时的秦国，亦已尽取西周旧地，东境至河，为西方一强国，然尚未能干涉中原之事。秦穆公初和晋国竞争不胜，前624年，打败了晋国的兵，亦仅称霸于西戎。中原之地，遂成为晋、楚争霸之局。前597年，楚庄王败晋于邲（今河南郑县），称霸。前591年卒。此时齐顷公亦图与晋争霸。前589年，为晋所败。前575年，晋厉公又败楚于鄢陵（今河南鄢县）。然楚仍与晋兵争不息。至前561年，楚国放弃争郑，晋悼公才称复霸。前546年，宋大夫向戌，善于晋、楚的执政，出而合二国之成，为弭兵之会，晋、楚的兵争，至此才告休息。自城濮之战至此，凡八十七年。弭兵盟后，楚灵王强盛，北方诸侯多奔走往与其朝会。然灵王奢侈而好兵争，不顾民力，旋因内乱被弑。此时吴国日渐强盛，而楚国政治腐败，前506年，楚国的都城，为吴阖闾所破，楚昭王藉秦援，仅得复国，楚国一时陷于不振，然越国亦渐强，起而乘吴之后。前496年，阖闾伐越，受伤而死。前494年，阖闾子夫差破越。夫差自此骄侈，北伐齐、鲁，与晋争长于黄池（今河南封丘县），前473年，越勾践灭吴，越遂徙都琅邪，与齐、晋会于徐州（今山东诸城县），称为霸王。然根基因此不固，至前333年而为楚所灭。&lt;/p></description></item><item><title>封面-版权-读后-自序</title><link>https://lwmfjc.github.io/zh/docs/culture/%E4%B8%AD%E5%9B%BD%E9%80%9A%E5%8F%B2%E5%90%95%E6%80%9D%E5%8B%89/%E5%B0%81%E9%9D%A2-%E7%89%88%E6%9D%83-%E8%AF%BB%E5%90%8E-%E8%87%AA%E5%BA%8F/</link><pubDate>Thu, 02 Jan 2025 23:15:33 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E4%B8%AD%E5%9B%BD%E9%80%9A%E5%8F%B2%E5%90%95%E6%80%9D%E5%8B%89/%E5%B0%81%E9%9D%A2-%E7%89%88%E6%9D%83-%E8%AF%BB%E5%90%8E-%E8%87%AA%E5%BA%8F/</guid><description>&lt;h1 id="版权信息">
 版权信息
 &lt;a class="anchor" href="#%e7%89%88%e6%9d%83%e4%bf%a1%e6%81%af">#&lt;/a>
&lt;/h1>
&lt;p>中国通史&lt;/p>
&lt;p>作　　者：吕思勉&lt;/p>
&lt;p>责任编辑：周　宏&lt;/p>
&lt;p>特约编辑：邱承辉&lt;/p>
&lt;p>装帧设计：利　锐&lt;/p>
&lt;p>本书由天津博集新媒科技有限公司授权亚马逊全球范围发行&lt;/p>
&lt;p>&lt;img src="img/000001.jpg" alt="logo" />&lt;/p>
&lt;p>**目录 **&lt;/p>
&lt;p>版权信息&lt;/p>
&lt;p>吕思勉先生的史识与史德——《中国通史》读后&lt;/p>
&lt;p>自序
绪论&lt;/p>
&lt;p>上编 中国政治史
第一章 中国民族的由来&lt;/p>
&lt;p>第二章 中国史的年代&lt;/p>
&lt;p>第三章 古代的开化&lt;/p>
&lt;p>第四章 夏殷西周的事迹&lt;/p>
&lt;p>第五章 春秋战国的竞争和秦国的统一&lt;/p>
&lt;p>第六章 古代对于异族的同化&lt;/p>
&lt;p>第七章 古代社会的综述&lt;/p>
&lt;p>第八章 秦朝治天下的政策&lt;/p>
&lt;p>第九章 秦汉间封建政体的反动&lt;/p>
&lt;p>第十章 汉武帝的内政外交&lt;/p>
&lt;p>第十一章 前汉的衰亡&lt;/p>
&lt;p>第十二章 新室的兴亡&lt;/p>
&lt;p>第十三章 后汉的盛衰&lt;/p>
&lt;p>第十四章 后汉的分裂和三国&lt;/p>
&lt;p>第十五章 晋初的形势&lt;/p>
&lt;p>第十六章 五胡之乱（上）&lt;/p>
&lt;p>第十七章 五胡之乱（下）&lt;/p>
&lt;p>第十八章 南北朝的始末&lt;/p>
&lt;p>第十九章 南北朝隋唐间塞外的形势&lt;/p>
&lt;p>第二十章 隋朝和唐朝的盛世&lt;/p>
&lt;p>第二十一章 唐朝的中衰&lt;/p>
&lt;p>第二十二章 唐朝的衰亡和沙陀的侵入&lt;/p>
&lt;p>第二十三章 五代十国的兴亡和契丹的侵入&lt;/p>
&lt;p>第二十四章 唐宋时代中国文化的转变&lt;/p>
&lt;p>第二十五章 北宋的积弱&lt;/p></description></item><item><title>Markdown超级教程</title><link>https://lwmfjc.github.io/zh/docs/technology/Markdown/_SuperTutorial_/</link><pubDate>Wed, 01 Jan 2025 21:50:58 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Markdown/_SuperTutorial_/</guid><description>&lt;blockquote>
&lt;p>全篇转载自 
&lt;a target="_blank" href="https://forum-zh.obsidian.md/t/topic/435">https://forum-zh.obsidian.md/t/topic/435&lt;/a>&lt;br>
作者obsidian论坛名-yikelee 成雙醬，感谢作者无私分享！&lt;/p>
&lt;/blockquote></description></item><item><title>_TheLinuxCommandsHandbook_</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/_TheLinuxCommandsHandbook_/</link><pubDate>Tue, 31 Dec 2024 21:52:35 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/_TheLinuxCommandsHandbook_/</guid><description>&lt;blockquote>
&lt;p>《TheLinuxCommandsHandbook》结合视频 
&lt;a target="_blank" href="https://www.youtube.com/watch?v=ZtqBQ68cfJc">https://www.youtube.com/watch?v=ZtqBQ68cfJc&lt;/a> 看的&lt;/p>
&lt;/blockquote>
&lt;h1 id="command意义">
 Command意义
 &lt;a class="anchor" href="#command%e6%84%8f%e4%b9%89">#&lt;/a>
&lt;/h1>
&lt;p>更快，自动化，在任何Linux上工作，有些工作的基本需求&lt;/p>
&lt;h1 id="系统-unix和windows">
 系统-Unix和Windows
 &lt;a class="anchor" href="#%e7%b3%bb%e7%bb%9f-unix%e5%92%8cwindows">#&lt;/a>
&lt;/h1>
&lt;p>绿色-开源&lt;br>
红色-闭源&lt;br>
黄色-混合&lt;br>
&lt;img src="img/ly-20241226190213859.png" alt="" />&lt;/p>
&lt;p>图片中的Linux只是类Unix，而不是真正的Unix&lt;/p>
&lt;h1 id="freesoftware开源">
 FreeSoftware，开源
 &lt;a class="anchor" href="#freesoftware%e5%bc%80%e6%ba%90">#&lt;/a>
&lt;/h1>
&lt;p>GNU与Linux&lt;/p>
&lt;blockquote>
&lt;p>Linux只是一个&lt;strong>操作系统内核&lt;/strong>而已，而GNU提供了大量的自由软件来丰富在其之上各种应用程序。&lt;br>
绝大多数基于Linux内核的操作系统使用了大量的&lt;strong>GNU软件&lt;/strong>，包括了一个shell程序、工具、程序库、编译器及工具，还有许多其他程序 &lt;br>
&lt;strong>我们常说的Linux，准确地来讲，应该是叫“GNU/Linux”&lt;/strong>。虽然，我们没有为GNU和Linux的开发做出什么贡献，但是我们可以为GNU和Linux的宣传和应用做出微薄的努力，至少我们能够准确地去向其他人解释清楚GNU、Linux以及GNU/Linux之间的区别。让我们一起为GNU/Linux的推广贡献出自己的力量！&lt;/p>
&lt;/blockquote>
&lt;p>内核，用来连接硬件和软件的&lt;/p>
&lt;h1 id="trueunix">
 TrueUNIX
 &lt;a class="anchor" href="#trueunix">#&lt;/a>
&lt;/h1>
&lt;p>Unix一开始是收费的，后面出现Unix-like（类Unix），和Unix标准兼容。&lt;br>
Linux不是真正的Unix，而是类Unix。&lt;br>
Linux本身只是一个内核，连接&lt;strong>硬件&lt;/strong>和&lt;strong>软件&lt;/strong>&lt;br>
LinuxDistributions，Linux发行版(1000多种)&lt;br>
Linux内核是一些GUN工具，文档，包管理器，桌面环境窗口管理，和系统一些其他东西组成的一个系统&lt;br>
&lt;img src="img/ly-20241226190213859.png" alt="" />&lt;/p>
&lt;p>有开源的和不开源的，Linux(LinuxGUN)完全开源&lt;/p>
&lt;h1 id="shell">
 shell
 &lt;a class="anchor" href="#shell">#&lt;/a>
&lt;/h1>
&lt;p>windows（powershell）&lt;br>
把&lt;strong>命令&lt;/strong>交给系统&lt;br>
terminal（最古老时是一个硬件）&amp;ndash;屏幕+带键盘的物理设备，如今是一个软件&lt;br>
默认情况下，&lt;strong>Ubuntu和大多数Linux发行版&lt;/strong>是&lt;strong>bashshell&lt;/strong>，还有zsh&lt;/p>
&lt;h1 id="setup-and-installing">
 setup and installing
 &lt;a class="anchor" href="#setup-and-installing">#&lt;/a>
&lt;/h1>
&lt;p>如果有Mac或者其他Linux发行版，则不需要额外操作。（作者在Mac里装了Ubuntu虚拟机）&lt;/p>
&lt;h2 id="windowssubsystem">
 WindowsSubsystem
 &lt;a class="anchor" href="#windowssubsystem">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>wsl --install&lt;/code>&lt;br>
默认是Ubuntu&lt;/p>
&lt;h1 id="the-linux-handbook电子书内容">
 The Linux Handbook(电子书内容)
 &lt;a class="anchor" href="#the-linux-handbook%e7%94%b5%e5%ad%90%e4%b9%a6%e5%86%85%e5%ae%b9">#&lt;/a>
&lt;/h1>
&lt;p>&lt;strong>Linux 手册&lt;/strong>&lt;/p>
&lt;h2 id="preface">
 Preface
 &lt;a class="anchor" href="#preface">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>前言&lt;/strong>&lt;/p>
&lt;p>The Linux Handbook follows the 80/20 rule: learn in 20% of the time the 80% of a topic.&lt;br>
Linux 手册遵循 80/20 规则：用 20% 的时间学习某个主题的 80%。&lt;/p></description></item><item><title>01学天第一</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/01%E5%AD%A6%E5%A4%A9%E7%AC%AC%E4%B8%80/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/01%E5%AD%A6%E5%A4%A9%E7%AC%AC%E4%B8%80/</guid><description>&lt;h1 id="heading">
 #
 &lt;a class="anchor" href="#heading">#&lt;/a>
&lt;/h1></description></item><item><title>02为政第二</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/02%E4%B8%BA%E6%94%BF%E7%AC%AC%E4%BA%8C/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/02%E4%B8%BA%E6%94%BF%E7%AC%AC%E4%BA%8C/</guid><description/></item><item><title>03八佾第三</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/03%E5%85%AB%E4%BD%BE%E7%AC%AC%E4%B8%89/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/03%E5%85%AB%E4%BD%BE%E7%AC%AC%E4%B8%89/</guid><description/></item><item><title>04里仁第四</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/04%E9%87%8C%E4%BB%81%E7%AC%AC%E5%9B%9B/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/04%E9%87%8C%E4%BB%81%E7%AC%AC%E5%9B%9B/</guid><description/></item><item><title>05公治长第五</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/05%E5%85%AC%E5%86%B6%E9%95%BF%E7%AC%AC%E4%BA%94/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/05%E5%85%AC%E5%86%B6%E9%95%BF%E7%AC%AC%E4%BA%94/</guid><description/></item><item><title>06雍也第六</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/06%E9%9B%8D%E4%B9%9F%E7%AC%AC%E5%85%AD/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/06%E9%9B%8D%E4%B9%9F%E7%AC%AC%E5%85%AD/</guid><description/></item><item><title>07述而第七</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/07%E8%BF%B0%E8%80%8C%E7%AC%AC%E4%B8%83/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/07%E8%BF%B0%E8%80%8C%E7%AC%AC%E4%B8%83/</guid><description/></item><item><title>08泰伯第八</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/08%E6%B3%B0%E4%BC%AF%E7%AC%AC%E5%85%AB/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/08%E6%B3%B0%E4%BC%AF%E7%AC%AC%E5%85%AB/</guid><description/></item><item><title>09子罕第九</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/09%E5%AD%90%E7%BD%95%E7%AC%AC%E4%B9%9D/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/09%E5%AD%90%E7%BD%95%E7%AC%AC%E4%B9%9D/</guid><description/></item><item><title>10乡党第十</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/10%E4%B9%A1%E5%85%9A%E7%AC%AC%E5%8D%81/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/10%E4%B9%A1%E5%85%9A%E7%AC%AC%E5%8D%81/</guid><description/></item><item><title>11先进第十一</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/11%E5%85%88%E8%BF%9B%E7%AC%AC%E5%8D%81%E4%B8%80/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/11%E5%85%88%E8%BF%9B%E7%AC%AC%E5%8D%81%E4%B8%80/</guid><description/></item><item><title>12颜渊第十二</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/12%E9%A2%9C%E6%B8%8A%E7%AC%AC%E5%8D%81%E4%BA%8C/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/12%E9%A2%9C%E6%B8%8A%E7%AC%AC%E5%8D%81%E4%BA%8C/</guid><description/></item><item><title>13子路第十三</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/13%E5%AD%90%E8%B7%AF%E7%AC%AC%E5%8D%81%E4%B8%89/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/13%E5%AD%90%E8%B7%AF%E7%AC%AC%E5%8D%81%E4%B8%89/</guid><description/></item><item><title>14宪问第十四</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/14%E5%AE%AA%E9%97%AE%E7%AC%AC%E5%8D%81%E5%9B%9B/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/14%E5%AE%AA%E9%97%AE%E7%AC%AC%E5%8D%81%E5%9B%9B/</guid><description/></item><item><title>15卫灵公第十五</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/15%E5%8D%AB%E7%81%B5%E5%85%AC%E7%AC%AC%E5%8D%81%E4%BA%94/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/15%E5%8D%AB%E7%81%B5%E5%85%AC%E7%AC%AC%E5%8D%81%E4%BA%94/</guid><description/></item><item><title>16季氏第十六</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/16%E5%AD%A3%E6%B0%8F%E7%AC%AC%E5%8D%81%E5%85%AD/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/16%E5%AD%A3%E6%B0%8F%E7%AC%AC%E5%8D%81%E5%85%AD/</guid><description/></item><item><title>17阳货第十七</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/17%E9%98%B3%E8%B4%A7%E7%AC%AC%E5%8D%81%E4%B8%83/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/17%E9%98%B3%E8%B4%A7%E7%AC%AC%E5%8D%81%E4%B8%83/</guid><description/></item><item><title>18微子第十八</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/18%E5%BE%AE%E5%AD%90%E7%AC%AC%E5%8D%81%E5%85%AB/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/18%E5%BE%AE%E5%AD%90%E7%AC%AC%E5%8D%81%E5%85%AB/</guid><description/></item><item><title>19子张第十九</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/19%E5%AD%90%E5%BC%A0%E7%AC%AC%E5%8D%81%E4%B9%9D/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/19%E5%AD%90%E5%BC%A0%E7%AC%AC%E5%8D%81%E4%B9%9D/</guid><description/></item><item><title>20尧日第二十</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/20%E5%B0%A7%E6%97%A5%E7%AC%AC%E4%BA%8C%E5%8D%81/</link><pubDate>Sat, 28 Dec 2024 12:02:27 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%AE%BA%E8%AF%AD/%E8%AE%BA%E8%AF%AD%E7%9A%84%E7%94%9F%E6%B4%BB%E6%99%BA%E6%85%A7/20%E5%B0%A7%E6%97%A5%E7%AC%AC%E4%BA%8C%E5%8D%81/</guid><description/></item><item><title>基本知识</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%B5%84%E6%B2%BB%E9%80%9A%E9%89%B4/%E5%91%A8%E7%BA%AA/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</link><pubDate>Wed, 25 Dec 2024 11:53:40 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%B5%84%E6%B2%BB%E9%80%9A%E9%89%B4/%E5%91%A8%E7%BA%AA/%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</guid><description>&lt;h1 id="周朝君主世系图">
 周朝君主世系图
 &lt;a class="anchor" href="#%e5%91%a8%e6%9c%9d%e5%90%9b%e4%b8%bb%e4%b8%96%e7%b3%bb%e5%9b%be">#&lt;/a>
&lt;/h1>
&lt;h2 id="资治通鉴中">
 资治通鉴中
 &lt;a class="anchor" href="#%e8%b5%84%e6%b2%bb%e9%80%9a%e9%89%b4%e4%b8%ad">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>周威烈王&lt;/strong>始&lt;br>
&lt;img src="img/ly-20241225115821868.png" alt="" />&lt;/p>
&lt;h2 id="完整世系图">
 完整世系图
 &lt;a class="anchor" href="#%e5%ae%8c%e6%95%b4%e4%b8%96%e7%b3%bb%e5%9b%be">#&lt;/a>
&lt;/h2>
&lt;p>《资治通鉴》从&lt;strong>周威烈王&lt;/strong>(图里是32，这个第几任好像各家的算法不一致，不必深究)开始&lt;/p>
&lt;p>&lt;img src="img/ly-20241225115626940.png" alt="" />&lt;/p></description></item><item><title>001周纪一</title><link>https://lwmfjc.github.io/zh/docs/culture/%E8%B5%84%E6%B2%BB%E9%80%9A%E9%89%B4/%E5%91%A8%E7%BA%AA/001%E5%91%A8%E7%BA%AA%E4%B8%80/</link><pubDate>Tue, 24 Dec 2024 21:48:46 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/culture/%E8%B5%84%E6%B2%BB%E9%80%9A%E9%89%B4/%E5%91%A8%E7%BA%AA/001%E5%91%A8%E7%BA%AA%E4%B8%80/</guid><description>&lt;p>&lt;strong>資治通鑑卷第一&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>朝散大夫右諫議大夫權御史中丞充理檢使上護軍賜紫金魚袋臣&lt;/strong>&lt;/p>
&lt;p>&lt;strong>司马光　奉敕编集&lt;/strong>&lt;/p>
&lt;p>&lt;strong>後&lt;/strong> &lt;strong>學&lt;/strong> &lt;strong>天&lt;/strong> &lt;strong>台&lt;/strong>&lt;/p>
&lt;p>&lt;strong>胡三省　音　　註&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>周紀一&lt;/strong> 起著雍攝提格（戊寅），盡玄黓困敦（壬子），凡三十五年。&lt;/p>
&lt;p>&lt;code>爾雅&lt;/code>：太歲在甲曰閼逢，在乙曰旃zhān蒙，在丙曰柔兆，在丁曰強圉，在戊曰著雍，在己曰屠維，在庚曰上章，在辛曰重光，在壬曰玄黓yì，在癸曰昭陽，是為歲陽。在寅曰攝提格，在卯曰單閼，在辰曰執徐，在巳曰大荒落，在午曰敦牂，在未曰協洽，在申曰涒tūn灘，在酉曰作噩，在戌曰掩茂，在亥曰大淵獻，在子曰困敦，在丑曰赤奮若，是為歲名。&lt;code>周紀&lt;/code>分註「起著雍攝提格」，起戊寅也。「盡玄黓困敦」，盡壬子也。閼，讀如字；&lt;code>史記&lt;/code>作「焉」，於乾翻。著，陳如翻。雍，于容翻。黓，逸職翻。單閼，上音丹，又特連翻；下烏葛翻，又于連翻。牂，作郎翻。涒，吐魂翻。灘，吐丹翻。困敦，音頓。&lt;em>杜預&lt;/em> &lt;code>世族譜&lt;/code>曰：&lt;em>周&lt;/em>，&lt;em>黃帝&lt;/em>之苗裔，&lt;em>姬&lt;/em>姓。&lt;em>后稷&lt;/em>之後，封于&lt;em>邰&lt;/em>；及&lt;em>夏&lt;/em>衰，&lt;em>稷&lt;/em>子&lt;em>不窋&lt;/em>zhú竄於西戎。至十二代孫&lt;em>太王&lt;/em>，避&lt;em>狄&lt;/em>遷&lt;em>岐&lt;/em>；至孫&lt;em>文王&lt;/em>受命，&lt;em>武王&lt;/em>克&lt;em>商&lt;/em>而有天下。自&lt;em>武王&lt;/em>至&lt;em>平王&lt;/em>凡十三世，自&lt;em>平王&lt;/em>至&lt;em>威烈王&lt;/em>又十八世，自&lt;em>威烈王&lt;/em>至&lt;em>赧王&lt;/em>又五世。&lt;em>張守節&lt;/em>曰：因&lt;em>太王&lt;/em>居&lt;em>周原&lt;/em>，國號曰&lt;em>周&lt;/em>。&lt;code>地理志&lt;/code>云：&lt;em>右扶風美陽縣岐山&lt;/em>西北&lt;em>中水鄉&lt;/em>，&lt;em>周太王&lt;/em>所邑。&lt;code>括地志&lt;/code>云：故&lt;em>周城&lt;/em>一名&lt;em>美陽城&lt;/em>，在&lt;em>雍州武功縣&lt;/em>西北二十五里。紀，理也，統理眾事而系之年月。&lt;em>溫公&lt;/em>系年用&lt;code>春秋&lt;/code>之法，因&lt;code>史&lt;/code>、&lt;code>漢&lt;/code>本紀而謂之紀。邰，湯來翻。夏，戶雅翻。窋，竹律翻。在雍，於用翻。&lt;/p>
&lt;h1 id="威烈王">
 威烈王
 &lt;a class="anchor" href="#%e5%a8%81%e7%83%88%e7%8e%8b">#&lt;/a>
&lt;/h1>
&lt;p>名&lt;em>午&lt;/em>，&lt;em>考王&lt;/em>之子。&lt;code>諡法&lt;/code>：猛以剛果曰威；有功安民曰烈。&lt;em>沈約&lt;/em>曰：諸複諡，有諡人，無諡法。&lt;/p>
&lt;h2 id="二十三年戊寅前四零三">
 二十三年（戊寅，前四零三）
 &lt;a class="anchor" href="#%e4%ba%8c%e5%8d%81%e4%b8%89%e5%b9%b4%e6%88%8a%e5%af%85%e5%89%8d%e5%9b%9b%e9%9b%b6%e4%b8%89">#&lt;/a>
&lt;/h2>
&lt;p>上距&lt;code>春秋&lt;/code>獲麟七十八年，距&lt;code>左傳&lt;/code>&lt;em>趙襄子&lt;/em>惎jì&lt;em>智伯&lt;/em>事七十一年。惎，毒也，音其冀翻。&lt;/p>
&lt;p>1&lt;strong>初命&lt;em>晉&lt;/em>&lt;/strong>‹府新田，山西侯马›&lt;strong>大夫&lt;em>魏&lt;/em>&lt;/strong> ‹府安邑，山西夏县›&lt;em>&lt;strong>斯&lt;/strong>&lt;/em>、&lt;em>&lt;strong>趙&lt;/strong>&lt;/em>‹府晋阳，山西太原›&lt;em>&lt;strong>籍&lt;/strong>&lt;/em>、&lt;em>&lt;strong>韓&lt;/strong>&lt;/em>‹府平阳，山西临汾›&lt;strong>&lt;em>虔&lt;/em>為諸侯&lt;/strong>。此&lt;em>溫公&lt;/em>書法所由始也。&lt;em>魏&lt;/em>之先，&lt;em>畢公&lt;/em>高後，與&lt;em>周&lt;/em>同姓；其苗裔曰&lt;em>畢萬&lt;/em>，始封于&lt;em>魏&lt;/em>，至&lt;em>魏舒&lt;/em>，始為&lt;em>晉&lt;/em>正卿；三世至&lt;em>斯&lt;/em>。&lt;em>趙&lt;/em>之先，&lt;em>造父&lt;/em>後；至&lt;em>叔帶&lt;/em>，始自&lt;em>周&lt;/em>適&lt;em>晉&lt;/em>；至&lt;em>趙夙&lt;/em>，始封于&lt;em>耿&lt;/em>。至&lt;em>趙盾&lt;/em>，始為&lt;em>晉&lt;/em>正卿，六世至&lt;em>籍&lt;/em>。&lt;em>韓&lt;/em>之先，出於&lt;em>周武王&lt;/em>，至&lt;em>韓武子&lt;/em>事&lt;em>晉&lt;/em>，封于&lt;em>韓原&lt;/em>。至&lt;em>韓厥&lt;/em>，為&lt;em>晉&lt;/em>正卿；六世至&lt;em>虔&lt;/em>。三家者，世為&lt;em>晉&lt;/em>大夫，於&lt;em>周&lt;/em>則陪臣也。&lt;em>周&lt;/em>室既衰，&lt;em>晉&lt;/em>主&lt;em>夏&lt;/em>盟，以尊王室，故命之為伯。三卿竊&lt;em>晉&lt;/em>之權，暴蔑其君，剖分其國，此王法所必誅也。&lt;em>威烈王&lt;/em>不惟不能誅之，又命之為諸侯，是崇獎奸名犯分之臣也，&lt;code>通鑑&lt;/code>始於此，其所以謹名分歟！&lt;/p>
&lt;p>〖译文〗 [1]周威烈王姬午初次分封晋国大夫魏斯、赵籍、韩虔为诸侯国君。&lt;/p>
&lt;p>&lt;img src="img/000001.png" alt="" />&lt;/p>
&lt;p>&lt;img src="img/000002.png" alt="" />&lt;/p>
&lt;p>&lt;strong>臣&lt;em>光&lt;/em>曰：臣聞天子之職莫大於禮，禮莫大於分，分莫大於名。&lt;/strong> 分，扶問翻；下同。何謂禮？紀綱是也。&lt;strong>何謂分？君、臣是也。何謂名？公、侯、卿、大夫是也。&lt;/strong>&lt;/p>
&lt;p>〖译文〗 臣司马光曰：我知道天子的职责中最重要的是维护礼教，礼教中最重要的是区分地位，区分地位中最重要的是匡正名分。什么是礼教？就是法纪。什么是区分地位？就是君臣有别。什么是名分？就是公、侯、卿、大夫等官爵。&lt;/p>
&lt;p>&lt;strong>夫以四海之廣，&lt;/strong> 夫以，音扶。&lt;strong>兆民之眾，受制於一人，雖有絕倫之力，高世之智，莫&lt;/strong>【章︰十二行本「莫」下有「敢」字；乙十一行本同；孔本同。】&lt;strong>不奔走而服役者，豈非以禮為之紀綱&lt;/strong>【章︰十二行本，二字互乙；乙十一行本同；孔本同。】&lt;strong>哉！是故天子統三公，&lt;/strong> 統，他綜翻。&lt;strong>三公率諸侯，諸侯制卿大夫，卿大夫治士庶人。&lt;/strong> 治，直之翻。&lt;strong>貴以臨賤，賤以承貴。上之使下猶心腹之運手足，根本之制支葉，下之事上猶手足之衛心腹，支葉之庇本根，然後能上下相保而國家治安。&lt;/strong> 治，直吏翻。&lt;strong>故曰天子之職莫大於禮也。&lt;/strong>&lt;/p>
&lt;p>〖译文〗 四海之广，亿民之众，都受制于天子一人。尽管是才能超群、智慧绝伦的人，也不能不在天子足下为他奔走服务，这难道不是以礼作为礼纪朝纲的作用吗！所以，天子统率三公，三公督率诸侯国君，诸侯国君节制卿、大夫官员，卿、大夫官员又统治士人百姓。权贵支配贱民，贱民服从权贵。上层指挥下层就好像人的心腹控制四肢行动，树木的根和干支配枝和叶；下层服侍上层就好像人的四肢卫护心腹，树木的枝和叶遮护根和干，这样才能上下层互相保护，从而使国家得到长治久安。所以说，天子的职责没有比维护礼制更重要的了。&lt;/p>
&lt;p>&lt;strong>文王序&lt;code>易&lt;/code>，以&lt;code>乾&lt;/code>、&lt;code>坤&lt;/code>為首。&lt;em>孔子&lt;/em>系之曰：「天尊地卑，乾坤定矣。 卑高以陳，貴賤位矣。」&lt;/strong> 系，戶計翻。&lt;strong>言君臣之位猶天地之不可易也。&lt;code>春秋&lt;/code>抑諸侯，尊王&lt;/strong>【章︰十二行本「王」作「周」；乙十一行本同；孔本同；退齋校同。】&lt;strong>室，王人雖微，序於諸侯之上，以是見聖人於君臣之際未嘗不惓惓也&lt;/strong>。惓，逵員翻。&lt;code>漢劉向傳&lt;/code>：忠臣畎quǎn畝，猶不忘君惓惓之義也。惓惓，猶言勤勤也。&lt;strong>非有&lt;em>桀&lt;/em>&lt;/strong> ‹姒履癸›、&lt;em>&lt;strong>紂&lt;/strong>&lt;/em>‹子受辛›&lt;strong>之暴&lt;/strong>，&lt;em>&lt;strong>湯&lt;/strong>&lt;/em>‹子天乙›、&lt;em>&lt;strong>武&lt;/strong>&lt;/em>‹姬发›&lt;strong>之仁，人歸之，天命之，君臣之分當守節伏死而已矣。是故以&lt;em>微子&lt;/em>&lt;/strong> ‹子启›&lt;strong>而代&lt;em>紂&lt;/em>&lt;/strong>‹子受辛›&lt;strong>則&lt;em>成湯&lt;/em>&lt;/strong>‹子天乙›&lt;strong>配天矣，&lt;/strong>&lt;code>史記&lt;/code>：&lt;em>商帝乙&lt;/em>生三子：長曰&lt;em>微子啟&lt;/em>，次曰&lt;em>中衍&lt;/em>，季曰&lt;em>紂&lt;/em>。&lt;em>紂&lt;/em>之母為后。&lt;em>帝乙&lt;/em>欲立&lt;em>啟&lt;/em>為太子，太史據法爭之曰：「有妻之子，不可立妾之子。」乃立&lt;em>紂&lt;/em>。&lt;em>紂&lt;/em>卒以暴虐亡&lt;em>殷國&lt;/em>。&lt;em>孔鄭玄&lt;/em>義曰：物之大者莫若於天；推父比天，與之相配，行孝之大，莫大於此；所謂「嚴父莫大於配天」也。又&lt;em>孔氏&lt;/em>曰：&lt;code>禮記&lt;/code>稱萬物本乎天，人本乎祖。俱為其本，可以相配，故王者皆以祖配天。&lt;code>諡法&lt;/code>：除殘去虐曰湯。然諡法起于&lt;em>周&lt;/em>；蓋&lt;em>殷&lt;/em>人先有此號，&lt;em>周&lt;/em>人遂引以為諡法。分，扶問翻。長，知兩翻。卒，子恤翻。&lt;strong>以&lt;em>季札&lt;/em>而君&lt;em>吳&lt;/em>則&lt;em>太伯&lt;/em>血食矣，&lt;/strong> 吳王壽夢有子四人：長曰&lt;em>諸樊&lt;/em>，次曰&lt;em>餘祭&lt;/em>，次曰&lt;em>餘昩&lt;/em>，次曰&lt;em>季札&lt;/em>。&lt;em>季札&lt;/em>賢，&lt;em>壽夢&lt;/em>欲立之，&lt;em>季札&lt;/em>讓不可，於是立&lt;em>諸樊&lt;/em>。&lt;em>諸樊&lt;/em>卒，以授&lt;em>餘祭&lt;/em>，欲兄弟以次相傳，必致國于&lt;em>季札&lt;/em>；&lt;em>季札&lt;/em>終讓而逃之。其後&lt;em>諸樊&lt;/em>之子&lt;em>光&lt;/em>與&lt;em>餘昩&lt;/em>之子&lt;em>僚&lt;/em>爭國，至於&lt;em>夫差&lt;/em>，&lt;em>吳&lt;/em>遂以亡。宗廟之祭用牲，故曰血食。&lt;em>太伯&lt;/em>，&lt;em>吳&lt;/em>立國之君。&lt;em>范寧&lt;/em>曰：太者，善大之稱；伯者，長也。&lt;em>周太王&lt;/em>之元子，故曰&lt;em>太伯&lt;/em>。&lt;em>陸德明&lt;/em>曰：壽夢，莫公翻。餘祭，側介翻。餘昩，音末。&lt;strong>然二子寧亡國而不為者，誠以禮之大節不可亂也。故曰禮莫大於分也。&lt;/strong>&lt;/p>
&lt;p>〖译文〗 周文王演绎排列《易经》，以乾、坤为首位。孔子解释说：“天尊贵，地卑微，阳阴于是确定。由低至高排列有序，贵贱也就各得其位。”这是说君主和臣子之间的上下关系就像天和地一样不能互易。《春秋》一书贬低诸侯，尊崇周王室，尽管周王室的官吏地位不高，在书中排列顺序仍在诸侯国君之上，由此可见孔圣人对于君臣关系的关注。如果不是夏桀、商纣那样的暴虐昏君，对手又遇上商汤、周武王这样的仁德明主，使人民归心、上天赐命的话，君臣之间的名分只能是作臣子的恪守臣节，矢死不渝。所以如果商朝立贤明的微子为国君来取代纣王，成汤创立的商朝就可以永配上天；而吴国如果以仁德的季札做君主，开国之君太伯也可以永享祭祀。然而微子、季札二人宁肯国家灭亡也不愿做君主，实在是因为礼教的大节绝不可因此破坏。所以说，礼教中最重要的就是地位高下的区分。&lt;/p>
&lt;p>&lt;strong>夫禮，辨貴賤，序親疏，裁群物，制庶事，非名不著，非器不形；名以命之，器以別之，&lt;/strong> 夫，音扶。別，彼列翻。&lt;strong>然後上下粲然有倫，此禮之大經也。名器既亡，則禮安得獨在哉！昔&lt;em>仲叔于奚&lt;/em>有功于&lt;em>衛&lt;/em>，辭邑而請繁纓，&lt;em>孔子&lt;/em>以為不如多與之邑。惟名與器，不可以假人，君之所司也；政亡則國家從之。&lt;/strong> &lt;code>左傳&lt;/code>：&lt;code>衛孫桓子&lt;/code>帥師與&lt;em>齊&lt;/em>師戰於&lt;em>新築&lt;/em>‹河北大名南›，&lt;em>衛&lt;/em>師敗績。&lt;em>新築&lt;/em>人&lt;em>仲叔&lt;/em>于奚救&lt;em>孫桓子&lt;/em>，&lt;em>桓子&lt;/em>是以免。既而&lt;em>衛&lt;/em>人賞之邑，辭；請曲縣、繁纓以朝，許之。&lt;em>孔子&lt;/em>聞之曰：「不如多與之邑，惟名與器不可以假人。」繁纓，馬飾也。繁，馬鬣上飾；纓，馬膺前飾。&lt;em>晉志註&lt;/em>曰：纓在馬膺如索帬。繁，音蒲官翻。纓，伊盈翻。索，昔各翻。 &lt;strong>&lt;em>衛&lt;/em>君待&lt;em>孔子&lt;/em>而為政，&lt;em>孔子&lt;/em>欲先正名，以為名不正則民無所措手足。&lt;/strong> 見&lt;code>論語&lt;/code>。&lt;strong>夫繁纓，小物也，而&lt;em>孔子&lt;/em>惜之；正名，細務也，而&lt;em>孔子&lt;/em>先之：&lt;/strong> 先，悉薦翻。&lt;strong>誠以名器既亂則上下無以相保故也。夫事未有不生於微而成于著，聖人之慮遠，故能謹其微而治之。&lt;/strong> 治，直之翻；下同。&lt;strong>眾人之識近，故必待其著而後救之；治其微則用力寡而功多，救其著則竭力而不能及也。&lt;code>易&lt;/code>曰：「履霜堅冰至，」&lt;/strong>&lt;code>坤&lt;/code>初六爻辭。&lt;code>象&lt;/code>曰：「履霜堅冰，陰始凝也。馴致其道，至堅冰也。」&lt;strong>&lt;code>書&lt;/code>曰：「一日二日萬幾，」&lt;/strong>&lt;code>皋陶謨&lt;/code>之辭。&lt;em>孔安國&lt;/em>&lt;code>註&lt;/code>曰：幾，微也。言當戒懼萬事之微。幾，居依翻。&lt;strong>謂此類也。故曰分莫大於名也。&lt;/strong> 分，扶問翻。&lt;/p>
&lt;p>〖译文〗 所谓礼教，在于分辨贵贱，排比亲疏，裁决万物，处理日常事物。没有一定的名位，就不能显扬；没有器物，就不能表现。只有用名位来分别称呼，用器物来分别标志，然后上下才能井然有序。这就是礼教的根本所在。如果名位、器物都没有了，那么礼教又怎么能单独存在呢！当年仲叔于奚为卫国建立了大功，他谢绝了赏赐的封地，却请求允许他享用贵族才应有的马饰。孔子认为不如多赏赐他一些封地，惟独名位和器物，绝不能假与他人，这是君王的职权象征；处理政事不坚持原则，国家也就会随着走向危亡。卫国国君期待孔子为他崐处理政事，孔子却先要确立名位，认为名位不正则百姓无所是从。马饰，是一种小器物，而孔子却珍惜它的价值；正名位，是一件小事情，而孔子却要先从它做起，就是因为名位、器物一紊乱，国家上下就无法相安互保。没有一件事情不是从微小之处产生而逐渐发展显著的，圣贤考虑久远，所以能够谨慎对待微小的变故及时予以处理；常人见识短浅，所以必等弊端闹大才来设法挽救。矫正初起的小错，用力小而收效大；挽救已明显的大害，往往是竭尽了全力 也不能成功。《易经》说：“行于霜上而知严寒冰冻将至。”《尚书》说：“先王每天都要兢兢业业地处理成千上万件事情。”就是指这类防微杜渐的例子。所以说，区分地位高下最重要的是匡正各个等级的名分。&lt;/p>
&lt;p>&lt;strong>嗚呼！&lt;em>幽&lt;/em>&lt;/strong>‹姬宫湦shēng›、&lt;em>&lt;strong>厲&lt;/strong>&lt;/em>‹姬胡›&lt;strong>失德，周道日衰，綱紀散壞，下陵上替，諸侯專征，&lt;/strong> 謂&lt;em>齊桓公&lt;/em>，&lt;em>晉文公&lt;/em>至&lt;em>悼公&lt;/em>以及&lt;em>楚莊王&lt;/em>、&lt;em>吳夫差&lt;/em>之類。&lt;strong>大夫擅政&lt;/strong>，謂晉六卿、魯三家、齊田氏之類。禮之大體什喪七八矣，喪，息浪翻。然文‹姬昌›、武‹姬发›之祀猶綿綿相屬者，屬，聯屬也，音之欲翻。凡聯屬之屬皆同音。蓋以周之子孫尚能守其名分故也。何以言之？昔晉文公‹姬重耳›有大功於王室，請隧於襄王‹姬郑›，襄王不許，曰：「王章也。未有代德而有二王，亦叔父之所惡也。不然，叔父有地而隧，又何請焉！」文公於是懼而不敢違。太叔帶之難，襄王出居於氾fàn‹河南襄城›。晉文公帥師納王，殺太叔帶。既定襄王於郟jiá，王勞之以地，辭；請隧焉，王弗許云云。杜預曰：闕地通路曰隧，此乃王者葬禮也。諸侯皆縣柩而下。王章者，章顯王者異於諸侯。古者天子謂同姓諸侯為伯父、叔父。隧，音遂。惡，烏路翻。難，乃旦翻。氾，音泛。勞，力到翻。闕，其月翻。縣，音玄。柩，其久翻。是故以周之地則不大於曹‹山東定陶›、滕‹山東滕州›，以周之民則不眾於邾‹山东邹县›、莒‹山東莒縣›，曹、滕、邾、莒，春秋時小國。莒，居許翻。然歷數百年，宗主天下，雖以晉、楚、齊、秦之強不敢加者，何哉？徒以名分尚存故也。至於季氏之於魯，田常之于齊，白公之于楚，智伯之于晉，魯大夫季氏，自季友以來，世執魯國之政。季平子逐昭公，季康子逐哀公，然終身北面，不敢篡國。田常，即陳恒。田氏本陳氏；溫公避國諱，改「恒」曰「常」。陳成子得齊國之政，殺闞止，弑簡公，而亦不敢自立。史記世家以陳敬仲完為田敬仲完，陳成子恒為田常，故通鑑因以為據。白公勝殺楚令尹子西、司馬子期，石乞曰：「焚庫弑王，不然不濟！」白公曰：「弑王不祥，焚庫無聚。」智伯當晉之衰，專其國政，侵伐鄰國，于晉大夫為最強；攻晉出公，出公道死。智伯欲并晉而不敢，乃奉哀公驕立之。其勢皆足以逐君而自為，然而卒不敢者，卒，子恤翻，終也。豈其力不足而心不忍哉，乃畏奸名犯分而天下共誅之也。奸，居寒翻，亦犯也。分，扶問翻。今晉大夫暴蔑其君，剖分晉國，史記六國年表：定王十六年，趙、魏、韓滅智伯，遂三分晉國。天子既不能討，又寵秩之，使列於諸侯，是區區之名分復不能守而并棄之也。陸德明經典釋文：凡復字，其義訓又者，并音扶又翻。先王之禮於斯盡矣！&lt;/p>
&lt;p>〖译文〗 呜呼！周幽王、周厉王丧失君德，周朝的气数每况愈下。礼纪朝纲土崩瓦解；下欺凌、上衰败；诸侯国君恣意征讨他人；士大夫擅自干预朝政；礼教从总体上已经有十之七八沦丧了。然而周文王、周武王开创的政权还能绵绵不断地延续下来，就是因为周王朝的子孙后裔尚能守定名位。为什么这样说呢？当年晋文公为周朝建立了大功，于是向周襄王请求允许他死后享用王室的隧葬礼制，周襄王没有准许，说：“周王制度明显。没有改朝换代而有两个天子，这也是作为叔父辈的晋文公您所反对的。不然的话，叔父您有地，愿意隧葬，又何必请示我呢？”晋文公于是感到畏惧而没有敢违反礼制。因此，周王室的地盘并不比曹国、滕国大，管辖的臣民也不比邾国、莒国多，然而经过几百年，仍然是天下的宗主，即使是晋、楚、齐、秦那样的强国也还不敢凌驾于其上，这是为什么呢？只是由于周王还保有天子的名分。再看看鲁国的大夫季氏、齐国的田常、楚国的白公胜、晋国的智伯，他们的势力都大得足以驱逐国君而自立，然而他们到底不敢这样做，难道是他们力量不足或是于心不忍吗？只不过是害怕奸夺名位僭犯身分而招致天下的讨伐罢了。现在晋国的三家大夫欺凌蔑视国君，瓜分了晋国，作为天子的周王不能派兵征讨，反而对他们加封赐爵，让他们列位于诸侯国君之中，这样做就使周王朝仅有的一点名分不能再守定而全部放弃了。周朝先王的礼教到此丧失干净！&lt;/p>
&lt;p>或者以為當是之時，周室微弱，三晉強盛，三家分晉國，時因謂之「三晉」，猶後之三秦、三齊也。雖欲勿許，其可得乎！是大不然。夫三晉雖強，苟不顧天下之誅而犯義侵禮，則不請於天子而自立矣。不請於天子而自立，則為悖逆之臣，夫，音扶。悖，蒲內翻，又蒲沒翻。天下苟有桓、文之君，必奉禮義而征之。今請於天子而天子許之，是受天子之命而為諸侯也，誰得而討之！故三晉之列于諸侯，非三晉之壞禮，乃天子自壞之也。壞，音怪，人毀之也。&lt;/p>
&lt;p>〖译文〗 有人认为当时周王室已经衰微，而晋国三家力量强盛，就算周王不想承认他们，又怎么能做得到呢！这种说法是完全错误的。晋国三家虽然强悍，但他们如果打算不顾天下的指责而公然侵犯礼义的话，就不会来请求周天子的批准，而是去自立为君了。不向天子请封而自立为国君，那就是叛逆之臣，天下如果有像齐桓公、晋文公那样的贤德诸侯，一定会尊奉礼义对他们进行征讨。现在晋国三家向天子请封，天子又批准了。他们就是奉天子命令而成为诸侯的，谁又能对他们加以讨伐呢！所以晋国三家大夫成为诸侯，并不是晋国三家破坏了礼教，正是周天子自已破坏了周朝的礼教啊！&lt;/p>
&lt;p>烏呼！君臣之禮既壞矣，此壞，其義為成壞之壞，讀如字。則天下以智力相雄長，長，知兩翻。遂使聖賢之後為諸侯者，社稷無不泯絕，謂齊、宋亡于田氏，魯、陳、越亡于楚，鄭亡于韓也。泯，彌忍翻，盡也，又彌鄰翻。毛晃曰：沒也，滅也。生民之類糜滅幾盡，說文曰：糜，糝sǎn也；取糜爛之義，音忙皮翻。幾，居依翻，又渠希翻，近也。豈不哀哉！&lt;/p>
&lt;p>〖译文〗 呜呼！君臣之间的礼纪既然崩坏，于是天下便开始以智慧、武力互相争雄，使当年受周先王分封而成为诸侯国君的圣贤后裔，江山相继沦亡，周朝先民的子孙灭亡殆尽，岂不哀伤！&lt;/p></description></item><item><title>16-18</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/16-18/</link><pubDate>Tue, 24 Dec 2024 09:46:52 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/16-18/</guid><description>&lt;h1 id="向bash脚本添加参数">
 向bash脚本添加参数
 &lt;a class="anchor" href="#%e5%90%91bash%e8%84%9a%e6%9c%ac%e6%b7%bb%e5%8a%a0%e5%8f%82%e6%95%b0">#&lt;/a>
&lt;/h1>
&lt;h2 id="basic">
 basic
 &lt;a class="anchor" href="#basic">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>─ ~/shellTest ly@vmmin 10:37:24
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ cat ./16myscript_cls.sh 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;You entered the argument: &lt;/span>$1&lt;span style="color:#e6db74">,&lt;/span>$2&lt;span style="color:#e6db74">,&lt;/span>$3&lt;span style="color:#e6db74">, and &lt;/span>$4&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>结果&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>╭─ ~/shellTest 16s ly@vmmin 10:37:18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ ./16myscript_cls.sh Linux1 Linux2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>You entered the argument: Linux1,Linux2,, and .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="示例1">
 示例1
 &lt;a class="anchor" href="#%e7%a4%ba%e4%be%8b1">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>╭─ ~/shellTest ly@vmmin 10:41:45
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ cat ./16myscript_cls.sh 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls -lh $1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#echo &amp;#34;You entered the argument: $1,$2,$3, and $4.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╭─ ~/shellTest ly@vmmin 10:41:28
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ ./16myscript_cls.sh /etc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total 792K
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root 3.0K May &lt;span style="color:#ae81ff">25&lt;/span> &lt;span style="color:#ae81ff">2023&lt;/span> adduser.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">44&lt;/span> Dec &lt;span style="color:#ae81ff">17&lt;/span> 15:26 adjtime
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">194&lt;/span> Dec &lt;span style="color:#ae81ff">23&lt;/span> 22:38 aliases
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x &lt;span style="color:#ae81ff">2&lt;/span> root root 4.0K Dec &lt;span style="color:#ae81ff">23&lt;/span> 22:38 alternatives
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x &lt;span style="color:#ae81ff">2&lt;/span> root root 4.0K Dec &lt;span style="color:#ae81ff">17&lt;/span> 15:24 apparmor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x &lt;span style="color:#ae81ff">8&lt;/span> root root 4.0K Dec &lt;span style="color:#ae81ff">17&lt;/span> 15:25 apparmor.d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x &lt;span style="color:#ae81ff">9&lt;/span> root root 4.0K Dec &lt;span style="color:#ae81ff">17&lt;/span> 15:30 apt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r----- &lt;span style="color:#ae81ff">1&lt;/span> root daemon &lt;span style="color:#ae81ff">144&lt;/span> Oct &lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#ae81ff">2022&lt;/span> at.deny
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> root root 2.0K Mar &lt;span style="color:#ae81ff">30&lt;/span> &lt;span style="color:#ae81ff">2024&lt;/span> bash.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="示例2">
 示例2
 &lt;a class="anchor" href="#%e7%a4%ba%e4%be%8b2">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lines&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>ls -lh $1 | wc -l&lt;span style="color:#66d9ef">)&lt;/span> &lt;span style="color:#75715e">#行计数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;You hava &lt;/span>&lt;span style="color:#66d9ef">$((&lt;/span>$lines&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#66d9ef">))&lt;/span>&lt;span style="color:#e6db74"> objects in the &lt;/span>$1&lt;span style="color:#e6db74"> directory.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#$(($lines-1))这里用到了子shell&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#echo &amp;#34;You entered the argument: $1,$2,$3, and $4.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>╭─ ~/shellTest ly@vmmin 10:48:06
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ ls -lh logfiles 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total 12K
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> ly ly &lt;span style="color:#ae81ff">0&lt;/span> Dec &lt;span style="color:#ae81ff">22&lt;/span> 23:07 a.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> ly ly &lt;span style="color:#ae81ff">120&lt;/span> Dec &lt;span style="color:#ae81ff">22&lt;/span> 23:17 a.log.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> ly ly &lt;span style="color:#ae81ff">0&lt;/span> Dec &lt;span style="color:#ae81ff">22&lt;/span> 23:07 b.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> ly ly &lt;span style="color:#ae81ff">121&lt;/span> Dec &lt;span style="color:#ae81ff">22&lt;/span> 23:17 b.log.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> ly ly &lt;span style="color:#ae81ff">0&lt;/span> Dec &lt;span style="color:#ae81ff">22&lt;/span> 23:07 c.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> ly ly &lt;span style="color:#ae81ff">121&lt;/span> Dec &lt;span style="color:#ae81ff">22&lt;/span> 23:17 c.log.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> ly ly &lt;span style="color:#ae81ff">0&lt;/span> Dec &lt;span style="color:#ae81ff">22&lt;/span> 23:15 xx.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- &lt;span style="color:#ae81ff">1&lt;/span> ly ly &lt;span style="color:#ae81ff">0&lt;/span> Dec &lt;span style="color:#ae81ff">22&lt;/span> 23:15 y.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╭─ ~/shellTest ly@vmmin 10:48:10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ ./16myscript_cls.sh logfiles
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>You hava &lt;span style="color:#ae81ff">8&lt;/span> objects in the logfiles directory.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>head，表示前十行，可以看出total这些被算作一行了，所以上面的shell中-1&lt;/p></description></item><item><title>12-15</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/12-15/</link><pubDate>Mon, 23 Dec 2024 21:03:03 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/12-15/</guid><description>&lt;h1 id="functions-函数">
 functions 函数
 &lt;a class="anchor" href="#functions-%e5%87%bd%e6%95%b0">#&lt;/a>
&lt;/h1>
&lt;p>以&lt;code>update&lt;/code>这个脚本为基础编改&lt;br>
作用&lt;/p>
&lt;ul>
&lt;li>减少重复代码&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>release_file&lt;span style="color:#f92672">=&lt;/span>/etc/os-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>logfile&lt;span style="color:#f92672">=&lt;/span>/var/log/updater.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>errorlog&lt;span style="color:#f92672">=&lt;/span>/var/log/updater_errors.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>check_exit_status&lt;span style="color:#f92672">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $? -ne &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;An error occured,please check the &lt;/span>$errorlog&lt;span style="color:#e6db74"> file.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> grep -q &lt;span style="color:#e6db74">&amp;#34;Arch&amp;#34;&lt;/span> $release_file 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo pacman -Syu 1&amp;gt;&amp;gt;$logfile 2&amp;gt;&amp;gt;$errorlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> check_exit_status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> grep -q &lt;span style="color:#e6db74">&amp;#34;Ubuntu&amp;#34;&lt;/span> $release_file &lt;span style="color:#f92672">||&lt;/span> grep -q &lt;span style="color:#e6db74">&amp;#34;Debian&amp;#34;&lt;/span> $release_file 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo apt update 1&amp;gt;&amp;gt;$logfile 2&amp;gt;&amp;gt;$errorlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> check_exit_status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#默认yes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sudo apt dist-upgrade -y 1&amp;gt;&amp;gt;$logfile 2&amp;gt;&amp;gt;$errorlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> check_exit_status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="casestatements">
 CaseStatements
 &lt;a class="anchor" href="#casestatements">#&lt;/a>
&lt;/h1>
&lt;h2 id="脚本">
 脚本
 &lt;a class="anchor" href="#%e8%84%9a%e6%9c%ac">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>╭─ ~/shellTest ly@vmmin 22:32:52
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ cat ./13myscript_cls.sh 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>finished&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $finished -ne &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;What is your favorite Linux distribution?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;1 - Arch&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;2 - CentOS&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;3 - Debian&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;4 - Mint&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;5 - Something else..&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;6 - exit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> read distro;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> $distro in 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1&lt;span style="color:#f92672">)&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;Arch is xxx&amp;#34;&lt;/span>;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2&lt;span style="color:#f92672">)&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;CentOS is xbxxx&amp;#34;&lt;/span>;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3&lt;span style="color:#f92672">)&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;Debian is bbbxx&amp;#34;&lt;/span>;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 4&lt;span style="color:#f92672">)&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;Mint is xxxxsss&amp;#34;&lt;/span>;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 5&lt;span style="color:#f92672">)&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;Something els.xxxxx&amp;#34;&lt;/span>;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 6&lt;span style="color:#f92672">)&lt;/span> finished&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;now will exit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> *&lt;span style="color:#f92672">)&lt;/span> echo &lt;span style="color:#e6db74">&amp;#34;you didn&amp;#39;t enter an xxxx choice.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;Thanks for using this script.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="脚本执行">
 脚本执行
 &lt;a class="anchor" href="#%e8%84%9a%e6%9c%ac%e6%89%a7%e8%a1%8c">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>╭─ ~/shellTest ly@vmmin 22:32:11
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ ./13myscript_cls.sh 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>What is your favorite Linux distribution?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> - Arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span> - CentOS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span> - Debian
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span> - Mint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span> - Something &lt;span style="color:#66d9ef">else&lt;/span>..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6&lt;/span> - exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Debian is bbbxx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>What is your favorite Linux distribution?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> - Arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span> - CentOS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span> - Debian
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span> - Mint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span> - Something &lt;span style="color:#66d9ef">else&lt;/span>..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6&lt;/span> - exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>u
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>you didn&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>t enter an xxxx choice.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>What is your favorite Linux distribution?
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> - Arch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span> - CentOS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span> - Debian
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span> - Mint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span> - Something &lt;span style="color:#66d9ef">else&lt;/span>..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6&lt;/span> - exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>now will exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Thanks &lt;span style="color:#66d9ef">for&lt;/span> using this script. 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="schedulejobs">
 ScheduleJobs
 &lt;a class="anchor" href="#schedulejobs">#&lt;/a>
&lt;/h1>
&lt;h2 id="作用">
 作用
 &lt;a class="anchor" href="#%e4%bd%9c%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;p>脚本在特定时间运行&lt;/p></description></item><item><title>07-10</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/07-10/</link><pubDate>Sat, 21 Dec 2024 12:00:26 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/07-10/</guid><description>&lt;h1 id="whileloops">
 WhileLoops
 &lt;a class="anchor" href="#whileloops">#&lt;/a>
&lt;/h1>
&lt;h2 id="范例">
 范例
 &lt;a class="anchor" href="#%e8%8c%83%e4%be%8b">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myvar&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#小于或者等于10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $myvar -le &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo $myvar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> myvar&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$((&lt;/span> $myvar &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sleep 0.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>╭─ ~/shellTest ≡ ly@vmmin 12:10:33
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─❯ ./71myscript_cls.sh 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">6&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>数字会每隔0.5s就输出一次&lt;br>
对于&lt;code>myvar=$(( $myvar + 1 ))&lt;/code> ，&lt;code>$((expression))&lt;/code>形式表示算数运算，而且其中的空格是可以省略的&lt;/p>
&lt;h2 id="范例2">
 范例2
 &lt;a class="anchor" href="#%e8%8c%83%e4%be%8b2">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -f ~/testfile &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;As of &lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">,the test file exists.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sleep &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;As of &lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>date&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">, the test ....has gone missing.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用来测试文件是否存在，运行前先新建一下文件&lt;code>touch ~/testfile&lt;/code>
运行一会后把文件删除，如图&lt;br>
&lt;img src="img/ly-20241221124800683.png" alt="" />&lt;/p></description></item><item><title>06ExitCode</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/06ExitCode/</link><pubDate>Sat, 21 Dec 2024 10:25:30 +0800</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/06ExitCode/</guid><description>&lt;h1 id="意义">
 意义
 &lt;a class="anchor" href="#%e6%84%8f%e4%b9%89">#&lt;/a>
&lt;/h1>
&lt;p>用来确定代码是否执行成功&lt;/p>
&lt;h1 id="例子">
 例子
 &lt;a class="anchor" href="#%e4%be%8b%e5%ad%90">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ls -l /misc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $? &lt;span style="color:#75715e">#输出2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls -l ~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo $? &lt;span style="color:#75715e">#输出0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>$?&lt;/code>用来显示最近一个命令的状态，&lt;strong>零表示成功，非零表示失败&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">#这个例子之前，作者用 sudo apt remove htop 命令把htop删除了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package&lt;span style="color:#f92672">=&lt;/span>htop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install $package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;The exit code for ....is &lt;/span>$?&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完毕后显示返回0&lt;br>
&lt;img src="img/ly-20241221090730345.png" alt="" />&lt;br>
另一个示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package&lt;span style="color:#f92672">=&lt;/span>notexist
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install $package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;The exit code for ....is &lt;/span>$?&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#执行后显示&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Reading package lists... Done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Building dependency tree... Done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Reading state information... Done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#E: Unable to locate package notexist&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#The exit code for ....is 100&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="配合if语句">
 配合if语句
 &lt;a class="anchor" href="#%e9%85%8d%e5%90%88if%e8%af%ad%e5%8f%a5">#&lt;/a>
&lt;/h1>
&lt;h2 id="基本功能">
 基本功能
 &lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e5%8a%9f%e8%83%bd">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>package&lt;span style="color:#f92672">=&lt;/span>htop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt install $package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $? -eq &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The installation of &lt;/span>$package&lt;span style="color:#e6db74"> success...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;new comman here:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> which $package
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$package&lt;span style="color:#e6db74"> failed ...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之前前作者用&lt;code>sudo apt remove htop&lt;/code>又把htop删除了，不过其实不删除也是走的&lt;code> echo &amp;quot;The installation of .....&amp;quot;&lt;/code>这个分支&lt;br>
结果：&lt;/p></description></item><item><title>05If</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/05If/</link><pubDate>Fri, 20 Dec 2024 18:03:12 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/05If/</guid><description>&lt;blockquote>
&lt;p>在shell中，零为真，非零为假。&lt;/p>
&lt;/blockquote>
&lt;h1 id="if-then-fi">
 if then fi
 &lt;a class="anchor" href="#if-then-fi">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mynum&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[和]前后都要有空格&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $mynum -eq &lt;span style="color:#ae81ff">200&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The condition is true.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241220220441993.png" alt="" />&lt;br>
编辑之后，按ctrl + O 保存文件&lt;br>
ctrl + T + Z 保持在后台，&lt;code>fg&lt;/code>+回车 恢复&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mynum&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[和]前后都要有空格&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $mynum -eq &lt;span style="color:#ae81ff">200&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The condition is true.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $mynum -eq &lt;span style="color:#ae81ff">300&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The variable does not equal 200.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241220221311757.png" alt="" />&lt;/p>
&lt;h1 id="else-if">
 else if
 &lt;a class="anchor" href="#else-if">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mynum&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">300&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#[和]前后都要有空格&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> $mynum -eq &lt;span style="color:#ae81ff">200&lt;/span> &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The condition is true.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The variable does not equal&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">fi
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241220221542876.png" alt="" />&lt;/p></description></item><item><title>01-04</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/01-04/</link><pubDate>Fri, 20 Dec 2024 15:28:33 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/SHELLlearnLinuxTV_/01-04/</guid><description>&lt;h1 id="意义">
 意义
 &lt;a class="anchor" href="#%e6%84%8f%e4%b9%89">#&lt;/a>
&lt;/h1>
&lt;p>执行一系列命令&lt;/p>
&lt;h1 id="视频框架">
 视频框架
 &lt;a class="anchor" href="#%e8%a7%86%e9%a2%91%e6%a1%86%e6%9e%b6">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>介绍，欢迎&lt;/li>
&lt;li>HelloWorld&lt;/li>
&lt;li>变量&lt;/li>
&lt;li>数学函数&lt;/li>
&lt;li>if语句&lt;/li>
&lt;li>退出代码&lt;/li>
&lt;li>while循环&lt;/li>
&lt;li>更新脚本，保持服务器最新状态&lt;/li>
&lt;li>for循环&lt;/li>
&lt;li>脚本应该存储在文件系统哪个位置&lt;/li>
&lt;li>数据流，标准输入、标准输出、标准错误输出&lt;/li>
&lt;li>函数&lt;/li>
&lt;li>case语句&lt;/li>
&lt;li>调度作业（SchedulingJobs）Part1&lt;/li>
&lt;li>调度作业（SchedulingJobs）Part2&lt;/li>
&lt;li>传递参数&lt;/li>
&lt;li>备份脚本&lt;/li>
&lt;/ol>
&lt;h1 id="准备">
 准备
 &lt;a class="anchor" href="#%e5%87%86%e5%a4%87">#&lt;/a>
&lt;/h1>
&lt;p>需要一台运行Linux系统的计算机（或虚拟机）&lt;/p>
&lt;h1 id="一些基本操作">
 一些基本操作
 &lt;a class="anchor" href="#%e4%b8%80%e4%ba%9b%e5%9f%ba%e6%9c%ac%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;h2 id="新建或编辑脚本">
 新建或编辑脚本
 &lt;a class="anchor" href="#%e6%96%b0%e5%bb%ba%e6%88%96%e7%bc%96%e8%be%91%e8%84%9a%e6%9c%ac">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>nano myscript.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="内容">
 内容
 &lt;a class="anchor" href="#%e5%86%85%e5%ae%b9">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241220161539489.png" alt="" />&lt;br>
&lt;strong>ctrl + o 保存，ctrl + x 退出&lt;/strong>&lt;/p>
&lt;h2 id="如何执行脚本">
 如何执行脚本
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e6%89%a7%e8%a1%8c%e8%84%9a%e6%9c%ac">#&lt;/a>
&lt;/h2>
&lt;h3 id="权限">
 权限
 &lt;a class="anchor" href="#%e6%9d%83%e9%99%90">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#给脚本赋予执行的权限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod +x myscript.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="执行">
 执行
 &lt;a class="anchor" href="#%e6%89%a7%e8%a1%8c">#&lt;/a>
&lt;/h3>
&lt;h4 id="执行前查看权限">
 执行前查看权限
 &lt;a class="anchor" href="#%e6%89%a7%e8%a1%8c%e5%89%8d%e6%9f%a5%e7%9c%8b%e6%9d%83%e9%99%90">#&lt;/a>
&lt;/h4>
&lt;p>&lt;img src="img/ly-20241220161925488.png" alt="" />&lt;/p>
&lt;h4 id="运行">
 运行
 &lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c">#&lt;/a>
&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>./myscript.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="查看脚本">
 查看脚本
 &lt;a class="anchor" href="#%e6%9f%a5%e7%9c%8b%e8%84%9a%e6%9c%ac">#&lt;/a>
&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cat myscript.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="更多语句的脚本">
 更多语句的脚本
 &lt;a class="anchor" href="#%e6%9b%b4%e5%a4%9a%e8%af%ad%e5%8f%a5%e7%9a%84%e8%84%9a%e6%9c%ac">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pwd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出&lt;br>
&lt;img src="img/ly-20241220162310803.png" alt="" />&lt;/p></description></item><item><title>基础</title><link>https://lwmfjc.github.io/zh/docs/technology/RegExp/baseCoreySchafer_/base/</link><pubDate>Thu, 19 Dec 2024 17:49:52 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/RegExp/baseCoreySchafer_/base/</guid><description>&lt;h1 id="环境">
 环境
 &lt;a class="anchor" href="#%e7%8e%af%e5%a2%83">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>使用视频作者给出的示例，&lt;code>https://github.com/CoreyMSchafer/code_snippets/tree/master/Regular-Expressions&lt;/code>&lt;/li>
&lt;li>使用sublimeText打开的文件，ctrl+f时要确认勾选正则及区分大小写&lt;br>
&lt;img src="img/ly-20241220122930504.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h1 id="simpletxt-基础操作">
 simple.txt-基础操作
 &lt;a class="anchor" href="#simpletxt-%e5%9f%ba%e7%a1%80%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;h2 id="直接搜索">
 直接搜索
 &lt;a class="anchor" href="#%e7%9b%b4%e6%8e%a5%e6%90%9c%e7%b4%a2">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241220123410992.png" alt="" />&lt;/p>
&lt;h2 id="任意字符">
 任意字符
 &lt;a class="anchor" href="#%e4%bb%bb%e6%84%8f%e5%ad%97%e7%ac%a6">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241220123521273.png" alt="" />&lt;br>
这里默认不会显示所有，点击findAll才会出来&lt;/p>
&lt;h2 id="有些字符需要加反斜杠转义比如--点以及--斜杠本身">
 有些字符需要加反斜杠转义，比如 . （点）以及 \ （斜杠本身）
 &lt;a class="anchor" href="#%e6%9c%89%e4%ba%9b%e5%ad%97%e7%ac%a6%e9%9c%80%e8%a6%81%e5%8a%a0%e5%8f%8d%e6%96%9c%e6%9d%a0%e8%bd%ac%e4%b9%89%e6%af%94%e5%a6%82--%e7%82%b9%e4%bb%a5%e5%8f%8a--%e6%96%9c%e6%9d%a0%e6%9c%ac%e8%ba%ab">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>/////，从左到右，和书写方向一致的叫做(正)斜杠。&lt;br>
反之，叫做反斜杠 \&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241220124259552.png" alt="" />&lt;br>
&lt;img src="img/ly-20241220124341898.png" alt="" />&lt;/p>
&lt;h2 id="一些元字符">
 一些元字符
 &lt;a class="anchor" href="#%e4%b8%80%e4%ba%9b%e5%85%83%e5%ad%97%e7%ac%a6">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>. - Any Character Except New Line 除了换行符的任意字符
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\d&lt;/span> - Digit &lt;span style="color:#f92672">(&lt;/span>0-9&lt;span style="color:#f92672">)&lt;/span> 数字
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\D&lt;/span> - Not a Digit &lt;span style="color:#f92672">(&lt;/span>0-9&lt;span style="color:#f92672">)&lt;/span> 非数字
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\w&lt;/span> - Word Character &lt;span style="color:#f92672">(&lt;/span>a-z, A-Z, 0-9, _&lt;span style="color:#f92672">)&lt;/span> 单词字符，大小写字母+数字+下划线
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\W&lt;/span> - Not a Word Character 非单词字符
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\s&lt;/span> - Whitespace &lt;span style="color:#f92672">(&lt;/span>space, tab, newline&lt;span style="color:#f92672">)&lt;/span> 空白字符，空格+tab+换行符
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\S&lt;/span> - Not Whitespace &lt;span style="color:#f92672">(&lt;/span>space, tab, newline&lt;span style="color:#f92672">)&lt;/span> 非空白字符
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\b&lt;/span> - Word Boundary 边界字符-单词边界
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">\B&lt;/span> - Not a Word Boundary 非单词边界&lt;span style="color:#f92672">(&lt;/span>没有单词边界&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>^ - Beginning of a String
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ - End of a String
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[]&lt;/span> - Matches Characters in brackets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>^ &lt;span style="color:#f92672">]&lt;/span> - Matches Characters NOT in brackets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| - Either Or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span> &lt;span style="color:#f92672">)&lt;/span> - Group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Quantifiers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>* - &lt;span style="color:#ae81ff">0&lt;/span> or More
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+ - &lt;span style="color:#ae81ff">1&lt;/span> or More
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>? - &lt;span style="color:#ae81ff">0&lt;/span> or One
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>3&lt;span style="color:#f92672">}&lt;/span> - Exact Number
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">{&lt;/span>3,4&lt;span style="color:#f92672">}&lt;/span> - Range of Numbers &lt;span style="color:#f92672">(&lt;/span>Minimum, Maximum&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#### Sample Regexs ####&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>a-zA-Z0-9_.+-&lt;span style="color:#f92672">]&lt;/span>+@&lt;span style="color:#f92672">[&lt;/span>a-zA-Z0-9-&lt;span style="color:#f92672">]&lt;/span>+&lt;span style="color:#ae81ff">\.&lt;/span>&lt;span style="color:#f92672">[&lt;/span>a-zA-Z0-9-.&lt;span style="color:#f92672">]&lt;/span>+
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="边界字符">
 边界字符
 &lt;a class="anchor" href="#%e8%be%b9%e7%95%8c%e5%ad%97%e7%ac%a6">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241220145605631.png" alt="" />&lt;/p></description></item><item><title>使用PaperMode</title><link>https://lwmfjc.github.io/zh/docs/technology/Hugo/themes/PaperMod/01/</link><pubDate>Wed, 11 Dec 2024 08:23:34 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Hugo/themes/PaperMod/01/</guid><description>&lt;h1 id="地址">
 地址
 &lt;a class="anchor" href="#%e5%9c%b0%e5%9d%80">#&lt;/a>
&lt;/h1>
&lt;p>官方： 
&lt;a target="_blank" href="https://github.com/adityatelange/hugo-PaperMod/wiki/Installation">https://github.com/adityatelange/hugo-PaperMod/wiki/Installation&lt;/a> （有些东西没有同hugo官方同步）
非官方： 
&lt;a target="_blank" href="https://github.com/vanitysys28/hugo-papermod-wiki/blob/master/Home.md">https://github.com/vanitysys28/hugo-papermod-wiki/blob/master/Home.md&lt;/a> （与hugo官方更同步）&lt;/p>
&lt;h1 id="安装">
 安装
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>hugo new site blog.source --format yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd blog.source
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule add --depth&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule update --init --recursive &lt;span style="color:#75715e"># needed when you reclone your repo (submodules may not get cloned automatically) &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git submodule update --remote --merge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>hugo进阶学习20-23</title><link>https://lwmfjc.github.io/zh/docs/technology/Hugo/GiraffeAcademy_/advanced20-23/</link><pubDate>Tue, 10 Dec 2024 15:54:58 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Hugo/GiraffeAcademy_/advanced20-23/</guid><description>&lt;p>&lt;img src="img/ly-20241212142130925.png" alt="" />&lt;/p>
&lt;h1 id="datefiles">
 DateFiles
 &lt;a class="anchor" href="#datefiles">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#960050;background-color:#1e0010">%&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">raw&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">%&lt;/span>} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;classA&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;json位置: data\\classes.json&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;classA&amp;#34;&lt;/span>:{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;master&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;xiaoLi&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;number&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;05&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;classB&amp;#34;&lt;/span>:{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;master&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;aXiang&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;number&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;15&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;classC&amp;#34;&lt;/span>:{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;master&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;BaoCeng&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;number&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;20&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#960050;background-color:#1e0010">%&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">endraw&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">%&lt;/span>} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>模板代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{% raw %} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{/* layouts\_default\single.html */}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ define &amp;#34;main&amp;#34; }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ range .Site.Data.classes }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> master:{{.master}}==number:{{.number}}&amp;lt;&lt;span style="color:#f92672">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{end}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{end}} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{% endraw %} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212142131035.png" alt="" />&lt;/p>
&lt;h1 id="partialtemplates">
 PartialTemplates
 &lt;a class="anchor" href="#partialtemplates">#&lt;/a>
&lt;/h1>
&lt;h2 id="传递全局范围">
 传递全局范围
 &lt;a class="anchor" href="#%e4%bc%a0%e9%80%92%e5%85%a8%e5%b1%80%e8%8c%83%e5%9b%b4">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>{% raw %} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{/*layouts\partials\header.html*/}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;{{.Title}}&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;{{.Date}}&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt; 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{% endraw %} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>{% raw %} 
{{/*layouts\_default\single.html*/}}
{{ define &amp;#34;main&amp;#34; }}
 {{ partial &amp;#34;header&amp;#34; . }}
 {{/*点.传递了当前文件的范围，代表了所有的范围，所有可以访问的变量*/}}
 &amp;lt;hr&amp;gt;
{{end}} 
{% endraw %} 
&lt;/code>&lt;/pre>&lt;p>预览：&lt;br>
&lt;img src="img/ly-20241212142131117.png" alt="" />&lt;/p></description></item><item><title>hugo进阶学习17-19</title><link>https://lwmfjc.github.io/zh/docs/technology/Hugo/GiraffeAcademy_/advanced17-19/</link><pubDate>Mon, 09 Dec 2024 23:50:43 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Hugo/GiraffeAcademy_/advanced17-19/</guid><description>&lt;p>&lt;img src="img/ly-20241212142130125.png" alt="" />&lt;/p>
&lt;h1 id="variable">
 Variable
 &lt;a class="anchor" href="#variable">#&lt;/a>
&lt;/h1>
&lt;h2 id="文件结构">
 文件结构
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142130325.png" alt="" />&lt;/p>
&lt;h2 id="实战">
 实战
 &lt;a class="anchor" href="#%e5%ae%9e%e6%88%98">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#a6e22e">raw&lt;/span> &lt;span style="color:#f92672">%&lt;/span>} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{&lt;span style="color:#75715e">/*layouts\_default\single.html*/&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ &lt;span style="color:#a6e22e">define&lt;/span> &lt;span style="color:#e6db74">&amp;#34;main&amp;#34;&lt;/span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">This&lt;/span> &lt;span style="color:#a6e22e">is&lt;/span> &lt;span style="color:#a6e22e">the&lt;/span> &lt;span style="color:#a6e22e">single&lt;/span> &lt;span style="color:#a6e22e">template&lt;/span>&amp;lt;&lt;span style="color:#a6e22e">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#75715e">/* 常见变量 */&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">title&lt;/span>: {{ .&lt;span style="color:#a6e22e">Params&lt;/span>.&lt;span style="color:#a6e22e">title&lt;/span> }}&amp;lt;&lt;span style="color:#a6e22e">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">title&lt;/span>: {{ .&lt;span style="color:#a6e22e">Title&lt;/span> }}&amp;lt;&lt;span style="color:#a6e22e">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">date&lt;/span>: {{ .&lt;span style="color:#a6e22e">Date&lt;/span> }}&amp;lt;&lt;span style="color:#a6e22e">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">url&lt;/span>: {{ .&lt;span style="color:#a6e22e">URL&lt;/span> }}&amp;lt;&lt;span style="color:#a6e22e">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">myvar&lt;/span>: {{ .&lt;span style="color:#a6e22e">Params&lt;/span>.&lt;span style="color:#a6e22e">myVar&lt;/span> }}&amp;lt;&lt;span style="color:#a6e22e">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{&lt;span style="color:#75715e">/* 定义变量 */&lt;/span>}}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>&lt;span style="color:#a6e22e">myVarname&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;aString&amp;#34;&lt;/span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">myVarname&lt;/span>:{{ &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>&lt;span style="color:#a6e22e">myVarname&lt;/span> }}&amp;lt;&lt;span style="color:#a6e22e">br&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#a6e22e">h1&lt;/span> &lt;span style="color:#a6e22e">style&lt;/span>=&lt;span style="color:#e6db74">&amp;#34;color: {{ .Params.color }} ;&amp;#34;&lt;/span> &amp;gt;&lt;span style="color:#a6e22e">Single&lt;/span> &lt;span style="color:#a6e22e">Template&lt;/span>&amp;lt;&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{{ &lt;span style="color:#a6e22e">end&lt;/span> }} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#a6e22e">endraw&lt;/span> &lt;span style="color:#f92672">%&lt;/span>} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span>{% raw %} 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title: &amp;#34;E-title&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date: 2024-12-07T12:43:21+08:00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>draft: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>myVar: &amp;#34;myvalue&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>color: &amp;#34;red&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>This is dir3/e.md 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{% endraw %} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212142130338.png" alt="" />&lt;/p></description></item><item><title>hugo进阶学习11-15</title><link>https://lwmfjc.github.io/zh/docs/technology/Hugo/GiraffeAcademy_/advanced11-16/</link><pubDate>Sun, 08 Dec 2024 11:23:42 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Hugo/GiraffeAcademy_/advanced11-16/</guid><description>&lt;blockquote>
&lt;p>这里使用的版本是&lt;strong>v0.26&lt;/strong>（很久之前的版本）&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142128138.png" alt="" />&lt;/p>
&lt;h1 id="template-basic">
 template basic
 &lt;a class="anchor" href="#template-basic">#&lt;/a>
&lt;/h1>
&lt;p>模板分为list template和single template&lt;/p>
&lt;h2 id="文件夹结构">
 文件夹结构
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e5%a4%b9%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>content目录结构&lt;br>
&lt;img src="img/ly-20241212142128249.png" alt="" />&lt;/p>
&lt;h2 id="list-template-列表模板">
 list template （列表模板）
 &lt;a class="anchor" href="#list-template-%e5%88%97%e8%a1%a8%e6%a8%a1%e6%9d%bf">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142128336.png" alt="" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142128415.png" alt="" />&lt;/p>
&lt;h2 id="single-template-单页模板">
 single template （单页模板）
 &lt;a class="anchor" href="#single-template-%e5%8d%95%e9%a1%b5%e6%a8%a1%e6%9d%bf">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142128493.png" alt="" />&lt;/p>
&lt;h2 id="特点">
 特点
 &lt;a class="anchor" href="#%e7%89%b9%e7%82%b9">#&lt;/a>
&lt;/h2>
&lt;p>所有的&lt;strong>列表之间&lt;/strong>都是长一样的（页眉，页脚，及内容（都是列表））&lt;br>
所有的&lt;strong>单页之间&lt;/strong>都是长一样的（一样的页眉页脚，一样的内容布局）&lt;/p>
&lt;h2 id="部分代码解释">
 部分代码解释
 &lt;a class="anchor" href="#%e9%83%a8%e5%88%86%e4%bb%a3%e7%a0%81%e8%a7%a3%e9%87%8a">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142128574.png" alt="" />&lt;/p>
&lt;h3 id="单页探索">
 单页探索
 &lt;a class="anchor" href="#%e5%8d%95%e9%a1%b5%e6%8e%a2%e7%b4%a2">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212142128655.png" alt="" />&lt;br>
&lt;img src="img/ly-20241212142128733.png" alt="" />&lt;/p>
&lt;h1 id="list-page-templates">
 list page templates
 &lt;a class="anchor" href="#list-page-templates">#&lt;/a>
&lt;/h1>
&lt;h2 id="文件夹结构-1">
 文件夹结构
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e5%a4%b9%e7%bb%93%e6%9e%84-1">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142128811.png" alt="" />&lt;/p>
&lt;h2 id="文件内容">
 文件内容
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e5%86%85%e5%ae%b9">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#content/_index&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_Index&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">This&lt;/span> &lt;span style="color:#a6e22e">is&lt;/span> &lt;span style="color:#a6e22e">the&lt;/span> &lt;span style="color:#a6e22e">home&lt;/span> &lt;span style="color:#a6e22e">page&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#content/dir1/_index&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#e6db74">&amp;#34;_Index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">This&lt;/span> &lt;span style="color:#a6e22e">is&lt;/span> &lt;span style="color:#a6e22e">the&lt;/span> &lt;span style="color:#a6e22e">landing&lt;/span> &lt;span style="color:#a6e22e">page&lt;/span> &lt;span style="color:#a6e22e">for&lt;/span> &lt;span style="color:#a6e22e">dir1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="当前效果">
 当前效果
 &lt;a class="anchor" href="#%e5%bd%93%e5%89%8d%e6%95%88%e6%9e%9c">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142128890.png" alt="" />&lt;/p></description></item><item><title>hugo进阶学习01-10</title><link>https://lwmfjc.github.io/zh/docs/technology/Hugo/GiraffeAcademy_/advanced01-10/</link><pubDate>Sat, 07 Dec 2024 21:17:37 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Hugo/GiraffeAcademy_/advanced01-10/</guid><description>&lt;blockquote>
&lt;p>系列视频地址介绍&lt;br>

&lt;a target="_blank" href="https://www.youtube.com/watch?v=qtIqKaDlqXo&amp;amp;list=PLLAZ4kZ9dFpOnyRlyS-liKL5ReHDcj4G3">https://www.youtube.com/watch?v=qtIqKaDlqXo&amp;list=PLLAZ4kZ9dFpOnyRlyS-liKL5ReHDcj4G3&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142126407.png" alt="" />&lt;/p>
&lt;h1 id="介绍">
 介绍
 &lt;a class="anchor" href="#%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>hugo是用来构建静态网站的&lt;/li>
&lt;li>但是也可以稍微做点动态生成的事&lt;/li>
&lt;li>这里使用的版本是&lt;strong>v0.26&lt;/strong>（很久之前的版本）&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>备注：标题&lt;strong>短代码&lt;/strong>之前（不包括短代码这篇）的笔记是回溯的，所以没有复制源代码下来，直接在视频再次截图的&lt;/p>
&lt;/blockquote>
&lt;h1 id="在windows上安装hugo">
 在Windows上安装hugo
 &lt;a class="anchor" href="#%e5%9c%a8windows%e4%b8%8a%e5%ae%89%e8%a3%85hugo">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>到github release下载，然后放到某个文件夹中&lt;br>
&lt;img src="img/ly-20241212142126606.png" alt="" />&lt;/li>
&lt;li>设置环境变量&lt;br>
&lt;img src="img/ly-20241212142126695.png" alt="" />&lt;/li>
&lt;li>验证环境变量&lt;br>
&lt;img src="img/ly-20241212142126780.png" alt="" />&lt;/li>
&lt;li>最后验证hugo版本&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>hugo version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="创建一个新的网站">
 创建一个新的网站
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e6%96%b0%e7%9a%84%e7%bd%91%e7%ab%99">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>使用代码生成&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>hugo new site
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>文件夹结构&lt;br>
&lt;img src="img/ly-20241212142126859.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h1 id="使用主题">
 使用主题
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e4%b8%bb%e9%a2%98">#&lt;/a>
&lt;/h1>
&lt;p>这里是https://themes.gohugo.io&lt;br>
&lt;img src="img/ly-20241212142126939.png" alt="" /> 这里使用的是ga-hugo-theme（github中查找），并放到themes文件夹中&lt;br>
&lt;img src="img/ly-20241212142127018.png" alt="" />&lt;br>
之后在config.toml中使用主题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">baseURL&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;http://example.org/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">languageCode&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;en-us&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">title&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;My New Hugo Site&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">theme&lt;/span> = &lt;span style="color:#e6db74">&amp;#34;ga-hugo-theme&amp;#34;&lt;/span> &lt;span style="color:#75715e">#添加这句话&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>启动博客&lt;br>
&lt;code>hugo serve&lt;/code>&lt;/li>
&lt;li>地址&lt;br>
&lt;code>localhost:1313&lt;/code>&lt;/li>
&lt;/ul>
&lt;h1 id="创建md文件">
 创建md文件
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%bamd%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>使用&lt;code>hugo new a.md&lt;/code>把文件创建在content/a.md或者&lt;code>hugo new dir2/d.md&lt;/code>把文件创建在&lt;code>content/dir2.md&lt;/code>下，这讲创建后的结构目录为&lt;br>
&lt;img src="img/ly-20241212142127095.png" alt="" />
&lt;ul>
&lt;li>总共5个文件，可以使用localhost:1313访问博客（默认列举所有（包括子文件夹）文件&lt;/li>
&lt;li>可以使用 localhost:1313/dir3访问dir3下所有文件列表(list)，localhost:1313/dir1访问dir1下所有文件列表 （都是content的直接子文件夹）&lt;/li>
&lt;li>如果没有dir1/dir2/_index.md这个文件 ，则不能直接使用localhost:1313/dir1/dir2访问dir1/dir2下所有文件&lt;/li>
&lt;li>查看dir1/dir2/index.md文件及效果&lt;br>
&lt;img src="img/ly-20241212142127255.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="frontmatter-前言">
 frontmatter (前言)
 &lt;a class="anchor" href="#frontmatter-%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>可以使用YAML，TOML，或者JSON&lt;/li>
&lt;li>md编码及效果&lt;br>
&lt;img src="img/ly-20241212142127336.png" alt="" />&lt;br>
&lt;img src="img/ly-20241212142127415.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h1 id="archetypes原型">
 archetypes（原型）
 &lt;a class="anchor" href="#archetypes%e5%8e%9f%e5%9e%8b">#&lt;/a>
&lt;/h1>
&lt;h2 id="默认的原型文件">
 默认的原型文件
 &lt;a class="anchor" href="#%e9%bb%98%e8%ae%a4%e7%9a%84%e5%8e%9f%e5%9e%8b%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h2>
&lt;p>archetypes/default.md&lt;/p></description></item><item><title>border-theme背景图片问题</title><link>https://lwmfjc.github.io/zh/docs/technology/Obsidian/border-theme/</link><pubDate>Wed, 04 Dec 2024 09:10:11 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Obsidian/border-theme/</guid><description>&lt;h1 id="svg格式作为背景图片简单图片可行">
 svg格式作为背景图片（简单图片可行）
 &lt;a class="anchor" href="#svg%e6%a0%bc%e5%bc%8f%e4%bd%9c%e4%b8%ba%e8%83%8c%e6%99%af%e5%9b%be%e7%89%87%e7%ae%80%e5%8d%95%e5%9b%be%e7%89%87%e5%8f%af%e8%a1%8c">#&lt;/a>
&lt;/h1>
&lt;p>以下面这张图片为例&lt;br>
&lt;img src="img/ly-20241212142158272.svg" alt="" />
最简单的方式，用记事本/文本编辑器，打开svg图片，全选，复制，即&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;svg&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2000/svg&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">viewBox=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0 0 1920 1080&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;g&lt;/span> &lt;span style="color:#a6e22e">transform=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> rotate(0 960 540) 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> translate(-0 -0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> scale(1)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;rect&lt;/span> &lt;span style="color:#a6e22e">width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1920&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1080&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">fill=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rgb(184, 171, 255)&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/rect&amp;gt;&amp;lt;g&lt;/span> &lt;span style="color:#a6e22e">transform=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;translate(0, 0)&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">fill=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rgb(131, 114, 218)&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">fill-opacity=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">d=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M0,352.943L45.714,350.075C91.429,347.207,182.857,341.471,274.286,340.581C365.714,339.692,457.143,343.65,548.571,344.095C640,344.54,731.429,341.472,822.857,303.183C914.286,264.894,1005.714,191.383,1097.143,185.175C1188.571,178.967,1280,240.06,1371.429,221.336C1462.857,202.612,1554.286,104.069,1645.714,98.48C1737.143,92.892,1828.571,180.258,1874.286,223.941L1920,267.624L1920,1080L1874.286,1080C1828.571,1080,1737.143,1080,1645.714,1080C1554.286,1080,1462.857,1080,1371.429,1080C1280,1080,1188.571,1080,1097.143,1080C1005.714,1080,914.286,1080,822.857,1080C731.429,1080,640,1080,548.571,1080C457.143,1080,365.714,1080,274.286,1080C182.857,1080,91.429,1080,45.714,1080L0,1080Z&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/g&amp;gt;&amp;lt;g&lt;/span> &lt;span style="color:#a6e22e">transform=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;translate(0, 360)&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">fill=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rgb(79, 57, 180)&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">fill-opacity=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">d=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M0,136.093L45.714,117.434C91.429,98.774,182.857,61.455,274.286,80.719C365.714,99.983,457.143,175.829,548.571,189.505C640,203.181,731.429,154.687,822.857,130.414C914.286,106.141,1005.714,106.09,1097.143,141.274C1188.571,176.458,1280,246.877,1371.429,284.697C1462.857,322.517,1554.286,327.739,1645.714,284.675C1737.143,241.611,1828.571,150.263,1874.286,104.589L1920,58.914L1920,720L1874.286,720C1828.571,720,1737.143,720,1645.714,720C1554.286,720,1462.857,720,1371.429,720C1280,720,1188.571,720,1097.143,720C1005.714,720,914.286,720,822.857,720C731.429,720,640,720,548.571,720C457.143,720,365.714,720,274.286,720C182.857,720,91.429,720,45.714,720L0,720Z&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/g&amp;gt;&amp;lt;g&lt;/span> &lt;span style="color:#a6e22e">transform=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;translate(0, 720)&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;path&lt;/span> &lt;span style="color:#a6e22e">fill=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;rgb(26, 0, 143)&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">fill-opacity=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">d=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;M0,107.121L45.714,134.307C91.429,161.493,182.857,215.866,274.286,254.33C365.714,292.794,457.143,315.35,548.571,300.514C640,285.679,731.429,233.452,822.857,180.313C914.286,127.174,1005.714,73.123,1097.143,43.365C1188.571,13.606,1280,8.141,1371.429,41.079C1462.857,74.017,1554.286,145.358,1645.714,167.782C1737.143,190.206,1828.571,163.713,1874.286,150.467L1920,137.221L1920,360L1874.286,360C1828.571,360,1737.143,360,1645.714,360C1554.286,360,1462.857,360,1371.429,360C1280,360,1188.571,360,1097.143,360C1005.714,360,914.286,360,822.857,360C731.429,360,640,360,548.571,360C457.143,360,365.714,360,274.286,360C182.857,360,91.429,360,45.714,360L0,360Z&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/g&amp;gt;&amp;lt;/g&amp;gt;&amp;lt;/svg&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后打开https://codepen.io/yoksel/details/MWKeKK 网站，在 Insert your SVG中粘贴，得到&lt;br>
&lt;img src="img/ly-20241212142158431.png" alt="" />&lt;br>
最后把url(&amp;quot;&amp;quot;) 这块复制【没有分号】，即&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-css" data-lang="css">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">url&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;data:image/svg+xml,%3Csvg xmlns=&amp;#34;http://www.w3.org/2000/svg&amp;#34; viewBox=&amp;#34;0 0 1920 1080&amp;#34;%3E%3Cg transform=&amp;#34; rotate(0 960 540) translate(-0 -0) scale(1) &amp;#34;%3E%3Crect width=&amp;#34;1920&amp;#34; height=&amp;#34;1080&amp;#34; fill=&amp;#34;rgb(184, 171, 255)&amp;#34;%3E%3C/rect%3E%3Cg transform=&amp;#34;translate(0, 0)&amp;#34;%3E%3Cpath fill=&amp;#34;rgb(131, 114, 218)&amp;#34; fill-opacity=&amp;#34;1&amp;#34; d=&amp;#34;M0,352.943L45.714,350.075C91.429,347.207,182.857,341.471,274.286,340.581C365.714,339.692,457.143,343.65,548.571,344.095C640,344.54,731.429,341.472,822.857,303.183C914.286,264.894,1005.714,191.383,1097.143,185.175C1188.571,178.967,1280,240.06,1371.429,221.336C1462.857,202.612,1554.286,104.069,1645.714,98.48C1737.143,92.892,1828.571,180.258,1874.286,223.941L1920,267.624L1920,1080L1874.286,1080C1828.571,1080,1737.143,1080,1645.714,1080C1554.286,1080,1462.857,1080,1371.429,1080C1280,1080,1188.571,1080,1097.143,1080C1005.714,1080,914.286,1080,822.857,1080C731.429,1080,640,1080,548.571,1080C457.143,1080,365.714,1080,274.286,1080C182.857,1080,91.429,1080,45.714,1080L0,1080Z&amp;#34;%3E%3C/path%3E%3C/g%3E%3Cg transform=&amp;#34;translate(0, 360)&amp;#34;%3E%3Cpath fill=&amp;#34;rgb(79, 57, 180)&amp;#34; fill-opacity=&amp;#34;1&amp;#34; d=&amp;#34;M0,136.093L45.714,117.434C91.429,98.774,182.857,61.455,274.286,80.719C365.714,99.983,457.143,175.829,548.571,189.505C640,203.181,731.429,154.687,822.857,130.414C914.286,106.141,1005.714,106.09,1097.143,141.274C1188.571,176.458,1280,246.877,1371.429,284.697C1462.857,322.517,1554.286,327.739,1645.714,284.675C1737.143,241.611,1828.571,150.263,1874.286,104.589L1920,58.914L1920,720L1874.286,720C1828.571,720,1737.143,720,1645.714,720C1554.286,720,1462.857,720,1371.429,720C1280,720,1188.571,720,1097.143,720C1005.714,720,914.286,720,822.857,720C731.429,720,640,720,548.571,720C457.143,720,365.714,720,274.286,720C182.857,720,91.429,720,45.714,720L0,720Z&amp;#34;%3E%3C/path%3E%3C/g%3E%3Cg transform=&amp;#34;translate(0, 720)&amp;#34;%3E%3Cpath fill=&amp;#34;rgb(26, 0, 143)&amp;#34; fill-opacity=&amp;#34;1&amp;#34; d=&amp;#34;M0,107.121L45.714,134.307C91.429,161.493,182.857,215.866,274.286,254.33C365.714,292.794,457.143,315.35,548.571,300.514C640,285.679,731.429,233.452,822.857,180.313C914.286,127.174,1005.714,73.123,1097.143,43.365C1188.571,13.606,1280,8.141,1371.429,41.079C1462.857,74.017,1554.286,145.358,1645.714,167.782C1737.143,190.206,1828.571,163.713,1874.286,150.467L1920,137.221L1920,360L1874.286,360C1828.571,360,1737.143,360,1645.714,360C1554.286,360,1462.857,360,1371.429,360C1280,360,1188.571,360,1097.143,360C1005.714,360,914.286,360,822.857,360C731.429,360,640,360,548.571,360C457.143,360,365.714,360,274.286,360C182.857,360,91.429,360,45.714,360L0,360Z&amp;#34;%3E%3C/path%3E%3C/g%3E%3C/g%3E%3C/svg%3E&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加上&lt;/p></description></item><item><title>obsidian-theme</title><link>https://lwmfjc.github.io/zh/docs/technology/Obsidian/obsidian-theme/</link><pubDate>Tue, 03 Dec 2024 15:32:01 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Obsidian/obsidian-theme/</guid><description>&lt;h1 id="主题推荐">
 主题推荐
 &lt;a class="anchor" href="#%e4%b8%bb%e9%a2%98%e6%8e%a8%e8%8d%90">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>Neumorphism-dark.json&lt;br>
&lt;img src="img/ly-20241212142158673.jpg" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Sunset-base64.json ✔
&lt;img src="img/ly-20241212142158832.jpg" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Obsidian-default-dark-alt ✔
&lt;img src="img/ly-20241212142158865.jpg" alt="" />&lt;br>
4. Obsidian-default-light-alt
&lt;img src="img/ly-20241212142158906.jpg" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Neumorphism.json
&lt;img src="img/ly-20241212142158942.jpg" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>eyefriendly ✔
&lt;img src="img/ly-20241212142158977.jpg" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>boundy ✔
&lt;img src="img/ly-20241212142159017.jpg" alt="" />
flexoki-light
&lt;img src="img/ly-20241212142159055.jpg" alt="" />Borderless-light
&lt;img src="img/ly-20241212142159093.jpg" alt="" />&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h1 id="关于obsidian主题border的背景图片设置">
 关于obsidian主题border的背景图片设置
 &lt;a class="anchor" href="#%e5%85%b3%e4%ba%8eobsidian%e4%b8%bb%e9%a2%98border%e7%9a%84%e8%83%8c%e6%99%af%e5%9b%be%e7%89%87%e8%ae%be%e7%bd%ae">#&lt;/a>
&lt;/h1>
&lt;p>配合StyleSettings，在StyleSettings的这里设置&lt;br>
&lt;img src="img/ly-20241212142159126.jpg" alt="" />&lt;/p>
&lt;h2 id="暂不明确">
 暂不明确
 &lt;a class="anchor" href="#%e6%9a%82%e4%b8%8d%e6%98%8e%e7%a1%ae">#&lt;/a>
&lt;/h2>
&lt;p>background中貌似存在转换规则，不是直接用url(&amp;quot;&amp;quot;)这个形式把图片base64放进来就可以了，目前觉得可能的转换规则&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>%3c 48+12&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">60&lt;/span> &amp;lt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%3e 48+14&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">62&lt;/span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%23 32+3&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#75715e"># &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#下面的好像没用到，也不确定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%2b 32+11&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">43&lt;/span> + 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%3b ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%2c ,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>后续见另一篇文章&lt;br>

&lt;a target="_blank" href="_posts/study/obsidian/border-theme.md">border-theme&lt;/a>
{% post_link &amp;lsquo;study/obsidian/border-theme&amp;rsquo; &amp;lsquo;helo&amp;rsquo; %}&lt;/p></description></item><item><title>plugin</title><link>https://lwmfjc.github.io/zh/docs/technology/Obsidian/plugin/</link><pubDate>Tue, 03 Dec 2024 15:32:01 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Obsidian/plugin/</guid><description>&lt;p>
&lt;a target="_blank" href="https://github.com/RainCat1998/obsidian-custom-attachment-location">obsidian-custom-attachment-location&lt;/a> v.28.1文件批量重命名有效，再往上都是无效的&lt;/p></description></item><item><title>03垃圾收集器与内存分配策略</title><link>https://lwmfjc.github.io/zh/docs/technology/JVM/_understanding_the_jvm_/03/</link><pubDate>Thu, 25 May 2023 20:04:33 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/JVM/_understanding_the_jvm_/03/</guid><description>&lt;blockquote>
&lt;p>学习《深入理解Java虚拟机》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h3 id="代码清单3-9--xxmaxtenuringthreshod1说明">
 代码清单3-9 -XX:MaxTenuringThreshod=1说明
 &lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81%e6%b8%85%e5%8d%953-9--xxmaxtenuringthreshod1%e8%af%b4%e6%98%8e">#&lt;/a>
&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>Eden[8M]&lt;/th>
 &lt;th>Survivor1[1M]&lt;/th>
 &lt;th>Survivor2[1M]&lt;/th>
 &lt;th>Old {10M}&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>初始&lt;/td>
 &lt;td>allocation1[0.25M]，allocation2[4MB]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3执行时gc导致的变化&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation1[0.25M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation2[4MB]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3执行后&lt;/td>
 &lt;td>+allocation3[4MB]&lt;/td>
 &lt;td>+allocation1[0.25M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation2[4MB]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5执行时gc导致的变化&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation2[4MB]，+allocation1[0.25M]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5执行后&lt;/td>
 &lt;td>+allocation3[4MB]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation2[4MB]，+allocation1[0.25M]&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="代码清单3-9--xxmaxtenuringthreshod15说明">
 代码清单3-9 -XX:MaxTenuringThreshod=15说明
 &lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81%e6%b8%85%e5%8d%953-9--xxmaxtenuringthreshod15%e8%af%b4%e6%98%8e">#&lt;/a>
&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>Eden[8M]&lt;/th>
 &lt;th>Survivor1[1M]&lt;/th>
 &lt;th>Survivor2[1M]&lt;/th>
 &lt;th>Old {10M}&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>初始&lt;/td>
 &lt;td>allocation1[0.25M]，allocation2[4MB]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3执行时gc导致的变化&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation1[0.25M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation2[4MB]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>3执行后&lt;/td>
 &lt;td>+allocation3[4MB]&lt;/td>
 &lt;td>+allocation1[0.25M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation2[4MB]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5执行时gc导致的变化&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation1[0.25M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation2[4MB]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5执行后&lt;/td>
 &lt;td>+allocation3[4MB]&lt;/td>
 &lt;td>+allocation1[0.25M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation2[4MB]，+allocation1[0.25M]&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="代码清单3-10-说明">
 代码清单3-10 说明
 &lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81%e6%b8%85%e5%8d%953-10-%e8%af%b4%e6%98%8e">#&lt;/a>
&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>Eden[8M]&lt;/th>
 &lt;th>Survivor1[1M]&lt;/th>
 &lt;th>Survivor2[1M]&lt;/th>
 &lt;th>Old {10M}&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>初始&lt;/td>
 &lt;td>allocation1[0.25M]，&lt;br >allocation2[[0.25M]，allocation3[4M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4执行时gc导致的变化&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation1[0.25M]，&lt;br >+allocation2[[0.25M]，&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation3[4MB]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>4执行后&lt;/td>
 &lt;td>+allocation4[4MB]&lt;/td>
 &lt;td>+allocation1[0.25M]，&lt;br >+allocation2[[0.25M]，&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation3[4MB]&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>6执行时gc导致的变化&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation3[4MB]，&lt;br >+allocation1[0.25M]，&lt;br >+allocation2[[0.25M]，&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>6执行后&lt;/td>
 &lt;td>+allocation4[4MB]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation3[4MB]，&lt;br >+allocation1[0.25M]，&lt;br >+allocation2[[0.25M]，&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="代码清单3-11-说明">
 代码清单3-11 说明
 &lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81%e6%b8%85%e5%8d%953-11-%e8%af%b4%e6%98%8e">#&lt;/a>
&lt;/h3>
&lt;h4 id="-xx-handlepromotionfailure-关">
 -XX:-HandlePromotionFailure 关
 &lt;a class="anchor" href="#-xx-handlepromotionfailure-%e5%85%b3">#&lt;/a>
&lt;/h4>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>&lt;/th>
 &lt;th>Eden[8M]&lt;/th>
 &lt;th>Survivor1[1M]&lt;/th>
 &lt;th>Survivor2[1M]&lt;/th>
 &lt;th>Old {10M}&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>初始&lt;/td>
 &lt;td>allocation1[2M]，&lt;br >allocation2[2M]，&lt;br >allocation3[2M]&lt;br >allocation1[null]，allocation4[2M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5执行时gc导致的变化&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation2[2M]，+allocation3[2M] //总共4M&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>5执行后&lt;/td>
 &lt;td>+allocation4[2M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>+allocation2[2M]，+allocation3[2M] //总共4M&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>6-&amp;gt;11&lt;/td>
 &lt;td>allocation4[2M]&lt;br >+allocation5[2M]，&lt;br >+allocation6[2M]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation2[2M]，&lt;br >allocation3[2M] //总共4M，&lt;br >此时老年代连续可用空间在6M（或者说小于6M）&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>11执行时gc导致的变化&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation3[4MB]，&lt;br >+allocation1[0.25M]，&lt;br >+allocation2[[0.25M]，&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>11执行后&lt;/td>
 &lt;td>+allocation7[2MB]&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>allocation3[4MB]，&lt;br >+allocation1[0.25M]，&lt;br >+allocation2[[0.25M]，&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h1 id="说明">
 说明
 &lt;a class="anchor" href="#%e8%af%b4%e6%98%8e">#&lt;/a>
&lt;/h1>
&lt;blockquote>
&lt;ol>
&lt;li>
&lt;p>书籍版权归著者和出版社所有&lt;/p></description></item><item><title>07B+数索引的使用</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/07/</link><pubDate>Mon, 24 Apr 2023 14:32:22 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/07/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="innodb存储引擎的b树索引结论">
 InnoDB存储引擎的B+树索引：结论
 &lt;a class="anchor" href="#innodb%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e%e7%9a%84b%e6%a0%91%e7%b4%a2%e5%bc%95%e7%bb%93%e8%ae%ba">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>每个索引&lt;/strong>对应一颗B+树。B+树有好多层，&lt;strong>最下边一层&lt;/strong>是&lt;strong>叶子节点&lt;/strong>，其余是&lt;strong>内节点&lt;/strong>。所有&lt;strong>用户记录&lt;/strong>都存在B+树的&lt;strong>叶子节点&lt;/strong>，所有&lt;strong>目录项记录&lt;/strong>都存在内节点&lt;/li>
&lt;li>InnoDB 存储引擎会&lt;strong>自动为主键建立聚簇索引&lt;/strong>(如果&lt;strong>没有显式指定主键&lt;/strong>或者&lt;strong>没有声明不允许存储NULL的UNIQUE 键&lt;/strong>，它会自动添加主键) ， &lt;strong>聚簇索引&lt;/strong>的&lt;strong>叶子节点&lt;/strong>包含&lt;strong>完整的用户记录&lt;/strong>&lt;/li>
&lt;li>我们可以为感兴趣的列建立&lt;strong>二级索引&lt;/strong>，二级索引的叶子节点包含的用户记录由&lt;strong>索引列&lt;/strong>
&lt;strong>和主键&lt;/strong>组成。如果想通过二级索引查找完整的用户记录，需要执行&lt;strong>回表&lt;/strong>操作， 也就是在通过二级索引&lt;strong>找到主键值之后&lt;/strong>，再到&lt;strong>聚簇索引&lt;/strong>中查找完整的用户记录&lt;/li>
&lt;li>B+ 树中的&lt;strong>每层节点&lt;/strong>都按照&lt;strong>索引列的值从小到大的顺序排序&lt;/strong>组成了&lt;strong>双向链表&lt;/strong>，而且每个&lt;strong>页内的记录&lt;/strong>(无论是&lt;strong>用户记录&lt;/strong>还是&lt;strong>目录项记录&lt;/strong>)都按照索引列的值从小到大的顺序形成了一个单向链表。如果是联合索引， 则&lt;strong>页面&lt;/strong>和&lt;strong>记录&lt;/strong> &lt;strong>先&lt;/strong>按照索引列中前面的列的值排序：&lt;strong>如果该列的值相同&lt;/strong>，&lt;strong>再按照索引列中后面的列的值排序&lt;/strong>。比如， 我们对列c2 和c3建立了联合索引 &lt;strong>idx_c2_c3(c2， c3)&lt;/strong>，那么该索引中的页面和记录就&lt;strong>先按照c2 列&lt;/strong>的值进行排序；&lt;strong>如果c2 列的值相同&lt;/strong>， &lt;strong>再按照c3&lt;/strong> 列的值排序&lt;/li>
&lt;li>通过索引查找记录时，是&lt;strong>从B+ 树的根节点开始一层一层向下搜索的&lt;/strong>。由于每个页面(无论是&lt;strong>内节点页面&lt;/strong>还是&lt;strong>叶子节点页面&lt;/strong>〉中的记录都划分成了&lt;strong>若干个组&lt;/strong>， 每个组中&lt;strong>索引列值最大的记录&lt;/strong>在&lt;strong>页内的偏移量&lt;/strong>会被当作&lt;strong>槽&lt;/strong>依次存放在&lt;strong>页目录中&lt;/strong>(当然， 规定Supremum 记录比任何用户记录都大) ，因此可以在&lt;strong>页目录中通过二分法&lt;/strong>快速定位到&lt;strong>索引列等于某个值的记录&lt;/strong>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>如果大家在阅读上述结论时哪怕有点疑惑， 那么下面的内容就不适合你，请回过头去反复阅读前面的章节&lt;/p>
&lt;/blockquote>
&lt;h1 id="b树索引示意图的简化">
 B+树索引示意图的简化
 &lt;a class="anchor" href="#b%e6%a0%91%e7%b4%a2%e5%bc%95%e7%a4%ba%e6%84%8f%e5%9b%be%e7%9a%84%e7%ae%80%e5%8c%96">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#创建新表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; CREATE TABLE single_table&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id INT NOT NULL AUTO_INCREMENT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key1 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key2 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key3 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_part1 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_part2 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key_part3 VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> common_field VARCHAR&lt;span style="color:#f92672">(&lt;/span>100&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PRIMARY KEY &lt;span style="color:#f92672">(&lt;/span>id&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KEY idx_key1&lt;span style="color:#f92672">(&lt;/span>key1&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UNIQUE KEY uk_key2&lt;span style="color:#f92672">(&lt;/span>key2&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KEY idx_key3&lt;span style="color:#f92672">(&lt;/span>key3&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KEY idx_key_part&lt;span style="color:#f92672">(&lt;/span>key_part1,key_part2,key_part3&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span> Engine&lt;span style="color:#f92672">=&lt;/span>InnoDB CHARSET &lt;span style="color:#f92672">=&lt;/span> utf8;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如上，建立了&lt;strong>1个聚簇索引&lt;/strong>，&lt;strong>4个二级索引&lt;/strong>&lt;/p></description></item><item><title>06B+树索引</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/06/</link><pubDate>Sat, 22 Apr 2023 15:04:46 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/06/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="概述">
 概述
 &lt;a class="anchor" href="#%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h1>
&lt;p>数据页由&lt;strong>7个&lt;/strong>组成部分，各个数据页可以组成一个&lt;strong>双向链表&lt;/strong>，每个数据页中的记录会按照&lt;strong>主键值从小到大的顺序&lt;/strong>组成一个&lt;strong>单向链表&lt;/strong>。每个数据页都会为&lt;strong>它里面的记录&lt;/strong>生成一个&lt;strong>页目录&lt;/strong>，在通过主键查找某条记录的时候可以在&lt;strong>页目录&lt;/strong>中使用二分法快速定位到&lt;strong>对应的槽&lt;/strong>，然后再&lt;strong>遍历该槽&lt;/strong>对应&lt;strong>分组中的记录&lt;/strong>即可快速找到&lt;strong>指定&lt;/strong>的记录。&lt;strong>页和记录&lt;/strong>的关系&lt;/p>
&lt;blockquote>
&lt;p>页a，页b 可以&lt;strong>不在物理结构上相连&lt;/strong>，只要通过&lt;strong>双向链表相关联&lt;/strong>即可&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142156258.png" alt="ly-20241212142156258" />&lt;/p>
&lt;h1 id="没有索引时进行查找">
 没有索引时进行查找
 &lt;a class="anchor" href="#%e6%b2%a1%e6%9c%89%e7%b4%a2%e5%bc%95%e6%97%b6%e8%bf%9b%e8%a1%8c%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h1>
&lt;p>假设我们要搜索&lt;strong>某个列&lt;/strong>等于&lt;strong>某个常数&lt;/strong>的情况：&lt;br>
&lt;code>SELECT [查询列表] FROM 表名 WHERE 列名 = xxx&lt;/code>&lt;/p>
&lt;h2 id="在一个页中查找">
 在一个页中查找
 &lt;a class="anchor" href="#%e5%9c%a8%e4%b8%80%e4%b8%aa%e9%a1%b5%e4%b8%ad%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h2>
&lt;p>假设记录极少，所有记录可以&lt;strong>存放到一个页中&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>以&lt;strong>主键&lt;/strong>位搜索条件：页目录中使用&lt;strong>二分法&lt;/strong>快速定位到对应的&lt;strong>槽&lt;/strong>，然后在&lt;strong>遍历槽对应分组中的记录&lt;/strong>，即可快速找到指定记录&lt;/li>
&lt;li>其他列作为搜索条件：对于&lt;strong>非主键&lt;/strong>，数据页没有为&lt;strong>非主键列&lt;/strong>建立所谓的&lt;strong>页目录&lt;/strong>，所以&lt;strong>无法通过二分法&lt;/strong>快速定位相应的槽。只能&lt;strong>从Infimum依次遍历&lt;/strong>单向链表中的每条记录，然后对比，效率极低&lt;/li>
&lt;/ul>
&lt;h2 id="在很多页中查找">
 在很多页中查找
 &lt;a class="anchor" href="#%e5%9c%a8%e5%be%88%e5%a4%9a%e9%a1%b5%e4%b8%ad%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h2>
&lt;p>两个步骤：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>定位到记录所在的页&lt;/strong>&lt;/li>
&lt;li>从&lt;strong>所在页内&lt;/strong>查找相应的记录&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>没有索引&lt;/strong>情况下，不能快速定位到所在页，只能从&lt;strong>第一页&lt;/strong>沿着&lt;strong>双向链表&lt;/strong>一直往下找，而如果是主键，每一页则可以在&lt;strong>页目录&lt;/strong>二分查找。&lt;br>
不过由于要&lt;strong>遍历所有页&lt;/strong>，所以超级&lt;strong>耗时&lt;/strong>&lt;/p>
&lt;h1 id="索引">
 索引
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#例子&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; CREATE TABLE index_demo&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c1 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c2 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c3 CHAR&lt;span style="color:#f92672">(&lt;/span>1&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PRIMARY KEY&lt;span style="color:#f92672">(&lt;/span>c1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span> ROW_FORMAT&lt;span style="color:#f92672">=&lt;/span>COMPACT;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>完整的行格式&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142156429.png" alt="ly-20241212142156429" />&lt;/p>
&lt;p>简化的行格式&lt;br>
&lt;img src="img/ly-20241212142156467.png" alt="ly-20241212142156467" />&lt;/p>
&lt;ul>
&lt;li>record_type：&lt;strong>记录头信息&lt;/strong>的一项属性，表示&lt;strong>记录的类型&lt;/strong>。0：普通记录，2：Infimum记录，3：Supremum记录，1还没用过等会再说&lt;/li>
&lt;li>next_record：&lt;strong>记录头信息&lt;/strong>的一项属性，表示从当前记录的&lt;strong>真实数据&lt;/strong>到&lt;strong>下一条记录真实数据&lt;/strong>的距离&lt;/li>
&lt;li>各个列的值：这里只展示在index_demo表中的&lt;strong>3个列&lt;/strong>，分别是c1、c2、c3&lt;/li>
&lt;li>其他信息：包括&lt;strong>隐藏列&lt;/strong>及&lt;strong>记录的额外信息&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>改为竖着查看：&lt;br>
&lt;img src="img/ly-20241212142156521.png" alt="ly-20241212142156521" />&lt;/p>
&lt;blockquote>
&lt;p>上面图6-4的箭头其实有一点点出入，应该是指向z真实数据第1列那个位置，如下
&lt;img src="img/ly-20241212142156561.png" alt="ly-20241212142156561" />&lt;/p></description></item><item><title>05InnoDB数据页结构</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/05/</link><pubDate>Fri, 21 Apr 2023 10:35:29 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/05/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="不同类型的页简介">
 不同类型的页简介
 &lt;a class="anchor" href="#%e4%b8%8d%e5%90%8c%e7%b1%bb%e5%9e%8b%e7%9a%84%e9%a1%b5%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>页是&lt;strong>InnoDB管理存储空间&lt;/strong>的基本单位，1个页的大小一般是16KB&lt;/p>
&lt;blockquote>
&lt;p>InnoDB为了不同目的设计多种不同类型的页，包括&lt;strong>存放表空间头部信息&lt;/strong>
的页、&lt;strong>存放Change Buffer 信息&lt;/strong>的页、&lt;strong>存放INODE信息&lt;/strong>的页、&lt;strong>存放undo 日志信息&lt;/strong>的页&lt;/p>
&lt;/blockquote>
&lt;p>这里说的是&lt;strong>存放表中记录&lt;/strong>的那种类型的页，这种&lt;strong>存放记录&lt;/strong>的页称为&lt;strong>索引页&lt;/strong>（INDEX页）&lt;/p>
&lt;blockquote>
&lt;p>暂时称之为&lt;strong>数据页&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h1 id="数据页结构快览">
 数据页结构快览
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e9%a1%b5%e7%bb%93%e6%9e%84%e5%bf%ab%e8%a7%88">#&lt;/a>
&lt;/h1>
&lt;p>1个页有16KB，这部分存储空间被划分为了多个部分（7部分），不同部分有不同的功能&lt;br>
&lt;img src="img/ly-20241212142155323.png" alt="ly-20241212142155323" />&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>名称&lt;/th>
 &lt;th>中文名&lt;/th>
 &lt;th>占用空间&lt;/th>
 &lt;th>大小&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>File Header&lt;/td>
 &lt;td>文件头部&lt;/td>
 &lt;td>38 字节&lt;/td>
 &lt;td>页的一些通用信息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Page Header&lt;/td>
 &lt;td>页面头部&lt;/td>
 &lt;td>56 字节&lt;/td>
 &lt;td>数据页专有的一些信息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Infimum + Supremum&lt;/td>
 &lt;td>页面中的最小记录和最大记录&lt;/td>
 &lt;td>26 字节&lt;/td>
 &lt;td>两个虚拟的记录&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>User Records&lt;/td>
 &lt;td>用户记录&lt;/td>
 &lt;td>不确定&lt;/td>
 &lt;td>用户存储的记录内容&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Free Space&lt;/td>
 &lt;td>空闲空间&lt;/td>
 &lt;td>不确定&lt;/td>
 &lt;td>页中尚未使用的空间&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Page Directory&lt;/td>
 &lt;td>页目录&lt;/td>
 &lt;td>不确定&lt;/td>
 &lt;td>某些记录的相对位置&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>File Trailer&lt;/td>
 &lt;td>文件尾部&lt;/td>
 &lt;td>8 字节&lt;/td>
 &lt;td>校验页是否完整&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h1 id="记录在页中的存储">
 记录在页中的存储
 &lt;a class="anchor" href="#%e8%ae%b0%e5%bd%95%e5%9c%a8%e9%a1%b5%e4%b8%ad%e7%9a%84%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h1>
&lt;p>每插入一条记录，从&lt;strong>Free Space&lt;/strong>申请一个记录大小的空间，并&lt;strong>将这个空间划分到UserRecords&lt;/strong>部分。当FreeSpace部分的空间全部被UserRecords部分替代掉后，意味着该页用完。如果再插入，就需要申请新的页&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142155485.png" alt="ly-20241212142155485" />&lt;/p>
&lt;h2 id="记录头信息的秘密">
 记录头信息的秘密
 &lt;a class="anchor" href="#%e8%ae%b0%e5%bd%95%e5%a4%b4%e4%bf%a1%e6%81%af%e7%9a%84%e7%a7%98%e5%af%86">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mysql&amp;gt; CREATE TABLE page_demo&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c1 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c2 INT,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c3 VARCHAR&lt;span style="color:#f92672">(&lt;/span>10000&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PRIMARY KEY&lt;span style="color:#f92672">(&lt;/span>c1&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span> CHARSET&lt;span style="color:#f92672">=&lt;/span>ascii ROW_FORMAT&lt;span style="color:#f92672">=&lt;/span>COMPACT;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Query OK, &lt;span style="color:#ae81ff">0&lt;/span> rows affected &lt;span style="color:#f92672">(&lt;/span>0.03 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212142155528.png" alt="ly-20241212142155528" />&lt;/p></description></item><item><title>04InnoDB记录存储结构</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/04/</link><pubDate>Tue, 18 Apr 2023 20:00:03 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/04/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="问题">
 问题
 &lt;a class="anchor" href="#%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h1>
&lt;p>表数据存在哪，以什么格式存放，MySQL以什么方式来访问&lt;br>
存储引擎：对表中数据进行&lt;strong>存储&lt;/strong>和&lt;strong>写入&lt;/strong>&lt;br>
InnoDB是MySQL默认的存储引擎，这章主要讲&lt;strong>InnoDB存储引擎的记录存储结构&lt;/strong>&lt;/p>
&lt;h1 id="innodb页简介">
 InnoDB页简介
 &lt;a class="anchor" href="#innodb%e9%a1%b5%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h1>
&lt;p>&lt;strong>注意，是简介&lt;/strong>&lt;br>
InnoDB：将表中的数据&lt;strong>存储到磁盘上&lt;/strong>&lt;br>
真正处理数据的过程：内存中。所以需要&lt;strong>把磁盘中数据加载到内存中&lt;/strong>，如果是&lt;strong>写入&lt;/strong>或&lt;strong>修改&lt;/strong>请求，还需要把&lt;strong>内存&lt;/strong>中的内容&lt;strong>刷新到磁盘&lt;/strong>上&lt;br>
获取记录：不是一条条从磁盘读，InnoDB将数据划分为若干个页，以&lt;strong>页&lt;/strong>作为&lt;strong>磁盘&lt;/strong>和&lt;strong>内存&lt;/strong>之间交互的基本单位。页大小-&amp;gt; 一般是16KB&lt;br>
一般情况：一次最少从磁盘读取16KB的内容&lt;strong>到内存中&lt;/strong>，一次最少把内存中的16KB内容&lt;strong>刷新到磁盘&lt;/strong>中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mysql&amp;gt; SHOW VARIABLES LIKE &lt;span style="color:#e6db74">&amp;#39;innodb_page_size&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+------------------+-------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Variable_name | Value |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+------------------+-------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| innodb_page_size | &lt;span style="color:#ae81ff">16384&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+------------------+-------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> row in set &lt;span style="color:#f92672">(&lt;/span>0.00 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>只能在第一次初始化MySQL数据目录时指定，之后&lt;strong>再也不能更改&lt;/strong>（通过mysqld &amp;ndash;initialize初始化数据目录[旧版本]）&lt;/p>
&lt;h1 id="innodb行格式">
 InnoDB行格式
 &lt;a class="anchor" href="#innodb%e8%a1%8c%e6%a0%bc%e5%bc%8f">#&lt;/a>
&lt;/h1>
&lt;p>以记录为单位向表中插入数据，而这些记录在&lt;strong>磁盘上的存放形式&lt;/strong>也被称为&lt;strong>行格式&lt;/strong>或者&lt;strong>记录格式&lt;/strong>&lt;br>
目前有4中&lt;strong>不同类型的行格式&lt;/strong>：COMPACT、REDUNDANT、DYNAMIC和COMPRESSED&lt;/p>
&lt;blockquote>
&lt;p>compact [kəmˈpækt]契约&lt;br>
redundant[rɪˈdʌndənt] 冗余的&lt;br>
dynamic[daɪˈnæmɪk]动态的&lt;br>
compressed [kəmˈprest] 压缩的&lt;/p>
&lt;/blockquote>
&lt;h2 id="指定行格式的语法">
 指定行格式的语法
 &lt;a class="anchor" href="#%e6%8c%87%e5%ae%9a%e8%a1%8c%e6%a0%bc%e5%bc%8f%e7%9a%84%e8%af%ad%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;p>CREATE TABLE 表名(列的信息) ROW_FORMAT=行格式名称&lt;br>
ALTER TABLE 表名 ROW_FORMATE=行格式名称&lt;br>
如下，在数据库xiaohaizi下创建一个表&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>CREATE TABLE record_format_demo&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c1 VARCHAR&lt;span style="color:#f92672">(&lt;/span>10&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c2 VARCHAR&lt;span style="color:#f92672">(&lt;/span>10&lt;span style="color:#f92672">)&lt;/span> NOT NULL,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c3 CHAR&lt;span style="color:#f92672">(&lt;/span>10&lt;span style="color:#f92672">)&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c4 VARCHAR&lt;span style="color:#f92672">(&lt;/span>10&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span> CHARSET&lt;span style="color:#f92672">=&lt;/span>ascii ROW_FORMAT&lt;span style="color:#f92672">=&lt;/span>COMPACT; 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#回顾：ascii每个字符1字节即可表示，且只有空格标点数字字母不可见字符&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#插入两条数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INSERT INTO record_format_demo&lt;span style="color:#f92672">(&lt;/span>c1,c2,c3,c4&lt;span style="color:#f92672">)&lt;/span> VALUES&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;aaaa&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;bbb&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;cc&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;d&amp;#39;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>,&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;eeee&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;fff&amp;#39;&lt;/span>,NULL,NULL&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查询&lt;/p></description></item><item><title>03字符集和比较规则</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/03/</link><pubDate>Mon, 17 Apr 2023 22:15:01 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/03/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="字符集">
 字符集
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e9%9b%86">#&lt;/a>
&lt;/h1>
&lt;p>把哪些字符映射成二进制数据：&lt;strong>字符范围&lt;/strong>&lt;br>
怎么映射：字符-&amp;gt;二进制数据，编码；二进制-&amp;gt;字符，解码&lt;br>
字符集：&lt;strong>某个字符范围的编码规则&lt;/strong>&lt;br>
同一种字符集可以有多种比较规则&lt;/p>
&lt;h2 id="重要的字符集">
 重要的字符集
 &lt;a class="anchor" href="#%e9%87%8d%e8%a6%81%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86">#&lt;/a>
&lt;/h2>
&lt;p>ASCAII字符集：128个，包括空格标点数字大小写及不可见字符，使用一个字节编码&lt;br>
ISO 8859-1字符集：256个，ASCAII基础扩充128个西欧常用字符（包括德法），使用1个字节，别名Latin1&lt;br>
GB2312字符集：收录部分汉字，兼容ASCAII字符集，如果字符在ASCAII字符集中则采用1字节，否则两字节。即&lt;strong>变长编码方式&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>区分某个字节，&lt;strong>代表一个单独字符&lt;/strong>，还是&lt;strong>某个字符的一部分&lt;/strong>。&lt;br>
比如0xB0AE75，由于是16进制，所有两个代表1个字节。所以这里有三个字节，其中最后那个字节为7*16+5=117 &amp;lt; 127 所以代表一个单独字符。而AE=10 * 16 +15=175 &amp;gt;127 ，所以是某个字符的一部分&lt;/p>
&lt;/blockquote>
&lt;p>GBK字符集：对GB2312字符集扩充，编码方式兼容GB2312&lt;br>
UTF-8字符集：几乎收录所有字符，且不断扩充，兼容ASCAII字符集。变长：采用1&lt;sub>4字节&lt;br>
L-&amp;gt;0x4C 1字节，啊-&amp;gt;0xE5958A，两字节&lt;br>
UTF-8是Unicode字符集的一种编码方案，Unicode字符集有三种方案：UTF-8(1&lt;/sub>4字节编码一个字符)，UTF-16(2或4字节编码一个字符)，UTF-32(4字节编码一个字符)&lt;/p>
&lt;blockquote>
&lt;p>对于**“我”**，ASCLL中没有，UTF-8中采用3字节编码，GB22312采用2字节编码&lt;/p>
&lt;/blockquote>
&lt;h1 id="mysql中支持的字符集和比较规则">
 MySQL中支持的字符集和比较规则
 &lt;a class="anchor" href="#mysql%e4%b8%ad%e6%94%af%e6%8c%81%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86%e5%92%8c%e6%af%94%e8%be%83%e8%a7%84%e5%88%99">#&lt;/a>
&lt;/h1>
&lt;p>MySQL中，区分utf8mb3和utf8mb4，前者只是用1&lt;sub>3字节表示字符；后者使用1&lt;/sub>4字节表示字符。MySQL中，utf8代表utf8mb3。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#查看当前MySQL支持的字符集(注意，是字符集，名称都是小写)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Default collation 默认比较规则&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; SHOW CHARSET;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+----------+---------------------------------+---------------------+--------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Charset | Description | Default collation | Maxlen |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+----------+---------------------------------+---------------------+--------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| big5 | Big5 Traditional Chinese | big5_chinese_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| dec8 | DEC West European | dec8_swedish_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp850 | DOS West European | cp850_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| hp8 | HP West European | hp8_english_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| koi8r | KOI8-R Relcom Russian | koi8r_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| latin1 | cp1252 West European | latin1_swedish_ci | &lt;span style="color:#ae81ff">1&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| latin2 | ISO 8859-2 Central European | latin2_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| swe7 | 7bit Swedish | swe7_swedish_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ascii | US ASCII | ascii_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ujis | EUC-JP Japanese | ujis_japanese_ci | &lt;span style="color:#ae81ff">3&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| sjis | Shift-JIS Japanese | sjis_japanese_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| hebrew | ISO 8859-8 Hebrew | hebrew_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| tis620 | TIS620 Thai | tis620_thai_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| euckr | EUC-KR Korean | euckr_korean_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| koi8u | KOI8-U Ukrainian | koi8u_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| gb2312 | GB2312 Simplified Chinese | gb2312_chinese_ci | &lt;span style="color:#ae81ff">2&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| greek | ISO 8859-7 Greek | greek_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp1250 | Windows Central European | cp1250_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| gbk | GBK Simplified Chinese | gbk_chinese_ci | &lt;span style="color:#ae81ff">2&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| latin5 | ISO 8859-9 Turkish | latin5_turkish_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| armscii8 | ARMSCII-8 Armenian | armscii8_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf8 | UTF-8 Unicode | utf8_general_ci | &lt;span style="color:#ae81ff">3&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| ucs2 | UCS-2 Unicode | ucs2_general_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp866 | DOS Russian | cp866_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| keybcs2 | DOS Kamenicky Czech-Slovak | keybcs2_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| macce | Mac Central European | macce_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| macroman | Mac West European | macroman_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp852 | DOS Central European | cp852_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| latin7 | ISO 8859-13 Baltic | latin7_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> | 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf8mb4 | UTF-8 Unicode | utf8mb4_general_ci | &lt;span style="color:#ae81ff">4&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp1251 | Windows Cyrillic | cp1251_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf16 | UTF-16 Unicode | utf16_general_ci | &lt;span style="color:#ae81ff">4&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf16le | UTF-16LE Unicode | utf16le_general_ci | &lt;span style="color:#ae81ff">4&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp1256 | Windows Arabic | cp1256_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp1257 | Windows Baltic | cp1257_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| utf32 | UTF-32 Unicode | utf32_general_ci | &lt;span style="color:#ae81ff">4&lt;/span> | &amp;lt;---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| binary | Binary pseudo charset | binary | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| geostd8 | GEOSTD8 Georgian | geostd8_general_ci | &lt;span style="color:#ae81ff">1&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| cp932 | SJIS &lt;span style="color:#66d9ef">for&lt;/span> Windows Japanese | cp932_japanese_ci | &lt;span style="color:#ae81ff">2&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| eucjpms | UJIS &lt;span style="color:#66d9ef">for&lt;/span> Windows Japanese | eucjpms_japanese_ci | &lt;span style="color:#ae81ff">3&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| gb18030 | China National Standard GB18030 | gb18030_chinese_ci | &lt;span style="color:#ae81ff">4&lt;/span> |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+----------+---------------------------------+---------------------+--------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">41&lt;/span> rows in set &lt;span style="color:#f92672">(&lt;/span>0.00 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>字符集的比较规则（这里先看utf8的）&lt;/p></description></item><item><title>02启动选项和系统变量</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/02/</link><pubDate>Mon, 17 Apr 2023 20:49:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/02/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="启动选项和配置文件">
 启动选项和配置文件
 &lt;a class="anchor" href="#%e5%90%af%e5%8a%a8%e9%80%89%e9%a1%b9%e5%92%8c%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h1>
&lt;p>在程序启动时指定的设置项，也称之为&lt;strong>启动选项startup option&lt;/strong>（可以在命令行中/配置文件中 指定）&lt;br>
&lt;strong>由于在centos7中使用systemctl start mysqld启动mysql，所以好像没法用命令行指定启动选项了&lt;/strong>&lt;/p>
&lt;p>程序(可能有些程序新版本已经没有了)的对应类别和能读取的组：&lt;br>
&lt;img src="img/ly-20241212142154302.png" alt="ly-20241212142154302" />&lt;/p>
&lt;p>这里讲配置文件的方式设置启动选项：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#添加配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /etc/my.cnf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>server&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>skip-networking &lt;span style="color:#75715e">#禁止tcp网络连接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>default-storage-engine&lt;span style="color:#f92672">=&lt;/span>MyISAM &lt;span style="color:#75715e">#建表默认使用M有ISAM存储引擎&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#效果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>▶ mysql -h127.0.0.1 -uroot -p
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter password: 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ERROR &lt;span style="color:#ae81ff">2003&lt;/span> &lt;span style="color:#f92672">(&lt;/span>HY000&lt;span style="color:#f92672">)&lt;/span>: Can&lt;span style="color:#e6db74">&amp;#39;t connect to MySQL server on &amp;#39;&lt;/span>127.0.0.1&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> &lt;span style="color:#f92672">(&lt;/span>111&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#去除tcp网络连接限制后新建一个表&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>▶ mysql -h127.0.0.1 -uroot -p &lt;span style="color:#75715e">#可以连接上&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; create table default_storage_engine_demo&lt;span style="color:#f92672">(&lt;/span>i int&lt;span style="color:#f92672">)&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Query OK, &lt;span style="color:#ae81ff">0&lt;/span> rows affected &lt;span style="color:#f92672">(&lt;/span>0.01 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql&amp;gt; show create table default_storage_engine_demo;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------------------+----------------------------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| Table | Create Table |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------------------+----------------------------------------------------------------------------------------------------------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| default_storage_engine_demo | CREATE TABLE &lt;span style="color:#e6db74">`&lt;/span>default_storage_engine_demo&lt;span style="color:#e6db74">`&lt;/span> &lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">`&lt;/span>i&lt;span style="color:#e6db74">`&lt;/span> int&lt;span style="color:#f92672">(&lt;/span>11&lt;span style="color:#f92672">)&lt;/span> DEFAULT NULL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">)&lt;/span> ENGINE&lt;span style="color:#f92672">=&lt;/span>MyISAM DEFAULT CHARSET&lt;span style="color:#f92672">=&lt;/span>latin1 |
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果多个配置文件都配置了某个选项，如&lt;code>/etc/my.cnf /etc/mysql/my.cnf /usr/etc/my.cnf ~/.my.cnf&lt;/code>都配置了，则以最后一个配置的为主&lt;br>
如果同一个配置文件，比如[server]组和[mysqld]组都出现了default-storage-engine配置，则以后出现的组中的配置为准&lt;br>
如果一个启动选项既在命令行中出现，又在配置文件中配置，则以命令行中的为准&lt;/p></description></item><item><title>01初识MySQL</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/01/</link><pubDate>Mon, 17 Apr 2023 11:39:48 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/_how_mysql_run_/01/</guid><description>&lt;blockquote>
&lt;p>学习《MySQL是怎样运行的》，感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="原文">
 原文
 &lt;a class="anchor" href="#%e5%8e%9f%e6%96%87">#&lt;/a>
&lt;/h1>
&lt;h1 id="下载与安装">
 下载与安装
 &lt;a class="anchor" href="#%e4%b8%8b%e8%bd%bd%e4%b8%8e%e5%ae%89%e8%a3%85">#&lt;/a>
&lt;/h1>
&lt;p>环境Centos7&lt;/p>
&lt;p>添加MySQL5.7仓库&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>解决证书问题&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看是否添加成功&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo yum repolist all | grep mysql | grep 启用 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql-connectors-community/x86_64 MySQL Connectors Community 启用: &lt;span style="color:#ae81ff">213&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql-tools-community/x86_64 MySQL Tools Community 启用: &lt;span style="color:#ae81ff">96&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql57-community/x86_64 MySQL 5.7 Community Server 启用: &lt;span style="color:#ae81ff">642&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>MySQL安装&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo yum -y install mysql-community-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="运行与密码修改">
 运行与密码修改
 &lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c%e4%b8%8e%e5%af%86%e7%a0%81%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h1>
&lt;p>Centos7中安装目录查看，在/usr/bin中，与Max有所不同&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>whereis mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql: /usr/bin/mysql /usr/lib64/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ls /usr/bin |grep mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqladmin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlbinlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlcheck
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_config_editor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqld_pre_systemd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqldump
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqldumpslow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlimport
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_install_db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_plugin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlpump
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_secure_installation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlshow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysqlslap
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_ssl_rsa_setup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_tzinfo_to_sql
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mysql_upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加mysqld目录到环境变量中（这里可省略，因为mysqld默认在/usr/bin中了&lt;/p></description></item><item><title>redis集群搭建</title><link>https://lwmfjc.github.io/zh/docs/technology/Redis/redis-cluster/</link><pubDate>Thu, 13 Apr 2023 23:27:30 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Redis/redis-cluster/</guid><description>&lt;blockquote>
&lt;p>转载自https://www.cnblogs.com/Yunya-Cnblogs/p/14608937.html（添加小部分笔记）感谢作者!&lt;/p>
&lt;p>部分参考自 
&lt;a target="_blank" href="https://www.cnblogs.com/ysocean/p/12328088.html">https://www.cnblogs.com/ysocean/p/12328088.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="基本准备">
 基本准备
 &lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e5%87%86%e5%a4%87">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20241212142159186.png" alt="ly-20241212142159186.png" />&lt;/p>
&lt;h2 id="架构">
 架构
 &lt;a class="anchor" href="#%e6%9e%b6%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>采用Centos7，Redis版本为6.2，架构如下：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142159238.png" alt="ly-20241212142159238" />&lt;/p>
&lt;h2 id="hosts修改">
 hosts修改
 &lt;a class="anchor" href="#hosts%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>vim /etc/hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#添加&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.101 node1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.102 node2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.103 node3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="集群准备">
 集群准备
 &lt;a class="anchor" href="#%e9%9b%86%e7%be%a4%e5%87%86%e5%a4%87">#&lt;/a>
&lt;/h2>
&lt;h3 id="对每个节点">
 对每个节点
 &lt;a class="anchor" href="#%e5%af%b9%e6%af%8f%e4%b8%aa%e8%8a%82%e7%82%b9">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>下载redis并解压到 /usr/local/redis-cluster中&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>cd /usr/local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir redis-cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -zxvf redis* -C /usr/local/redis*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>进入redis根目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>安装完毕&lt;/p>
&lt;/li>
&lt;li>
&lt;p>hosts修改&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>vim /etc/hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#添加&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.101 node1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.102 node2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.103 node3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="配置文件修改6个节点中的每一个">
 配置文件修改(6个节点中的每一个)
 &lt;a class="anchor" href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e4%bf%ae%e6%94%b96%e4%b8%aa%e8%8a%82%e7%82%b9%e4%b8%ad%e7%9a%84%e6%af%8f%e4%b8%80%e4%b8%aa">#&lt;/a>
&lt;/h2>
&lt;p>创建多级目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mkdir -p /usr/local/redis_cluster/redis_63&lt;span style="color:#f92672">{&lt;/span>79,80&lt;span style="color:#f92672">}&lt;/span>/&lt;span style="color:#f92672">{&lt;/span>conf,pid,logs&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212142159275.png" alt="ly-20241212142159275" />&lt;/p>
&lt;p>编写配置文件&lt;/p></description></item><item><title>科目</title><link>https://lwmfjc.github.io/zh/docs/technology/Other/kaoshi/</link><pubDate>Thu, 13 Apr 2023 23:27:30 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Other/kaoshi/</guid><description>&lt;h2 id="科目">
 科目
 &lt;a class="anchor" href="#%e7%a7%91%e7%9b%ae">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>1022/9:00-11:30&lt;/p>
&lt;ul>
&lt;li>00024 普通逻辑 2010&lt;/li>
&lt;li>02197 概率论与数理统计（二）2018&lt;/li>
&lt;li>02318 计算机组成原理 2016&lt;/li>
&lt;li>02324 离散数学 2014&lt;/li>
&lt;li>02331 数据结构 2012&lt;/li>
&lt;li>03709 马克思主义基本原理概论 2018&lt;/li>
&lt;li>04747 Java语言程序设计（一） 2019&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>1022/14:30-17:00&lt;/p>
&lt;ul>
&lt;li>00023 高等数学（工本） 2019&lt;/li>
&lt;li>00342 高级语言程序设计（一）2017&lt;/li>
&lt;li>02326 操作系统 2017&lt;/li>
&lt;li>04730 电子技术基础（三） 2006&lt;/li>
&lt;li>04735 数据库系统原理 2018&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>1023/09:00-11:30&lt;/p>
&lt;ul>
&lt;li>02325 计算机系统结构 2012&lt;/li>
&lt;li>03708 中国近现代史纲要 2018&lt;/li>
&lt;li>04737 C++程序设计 2019&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>1023/14:30-17:00&lt;/p>
&lt;ul>
&lt;li>0015 英语（二）2012&lt;/li>
&lt;li>02333 软件工程 2011&lt;/li>
&lt;li>04741 计算机网络原理 2018&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>基本操作</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/basic/</link><pubDate>Wed, 05 Apr 2023 17:23:19 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/basic/</guid><description>&lt;h1 id="yum源替换成阿里云">
 yum源替换成阿里云
 &lt;a class="anchor" href="#yum%e6%ba%90%e6%9b%bf%e6%8d%a2%e6%88%90%e9%98%bf%e9%87%8c%e4%ba%91">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>yum install -y wget
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 备份&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 下载&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 重建缓存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum clean all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum makecache
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="java环境搭建">
 Java环境搭建
 &lt;a class="anchor" href="#java%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>yum search java | grep jdk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum install -y java-1.8.0-openjdk-devel.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># java -version 正常&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># javac -version 正常&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="解压相关">
 解压相关
 &lt;a class="anchor" href="#%e8%a7%a3%e5%8e%8b%e7%9b%b8%e5%85%b3">#&lt;/a>
&lt;/h1>
&lt;p>-zxvf&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>tar -zxvf redis* -C /usr/local/redis*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># z ：表示 tar 包是被 gzip 压缩过的 (后缀是.tar.gz)，所以解压时需要用 gunzip 解压 (.tar不需要)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># x ：表示 从 tar 包中把文件提取出来&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># v ：表示 显示打包过程详细信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># f ：指定被处理的文件是什么&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 适用于参数分开使用的情况，连续无分隔参数不应该再使用（所以上面的命令不标准），&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 应该是 tar zxvf redis* -C /usr/local/redis*&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="主题修改">
 主题修改
 &lt;a class="anchor" href="#%e4%b8%bb%e9%a2%98%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h1>
&lt;p>oh my zsh&lt;/p></description></item><item><title>vmware上linux主机的安装和克隆</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/create_clone/</link><pubDate>Wed, 29 Mar 2023 17:23:19 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/create_clone/</guid><description>&lt;h1 id="安装">
 安装
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85">#&lt;/a>
&lt;/h1>
&lt;h2 id="虚拟机向导">
 虚拟机向导
 &lt;a class="anchor" href="#%e8%99%9a%e6%8b%9f%e6%9c%ba%e5%90%91%e5%af%bc">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>典型&amp;mdash;稍后安装&amp;ndash;linux&amp;ndash;RedhatEnterpriseLinux7 64&lt;/li>
&lt;li>虚拟机名称rheCentos700&lt;/li>
&lt;li>接下来都默认即可(20G硬盘，2G内存，网络适配器(桥接模式))&lt;/li>
&lt;/ol>
&lt;h2 id="安装界面">
 安装界面
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e7%95%8c%e9%9d%a2">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>日期&amp;ndash;亚洲上海，键盘&amp;ndash;汉语，语言支持&amp;ndash;简体中文(中国)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>软件安装&lt;br>
最小安装&amp;mdash;&amp;gt; 兼容性程序库+开发工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>其他存储选项&amp;ndash;配置分区&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>/boot 1G 标准分区，文件系统ext4&lt;/li>
&lt;li>swap 2G 标准分区 ，文件系统swap&lt;/li>
&lt;li>/ 17G 标准分区，文件系统ext4&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>网络和主机名&lt;br>
打开网络+设置主机名(rheCentos700)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>完成&amp;mdash;过程中配置密码 默认用户root+其他用户ly&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="安装完成后修改ip及网关">
 安装完成后修改ip及网关
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85%e5%ae%8c%e6%88%90%e5%90%8e%e4%bf%ae%e6%94%b9ip%e5%8f%8a%e7%bd%91%e5%85%b3">#&lt;/a>
&lt;/h2>
&lt;h3 id="centos">
 Centos
 &lt;a class="anchor" href="#centos">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>&lt;code>vi /etc/sysconfig/network-scripts/ifcfg-ens**&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改部分键值对&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>BOOTPROTO&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;static&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IPADDR&lt;span style="color:#f92672">=&lt;/span>192.168.1.100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NETMASK&lt;span style="color:#f92672">=&lt;/span>255.255.255.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GATEWAY&lt;span style="color:#f92672">=&lt;/span>192.168.1.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DNS1&lt;span style="color:#f92672">=&lt;/span>223.5.5.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DNS2&lt;span style="color:#f92672">=&lt;/span>223.6.6.6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>systemctl restart network&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="debian">
 Debian
 &lt;a class="anchor" href="#debian">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>查看当前网卡&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ip link
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#2: ens33: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># link/ether 00:0c:29:ed:95:f5 brd ff:ff:ff:ff:ff:ff&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># altname enp2s1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>得知网卡名为ens33&lt;/p></description></item><item><title>mysql执行计划</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0606lymysql-query-execution-plan/</link><pubDate>Tue, 14 Mar 2023 22:34:52 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0606lymysql-query-execution-plan/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>本文来自公号 MySQL 技术，JavaGuide 对其做了补充完善。原文地址：https://mp.weixin.qq.com/s/d5OowNLtXBGEAbT31sSH4g&lt;/p>
&lt;/blockquote>
&lt;p>优化 SQL 的第一步应该是读懂 SQL 的执行计划。本篇文章，我们一起来学习下 MySQL &lt;code>EXPLAIN&lt;/code> 执行计划相关知识。&lt;/p>
&lt;h2 id="什么是执行计划">
 什么是执行计划？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%89%a7%e8%a1%8c%e8%ae%a1%e5%88%92">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>执行计划&lt;/strong> 是指一条 SQL 语句在经过 &lt;strong>MySQL 查询优化器&lt;/strong> 的优化会后，具体的执行方式。&lt;/p>
&lt;p>执行计划通常用于 &lt;strong>SQL 性能分析&lt;/strong>、&lt;strong>优化&lt;/strong>等场景。通过 &lt;code>EXPLAIN&lt;/code> 的结果，可以了解到如&lt;strong>数据表的查询顺序&lt;/strong>、数据查询操作的&lt;strong>操作类型&lt;/strong>、&lt;strong>哪些索引&lt;/strong>可以被命中、哪些索引&lt;strong>实际&lt;/strong>会命中、每个数据表有多少&lt;strong>行记录被查询&lt;/strong>等信息。&lt;/p>
&lt;h2 id="如何获取执行计划">
 如何获取执行计划？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e8%8e%b7%e5%8f%96%e6%89%a7%e8%a1%8c%e8%ae%a1%e5%88%92">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 提交准备数据
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">SET&lt;/span> NAMES utf8mb4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SET&lt;/span> FOREIGN_KEY_CHECKS &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- ----------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Table structure for dept_emp
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- ----------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> &lt;span style="color:#f92672">`&lt;/span>dept_emp&lt;span style="color:#f92672">`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#f92672">`&lt;/span>dept_emp&lt;span style="color:#f92672">`&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>emp_no&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">varchar&lt;/span>(&lt;span style="color:#ae81ff">128&lt;/span>) &lt;span style="color:#66d9ef">CHARACTER&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> utf8mb4 &lt;span style="color:#66d9ef">COLLATE&lt;/span> utf8mb4_0900_ai_ci &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>other1&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">varchar&lt;/span>(&lt;span style="color:#ae81ff">255&lt;/span>) &lt;span style="color:#66d9ef">CHARACTER&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> utf8mb4 &lt;span style="color:#66d9ef">COLLATE&lt;/span> utf8mb4_0900_ai_ci &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>other2&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">varchar&lt;/span>(&lt;span style="color:#ae81ff">255&lt;/span>) &lt;span style="color:#66d9ef">CHARACTER&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> utf8mb4 &lt;span style="color:#66d9ef">COLLATE&lt;/span> utf8mb4_0900_ai_ci &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span>) &lt;span style="color:#66d9ef">USING&lt;/span> BTREE,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">INDEX&lt;/span> &lt;span style="color:#f92672">`&lt;/span>index_emp_no&lt;span style="color:#f92672">`&lt;/span>(&lt;span style="color:#f92672">`&lt;/span>emp_no&lt;span style="color:#f92672">`&lt;/span>) &lt;span style="color:#66d9ef">USING&lt;/span> BTREE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) &lt;span style="color:#66d9ef">ENGINE&lt;/span> &lt;span style="color:#f92672">=&lt;/span> InnoDB &lt;span style="color:#66d9ef">CHARACTER&lt;/span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#f92672">=&lt;/span> utf8mb4 &lt;span style="color:#66d9ef">COLLATE&lt;/span> &lt;span style="color:#f92672">=&lt;/span> utf8mb4_0900_ai_ci ROW_FORMAT &lt;span style="color:#f92672">=&lt;/span> Dynamic;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- ----------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- Records of dept_emp
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- ----------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#f92672">`&lt;/span>dept_emp&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;a1&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o11&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;012&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#f92672">`&lt;/span>dept_emp&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;a2&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o21&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o22&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#f92672">`&lt;/span>dept_emp&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;a3&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o31&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o32&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#f92672">`&lt;/span>dept_emp&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;a4&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o41&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o42&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#f92672">`&lt;/span>dept_emp&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;a5&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o51&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;o52&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SET&lt;/span> FOREIGN_KEY_CHECKS &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>MySQL 为我们提供了 &lt;code>EXPLAIN&lt;/code> 命令，来获取执行计划的相关信息。&lt;/p></description></item><item><title>sql常见面试题总结01</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/ly0503lysql-question-01/</link><pubDate>Sun, 12 Mar 2023 17:53:18 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/ly0503lysql-question-01/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>题目来源于：
&lt;a target="_blank" href="https://www.nowcoder.com/exam/oj?page=1&amp;amp;tab=SQL%e7%af%87&amp;amp;topicId=298">牛客题霸 - SQL 必知必会&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="检索数据">
 检索数据
 &lt;a class="anchor" href="#%e6%a3%80%e7%b4%a2%e6%95%b0%e6%8d%ae">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>select&lt;/code> 用于从数据库中查询数据。&lt;/p>
&lt;h3 id="从-customers-表中检索所有的-id">
 从 Customers 表中检索所有的 ID
 &lt;a class="anchor" href="#%e4%bb%8e-customers-%e8%a1%a8%e4%b8%ad%e6%a3%80%e7%b4%a2%e6%89%80%e6%9c%89%e7%9a%84-id">#&lt;/a>
&lt;/h3>
&lt;p>现有表 &lt;code>Customers&lt;/code> 如下：&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>cust_id&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>C&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>编写 SQL 语句，从 &lt;code>Customers&lt;/code> 表中检索所有的 &lt;code>cust_id&lt;/code>。&lt;/p>
&lt;p>答案：&lt;/p>
&lt;pre tabindex="0">&lt;code>select cust_id
from Customers;
&lt;/code>&lt;/pre>&lt;h3 id="检索并列出已订购产品的清单">
 检索并列出已订购产品的清单
 &lt;a class="anchor" href="#%e6%a3%80%e7%b4%a2%e5%b9%b6%e5%88%97%e5%87%ba%e5%b7%b2%e8%ae%a2%e8%b4%ad%e4%ba%a7%e5%93%81%e7%9a%84%e6%b8%85%e5%8d%95">#&lt;/a>
&lt;/h3>
&lt;p>表 &lt;code>OrderItems&lt;/code> 含有非空的列 &lt;code>prod_id&lt;/code> 代表商品 id，包含了所有已订购的商品（有些已被订购多次）。&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>prod_id&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>a1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>a2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>a3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>a4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>a5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>a6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>a7&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>编写 SQL 语句，检索并列出所有已订购商品（&lt;code>prod_id&lt;/code>）的去重后的清单。&lt;/p>
&lt;p>答案：&lt;/p>
&lt;pre tabindex="0">&lt;code>select distinct prod_id
from OrderItems;
&lt;/code>&lt;/pre>&lt;p>知识点：&lt;code>distinct&lt;/code> 用于返回列中的唯一不同值。&lt;/p>
&lt;h3 id="检索所有列">
 检索所有列
 &lt;a class="anchor" href="#%e6%a3%80%e7%b4%a2%e6%89%80%e6%9c%89%e5%88%97">#&lt;/a>
&lt;/h3>
&lt;p>现在有 &lt;code>Customers&lt;/code> 表（表中含有列 &lt;code>cust_id&lt;/code> 代表客户 id，&lt;code>cust_name&lt;/code> 代表客户姓名）&lt;/p></description></item><item><title>sql语法基础知识总结</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/ly0504lysql-syntax-summary/</link><pubDate>Sun, 12 Mar 2023 17:52:48 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/ly0504lysql-syntax-summary/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>本文整理完善自下面这两份资料：&lt;/p>
&lt;ul>
&lt;li>
&lt;a target="_blank" href="https://juejin.cn/post/6844903790571700231">SQL 语法速成手册&lt;/a>&lt;/li>
&lt;li>
&lt;a target="_blank" href="https://www.begtut.com/mysql/mysql-tutorial.html">MySQL 超全教程&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="基本概念">
 基本概念
 &lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5">#&lt;/a>
&lt;/h2>
&lt;h3 id="数据库术语">
 数据库术语
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e6%9c%af%e8%af%ad">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;code>数据库（database）&lt;/code> - 保存有组织的数据的容器（通常是一个文件或一组文件）。&lt;/li>
&lt;li>&lt;code>数据表（table）&lt;/code> - 某种特定类型数据的结构化清单。&lt;/li>
&lt;li>&lt;code>模式（schema）&lt;/code> - 关于数据库和表的布局及特性的信息。模式定义了数据在表中如何存储，包含存储什么样的数据，数据如何分解，各部分信息如何命名等信息。数据库和表都有模式。&lt;/li>
&lt;li>&lt;code>列（column）&lt;/code> - 表中的一个字段。所有表都是由一个或多个列组成的。&lt;/li>
&lt;li>&lt;code>行（row）&lt;/code> - 表中的一个记录。&lt;/li>
&lt;li>&lt;code>主键（primary key）&lt;/code> - 一列（或一组列），其值能够唯一标识表中每一行。&lt;/li>
&lt;/ul>
&lt;h3 id="sql-语法">
 SQL 语法
 &lt;a class="anchor" href="#sql-%e8%af%ad%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;p>SQL（Structured Query Language)，标准 SQL 由 ANSI 标准委员会管理，从而称为 ANSI SQL。各个 DBMS 都有自己的实现，如 PL/SQL、Transact-SQL 等。&lt;/p>
&lt;h4 id="sql-语法结构">
 SQL 语法结构
 &lt;a class="anchor" href="#sql-%e8%af%ad%e6%b3%95%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h4>
&lt;p>&lt;img src="img/ly-20241212141857484.jpg" alt="img" />&lt;/p>
&lt;p>SQL 语法结构包括：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>子句&lt;/code>&lt;/strong> - 是语句和查询的组成成分。（在某些情况下，这些都是可选的。）&lt;/li>
&lt;li>&lt;strong>&lt;code>表达式&lt;/code>&lt;/strong> - 可以产生任何标量值，或由列和行的数据库表&lt;/li>
&lt;li>&lt;strong>&lt;code>谓词&lt;/code>&lt;/strong> - 给需要评估的 SQL 三值逻辑（3VL）（true/false/unknown）或布尔真值指定条件，并限制语句和查询的效果，或改变程序流程。&lt;/li>
&lt;li>&lt;strong>&lt;code>查询&lt;/code>&lt;/strong> - 基于特定条件检索数据。这是 SQL 的一个重要组成部分。&lt;/li>
&lt;li>&lt;strong>&lt;code>语句&lt;/code>&lt;/strong> - 可以持久地影响纲要和数据，也可以控制数据库事务、程序流程、连接、会话或诊断。&lt;/li>
&lt;/ul>
&lt;h4 id="sql-语法要点">
 SQL 语法要点
 &lt;a class="anchor" href="#sql-%e8%af%ad%e6%b3%95%e8%a6%81%e7%82%b9">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>SQL 语句不区分大小写&lt;/strong>，但是数据库表名、列名和值是否区分，依赖于具体的 DBMS 以及配置。例如：&lt;code>SELECT&lt;/code> 与 &lt;code>select&lt;/code> 、&lt;code>Select&lt;/code> 是相同的。&lt;/li>
&lt;li>&lt;strong>多条 SQL 语句必须以分号（&lt;code>;&lt;/code>）分隔&lt;/strong>。&lt;/li>
&lt;li>处理 SQL 语句时，&lt;strong>所有空格都被忽略&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>SQL 语句可以写成一行，也可以分写为多行。&lt;/p></description></item><item><title>redis问题图解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/diagram/</link><pubDate>Mon, 27 Feb 2023 22:11:02 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/diagram/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>主从复制原理&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141920958.png" alt="主从复制原理" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>哨兵模式(简单)&lt;br>
&lt;img src="img/ly-20241212141921249.png" alt="ly-20241212141921249" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>哨兵模式详解&lt;/p>
&lt;blockquote>
&lt;p>先配置&lt;strong>主从模式&lt;/strong>，再配置&lt;strong>哨兵模式&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>所有的哨兵 sentinel.conf 都是配置为监听master&amp;ndash;&amp;gt; 192.168.14.101，如果主机宕机，sentinel.conf 中的配置也会自动更改为选举后的&lt;img src="img/ly-20241212141921408.png" alt="ly-20241212141921408" />&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Java客户端连接原理&lt;/p>
&lt;blockquote>
&lt;p>客户端是和Sentinel来进行交互的,通过Sentinel来获取真正的Redis节点信息,然后来操作.实际工作时,Sentinel 内部维护了一个主题队列,用来保存Redis的节点信息,并实时更新,客户端订阅了这个主题,然后实时的去获取这个队列的Redis节点信息.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">代码相对比较简单
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">**/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//1.设置sentinel 各个节点集合&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Set&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> sentinelSet &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashSet&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sentinelSet.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;192.168.14.101:26379&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sentinelSet.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;192.168.14.102:26380&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sentinelSet.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;192.168.14.103:26381&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//2.设置jedispool 连接池配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JedisPoolConfig config &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JedisPoolConfig();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config.&lt;span style="color:#a6e22e">setMaxTotal&lt;/span>(10);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>config.&lt;span style="color:#a6e22e">setMaxWaitMillis&lt;/span>(1000);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//3.设置mastername,sentinelNode集合,配置文件,Redis登录密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JedisSentinelPool jedisSentinelPool &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JedisSentinelPool(&lt;span style="color:#e6db74">&amp;#34;mymaster&amp;#34;&lt;/span>,sentinelSet,config,&lt;span style="color:#e6db74">&amp;#34;123&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Jedis jedis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis &lt;span style="color:#f92672">=&lt;/span> jedisSentinelPool.&lt;span style="color:#a6e22e">getResource&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//获取Redis中key=hello的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String value &lt;span style="color:#f92672">=&lt;/span> jedis.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(jedis &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212141921579.png" alt="ly-20241212141921579" />&lt;/p></description></item><item><title>3种常用的缓存读写策略详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0703ly3-commonly-used-cache-read-and-write-strategies/</link><pubDate>Fri, 24 Feb 2023 09:31:52 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0703ly3-commonly-used-cache-read-and-write-strategies/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>看到很多小伙伴简历上写了“&lt;strong>熟练使用缓存&lt;/strong>”，但是被我问到“&lt;strong>缓存常用的3种读写策略&lt;/strong>”的时候却一脸懵逼。&lt;/p>
&lt;p>在我看来，造成这个问题的原因是我们在学习 Redis 的时候，可能只是简单了写一些 Demo，并没有去关注缓存的读写策略，或者说压根不知道这回事。&lt;/p>
&lt;p>但是，搞懂3种常见的缓存读写策略对于实际工作中使用缓存以及面试中被问到缓存都是非常有帮助的！&lt;/p>
&lt;p>&lt;strong>下面介绍到的三种模式各有优劣，不存在最佳模式，根据具体的业务场景选择适合自己的缓存读写模式。&lt;/strong>&lt;/p>
&lt;h3 id="cache-aside-pattern旁路缓存模式">
 Cache Aside Pattern（旁路缓存模式）
 &lt;a class="anchor" href="#cache-aside-pattern%e6%97%81%e8%b7%af%e7%bc%93%e5%ad%98%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>Cache Aside Pattern 是我们平时使用比较多的一个缓存读写模式，比较适合读请求比较多的场景。&lt;/strong>&lt;/p>
&lt;p>Cache Aside Pattern 中服务端需要同时维系 db 和 cache，并且是&lt;strong>以 db 的结果为准&lt;/strong>。&lt;/p>
&lt;p>下面我们来看一下这个策略模式下的缓存读写步骤。&lt;/p>
&lt;p>&lt;strong>写&lt;/strong> ：&lt;/p>
&lt;ul>
&lt;li>先更新 db&lt;/li>
&lt;li>然后直接删除 cache 。&lt;/li>
&lt;/ul>
&lt;p>简单画了一张图帮助大家理解写的步骤。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141916648.jpg" alt="img" />&lt;/p>
&lt;p>&lt;strong>读&lt;/strong> :&lt;/p>
&lt;ul>
&lt;li>从 cache 中读取数据，读取到就直接返回&lt;/li>
&lt;li>cache 中读取不到的话，就从 db 中读取数据返回&lt;/li>
&lt;li>再把数据放到 cache 中。&lt;/li>
&lt;/ul>
&lt;p>简单画了一张图帮助大家理解读的步骤。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141916935.png" alt="ly-20241212141916935" />&lt;/p>
&lt;p>你仅仅了解了上面这些内容的话是远远不够的，我们还要搞懂其中的原理。&lt;/p>
&lt;p>比如说面试官很可能会追问：“&lt;strong>在写数据的过程中，可以先删除 cache ，后更新 db 么？&lt;/strong>”&lt;/p>
&lt;p>&lt;strong>答案：&lt;/strong> 那肯定是不行的！因为这样可能会造成 &lt;strong>数据库（db）和缓存（Cache）数据不一致&lt;/strong>的问题。&lt;/p>
&lt;p>举例：请求 1 先写数据 A，请求 2 随后读数据 A 的话，就很有可能产生数据不一致性的问题。&lt;/p>
&lt;p>这个过程可以简单描述为：&lt;/p>
&lt;blockquote>
&lt;p>请求 1 先把 cache 中的 A 数据删除 -&amp;gt; 请求 2 从 db 中读取数据【&lt;strong>此时请求2把脏数据(对于请求1来说是)更新到缓存去了&lt;/strong>】-&amp;gt;请求 1 再把 db 中的 A 数据更新，即请求1的操作非原子&lt;/p></description></item><item><title>redis内存碎片</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0704lyredis-memory-fragmentation/</link><pubDate>Fri, 24 Feb 2023 09:26:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0704lyredis-memory-fragmentation/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="什么是内存碎片">
 什么是内存碎片?
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%86%85%e5%ad%98%e7%a2%8e%e7%89%87">#&lt;/a>
&lt;/h2>
&lt;p>你可以将内存碎片简单地理解为那些&lt;strong>不可用的空闲内存&lt;/strong>。&lt;/p>
&lt;p>举个例子：操作系统为你分配了 32 字节的连续内存空间，而你存储数据实际只需要使用 24 字节内存空间，那这多余出来的 8 字节内存空间如果后续没办法再被分配存储其他数据的话，就可以被称为内存碎片。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141917438.png" alt="ly-20241212141917438" />&lt;/p>
&lt;p>Redis 内存碎片虽然不会影响 Redis 性能，但是会&lt;strong>增加内存消耗&lt;/strong>。&lt;/p>
&lt;h2 id="为什么会有-redis-内存碎片">
 为什么会有 Redis 内存碎片?
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e6%9c%89-redis-%e5%86%85%e5%ad%98%e7%a2%8e%e7%89%87">#&lt;/a>
&lt;/h2>
&lt;p>Redis 内存碎片产生比较常见的 2 个原因：&lt;/p>
&lt;p>&lt;strong>1、Redis 存储存储数据的时候向操作系统申请的内存空间可能会大于数据实际需要的存储空间。&lt;/strong>&lt;/p>
&lt;p>以下是这段 Redis 官方的原话：&lt;/p>
&lt;blockquote>
&lt;p>To store user keys, Redis allocates at most as much memory as the &lt;code>maxmemory&lt;/code> setting enables (however there are small extra allocations possible).&lt;/p>
&lt;/blockquote>
&lt;p>Redis 使用 &lt;code>zmalloc&lt;/code> 方法(Redis 自己实现的内存分配方法)进行内存分配的时候，除了要分配 &lt;code>size&lt;/code> 大小的内存之外，还会多分配 &lt;code>PREFIX_SIZE&lt;/code> 大小的内存。&lt;/p>
&lt;p>&lt;code>zmalloc&lt;/code> 方法源码如下（源码地址：https://github.com/antirez/redis-tools/blob/master/zmalloc.c）：&lt;/p>
&lt;pre tabindex="0">&lt;code>void *zmalloc(size_t size) {
 // 分配指定大小的内存
 void *ptr = malloc(size+PREFIX_SIZE);
 if (!ptr) zmalloc_oom_handler(size);
#ifdef HAVE_MALLOC_SIZE
 update_zmalloc_stat_alloc(zmalloc_size(ptr));
 return ptr;
#else
 *((size_t*)ptr) = size;
 update_zmalloc_stat_alloc(size+PREFIX_SIZE);
 return (char*)ptr+PREFIX_SIZE;
#endif
}
&lt;/code>&lt;/pre>&lt;p>另外，Redis 可以使用&lt;strong>多种内存分配器&lt;/strong>来分配内存（ &lt;strong>libc&lt;/strong>、&lt;strong>jemalloc&lt;/strong>、&lt;strong>tcmalloc&lt;/strong>），默认使用 
&lt;a target="_blank" href="https://github.com/jemalloc/jemalloc">jemalloc&lt;/a>，而 jemalloc 按照一系列固定的大小（8 字节、16 字节、32 字节&amp;hellip;&amp;hellip;）来分配内存的。jemalloc 划分的内存单元如下图所示：&lt;/p></description></item><item><title>redis特殊数据结构</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0702lyredis-spec-data-structure/</link><pubDate>Thu, 23 Feb 2023 23:02:58 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0702lyredis-spec-data-structure/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>除了 5 种基本的数据结构之外，Redis 还支持 3 种特殊的数据结构 ：&lt;strong>Bitmap&lt;/strong>、&lt;strong>HyperLogLog&lt;/strong>、&lt;strong>GEO&lt;/strong>。&lt;/p>
&lt;h2 id="bitmap">
 Bitmap
 &lt;a class="anchor" href="#bitmap">#&lt;/a>
&lt;/h2>
&lt;h3 id="介绍">
 介绍
 &lt;a class="anchor" href="#%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h3>
&lt;p>Bitmap 存储的是连续的二进制数字（0 和 1），通过 Bitmap, &lt;strong>只需要一个 bit 位来表示某个元素对应的值&lt;/strong>或者&lt;strong>状态&lt;/strong>，key 就是对应元素本身 。我们知道 8 个 bit 可以组成一个 byte，所以 Bitmap 本身会极大的节省储存空间。&lt;/p>
&lt;p>你可以将 Bitmap 看作是一个&lt;strong>存储二进制数字（0 和 1）的数组&lt;/strong>，数组中每个元素的下标叫做 offset（偏移量）。&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://camo.githubusercontent.com/1c1ce8351556fe9727cadfd385fdbd6f449d92a174bbd65db5383791fec05a13/68747470733a2f2f67756964652d626c6f672d696d616765732e6f73732d636e2d7368656e7a68656e2e616c6979756e63732e636f6d2f6769746875622f6a61766167756964652f64617461626173652f72656469732f696d6167652d32303232303732303139343135343133332e706e67">&lt;img src="https://camo.githubusercontent.com/1c1ce8351556fe9727cadfd385fdbd6f449d92a174bbd65db5383791fec05a13/68747470733a2f2f67756964652d626c6f672d696d616765732e6f73732d636e2d7368656e7a68656e2e616c6979756e63732e636f6d2f6769746875622f6a61766167756964652f64617461626173652f72656469732f696d6167652d32303232303732303139343135343133332e706e67" alt="img" />&lt;/a>&lt;/p>
&lt;h3 id="常用命令">
 常用命令
 &lt;a class="anchor" href="#%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4">#&lt;/a>
&lt;/h3>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>命令&lt;/th>
 &lt;th>介绍&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>SETBIT key offset value&lt;/td>
 &lt;td>设置指定 offset 位置的值&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GETBIT key offset&lt;/td>
 &lt;td>获取指定 offset 位置的值&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>BITCOUNT key start end&lt;/td>
 &lt;td>获取 start 和 end 之前值为 1 的元素个数&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>BITOP operation destkey key1 key2 &amp;hellip;&lt;/td>
 &lt;td>对一个或多个 Bitmap 进行运算，可用运算符有 AND, OR, XOR 以及 NOT&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>Bitmap 基本操作演示&lt;/strong> ：&lt;/p></description></item><item><title>redis基本数据结构</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0701lyredis-base-data-structures/</link><pubDate>Thu, 23 Feb 2023 14:22:58 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0701lyredis-base-data-structures/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>Redis 共有 5 种基本数据结构：&lt;strong>String&lt;/strong>（字符串）、&lt;strong>List&lt;/strong>（列表）、&lt;strong>Set&lt;/strong>（集合）、&lt;strong>Hash&lt;/strong>（散列）、&lt;strong>Zset&lt;/strong>（有序集合）。&lt;/p>
&lt;p>这 5 种数据结构是直接提供给用户使用的，是数据的保存形式，其底层实现主要依赖这 8 种数据结构：简单动态字符串（&lt;strong>SDS&lt;/strong>）、&lt;strong>LinkedList&lt;/strong>（双向链表）、&lt;strong>Hash Table&lt;/strong>（哈希表）、&lt;strong>SkipList&lt;/strong>（跳跃表）、&lt;strong>Intset&lt;/strong>（整数集合）、&lt;strong>ZipList&lt;/strong>（压缩列表）、&lt;strong>QuickList&lt;/strong>（快速列表）。&lt;/p>
&lt;p>Redis 基本数据结构的底层数据结构实现如下：&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>String&lt;/th>
 &lt;th>List&lt;/th>
 &lt;th>Hash&lt;/th>
 &lt;th>Set&lt;/th>
 &lt;th>Zset&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>SDS&lt;/td>
 &lt;td>LinkedList/ZipList/QuickList&lt;/td>
 &lt;td>Hash Table、ZipList&lt;/td>
 &lt;td>ZipList、Intset&lt;/td>
 &lt;td>ZipList、SkipList&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>Redis 3.2 之前，List 底层实现是 LinkedList 或者 ZipList。 Redis 3.2 之后，引入了 LinkedList 和 ZipList 的结合 QuickList，List 的底层实现变为 QuickList。&lt;/p>
&lt;p>你可以在 Redis 官网上找到 Redis 数据结构非常详细的介绍：&lt;/p>
&lt;ul>
&lt;li>
&lt;a target="_blank" href="https://redis.com/redis-enterprise/data-structures/">Redis Data Structures&lt;/a>&lt;/li>
&lt;li>
&lt;a target="_blank" href="https://redis.io/docs/manual/data-types/data-types-tutorial/">Redis Data types tutorial&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>未来随着 Redis 新版本的发布，可能会有新的数据结构出现，通过查阅 Redis 官网对应的介绍，你总能获取到最靠谱的信息。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141914862.png" alt="ly-20241212141914862" />&lt;/p>
&lt;h2 id="string字符串">
 String（字符串）
 &lt;a class="anchor" href="#string%e5%ad%97%e7%ac%a6%e4%b8%b2">#&lt;/a>
&lt;/h2>
&lt;h3 id="介绍">
 介绍
 &lt;a class="anchor" href="#%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h3>
&lt;p>String 是 Redis 中最简单同时也是最常用的一个数据结构。&lt;/p>
&lt;p>String 是一种&lt;strong>二进制安全&lt;/strong>的数据结构，可以用来&lt;strong>存储任何类型的数据&lt;/strong>比如&lt;strong>字符串&lt;/strong>、&lt;strong>整数&lt;/strong>、&lt;strong>浮点数&lt;/strong>、&lt;strong>图片&lt;/strong>（图片的 base64 编码或者解码或者图片的路径）、&lt;strong>序列化后的对象&lt;/strong>。&lt;/p></description></item><item><title>redis面试题02</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0706lyredis-questions-02/</link><pubDate>Thu, 23 Feb 2023 11:16:04 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0706lyredis-questions-02/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="redis-事务">
 Redis 事务
 &lt;a class="anchor" href="#redis-%e4%ba%8b%e5%8a%a1">#&lt;/a>
&lt;/h2>
&lt;h3 id="如何使用-redis-事务">
 如何使用 Redis 事务？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8-redis-%e4%ba%8b%e5%8a%a1">#&lt;/a>
&lt;/h3>
&lt;p>Redis 可以通过 &lt;strong>&lt;code>MULTI&lt;/code>，&lt;code>EXEC&lt;/code>，&lt;code>DISCARD&lt;/code> 和 &lt;code>WATCH&lt;/code>&lt;/strong> 等命令来实现事务(transaction)功能。&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;gt; MULTI
OK
&amp;gt; SET PROJECT &amp;#34;JavaGuide&amp;#34;
QUEUED
&amp;gt; GET PROJECT
QUEUED
&amp;gt; EXEC
1) OK
2) &amp;#34;JavaGuide&amp;#34;
&lt;/code>&lt;/pre>&lt;p>
&lt;a target="_blank" href="https://redis.io/commands/multi">&lt;code>MULTI&lt;/code>&lt;/a> 命令后可以输入多个命令，Redis 不会立即执行这些命令，而是将它们放到队列，当调用了 
&lt;a target="_blank" href="https://redis.io/commands/exec">&lt;code>EXEC&lt;/code>&lt;/a> 命令后，再执行所有的命令。&lt;/p>
&lt;p>这个过程是这样的：&lt;/p>
&lt;ol>
&lt;li>开始事务（&lt;code>MULTI&lt;/code>）；&lt;/li>
&lt;li>命令入队(批量操作 Redis 的命令，先进先出（FIFO）的顺序执行)；&lt;/li>
&lt;li>执行事务(&lt;code>EXEC&lt;/code>)。&lt;/li>
&lt;/ol>
&lt;p>你也可以通过 
&lt;a target="_blank" href="https://redis.io/commands/discard">&lt;code>DISCARD&lt;/code>&lt;/a> 命令取消一个事务，它会清空事务队列中保存的所有命令。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&amp;gt; MULTI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; SET PROJECT &lt;span style="color:#e6db74">&amp;#34;JavaGuide&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>QUEUED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; GET PROJECT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>QUEUED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; DISCARD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>你可以通过
&lt;a target="_blank" href="https://redis.io/commands/watch">&lt;code>WATCH&lt;/code>&lt;/a> 命令监听指定的 Key，当调用 &lt;code>EXEC&lt;/code> 命令执行事务时，如果一个被 &lt;code>WATCH&lt;/code> 命令监视的 Key 被 &lt;strong>其他客户端/Session&lt;/strong> 修改的话，整个事务都不会被执行。&lt;/p></description></item><item><title>redis面试题01</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0705lyredis-questions-01/</link><pubDate>Wed, 22 Feb 2023 11:31:11 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/Redis/ly0705lyredis-questions-01/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="redis-基础">
 Redis 基础
 &lt;a class="anchor" href="#redis-%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是-redis">
 什么是 Redis？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-redis">#&lt;/a>
&lt;/h3>
&lt;p>
&lt;a target="_blank" href="https://redis.io/">Redis&lt;/a> 是一个基于 C 语言开发的开源数据库（BSD 许可），与传统数据库不同的是 Redis 的数据是存在&lt;strong>内存&lt;/strong>中的（内存数据库），&lt;strong>读写&lt;/strong>速度非常&lt;strong>快&lt;/strong>，被广泛应用于&lt;strong>缓存方向&lt;/strong>。并且，Redis 存储的是 &lt;strong>KV 键值对&lt;/strong>数据。&lt;/p>
&lt;p>为了满足不同的业务场景，Redis 内置了多种数据类型实现（比如 &lt;strong>String&lt;/strong>、&lt;strong>Hash&lt;/strong>、【&lt;strong>List&lt;/strong>、&lt;strong>Set&lt;/strong>、】&lt;strong>Sorted Set&lt;/strong>、&lt;strong>Bitmap&lt;/strong>）。并且，Redis 还支持&lt;strong>事务&lt;/strong> 、&lt;strong>持久化&lt;/strong>、&lt;strong>Lua 脚本&lt;/strong>、多种开箱即用的&lt;strong>集群&lt;/strong>方案（&lt;strong>Redis Sentinel&lt;/strong>、&lt;strong>Redis Cluster&lt;/strong>）。&lt;/p>
&lt;p>Redis 没有外部依赖，Linux 和 OS X 是 Redis 开发和测试最多的两个操作系统，官方推荐生产环境使用 Linux 部署 Redis。&lt;/p>
&lt;p>个人学习的话，你可以自己本机安装 Redis 或者通过 Redis 官网提供的
&lt;a target="_blank" href="https://try.redis.io/">在线 Redis 环境&lt;/a>来实际体验 Redis。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141918257.png" alt="ly-20241212141918257" />&lt;/p>
&lt;p>全世界有非常多的网站使用到了 Redis ，
&lt;a target="_blank" href="https://techstacks.io/">techstacks.io&lt;/a> 专门维护了一个
&lt;a target="_blank" href="https://techstacks.io/tech/redis">使用 Redis 的热门站点列表&lt;/a> ，感兴趣的话可以看看。&lt;/p>
&lt;h3 id="redis-为什么这么快">
 Redis 为什么这么快？
 &lt;a class="anchor" href="#redis-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%bf%99%e4%b9%88%e5%bf%ab">#&lt;/a>
&lt;/h3>
&lt;p>Redis 内部做了非常多的性能优化，比较重要的主要有下面 3 点：&lt;/p>
&lt;ul>
&lt;li>Redis 基于&lt;strong>内存&lt;/strong>，内存的访问速度是磁盘的上千倍；&lt;/li>
&lt;li>Redis &lt;strong>基于 Reactor 模式&lt;/strong>设计开发了一套&lt;strong>高效的事件处理模型&lt;/strong>，主要是&lt;strong>单线程事件循环&lt;/strong>和 &lt;strong>IO 多路复用&lt;/strong>（Redis 线程模式后面会详细介绍到）；&lt;/li>
&lt;li>Redis 内置了多种&lt;strong>优化过后的数据结构&lt;/strong>实现，性能非常高。&lt;/li>
&lt;/ul>
&lt;p>下面这张图片总结的挺不错的，分享一下，出自 
&lt;a target="_blank" href="https://twitter.com/alexxubyte/status/1498703822528544770">Why is Redis so fast?&lt;/a> 。&lt;/p></description></item><item><title>web-real-time-message-push</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/web-real-time-message-push/</link><pubDate>Tue, 21 Feb 2023 09:26:53 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/web-real-time-message-push/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>原文地址：https://juejin.cn/post/7122014462181113887，JavaGuide 对本文进行了完善总结。&lt;/p>
&lt;/blockquote>
&lt;p>我有一个朋友做了一个小破站，现在要实现一个站内信 Web 消息推送的功能，对，就是下图这个小红点，一个很常用的功能。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142025733.png" alt="站内信 Web 消息推送" />&lt;/p>
&lt;p>不过他还没想好用什么方式做，这里我帮他整理了一下几种方案，并简单做了实现。&lt;/p>
&lt;h2 id="什么是消息推送-什么是消息推送">
 
&lt;a target="_blank" href="#%E4%BB%80%E4%B9%88%E6%98%AF%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81">#&lt;/a> 什么是消息推送？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%b6%88%e6%81%af%e6%8e%a8%e9%80%81-%e4%bb%80%e4%b9%88%e6%98%af%e6%b6%88%e6%81%af%e6%8e%a8%e9%80%81">#&lt;/a>
&lt;/h2>
&lt;p>推送的场景比较多，比如有人关注我的公众号，这时我就会收到一条推送消息，以此来吸引我点击打开应用。&lt;/p>
&lt;p>消息推送通常是指网站的运营工作等人员，通过某种工具对用户当前网页或移动设备 APP 进行的主动消息推送。&lt;/p>
&lt;p>消息推送一般又分为 Web 端消息推送和移动端消息推送。&lt;/p>
&lt;p>移动端消息推送示例 ：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142025900.png" alt="移动端消息推送示例" />&lt;/p>
&lt;p>Web 端消息推送示例：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142026025.png" alt="Web 端消息推送示例" />&lt;/p>
&lt;p>在具体实现之前，咱们再来分析一下前边的需求，其实功能很简单，&lt;strong>只要触发某个事件（主动分享了资源或者后台主动推送消息）&lt;/strong>，&lt;strong>Web 页面的通知小红点就会实时的 &lt;code>+1&lt;/code>&lt;/strong> 就可以了。&lt;/p>
&lt;p>通常在服务端会有若干张消息推送表，用来记录用户触发不同事件所推送不同类型的消息，前端主动查询（拉）或者被动接收（推）用户所有未读的消息数。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142026150.png" alt="ly-20241212142026150" />&lt;/p>
&lt;p>消息推送无非是推（push）和拉（pull）两种形式，下边我们逐个了解下。&lt;/p>
&lt;h2 id="消息推送常见方案-消息推送常见方案">
 
&lt;a target="_blank" href="#%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E5%B8%B8%E8%A7%81%E6%96%B9%E6%A1%88">#&lt;/a> 消息推送常见方案
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e6%8e%a8%e9%80%81%e5%b8%b8%e8%a7%81%e6%96%b9%e6%a1%88-%e6%b6%88%e6%81%af%e6%8e%a8%e9%80%81%e5%b8%b8%e8%a7%81%e6%96%b9%e6%a1%88">#&lt;/a>
&lt;/h2>
&lt;h3 id="短轮询-短轮询">
 
&lt;a target="_blank" href="#%E7%9F%AD%E8%BD%AE%E8%AF%A2">#&lt;/a> 短轮询
 &lt;a class="anchor" href="#%e7%9f%ad%e8%bd%ae%e8%af%a2-%e7%9f%ad%e8%bd%ae%e8%af%a2">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>轮询(polling)&lt;/strong> 应该是实现消息推送方案中最简单的一种，这里我们暂且将轮询分为&lt;strong>短轮询&lt;/strong>和&lt;strong>长轮询&lt;/strong>。&lt;/p>
&lt;p>短轮询很好理解，&lt;strong>指定的时间间隔&lt;/strong>，&lt;strong>由浏览器向服务器发出 HTTP 请求&lt;/strong>，&lt;strong>服务器实时返回未读消息数据给客户端，浏览器再做渲染显示&lt;/strong>。&lt;/p>
&lt;p>一个简单的 JS 定时器就可以搞定，&lt;strong>每秒钟请求一次未读消息数接口&lt;/strong>，返回的数据展示即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">setInterval&lt;/span>(() &lt;span style="color:#f92672">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 方法请求
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">messageCount&lt;/span>().&lt;span style="color:#a6e22e">then&lt;/span>((&lt;span style="color:#a6e22e">res&lt;/span>) &lt;span style="color:#f92672">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">res&lt;/span>.&lt;span style="color:#a6e22e">code&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">messageCount&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">res&lt;/span>.&lt;span style="color:#a6e22e">data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}, &lt;span style="color:#ae81ff">1000&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>效果还是可以的，短轮询实现固然简单，缺点也是显而易见，&lt;strong>由于推送数据并不会频繁变更，无论后端此时是否有新的消息产生，客户端都会进行请求&lt;/strong>，势必会对服务端造成很大压力，浪费带宽和服务器资源。&lt;/p>
&lt;h3 id="长轮询-长轮询">
 
&lt;a target="_blank" href="#%E9%95%BF%E8%BD%AE%E8%AF%A2">#&lt;/a> 长轮询
 &lt;a class="anchor" href="#%e9%95%bf%e8%bd%ae%e8%af%a2-%e9%95%bf%e8%bd%ae%e8%af%a2">#&lt;/a>
&lt;/h3>
&lt;p>长轮询是对上边短轮询的一种改进版本，在尽可能减少对服务器资源浪费的同时，保证消息的相对实时性。长轮询在中间件中应用的很广泛，比如 Nacos 和 Apollo 配置中心，消息队列 Kafka、RocketMQ 中都有用到长轮询。&lt;/p></description></item><item><title>Java定时任务详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/schedule-task/</link><pubDate>Tue, 21 Feb 2023 09:17:31 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/schedule-task/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="为什么需要定时任务">
 为什么需要定时任务？
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%ae%9a%e6%97%b6%e4%bb%bb%e5%8a%a1">#&lt;/a>
&lt;/h2>
&lt;p>我们来看一下几个非常常见的业务场景：&lt;/p>
&lt;ol>
&lt;li>某系统&lt;strong>凌晨要进行数据备份&lt;/strong>。&lt;/li>
&lt;li>某电商平台，用户&lt;strong>下单半个小时未支付的情况下需要自动取消&lt;/strong>订单。&lt;/li>
&lt;li>某媒体聚合平台，&lt;strong>每 10 分钟动态抓取某某网站的数据&lt;/strong>为自己所用。&lt;/li>
&lt;li>某博客平台，支持&lt;strong>定时发送文章&lt;/strong>。&lt;/li>
&lt;li>某基金平台，&lt;strong>每晚定时计算用户当日收益情况并推送给用户最新的数据&lt;/strong>。&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ol>
&lt;p>这些场景往往都要求我们在某个特定的时间去做某个事情。&lt;/p>
&lt;h2 id="单机定时任务技术选型">
 单机定时任务技术选型
 &lt;a class="anchor" href="#%e5%8d%95%e6%9c%ba%e5%ae%9a%e6%97%b6%e4%bb%bb%e5%8a%a1%e6%8a%80%e6%9c%af%e9%80%89%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="timer">
 Timer
 &lt;a class="anchor" href="#timer">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>java.util.Timer&lt;/code>是 JDK 1.3 开始就已经支持的一种定时任务的实现方式。&lt;/p>
&lt;p>&lt;code>Timer&lt;/code> 内部使用一个叫做 &lt;code>TaskQueue&lt;/code> 的类存放定时任务，它是一个&lt;strong>基于最小堆实现的优先级队列&lt;/strong>。&lt;code>TaskQueue&lt;/code> 会按照&lt;strong>任务距离下一次执行时间的大小&lt;/strong>将任务排序，保证在堆顶的任务最先执行。这样在需要执行任务时，每次&lt;strong>只需要取出堆顶的任务&lt;/strong>运行即可！&lt;/p>
&lt;p>&lt;code>Timer&lt;/code> 使用起来比较简单，通过下面的方式我们就能创建一个 1s 之后执行的定时任务。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 示例代码：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TimerTask task &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TimerTask() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;当前时间: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Date() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;线程名称: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;当前时间: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Date() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;n&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;线程名称: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Timer timer &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Timer(&lt;span style="color:#e6db74">&amp;#34;Timer&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">long&lt;/span> delay &lt;span style="color:#f92672">=&lt;/span> 1000L;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>timer.&lt;span style="color:#a6e22e">schedule&lt;/span>(task, delay);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//输出：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>当前时间: Fri May 28 15:18:47 CST 2021n线程名称: main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>当前时间: Fri May 28 15:18:48 CST 2021n线程名称: Timer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>不过其缺陷较多，比如一个 &lt;code>Timer&lt;/code> 一个线程，这就导致 &lt;code>Timer&lt;/code> 的任务的执行&lt;strong>只能串行执行，一个任务执行时间过长的话会影响其他任务（性能非常差），再比如发生异常时任务直接停止（&lt;code>Timer&lt;/code> 只捕获了 &lt;code>InterruptedException&lt;/code> ）&lt;/strong>。&lt;/p></description></item><item><title>敏感词过滤方案总结</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly06ly_sentive-words-filter/</link><pubDate>Tue, 21 Feb 2023 08:57:26 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly06ly_sentive-words-filter/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>系统需要对用户输入的文本进行&lt;strong>敏感词过滤&lt;/strong>如色情、政治、暴力相关的词汇。&lt;/p>
&lt;p>敏感词过滤用的使用比较多的 &lt;strong>Trie 树算法&lt;/strong> 和 &lt;strong>DFA 算法&lt;/strong>。&lt;/p>
&lt;h2 id="算法实现">
 算法实现
 &lt;a class="anchor" href="#%e7%ae%97%e6%b3%95%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2>
&lt;h3 id="trie-树">
 Trie 树
 &lt;a class="anchor" href="#trie-%e6%a0%91">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>Trie 树&lt;/strong> 也称为&lt;strong>字典树&lt;/strong>、&lt;strong>单词查找树&lt;/strong>，&lt;strong>哈系树&lt;/strong>(&lt;strong>这里是不是写错了，哈希树？&lt;/strong>)的一种变种，通常被用于&lt;strong>字符串匹配&lt;/strong>，用来解决在一组字符串集合中快速查找某个字符串的问题。像&lt;strong>浏览器搜索的关键词提示&lt;/strong>一般就是基于 Trie 树来做的。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142025084.png" alt="img" />&lt;/p>
&lt;p>假如我们的敏感词库中有以下敏感词：&lt;/p>
&lt;ul>
&lt;li>高清有码&lt;/li>
&lt;li>高清 AV&lt;/li>
&lt;li>东京冷&lt;/li>
&lt;li>东京热&lt;/li>
&lt;/ul>
&lt;p>我们构造出来的敏感词 Trie 树就是下面这样的：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142025337.png" alt="ly-20241212142025337" />&lt;/p>
&lt;p>当我们要查找对应的字符串“东京热”的话，我们会把这个字符串切割成单个的字符“东”、“京”、“热”，然后我们&lt;strong>从 Trie 树的根节点开始匹配&lt;/strong>。&lt;/p>
&lt;p>可以看出， &lt;strong>Trie 树的核心原理其实很简单，就是通过公共前缀来提高字符串匹配效率。&lt;/strong>&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://mvnrepository.com/artifact/org.apache.commons/commons-collections4">Apache Commons Collecions&lt;/a> 这个库中就有 Trie 树实现：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142025461.png" alt="ly-20241212142025461.png" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>Trie&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, String&lt;span style="color:#f92672">&amp;gt;&lt;/span> trie &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> PatriciaTrie&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trie.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Abigail&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;student&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trie.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Abi&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;doctor&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trie.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Annabel&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;teacher&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trie.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Christina&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;student&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trie.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Chris&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;doctor&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Assertions.&lt;span style="color:#a6e22e">assertTrue&lt;/span>(trie.&lt;span style="color:#a6e22e">containsKey&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Abigail&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>assertEquals(&lt;span style="color:#e6db74">&amp;#34;{Abi=doctor, Abigail=student}&amp;#34;&lt;/span>, trie.&lt;span style="color:#a6e22e">prefixMap&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Abi&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>assertEquals(&lt;span style="color:#e6db74">&amp;#34;{Chris=doctor, Christina=student}&amp;#34;&lt;/span>, trie.&lt;span style="color:#a6e22e">prefixMap&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Chr&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Aho-Corasick（AC）自动机是一种建立在 Trie 树上的一种改进算法，是一种多模式匹配算法，由贝尔实验室的研究人员 Alfred V. Aho 和 Margaret J.Corasick 发明。&lt;/p></description></item><item><title>权限系统设计详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly05ly_design-of-authority-system/</link><pubDate>Mon, 20 Feb 2023 15:54:05 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly05ly_design-of-authority-system/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>作者：转转技术团队&lt;/p>
&lt;p>原文：https://mp.weixin.qq.com/s/ONMuELjdHYa0yQceTj01Iw&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>ly：比较繁琐，大概看了前面的部分&lt;/p>
&lt;/blockquote>
&lt;h2 id="老权限系统的问题与现状">
 老权限系统的问题与现状
 &lt;a class="anchor" href="#%e8%80%81%e6%9d%83%e9%99%90%e7%b3%bb%e7%bb%9f%e7%9a%84%e9%97%ae%e9%a2%98%e4%b8%8e%e7%8e%b0%e7%8a%b6">#&lt;/a>
&lt;/h2>
&lt;p>转转公司在过去并没有一个统一的权限管理系统，权限管理由各业务自行研发或是使用其他业务的权限系统，权限管理的不统一带来了不少问题：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>各业务重复造轮子&lt;/strong>，维护成本高&lt;/li>
&lt;li>&lt;strong>各系统只解决部分场景&lt;/strong>问题，方案不够通用，新项目选型时没有可靠的权限管理方案&lt;/li>
&lt;li>&lt;strong>缺乏统一的日志管理&lt;/strong>与&lt;strong>审批流程&lt;/strong>，在授权信息追溯上十分困难&lt;/li>
&lt;/ol>
&lt;p>基于上述问题，去年底公司启动建设转转统一权限系统，目标是开发一套灵活、易用、安全的权限管理系统，供各业务使用。&lt;/p>
&lt;h2 id="业界权限系统的设计方式">
 业界权限系统的设计方式
 &lt;a class="anchor" href="#%e4%b8%9a%e7%95%8c%e6%9d%83%e9%99%90%e7%b3%bb%e7%bb%9f%e7%9a%84%e8%ae%be%e8%ae%a1%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;p>目前业界主流的权限模型有两种，下面分别介绍下：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>基于角色的访问控制（RBAC）&lt;/strong>&lt;/li>
&lt;li>&lt;strong>基于属性的访问控制（ABAC）&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="rbac-模型">
 RBAC 模型
 &lt;a class="anchor" href="#rbac-%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>基于角色的访问控制（Role-Based Access Control，简称 RBAC）&lt;/strong> 指的是通过用户的&lt;strong>角色（Role）&lt;strong>授权其&lt;/strong>相关权限&lt;/strong>，实现了灵活的访问控制，&lt;strong>相比直接授予用户权限&lt;/strong>，要更加简单、高效、可扩展。&lt;/p>
&lt;p>一个用户可以拥有若干角色，每一个角色又可以被&lt;strong>分配若干权限&lt;/strong>这样，就构造成“&lt;strong>用户-角色-权限&lt;/strong>” 的授权模型。在这种模型中，用户与角色、角色与权限之间构成了多对多的关系。&lt;/p>
&lt;p>用一个图来描述如下：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142024163.png" alt="ly-20241212142024163" />&lt;/p>
&lt;p>当使用 &lt;code>RBAC模型&lt;/code> 时，通过分析用户的实际情况，基于共同的职责和需求，&lt;strong>授予他们不同角色&lt;/strong>。这种 &lt;strong>&lt;code>用户 -&amp;gt; 角色 -&amp;gt; 权限&lt;/code>&lt;/strong> 间的关系，让我们可以不用再单独管理单个用户权限，用户&lt;strong>从授予的角色里面获取所需的权限&lt;/strong>。&lt;/p>
&lt;p>以一个简单的场景（Gitlab 的权限系统）为例，用户系统中有 &lt;code>Admin&lt;/code>、&lt;code>Maintainer&lt;/code>、&lt;code>Operator&lt;/code> 三种角色，这三种角色分别具备不同的权限，比如只有 &lt;code>Admin&lt;/code> 具备创建代码仓库、删除代码仓库的权限，其他的角色都不具备。我们授予某个用户 &lt;code>Admin&lt;/code> 这个角色，他就具备了 &lt;strong>创建代码仓库&lt;/strong> 和 &lt;strong>删除代码仓库&lt;/strong> 这两个权限。&lt;/p>
&lt;p>通过 &lt;code>RBAC模型&lt;/code> ，当存在多个用户拥有相同权限时，我们只需要创建好拥有该权限的角色，然后给不同的用户分配不同的角色，后续只需要修改角色的权限，就能自动修改角色内所有用户的权限。&lt;/p>
&lt;h3 id="abac-模型">
 ABAC 模型
 &lt;a class="anchor" href="#abac-%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>基于属性的访问控制（Attribute-Based Access Control，简称 ABAC）&lt;/strong> 是一种比 &lt;code>RBAC模型&lt;/code> 更加灵活的授权模型，它的原理是&lt;strong>通过各种属性来动态判断一个操作是否可以被允许&lt;/strong>。这个模型在云系统中使用的比较多，比如 AWS，阿里云等。&lt;/p>
&lt;p>考虑下面这些场景的权限控制：&lt;/p>
&lt;ol>
&lt;li>授权&lt;strong>某个人具体某本书的编辑&lt;/strong>权限&lt;/li>
&lt;li>当一个文档的&lt;strong>所属部门&lt;/strong>跟&lt;strong>用户的部门相同&lt;/strong>时，用户可以访问这个文档&lt;/li>
&lt;li>当&lt;strong>用户是一个文档的拥有者&lt;/strong>并且&lt;strong>文档的状态是草稿&lt;/strong>，用户可以编辑这个文档&lt;/li>
&lt;li>早上&lt;strong>九点前禁止 A 部门的人访问&lt;/strong> B 系统&lt;/li>
&lt;li>在&lt;strong>除了上海以外的地方禁止以管理员身份访问&lt;/strong> A 系统&lt;/li>
&lt;li>用户&lt;strong>对 2022-06-07 之前创建的订单&lt;/strong>有操作权限&lt;/li>
&lt;/ol>
&lt;p>可以发现上述的场景通过 &lt;code>RBAC模型&lt;/code> 很难去实现，因为 &lt;code>RBAC模型&lt;/code> 仅仅描述了用户可以做什么操作，但是操作的条件，以及操作的数据，&lt;code>RBAC模型&lt;/code> 本身是没有这些限制的。但这恰恰是 &lt;code>ABAC模型&lt;/code> 的长处，&lt;code>ABAC模型&lt;/code> 的思想是基于&lt;strong>用户&lt;/strong>、访问的&lt;strong>数据的属性&lt;/strong>、以及各&lt;strong>种环境因素&lt;/strong>去动态计算用户是否有权限进行操作。&lt;/p></description></item><item><title>sso单点登录</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly04ly_sso-intro/</link><pubDate>Mon, 20 Feb 2023 15:20:23 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly04ly_sso-intro/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>本文授权转载自 ： 
&lt;a target="_blank" href="https://ken.io/note/sso-design-implement">https://ken.io/note/sso-design-implement&lt;/a> 作者：ken.io&lt;/p>
&lt;/blockquote>
&lt;h2 id="sso-介绍">
 SSO 介绍
 &lt;a class="anchor" href="#sso-%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是-sso">
 什么是 SSO？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-sso">#&lt;/a>
&lt;/h3>
&lt;p>SSO 英文全称 &lt;strong>Single Sign On&lt;/strong>，单点登录。SSO 是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。&lt;/p>
&lt;p>例如你登录网易账号中心（https://reg.163.com/ ）之后访问以下站点都是登录状态。&lt;/p>
&lt;ul>
&lt;li>网易直播 
&lt;a target="_blank" href="https://v.163.com/">https://v.163.com&lt;/a>&lt;/li>
&lt;li>网易博客 
&lt;a target="_blank" href="https://blog.163.com/">https://blog.163.com&lt;/a>&lt;/li>
&lt;li>网易花田 
&lt;a target="_blank" href="https://love.163.com/">https://love.163.com&lt;/a>&lt;/li>
&lt;li>网易考拉 
&lt;a target="_blank" href="https://www.kaola.com/">https://www.kaola.com&lt;/a>&lt;/li>
&lt;li>网易 Lofter 
&lt;a target="_blank" href="http://www.lofter.com/">http://www.lofter.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="sso-有什么好处">
 SSO 有什么好处？
 &lt;a class="anchor" href="#sso-%e6%9c%89%e4%bb%80%e4%b9%88%e5%a5%bd%e5%a4%84">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>用户角度&lt;/strong> :用户能够做到一次登录多次使用，无需记录多套用户名和密码，省心。&lt;/li>
&lt;li>&lt;strong>系统管理员角度&lt;/strong> : 管理员只需维护好一个统一的账号中心就可以了，方便。&lt;/li>
&lt;li>&lt;strong>新系统开发角度:&lt;/strong> 新系统开发时只需直接对接统一的账号中心即可，简化开发流程，省时。&lt;/li>
&lt;/ol>
&lt;h2 id="sso-设计与实现">
 SSO 设计与实现
 &lt;a class="anchor" href="#sso-%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h2>
&lt;p>本篇文章也主要是为了探讨如何设计&amp;amp;实现一个 SSO 系统&lt;/p>
&lt;p>以下为需要实现的核心功能：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>单点登录&lt;/strong>&lt;/li>
&lt;li>&lt;strong>单点登出&lt;/strong>&lt;/li>
&lt;li>支持&lt;strong>跨域单点登录&lt;/strong>&lt;/li>
&lt;li>支持&lt;strong>跨域单点登出&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="核心应用与依赖">
 核心应用与依赖
 &lt;a class="anchor" href="#%e6%a0%b8%e5%bf%83%e5%ba%94%e7%94%a8%e4%b8%8e%e4%be%9d%e8%b5%96">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212142023133.jpg" alt="单点登录（SSO）设计" />&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>应用/模块/对象&lt;/th>
 &lt;th>说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>前台站点&lt;/td>
 &lt;td>需要登录的站点&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SSO 站点-登录&lt;/td>
 &lt;td>提供登录的页面&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SSO 站点-登出&lt;/td>
 &lt;td>提供注销登录的入口&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SSO 服务-登录&lt;/td>
 &lt;td>提供登录服务&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SSO 服务-登录状态&lt;/td>
 &lt;td>提供登录状态校验/登录信息查询的服务&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>SSO 服务-登出&lt;/td>
 &lt;td>提供用户注销登录的服务&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>数据库&lt;/td>
 &lt;td>存储用户账户信息&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>缓存&lt;/td>
 &lt;td>存储用户的登录信息，通常使用 Redis&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="用户登录状态的存储与校验">
 用户登录状态的存储与校验
 &lt;a class="anchor" href="#%e7%94%a8%e6%88%b7%e7%99%bb%e5%bd%95%e7%8a%b6%e6%80%81%e7%9a%84%e5%ad%98%e5%82%a8%e4%b8%8e%e6%a0%a1%e9%aa%8c">#&lt;/a>
&lt;/h3>
&lt;p>常见的 Web 框架对于 Session 的实现都是&lt;strong>生成一个 SessionId 存储在浏览器 Cookie&lt;/strong> 中。然后&lt;strong>将 Session 内容存储在服务器端内存&lt;/strong>中，这个 
&lt;a target="_blank" href="https://ken.io/">ken.io&lt;/a> 在之前
&lt;a target="_blank" href="https://ken.io/note/session-principle-skill">Session 工作原理&lt;/a>中也提到过。整体也是借鉴这个思路。&lt;/p></description></item><item><title>jwt身份认证优缺点</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly03ly_jwt-advantages-disadvantages/</link><pubDate>Mon, 20 Feb 2023 14:40:15 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly03ly_jwt-advantages-disadvantages/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>在 
&lt;a target="_blank" href="https://javaguide.cn/system-design/security/jwt-intro.html">JWT 基本概念详解&lt;/a>这篇文章中，我介绍了：&lt;/p>
&lt;ul>
&lt;li>什么是 JWT?&lt;/li>
&lt;li>JWT 由哪些部分组成？&lt;/li>
&lt;li>如何基于 JWT 进行身份验证？&lt;/li>
&lt;li>JWT 如何防止 Token 被篡改？&lt;/li>
&lt;li>如何加强 JWT 的安全性？&lt;/li>
&lt;/ul>
&lt;p>这篇文章，我们一起探讨一下 JWT 身份认证的&lt;strong>优缺点&lt;/strong>以及&lt;strong>常见问题的解决办法&lt;/strong>。&lt;/p>
&lt;h2 id="jwt-的优势">
 JWT 的优势
 &lt;a class="anchor" href="#jwt-%e7%9a%84%e4%bc%98%e5%8a%bf">#&lt;/a>
&lt;/h2>
&lt;p>相比于 Session 认证的方式来说，使用 JWT 进行身份认证主要有下面 4 个优势。&lt;/p>
&lt;h3 id="无状态">
 无状态
 &lt;a class="anchor" href="#%e6%97%a0%e7%8a%b6%e6%80%81">#&lt;/a>
&lt;/h3>
&lt;p>JWT 自身&lt;strong>包含了身份验证所需要的所有信息&lt;/strong>，因此，我们的&lt;strong>服务器不需要存储 Session&lt;/strong> 信息。这显然增加了系统的可用性和伸缩性，大大减轻了服务端的压力。&lt;/p>
&lt;p>不过，也正是由于 JWT 的无状态，也导致了它最大的缺点：&lt;strong>不可控！&lt;/strong>&lt;/p>
&lt;p>就比如说，我们想要在 &lt;strong>JWT 有效期内废弃一个 JWT&lt;/strong> 或者&lt;strong>更改它的权限&lt;/strong>的话，&lt;strong>并不会立即生效&lt;/strong>，通常需要等到有效期过后才可以。再比如说，&lt;strong>当用户 Logout 的话，JWT 也还有效&lt;/strong>。除非，我们在&lt;strong>后端增加额外的处理&lt;/strong>逻辑比如&lt;strong>将失效的 JWT 存储&lt;/strong>起来，后端先验证 JWT 是否有效再进行处理。具体的解决办法，我们会在后面的内容中详细介绍到，这里只是简单提一下。&lt;/p>
&lt;h3 id="有效避免了-csrf-攻击">
 有效避免了 CSRF 攻击
 &lt;a class="anchor" href="#%e6%9c%89%e6%95%88%e9%81%bf%e5%85%8d%e4%ba%86-csrf-%e6%94%bb%e5%87%bb">#&lt;/a>
&lt;/h3>
&lt;p>&lt;code>[ˈfɔːdʒəri] forgery 伪造&lt;/code>&lt;/p>
&lt;p>&lt;strong>CSRF（Cross Site Request Forgery）&lt;/strong> 一般被翻译为 &lt;strong>跨站请求伪造&lt;/strong>，属于网络攻击领域范围。相比于 SQL 脚本注入、XSS 等安全攻击方式，&lt;strong>CSRF&lt;/strong> 的知名度并没有它们高。但是，它的确是我们开发系统时必须要考虑的安全隐患。就连业内技术标杆 Google 的产品 Gmail 也曾在 2007 年的时候爆出过 CSRF 漏洞，这给 Gmail 的用户造成了很大的损失。&lt;/p></description></item><item><title>jwt-intro</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly02ly_jwt-intro/</link><pubDate>Mon, 20 Feb 2023 14:28:07 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly02ly_jwt-intro/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142022219.png" alt="image.png" />&lt;/p>
&lt;h2 id="什么是-jwt">
 什么是 JWT?
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-jwt">#&lt;/a>
&lt;/h2>
&lt;p>JWT （JSON Web Token） 是目前&lt;strong>最流行的跨域认证解决方案&lt;/strong>，是一种&lt;strong>基于 Token 的认证授权机制&lt;/strong>。 从 JWT 的全称可以看出，JWT 本身也是 Token，一种规范化之后的 JSON 结构的 Token。&lt;/p>
&lt;blockquote>
&lt;p>跨域认证的问题&lt;br>
互联网服务离不开用户认证。一般流程是下面这样。&lt;/p>
&lt;p>这种模式的问题在于，扩展性（scaling）不好。单机当然没有问题，如果是&lt;strong>服务器集群，或者是跨域的服务导向架构&lt;/strong>，就要求 &lt;strong>session 数据共享&lt;/strong>，&lt;strong>每台服务器都能够读取 session&lt;/strong>。&lt;/p>
&lt;p>举例来说，A 网站和 B 网站是同一家公司的关联服务。现在要求，用户只要在其中一个网站登录，再访问另一个网站就会自动登录，请问怎么实现？&lt;/p>
&lt;p>一种解决方案是 &lt;strong>session 数据持久化&lt;/strong>，&lt;strong>写入数据库&lt;/strong>或&lt;strong>别的持久层&lt;/strong>。各种服务收到请求后，都&lt;strong>向持久层请求数据&lt;/strong>。这种方案的优点是架构清晰，缺点是工程量比较大。另外，&lt;strong>持久层&lt;/strong>万一挂了，就会单点失败。&lt;/p>
&lt;p>另一种方案是服务器索性&lt;strong>不保存 session 数据&lt;/strong>了，所有&lt;strong>数据都保存在客户端&lt;/strong>，每次请求都发回服务器。JWT 就是这种方案的一个代表。&lt;/p>
&lt;/blockquote>
&lt;p>JWT 自身包含了身份验证所需要的所有信息，因此，我们的&lt;strong>服务器不需要存储 Session 信息&lt;/strong>。这显然增加了系统的可用性和伸缩性，大大减轻了服务端的压力。&lt;/p>
&lt;blockquote>
&lt;p>ly：我觉得这里的重点就是，服务器不存储Session以维护&amp;quot;用户&amp;quot;和cookie(session id)的关系了&lt;/p>
&lt;/blockquote>
&lt;p>可以看出，&lt;strong>JWT 更符合设计 RESTful API 时的「Stateless（无状态）」原则&lt;/strong> 。&lt;/p>
&lt;p>并且， 使用 JWT 认证可以有效&lt;strong>避免 CSRF 攻击&lt;/strong>，因为 JWT 一般是&lt;strong>存在在 localStorage&lt;/strong> 中，使用 JWT 进行身份验证的过程中是不会涉及到 Cookie 的。&lt;/p>
&lt;p>我在 
&lt;a target="_blank" href="https://github.com/Snailclimb/JavaGuide/blob/main/docs/system-design/security/advantages&amp;amp;disadvantages-of-jwt.md">JWT 优缺点分析&lt;/a>这篇文章中有详细介绍到使用 JWT 做身份认证的优势和劣势。&lt;/p>
&lt;p>下面是 
&lt;a target="_blank" href="https://tools.ietf.org/html/rfc7519">RFC 7519&lt;/a> 对 JWT 做的较为正式的定义。&lt;/p></description></item><item><title>认证授权基础概念详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly01ly_basis-of-authority-certification/</link><pubDate>Mon, 20 Feb 2023 09:44:23 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/security/ly01ly_basis-of-authority-certification/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="认证-authentication-和授权-authorization的区别是什么">
 认证 (Authentication) 和授权 (Authorization)的区别是什么？
 &lt;a class="anchor" href="#%e8%ae%a4%e8%af%81-authentication-%e5%92%8c%e6%8e%88%e6%9d%83-authorization%e7%9a%84%e5%8c%ba%e5%88%ab%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h2>
&lt;p>这是一个绝大多数人都会混淆的问题。首先先从读音上来认识这两个名词，很多人都会把它俩的读音搞混，所以我建议你先先去查一查这两个单词到底该怎么读，他们的具体含义是什么。&lt;/p>
&lt;p>说简单点就是：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>认证 (Authentication)：&lt;/strong> 你是谁。&lt;code>[ɔːˌθentɪˈkeɪʃn] 身份验证&lt;/code>&lt;/li>
&lt;li>&lt;strong>授权 (Authorization)：&lt;/strong> 你有权限干什么。&lt;code>[ˌɔːθəraɪˈzeɪʃn] 授权&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>稍微正式点（啰嗦点）的说法就是 ：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Authentication（认证）&lt;/strong> 是&lt;strong>验证&lt;/strong>您的身份的凭据（例如用户名/用户 ID 和密码），通过这个凭据，系统得以知道你就是你，也就是说系统存在你这个用户。所以，Authentication 被称为身份/用户验证。&lt;/li>
&lt;li>&lt;strong>Authorization（授权）&lt;/strong> 发生在 &lt;strong>Authentication（认证）&lt;/strong> 之后。授权嘛，光看意思大家应该就明白，它主要&lt;strong>掌管&lt;/strong>我们访问系统的&lt;strong>权限&lt;/strong>。比如有些特定资源只能具有特定权限的人才能访问比如 admin，有些对系统资源操作比如删除、添加、更新只能特定人才具有。&lt;/li>
&lt;/ul>
&lt;p>认证 ：&lt;/p>
&lt;p>&lt;img src="https://camo.githubusercontent.com/0fa88e0ac6b2ed5aec983f25d3e7cce0b16dc1935630dd4edbef73b335fe8137/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f32303231303630343136303930383335322e706e67" alt="img" />&lt;/p>
&lt;p>授权：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142020901.jpg" alt="img" />&lt;/p>
&lt;p>这两个一般在我们的系统中被结合在一起使用，目的就是为了保护我们系统的安全性。&lt;/p>
&lt;h2 id="rbac-模型了解吗">
 RBAC 模型了解吗？
 &lt;a class="anchor" href="#rbac-%e6%a8%a1%e5%9e%8b%e4%ba%86%e8%a7%a3%e5%90%97">#&lt;/a>
&lt;/h2>
&lt;p>系统权限控制最常采用的访问控制模型就是 &lt;strong>RBAC 模型&lt;/strong> 。&lt;/p>
&lt;p>&lt;strong>什么是 RBAC 呢？&lt;/strong>&lt;/p>
&lt;p>RBAC 即&lt;strong>基于角色的权限访问控制&lt;/strong>（&lt;strong>Role-Based Access Control&lt;/strong>）。这是一种通过角色关联权限，角色同时又关联用户的授权的方式。&lt;/p>
&lt;p>简单地说：一个&lt;strong>用户可以拥有若干角色&lt;/strong>，每一个&lt;strong>角色又可以被分配若干权限&lt;/strong>，这样就构造成“&lt;strong>用户-角色-权限&lt;/strong>” 的授权模型。在这种模型中，用户与角色、角色与权限之间构成了多对多的关系，如下图&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142021163.png" alt="image.png" />&lt;/p>
&lt;p>&lt;strong>在 RBAC 中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。&lt;/strong>&lt;/p>
&lt;p>本系统的权限设计相关的表如下（一共 5 张表，2 张用户建立表之间的联系）：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142021291.png" alt="ly-20241212142021291.png" />&lt;/p>
&lt;p>通过这个权限模型，我们可以创建不同的角色并为不同的角色分配不同的权限范围（菜单）。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142021421.png" alt="ly-20241212142021421" />&lt;/p>
&lt;p>通常来说，如果系统对于权限控制要求&lt;strong>比较严格&lt;/strong>的话，一般都会选择使用 &lt;strong>RBAC&lt;/strong> 模型来做权限控制。&lt;/p>
&lt;h2 id="什么是-cookie--cookie-的作用是什么">
 什么是 Cookie ? Cookie 的作用是什么?
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-cookie--cookie-%e7%9a%84%e4%bd%9c%e7%94%a8%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142021557.jpg" alt="img" />&lt;/p></description></item><item><title>单元测试</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/unit-test/</link><pubDate>Mon, 20 Feb 2023 09:38:24 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/unit-test/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="何谓单元测试">
 何谓单元测试？
 &lt;a class="anchor" href="#%e4%bd%95%e8%b0%93%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">#&lt;/a>
&lt;/h2>
&lt;p>维基百科是这样介绍单元测试的：&lt;/p>
&lt;blockquote>
&lt;p>在计算机编程中，单元测试（Unit Testing）是针对&lt;strong>程序模块&lt;/strong>（软件设计的最小单位）进行的&lt;strong>正确性检验测试&lt;/strong>工作。&lt;/p>
&lt;p>程序单元是应用的 &lt;strong>最小可测试部件&lt;/strong> 。在过程化编程中，一个单元就是单个程序、函数、过程等；对于面向对象编程，最小单元就是&lt;strong>方法&lt;/strong>，包括基类（超类）、抽象类、或者派生类（子类）中的方法。&lt;/p>
&lt;/blockquote>
&lt;p>由于每个单元有独立的逻辑，在做单元测试时，为了隔离外部依赖，确保这些依赖&lt;strong>不影响验证逻辑&lt;/strong>，我们经常会用到 Fake、Stub 与 Mock 。&lt;/p>
&lt;p>关于 Fake、Mock 与 Stub 这几个概念的解读，可以看看这篇文章：
&lt;a target="_blank" href="https://zhuanlan.zhihu.com/p/26942686">测试中 Fakes、Mocks 以及 Stubs 概念明晰 - 王下邀月熊 - 2018&lt;/a> 。&lt;/p>
&lt;h2 id="为什么需要单元测试">
 为什么需要单元测试？
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">#&lt;/a>
&lt;/h2>
&lt;h3 id="为重构保驾护航">
 为重构保驾护航
 &lt;a class="anchor" href="#%e4%b8%ba%e9%87%8d%e6%9e%84%e4%bf%9d%e9%a9%be%e6%8a%a4%e8%88%aa">#&lt;/a>
&lt;/h3>
&lt;p>我在
&lt;a target="_blank" href="https://github.com/Snailclimb/JavaGuide/blob/main/docs/system-design/basis/refactoring.md">重构&lt;/a>这篇文章中这样写到：&lt;/p>
&lt;blockquote>
&lt;p>单元测试可以&lt;strong>为重构提供信心&lt;/strong>，降低重构的成本。我们要像重视生产代码那样，重视单元测试。&lt;/p>
&lt;/blockquote>
&lt;p>每个开发者都会经历重构，重构后把代码改坏了的情况并不少见，很可能你只是修改了一个很简单的方法就导致系统出现了一个比较严重的错误。&lt;/p>
&lt;p>如果有了单元测试的话，就不会存在这个隐患了。写完一个类，把单元测试写了，确保这个类逻辑正确；写第二个类，单元测试&amp;hellip;..写 100 个类，道理一样，每个类做到第一点“&lt;strong>保证逻辑正确性&lt;/strong>”，100 个类拼在一起肯定不出问题。你大可以放心一边重构，一边运行 APP；而不是整体重构完，提心吊胆地 run。&lt;/p>
&lt;h3 id="提高代码质量">
 提高代码质量
 &lt;a class="anchor" href="#%e6%8f%90%e9%ab%98%e4%bb%a3%e7%a0%81%e8%b4%a8%e9%87%8f">#&lt;/a>
&lt;/h3>
&lt;p>由于每个单元有独立的逻辑，做单元测试时需要&lt;strong>隔离外部依赖&lt;/strong>，确保这些依赖&lt;strong>不影响验证逻辑&lt;/strong>。因为要把各种依赖分离，单元测试会&lt;strong>促进工程进行组件拆分&lt;/strong>，整理工程依赖关系，更大程度减少代码耦合。这样写出来的代码，更好维护，更好扩展，从而提高代码质量。&lt;/p>
&lt;h3 id="减少-bug">
 减少 bug
 &lt;a class="anchor" href="#%e5%87%8f%e5%b0%91-bug">#&lt;/a>
&lt;/h3>
&lt;p>一个机器，由各种细小的零件组成，如果其中某件零件坏了，机器运行故障。必须保证每个零件都按设计图要求的规格，机器才能正常运行。&lt;/p>
&lt;p>一个&lt;strong>可单元测试的工程&lt;/strong>，会把&lt;strong>业务&lt;/strong>、&lt;strong>功能&lt;/strong>分割成规模更小、有独立的逻辑部件，称为单元。单元测试的目标，就是保证&lt;strong>各个单元的逻辑正确性&lt;/strong>。单元测试保障工程各个“零件”按“规格”（需求）执行，从而保证整个“机器”（项目）运行正确，最大限度减少 bug。&lt;/p>
&lt;h3 id="快速定位-bug">
 快速定位 bug
 &lt;a class="anchor" href="#%e5%bf%ab%e9%80%9f%e5%ae%9a%e4%bd%8d-bug">#&lt;/a>
&lt;/h3>
&lt;p>如果程序有 bug，我们运行一次全部单元测试，找到&lt;strong>不通过的测试&lt;/strong>，可以很快地定位对应的执行代码。修复代码后，运行对应的单元测试；如还不通过，继续修改，运行测试&amp;hellip;..直到&lt;strong>测试通过&lt;/strong>。&lt;/p>
&lt;h3 id="持续集成依赖单元测试">
 持续集成依赖单元测试
 &lt;a class="anchor" href="#%e6%8c%81%e7%bb%ad%e9%9b%86%e6%88%90%e4%be%9d%e8%b5%96%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">#&lt;/a>
&lt;/h3>
&lt;p>持续集成需要依赖单元测试，当持续集成服务自动构建新代码之后，会自动运行单元测试来发现代码错误。&lt;/p>
&lt;h2 id="谁逼你写单元测试">
 谁逼你写单元测试？
 &lt;a class="anchor" href="#%e8%b0%81%e9%80%bc%e4%bd%a0%e5%86%99%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">#&lt;/a>
&lt;/h2>
&lt;h3 id="领导要求">
 领导要求
 &lt;a class="anchor" href="#%e9%a2%86%e5%af%bc%e8%a6%81%e6%b1%82">#&lt;/a>
&lt;/h3>
&lt;p>有些经验丰富的领导，或多或少都会要求团队写单元测试。对于有一定工作经验的队友，这要求挺合理；对于经验尚浅的、毕业生，恐怕要死要活了，连代码都写不好，还要写单元测试，are you kidding me？&lt;/p></description></item><item><title>代码重构指南</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/refactoring/</link><pubDate>Fri, 17 Feb 2023 17:28:30 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/refactoring/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>前段时间重读了
&lt;a target="_blank" href="https://book.douban.com/subject/30468597/">《重构：改善代码既有设计》&lt;/a>，收货颇多。于是，简单写了一篇文章来聊聊我对重构的看法。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142016683.jpg" alt="img" />&lt;/p>
&lt;h2 id="何谓重构">
 何谓重构？
 &lt;a class="anchor" href="#%e4%bd%95%e8%b0%93%e9%87%8d%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>学习重构必看的一本神书《重构：改善代码既有设计》从两个角度给出了重构的定义：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>重构（名词）：对&lt;strong>软件内部结构的一种调整&lt;/strong>，目的是在&lt;strong>不改变软件可观察行为&lt;/strong>的前提下，&lt;strong>提高其可理解性&lt;/strong>，&lt;strong>降低其修改成本&lt;/strong>。&lt;/li>
&lt;li>重构（动词）：使用一系列重构手法，在不改变软件可观察行为的前提下，&lt;strong>调整&lt;/strong>其结构。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>用更贴近工程师的语言来说： &lt;strong>重构就是利用设计模式(如组合模式、策略模式、责任链模式)、软件设计原则（如 SOLID 原则、YAGNI 原则、KISS 原则）和重构手段（如封装、继承、构建测试体系）来让代码更容易理解，更易于修改。&lt;/strong>&lt;/p>
&lt;p>软件设计原则指导着我们组织和规范代码，同时，重构也是为了能够尽量设计出尽量满足软件设计原则的软件。&lt;/p>
&lt;p>正确重构的核心在于 &lt;strong>步子一定要小，每一步的重构都不会影响软件的正常运行，可以随时停止重构。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>常见的设计模式如下&lt;/strong> ：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142016942.jpg" alt="img" />&lt;/p>
&lt;p>更全面的设计模式总结，可以看 &lt;strong>
&lt;a target="_blank" href="https://github.com/iluwatar/java-design-patterns">java-design-patterns&lt;/a>&lt;/strong> 这个开源项目。&lt;/p>
&lt;p>&lt;strong>常见的软件设计原则如下&lt;/strong> ：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142017073.jpg" alt="img" />&lt;/p>
&lt;p>更全面的设计原则总结，可以看 &lt;strong>
&lt;a target="_blank" href="https://github.com/iluwatar/java-design-patterns">java-design-patterns&lt;/a>&lt;/strong> 和 &lt;strong>
&lt;a target="_blank" href="https://github.com/nusr/hacker-laws-zh">hacker-laws-zh&lt;/a>&lt;/strong> 这两个开源项目。&lt;/p>
&lt;h2 id="为什么要重构">
 为什么要重构？
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e9%87%8d%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>在上面介绍重构定义的时候，我从比较抽象的角度介绍了重构的好处：重构的主要目的主要是&lt;strong>提升代码&amp;amp;架构&lt;/strong>的&lt;strong>灵活性/可扩展性&lt;/strong>以及复用性。&lt;/p>
&lt;p>如果对应到一个真实的项目，重构具体能为我们带来什么好处呢？&lt;/p>
&lt;ol>
&lt;li>&lt;strong>让代码更容易理解&lt;/strong> ： 通过添加注释、命名规范、逻辑优化等手段可以让我们的代码更容易被理解；&lt;/li>
&lt;li>&lt;strong>避免代码腐化&lt;/strong> ：通过重构干掉坏味道代码；&lt;/li>
&lt;li>&lt;strong>加深对代码的理解&lt;/strong> ：重构代码的过程会加深你对某部分代码的理解；&lt;/li>
&lt;li>&lt;strong>发现潜在 bug&lt;/strong> ：是这样的，很多潜在的 bug ，都是我们在重构的过程中发现的；&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ol>
&lt;p>看了上面介绍的关于重构带来的好处之后，你会发现重构的最终目标是 &lt;strong>提高软件开发速度和质量&lt;/strong> 。&lt;/p>
&lt;p>重构并不会减慢软件开发速度，相反，如果代码质量和软件设计较差，当我们想要添加新功能的话，开发速度会越来越慢。到了最后，甚至都有想要重写整个系统的冲动。&lt;/p>
&lt;p>[&lt;img src="img/ly-20241212142017203.jpg" alt="img" />&lt;/p>
&lt;p>《重构：改善代码既有设计》这本书中这样说：&lt;/p>
&lt;blockquote>
&lt;p>重构的唯一目的就是让我们开发更快，用更少的工作量创造更大的价值。&lt;/p>
&lt;/blockquote>
&lt;h2 id="何时进行重构">
 何时进行重构？
 &lt;a class="anchor" href="#%e4%bd%95%e6%97%b6%e8%bf%9b%e8%a1%8c%e9%87%8d%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>重构在是开发过程中随时可以进行的，&lt;strong>见机行事&lt;/strong>即可，并不需要单独分配一两天的时间专门用来重构。&lt;/p>
&lt;h3 id="提交代码之前">
 提交代码之前
 &lt;a class="anchor" href="#%e6%8f%90%e4%ba%a4%e4%bb%a3%e7%a0%81%e4%b9%8b%e5%89%8d">#&lt;/a>
&lt;/h3>
&lt;p>《重构：改善代码既有设计》这本书介绍了一个 &lt;strong>营地法则&lt;/strong> 的概念:&lt;/p>
&lt;blockquote>
&lt;p>编程时，需要遵循营地法则：保证&lt;strong>你离开时的代码库一定比来时更健康&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;p>这个概念表达的核心思想其实很简单：在你提交代码的之前，花一会时间想一想，我这次的提交是让项目代码变得更健康了，还是更腐化了，或者说没什么变化？&lt;/p>
&lt;p>项目团队的每一个人只有保证自己的提交没有让项目代码变得更腐化，项目代码才会朝着健康的方向发展。&lt;/p>
&lt;p>&lt;strong>当我们离开营地（项目代码）的时候，请不要留下垃圾（代码坏味道）！尽量确保营地变得更干净了！&lt;/strong>&lt;/p>
&lt;h3 id="开发一个新功能之后之前">
 开发一个新功能之后&amp;amp;之前
 &lt;a class="anchor" href="#%e5%bc%80%e5%8f%91%e4%b8%80%e4%b8%aa%e6%96%b0%e5%8a%9f%e8%83%bd%e4%b9%8b%e5%90%8e%e4%b9%8b%e5%89%8d">#&lt;/a>
&lt;/h3>
&lt;p>在开发一个新功能之后，我们应该回过头看看是不是有可以改进的地方。在添加一个新功能之前，我们可以思考一下自己是否可以&lt;strong>重构代码以让新功能的开发更容易&lt;/strong>。&lt;/p></description></item><item><title>代码命名指南</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/naming/</link><pubDate>Fri, 17 Feb 2023 17:22:14 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/naming/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>我还记得我刚工作那一段时间， 项目 Code Review 的时候，我经常因为变量命名不规范而被 “diss”!&lt;/p>
&lt;p>究其原因还是自己那会经验不足，而且，大学那会写项目的时候不太注意这些问题，想着只要把功能实现出来就行了。&lt;/p>
&lt;p>但是，工作中就不一样，为了代码的可读性、可维护性，项目组对于代码质量的要求还是很高的！&lt;/p>
&lt;p>前段时间，项目组新来的一个实习生也经常在 Code Review 因为变量命名不规范而被 “diss”，这让我想到自己刚到公司写代码那会的日子。&lt;/p>
&lt;p>于是，我就简单写了这篇关于变量命名规范的文章，希望能对同样有此困扰的小伙伴提供一些帮助。&lt;/p>
&lt;p>确实，编程过程中，有太多太多让我们头疼的事情了，比如命名、维护其他人的代码、写测试、与其他人沟通交流等等。&lt;/p>
&lt;p>据说之前在 Quora 网站，由接近 5000 名程序员票选出来的最难的事情就是“命名”。&lt;/p>
&lt;p>大名鼎鼎的《重构》的作者老马（Martin Fowler）曾经在
&lt;a target="_blank" href="https://martinfowler.com/bliki/TwoHardThings.html">TwoHardThings&lt;/a>这篇文章中提到过CS 领域有两大最难的事情：一是 &lt;strong>缓存失效&lt;/strong> ，一是 &lt;strong>程序命名&lt;/strong> 。&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://camo.githubusercontent.com/55cdff0a451c1d8245d7734247bdb08cfaa79257ce2a03763cb03c27a3056f19/68747470733a2f2f67756964652d626c6f672d696d616765732e6f73732d636e2d7368656e7a68656e2e616c6979756e63732e636f6d2f6a6176612d67756964652d626c6f672f6d617274696e672d6e616d696e672e706e67">&lt;img src="img/ly-20241212142015914.jpg" alt="img" />&lt;/a>&lt;/p>
&lt;p>这个句话实际上也是老马引用别人的，类似的表达还有很多。比如分布式系统领域有两大最难的事情：一是 &lt;strong>保证消息顺序&lt;/strong> ，一是 &lt;strong>严格一次传递&lt;/strong> 。&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://camo.githubusercontent.com/595f6479028a874a759e29bfbc9df6c33e8e83b77c9cf7adeafd9aca696072ba/68747470733a2f2f67756964652d626c6f672d696d616765732e6f73732d636e2d7368656e7a68656e2e616c6979756e63732e636f6d2f6a6176612d67756964652d626c6f672f32303231303632393130343834343634352e706e67">&lt;img src="img/ly-20241212142016111.jpg" alt="img" />&lt;/a>&lt;/p>
&lt;p>今天咱们就单独拎出 “&lt;strong>命名&lt;/strong>” 来聊聊！&lt;/p>
&lt;p>这篇文章配合我之前发的 
&lt;a target="_blank" href="https://mp.weixin.qq.com/s?__biz=Mzg2OTA0Njk0OA==&amp;amp;mid=2247486449&amp;amp;idx=1&amp;amp;sn=c3b502529ff991c7180281bcc22877af&amp;amp;chksm=cea2443af9d5cd2c1c87049ed15ccf6f88275419c7dbe542406166a703b27d0f3ecf2af901f8&amp;amp;token=999884676&amp;amp;lang=zh_CN#rd">《编码 5 分钟，命名 2 小时？史上最全的 Java 命名规范参考！》&lt;/a> 这篇文章阅读效果更佳哦！&lt;/p>
&lt;h2 id="为什么需要重视命名">
 为什么需要重视命名？
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e9%87%8d%e8%a7%86%e5%91%bd%e5%90%8d">#&lt;/a>
&lt;/h2>
&lt;p>咱们需要先搞懂为什么要重视编程中的命名这一行为，它对于我们的编码工作有着什么意义。&lt;/p>
&lt;p>&lt;strong>为什么命名很重要呢？&lt;/strong> 这是因为 &lt;strong>好的命名即是注释，别人一看到你的命名就知道你的变量、方法或者类是做什么的！&lt;/strong>&lt;/p>
&lt;p>简单来说就是 &lt;strong>别人根据你的命名就能知道你的代码要表达的意思&lt;/strong> （不过，前提这个人也要有&lt;strong>基本的英语&lt;/strong>知识，对于一些编程中常见的单词比较熟悉）。&lt;/p>
&lt;p>简单举个例子说明一下命名的重要性。&lt;/p>
&lt;p>《Clean Code》这本书明确指出：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>好的代码本身就是注释，我们要尽量规范和美化自己的代码来减少不必要的注释。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>若编程语言足够有表达力，就不需要注释，尽量通过代码来阐述。&lt;/strong>&lt;/p>
&lt;p>举个例子：&lt;/p>
&lt;p>去掉下面复杂的注释，只需要创建一个&lt;strong>与注释所言同一事物的函数&lt;/strong>即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// check to see if the employee is eligible for full benefits&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> ((employee.&lt;span style="color:#a6e22e">flags&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span> HOURLY_FLAG) &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> (employee.&lt;span style="color:#a6e22e">age&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> 65))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>应替换为&lt;/p></description></item><item><title>软件工程简明教程</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/software-engineering/</link><pubDate>Fri, 17 Feb 2023 15:38:09 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/software-engineering/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>大部分软件开发从业者，都会忽略软件开发中的一些最基础、最底层的一些概念。但是，这些软件开发的概念对于软件开发来说非常重要，就像是软件开发的基石一样。这也是我写这篇文章的原因。&lt;/p>
&lt;h2 id="何为软件工程">
 何为软件工程？
 &lt;a class="anchor" href="#%e4%bd%95%e4%b8%ba%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b">#&lt;/a>
&lt;/h2>
&lt;p>1968 年 NATO（北大西洋公约组织）提出了&lt;strong>软件危机&lt;/strong>（&lt;strong>Software crisis&lt;/strong>）一词。同年，为了解决软件危机问题，“&lt;strong>软件工程&lt;/strong>”的概念诞生了。一门叫做软件工程的学科也就应运而生。&lt;/p>
&lt;p>随着时间的推移，软件工程这门学科也经历了一轮又一轮的完善，其中的一些核心内容比如软件开发模型越来越丰富实用！&lt;/p>
&lt;p>&lt;strong>什么是软件危机呢？&lt;/strong>&lt;/p>
&lt;p>简单来说，软件危机描述了当时软件开发的一个痛点：我们&lt;strong>很难高效地开发出质量高&lt;/strong>的软件。&lt;/p>
&lt;p>Dijkstra（Dijkstra算法的作者） 在 1972年图灵奖获奖感言中也提高过软件危机，他是这样说的：“导致软件危机的主要原因是机器变得功能强大了几个数量级！坦率地说：只要没有机器，编程就完全没有问题。当我们有一些弱小的计算机时，编程成为一个温和的问题，而现在我们有了庞大的计算机，编程也同样成为一个巨大的问题”。&lt;/p>
&lt;p>&lt;strong>说了这么多，到底什么是软件工程呢？&lt;/strong>&lt;/p>
&lt;p>工程是&lt;strong>为了解决实际的问题将理论应用于实践&lt;/strong>。软件工程指的就是将&lt;strong>工程思想&lt;/strong>应用于&lt;strong>软件开发&lt;/strong>。&lt;/p>
&lt;p>上面是我对软件工程的定义，我们再来看看比较权威的定义。IEEE 软件工程汇刊给出的定义是这样的：　(1)将&lt;strong>系统化&lt;/strong>的、&lt;strong>规范&lt;/strong>的、&lt;strong>可量化&lt;/strong>的方法应用到软件的&lt;strong>开发&lt;/strong>、运&lt;strong>行&lt;/strong>及&lt;strong>维护&lt;/strong>中，即将工程化方法应用于软件。　(2)在(1)中所述方法的研究。&lt;/p>
&lt;p>总之，软件工程的终极目标就是：&lt;strong>在更少资源消耗的情况下，创造出更好、更容易维护的软件。&lt;/strong>&lt;/p>
&lt;h2 id="软件开发过程">
 软件开发过程
 &lt;a class="anchor" href="#%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%91%e8%bf%87%e7%a8%8b">#&lt;/a>
&lt;/h2>
&lt;p>
&lt;a target="_blank" href="https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B">维基百科是这样定义软件开发过程&lt;/a>的：&lt;/p>
&lt;blockquote>
&lt;p>软件开发过程（英语：software development process），或软件过程（英语：software process），是软件开发的开发生命周期（software development life cycle），其各个阶段实现了软件的&lt;strong>需求定义与分析&lt;/strong>、&lt;strong>设计&lt;/strong>、&lt;strong>实现&lt;/strong>、&lt;strong>测试&lt;/strong>、交付和&lt;strong>维护&lt;/strong>。软件过程是在开发与构建系统时应遵循的步骤，是软件开发的路线图。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>需求分析 ：分析用户的需求，建立逻辑模型。&lt;/li>
&lt;li>软件设计 ： 根据需求分析的结果对软件架构进行设计。&lt;/li>
&lt;li>编码 ：编写程序运行的源代码。&lt;/li>
&lt;li>测试 : 确定测试用例，编写测试报告。&lt;/li>
&lt;li>交付 ：将做好的软件交付给客户。&lt;/li>
&lt;li>维护 ：对软件进行维护比如解决 bug，完善功能。&lt;/li>
&lt;/ul>
&lt;p>软件开发过程只是比较笼统的层面上，一定义了一个软件开发可能涉及到的一些流程。&lt;/p>
&lt;p>软件开发模型更具体地定义了软件开发过程，对开发过程提供了强有力的理论支持。&lt;/p>
&lt;h2 id="软件开发模型">
 软件开发模型
 &lt;a class="anchor" href="#%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%91%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>软件开发模型有很多种，比如&lt;strong>瀑布模型（Waterfall Model）&lt;/strong>、&lt;strong>快速原型模型（Rapid Prototype Model）&lt;/strong>、&lt;strong>V模型（V-model）&lt;/strong>、&lt;strong>W模型（W-model）&lt;/strong>、&lt;strong>敏捷开发模型&lt;/strong>。其中最具有代表性的还是 &lt;strong>瀑布模型&lt;/strong> 和 &lt;strong>敏捷开发&lt;/strong> 。&lt;/p>
&lt;p>&lt;strong>瀑布模型&lt;/strong> 定义了一套完成的软件开发周期，完整地展示了一个软件的的生命周期。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142018153.png" alt="ly-20241212142018153" />&lt;/p>
&lt;p>&lt;strong>敏捷开发模型&lt;/strong> 是目前使用的最多的一种软件开发模型。
&lt;a target="_blank" href="https://wiki.mbalib.com/wiki/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91">MBA智库百科对敏捷开发的描述&lt;/a>是这样的:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>敏捷开发&lt;/strong> 是一种以人为核心、迭代、循序渐进的开发方法。在敏捷开发中，软件项目的构建被切分成多个子项目，各个子项目的成果都经过&lt;strong>测试&lt;/strong>，具备&lt;strong>集成&lt;/strong>和&lt;strong>可运行&lt;/strong>的特征。换言之，就是把一个大项目分为多个相互联系，但也可独立运行的小项目，并分别完成，在此过程中软件一直处于可使用状态。&lt;/p>
&lt;/blockquote>
&lt;p>像现在比较常见的一些概念比如 &lt;strong>持续集成&lt;/strong> 、&lt;strong>重构&lt;/strong> 、&lt;strong>小版本发布&lt;/strong> 、&lt;strong>低文档&lt;/strong> 、&lt;strong>站会&lt;/strong> 、&lt;strong>结对编程&lt;/strong> 、&lt;strong>测试驱动开发&lt;/strong> 都是敏捷开发的核心。&lt;/p></description></item><item><title>restFul</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/restful/</link><pubDate>Fri, 17 Feb 2023 14:35:02 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lycly_system-design/basis/restful/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142017481.png" alt="img" />&lt;/p>
&lt;p>这篇文章简单聊聊后端程序员必备的 RESTful API 相关的知识。&lt;/p>
&lt;p>开始正式介绍 RESTful API 之前，我们需要首先搞清 ：&lt;strong>API 到底是什么？&lt;/strong>&lt;/p>
&lt;h2 id="何为-api-何为-api">
 
&lt;a target="_blank" href="#%E4%BD%95%E4%B8%BA-api">#&lt;/a> 何为 API？
 &lt;a class="anchor" href="#%e4%bd%95%e4%b8%ba-api-%e4%bd%95%e4%b8%ba-api">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142017744.png" alt="img" />&lt;/p>
&lt;p>&lt;strong>API（Application Programming Interface）&lt;/strong> 翻译过来是应用程序编程接口的意思。&lt;/p>
&lt;p>我们在进行后端开发的时候，主要的工作就是&lt;strong>为前端&lt;/strong>或者&lt;strong>其他后端服务&lt;/strong>提供 &lt;strong>AP&lt;/strong>I 比如&lt;strong>查询用户数据的 API&lt;/strong> 。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142017877.png" alt="ly-20241212142017877" />&lt;/p>
&lt;p>但是， API 不仅仅代表后端系统暴露的接口，像框架中提供的方法也属于 API 的范畴。&lt;/p>
&lt;p>为了方便大家理解，我再列举几个例子 🌰：&lt;/p>
&lt;ol>
&lt;li>你通过某电商网站搜索某某商品，电商网站的前端就调用了后端提供了&lt;strong>搜索商品相关的 API&lt;/strong>。&lt;/li>
&lt;li>你使用 JDK 开发 Java 程序，想要读取用户的输入的话，你就需要使用 JDK 提供的 &lt;strong>IO 相关的 API&lt;/strong>。&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ol>
&lt;p>你可以把 API 理解为&lt;strong>程序与程序之间通信的桥梁&lt;/strong>，其本质就是一个&lt;strong>函数&lt;/strong>而已。另外，API 的使用也不是没有章法的，它的规则由（比如&lt;strong>数据输入&lt;/strong>和&lt;strong>输出&lt;/strong>的格式）API 提供方制定。&lt;/p>
&lt;h2 id="何为-restful-api-何为-restful-api">
 
&lt;a target="_blank" href="#%E4%BD%95%E4%B8%BA-restful-api">#&lt;/a> 何为 RESTful API？
 &lt;a class="anchor" href="#%e4%bd%95%e4%b8%ba-restful-api-%e4%bd%95%e4%b8%ba-restful-api">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>RESTful API&lt;/strong> 经常也被叫做 &lt;strong>REST API&lt;/strong>，它是基于 REST 构建的 API。这个 REST 到底是什么，我们后文在讲，涉及到的概念比较多。&lt;/p>
&lt;p>如果你看 RESTful API 相关的文章的话一般都比较晦涩难懂，主要是因为 REST 涉及到的一些概念比较难以理解。但是，实际上，我们平时开发用到的 RESTful API 的知识非常简单也很容易概括！&lt;/p></description></item><item><title>性能测试入门</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly05ly_performance-test/</link><pubDate>Fri, 17 Feb 2023 11:37:08 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly05ly_performance-test/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>性能测试一般情况下都是由测试这个职位去做的，那还需要我们开发学这个干嘛呢？&lt;strong>了解性能测试的指标&lt;/strong>、&lt;strong>分类&lt;/strong>以及&lt;strong>工具&lt;/strong>等知识有助于我们更好地去&lt;strong>写出性能更好&lt;/strong>的程序，另外作为开发这个角色，如果你会性能测试的话，相信也会为你的履历加分不少。&lt;/p>
&lt;p>这篇文章是我会结合自己的实际经历以及在测试这里取的经所得，除此之外，我还借鉴了一些优秀书籍，希望对你有帮助。&lt;/p>
&lt;p>本文思维导图：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142046226.png" alt="img" />&lt;/p>
&lt;h2 id="一-不同角色看网站性能-一-不同角色看网站性能">
 
&lt;a target="_blank" href="#%E4%B8%80-%E4%B8%8D%E5%90%8C%E8%A7%92%E8%89%B2%E7%9C%8B%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD">#&lt;/a> 一 不同角色看网站性能
 &lt;a class="anchor" href="#%e4%b8%80-%e4%b8%8d%e5%90%8c%e8%a7%92%e8%89%b2%e7%9c%8b%e7%bd%91%e7%ab%99%e6%80%a7%e8%83%bd-%e4%b8%80-%e4%b8%8d%e5%90%8c%e8%a7%92%e8%89%b2%e7%9c%8b%e7%bd%91%e7%ab%99%e6%80%a7%e8%83%bd">#&lt;/a>
&lt;/h2>
&lt;h3 id="_1-1-用户-11-用户">
 
&lt;a target="_blank" href="#_1-1-%E7%94%A8%E6%88%B7">#&lt;/a> 1.1 用户
 &lt;a class="anchor" href="#_1-1-%e7%94%a8%e6%88%b7-11-%e7%94%a8%e6%88%b7">#&lt;/a>
&lt;/h3>
&lt;p>当用户打开一个网站的时候，最关注的是什么？当然是&lt;strong>网站响应速度的快慢&lt;/strong>。比如我们点击了淘宝的主页，淘宝需要多久将首页的内容呈现在我的面前，我点击了提交订单按钮需要多久返回结果等等。&lt;/p>
&lt;p>所以，用户在体验我们系统的时候往往根据你的响应速度的快慢来评判你的网站的性能。&lt;/p>
&lt;h3 id="_1-2-开发人员-12-开发人员">
 
&lt;a target="_blank" href="#_1-2-%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98">#&lt;/a> 1.2 开发人员
 &lt;a class="anchor" href="#_1-2-%e5%bc%80%e5%8f%91%e4%ba%ba%e5%91%98-12-%e5%bc%80%e5%8f%91%e4%ba%ba%e5%91%98">#&lt;/a>
&lt;/h3>
&lt;p>用户与开发人员都关注速度，这个速度实际上就是我们的系统&lt;strong>处理用户请求的速度&lt;/strong>。&lt;/p>
&lt;p>开发人员一般情况下很难直观的去评判自己网站的性能，我们往往会根据网站&lt;strong>当前的架构&lt;/strong>以及&lt;strong>基础设施&lt;/strong>情况给一个大概的值,比如：&lt;/p>
&lt;ol>
&lt;li>项目架构是分布式的吗？&lt;/li>
&lt;li>用到了&lt;strong>缓存&lt;/strong>和&lt;strong>消息队列&lt;/strong>没有？&lt;/li>
&lt;li>&lt;strong>高并发&lt;/strong>的业务有没有特殊处理？&lt;/li>
&lt;li>&lt;strong>数据库设计&lt;/strong>是否合理？&lt;/li>
&lt;li>系统用到的&lt;strong>算法&lt;/strong>是否还需要优化？&lt;/li>
&lt;li>系统是否存在&lt;strong>内存泄露&lt;/strong>的问题？&lt;/li>
&lt;li>项目使用的 &lt;strong>Redis 缓存多大&lt;/strong>？服务器&lt;strong>性能&lt;/strong>如何？用的是&lt;strong>机械硬盘&lt;/strong>还是&lt;strong>固态硬盘&lt;/strong>？&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ol>
&lt;h3 id="_1-3-测试人员-13-测试人员">
 
&lt;a target="_blank" href="#_1-3-%E6%B5%8B%E8%AF%95%E4%BA%BA%E5%91%98">#&lt;/a> 1.3 测试人员
 &lt;a class="anchor" href="#_1-3-%e6%b5%8b%e8%af%95%e4%ba%ba%e5%91%98-13-%e6%b5%8b%e8%af%95%e4%ba%ba%e5%91%98">#&lt;/a>
&lt;/h3>
&lt;p>测试人员一般会根据性能测试工具来测试，然后一般会做出一个表格。这个表格可能会涵盖下面这些重要的内容：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>响应时间&lt;/strong>；&lt;/li>
&lt;li>&lt;strong>请求成功率&lt;/strong>；&lt;/li>
&lt;li>吞吐量；&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ol>
&lt;h3 id="_1-4-运维人员-14-运维人员">
 
&lt;a target="_blank" href="#_1-4-%E8%BF%90%E7%BB%B4%E4%BA%BA%E5%91%98">#&lt;/a> 1.4 运维人员
 &lt;a class="anchor" href="#_1-4-%e8%bf%90%e7%bb%b4%e4%ba%ba%e5%91%98-14-%e8%bf%90%e7%bb%b4%e4%ba%ba%e5%91%98">#&lt;/a>
&lt;/h3>
&lt;p>运维人员会倾向于根据&lt;strong>基础设施&lt;/strong>和&lt;strong>资源的利用率&lt;/strong>来判断网站的性能，比如我们的服务器资源使用是否合理、数据库资源是否存在滥用的情况、当然，这是传统的运维人员，现在 Devpos 火起来后，单纯干运维的很少了。我们这里暂且还保留有这个角色。&lt;/p>
&lt;h2 id="二-性能测试需要注意的点-二-性能测试需要注意的点">
 
&lt;a target="_blank" href="#%E4%BA%8C-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E7%82%B9">#&lt;/a> 二 性能测试需要注意的点
 &lt;a class="anchor" href="#%e4%ba%8c-%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e9%9c%80%e8%a6%81%e6%b3%a8%e6%84%8f%e7%9a%84%e7%82%b9-%e4%ba%8c-%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e9%9c%80%e8%a6%81%e6%b3%a8%e6%84%8f%e7%9a%84%e7%82%b9">#&lt;/a>
&lt;/h2>
&lt;p>几乎没有文章在讲性能测试的时候提到这个问题，大家都会讲如何去性能测试，有哪些性能测试指标这些东西。&lt;/p>
&lt;h3 id="_2-1-了解系统的业务场景-21-了解系统的业务场景">
 
&lt;a target="_blank" href="#_2-1-%E4%BA%86%E8%A7%A3%E7%B3%BB%E7%BB%9F%E7%9A%84%E4%B8%9A%E5%8A%A1%E5%9C%BA%E6%99%AF">#&lt;/a> 2.1 了解系统的业务场景
 &lt;a class="anchor" href="#_2-1-%e4%ba%86%e8%a7%a3%e7%b3%bb%e7%bb%9f%e7%9a%84%e4%b8%9a%e5%8a%a1%e5%9c%ba%e6%99%af-21-%e4%ba%86%e8%a7%a3%e7%b3%bb%e7%bb%9f%e7%9a%84%e4%b8%9a%e5%8a%a1%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>性能测试之前更需要你了解当前的系统的业务场景。&lt;/strong> 对系统业务了解的不够深刻，我们很容易犯测试方向偏执的错误，从而导致我们&lt;strong>忽略了对系统某些更需要性能测试的地方进行测试&lt;/strong>。比如我们的系统可以为用户提供发送邮件的功能，用户配置成功邮箱后只需输入相应的邮箱之后就能发送，系统每天&lt;strong>大概能处理上万次&lt;/strong>发邮件的请求。很多人看到这个可能就直接开始使用相关工具测试邮箱发送接口，但是，发送邮件这个场景可能不是当前系统的性能瓶颈，这么多人用我们的系统发邮件， 还可能有&lt;strong>很多人一起发&lt;/strong>邮件，单单这个场景就这么人用，那&lt;strong>用户管理可能才是性能瓶颈&lt;/strong>吧！&lt;/p>
&lt;h3 id="_2-2-历史数据非常有用-22-历史数据非常有用">
 
&lt;a target="_blank" href="#_2-2-%E5%8E%86%E5%8F%B2%E6%95%B0%E6%8D%AE%E9%9D%9E%E5%B8%B8%E6%9C%89%E7%94%A8">#&lt;/a> 2.2 历史数据非常有用
 &lt;a class="anchor" href="#_2-2-%e5%8e%86%e5%8f%b2%e6%95%b0%e6%8d%ae%e9%9d%9e%e5%b8%b8%e6%9c%89%e7%94%a8-22-%e5%8e%86%e5%8f%b2%e6%95%b0%e6%8d%ae%e9%9d%9e%e5%b8%b8%e6%9c%89%e7%94%a8">#&lt;/a>
&lt;/h3>
&lt;p>当前系统所留下的历史数据非常重要，一般情况下，我们可以&lt;strong>通过相应的些历史数据&lt;/strong>初步判定这个系统&lt;strong>哪些接口调用的比较多&lt;/strong>、&lt;strong>哪些 service&lt;/strong> 承受的压力最大，这样的话，我们就可以针对这些地方进行更细致的性能测试与分析。&lt;/p>
&lt;p>另外，这些地方也就像这个系统的一个短板一样，优化好了这些地方会为我们的系统带来质的提升。&lt;/p>
&lt;h3 id="三-性能测试的指标-三-性能测试的指标">
 
&lt;a target="_blank" href="#%E4%B8%89-%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%9A%84%E6%8C%87%E6%A0%87">#&lt;/a> 三 性能测试的指标
 &lt;a class="anchor" href="#%e4%b8%89-%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e7%9a%84%e6%8c%87%e6%a0%87-%e4%b8%89-%e6%80%a7%e8%83%bd%e6%b5%8b%e8%af%95%e7%9a%84%e6%8c%87%e6%a0%87">#&lt;/a>
&lt;/h3>
&lt;h3 id="_3-1-响应时间-31-响应时间">
 
&lt;a target="_blank" href="#_3-1-%E5%93%8D%E5%BA%94%E6%97%B6%E9%97%B4">#&lt;/a> 3.1 响应时间
 &lt;a class="anchor" href="#_3-1-%e5%93%8d%e5%ba%94%e6%97%b6%e9%97%b4-31-%e5%93%8d%e5%ba%94%e6%97%b6%e9%97%b4">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>响应时间就是用户发出请求到用户收到系统处理结果所需要的时间。&lt;/strong> 重要吗？实在太重要！&lt;/p></description></item><item><title>超时&amp;重试详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly04ly_timout-and-retry/</link><pubDate>Fri, 17 Feb 2023 10:57:02 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly04ly_timout-and-retry/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>由于&lt;strong>网络&lt;/strong>问题、&lt;strong>系统&lt;/strong>或者&lt;strong>服务内部&lt;/strong>的 Bug、服务器&lt;strong>宕机&lt;/strong>、操作&lt;strong>系统崩溃&lt;/strong>等问题的不确定性，我们的系统或者服务永远不可能保证时刻都是可用的状态。&lt;/p>
&lt;p>为了最大限度的减小系统或者服务出现故障之后带来的影响，我们需要用到的 &lt;strong>超时（Timeout）&lt;/strong> 和 &lt;strong>重试（Retry）&lt;/strong> 机制。&lt;/p>
&lt;p>想要把超时和重试机制讲清楚其实很简单，因为它俩本身就不是什么高深的概念。&lt;/p>
&lt;p>虽然超时和重试机制的思想很简单，但是它俩是真的非常实用。你平时接触到的绝大部分涉及到&lt;strong>远程调用&lt;/strong>的系统或者服务都会应用超时和重试机制。尤其是对于微服务系统来说，正确设置超时和重试非常重要。单体服务通常只涉及&lt;strong>数据库&lt;/strong>、&lt;strong>缓存&lt;/strong>、&lt;strong>第三方 API&lt;/strong>、&lt;strong>中间件&lt;/strong>等的网络调用，而微服务&lt;strong>系统内部各个服务之间还存在着网络调用&lt;/strong>。&lt;/p>
&lt;h2 id="超时机制-超时机制">
 
&lt;a target="_blank" href="#%E8%B6%85%E6%97%B6%E6%9C%BA%E5%88%B6">#&lt;/a> 超时机制
 &lt;a class="anchor" href="#%e8%b6%85%e6%97%b6%e6%9c%ba%e5%88%b6-%e8%b6%85%e6%97%b6%e6%9c%ba%e5%88%b6">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是超时机制-什么是超时机制">
 
&lt;a target="_blank" href="#%E4%BB%80%E4%B9%88%E6%98%AF%E8%B6%85%E6%97%B6%E6%9C%BA%E5%88%B6">#&lt;/a> 什么是超时机制？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e8%b6%85%e6%97%b6%e6%9c%ba%e5%88%b6-%e4%bb%80%e4%b9%88%e6%98%af%e8%b6%85%e6%97%b6%e6%9c%ba%e5%88%b6">#&lt;/a>
&lt;/h3>
&lt;p>超时机制说的是&lt;strong>当一个请求超过指定的时间&lt;/strong>（比如 1s）还没有被处理的话，这个请求就会&lt;strong>直接被取消并抛出指定的异常&lt;/strong>或者&lt;strong>错误&lt;/strong>（比如 &lt;code>504 Gateway Timeout&lt;/code>）。&lt;/p>
&lt;p>我们平时接触到的超时可以简单分为下面 2 种：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>连接超时（ConnectTimeout）&lt;/strong> ：客户端与服务端&lt;strong>建立连接&lt;/strong>的最长等待时间。&lt;/li>
&lt;li>&lt;strong>读取超时（ReadTimeout）&lt;/strong> ：客户端和服务端&lt;strong>已经建立连接&lt;/strong>，&lt;strong>客户端等待服务端处理完请求的最长时间&lt;/strong>。实际项目中，我们关注比较多的还是&lt;strong>读取超时&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>一些连接池客户端框架中可能还会有&lt;strong>获取连接超&lt;/strong>时&lt;strong>和&lt;/strong>空闲连接清理超时**。&lt;/p>
&lt;p>如果没有设置超时的话，就可能会导致服务端&lt;strong>连接数爆炸&lt;/strong>和&lt;strong>大量请求堆积&lt;/strong>的问题。&lt;/p>
&lt;p>这些堆积的连接和请求会&lt;strong>消耗系统资源&lt;/strong>，&lt;strong>影响新收到的请求&lt;/strong>的处理。严重的情况下，甚至会&lt;strong>拖垮整个系统或者服务&lt;/strong>。&lt;/p>
&lt;p>我之前在实际项目就遇到过类似的问题，整个网站无法正常处理请求，服务器负载直接快被拉满。后面发现原因是项目超时设置错误加上客户端请求处理异常，导致服务端连接数直接接近 40w+，这么多堆积的连接直接把系统干趴了。&lt;/p>
&lt;h3 id="超时时间应该如何设置-超时时间应该如何设置">
 
&lt;a target="_blank" href="#%E8%B6%85%E6%97%B6%E6%97%B6%E9%97%B4%E5%BA%94%E8%AF%A5%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE">#&lt;/a> 超时时间应该如何设置？
 &lt;a class="anchor" href="#%e8%b6%85%e6%97%b6%e6%97%b6%e9%97%b4%e5%ba%94%e8%af%a5%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae-%e8%b6%85%e6%97%b6%e6%97%b6%e9%97%b4%e5%ba%94%e8%af%a5%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae">#&lt;/a>
&lt;/h3>
&lt;p>超时到底设置多长时间是一个难题！超时值设置太高或者太低都有风险。如果设置太高的话，会&lt;strong>降低超时机制的有效性&lt;/strong>，比如你设置超时为 10s 的话，那设置超时就没啥意义了，系统&lt;strong>依然可能会出现大量慢请求堆积&lt;/strong>的问题。如果&lt;strong>设置太低&lt;/strong>的话，就可能会导致在&lt;strong>系统或者服务在某些处理请求速度变慢&lt;/strong>的情况下（比如请求突然增多），&lt;strong>大量请求重试（超时通常会结合重试）继续加重系统或者服务的压力&lt;/strong>，进而导致整个系统或者服务被拖垮的问题。&lt;/p>
&lt;p>通常情况下，我们建议读取超时设置为 &lt;strong>1500ms&lt;/strong> ,这是一个比较普适的值。如果你的系统或者服务对于延迟比较敏感的话，那读取超时值可以适当在 &lt;strong>1500ms&lt;/strong> 的基础上进行缩短。反之，读取超时值也可以在 &lt;strong>1500ms&lt;/strong> 的基础上进行加长，不过，尽量还是不要超过 &lt;strong>1500ms&lt;/strong> 。连接超时可以适当设置长一些，建议在 &lt;strong>1000ms ~ 5000ms&lt;/strong> 之内。&lt;/p>
&lt;p>没有银弹！超时值具体该设置多大，还是要根据实际项目的需求和情况慢慢调整优化得到。&lt;/p>
&lt;p>更上一层，参考
&lt;a target="_blank" href="https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html">美团的Java线程池参数动态配置open in new window&lt;/a>思想，我们也可以将超时弄成可配置化的参数而不是固定的，比较简单的一种办法就是将超时的值放在配置中心中。这样的话，我们就可以根据系统或者服务的状态动态调整超时值了。&lt;/p>
&lt;h2 id="重试机制-重试机制">
 
&lt;a target="_blank" href="#%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6">#&lt;/a> 重试机制
 &lt;a class="anchor" href="#%e9%87%8d%e8%af%95%e6%9c%ba%e5%88%b6-%e9%87%8d%e8%af%95%e6%9c%ba%e5%88%b6">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是重试机制-什么是重试机制">
 
&lt;a target="_blank" href="#%E4%BB%80%E4%B9%88%E6%98%AF%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6">#&lt;/a> 什么是重试机制？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e9%87%8d%e8%af%95%e6%9c%ba%e5%88%b6-%e4%bb%80%e4%b9%88%e6%98%af%e9%87%8d%e8%af%95%e6%9c%ba%e5%88%b6">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>重试机制一般配合超时机制&lt;/strong>一起使用，指的是&lt;strong>多次发送相同的请求&lt;/strong>来&lt;strong>避免瞬态故障&lt;/strong>和&lt;strong>偶然性故障&lt;/strong>。&lt;/p>
&lt;p>瞬态故障可以简单理解为&lt;strong>某一瞬间系统偶然出现的故障&lt;/strong>，并不会持久。偶然性故障可以理解为哪些在&lt;strong>某些情况下偶尔出现的故障&lt;/strong>，频率通常较低。&lt;/p>
&lt;p>重试的核心思想是&lt;strong>通过消耗服务器的资源来尽可能获得请求更大概率被成功处理&lt;/strong>。由于瞬态故障和偶然性故障是很少发生的，因此，重试对于服务器的资源消耗几乎是可以被忽略的。&lt;/p>
&lt;h3 id="重试的次数如何设置-重试的次数如何设置">
 
&lt;a target="_blank" href="#%E9%87%8D%E8%AF%95%E7%9A%84%E6%AC%A1%E6%95%B0%E5%A6%82%E4%BD%95%E8%AE%BE%E7%BD%AE">#&lt;/a> 重试的次数如何设置？
 &lt;a class="anchor" href="#%e9%87%8d%e8%af%95%e7%9a%84%e6%ac%a1%e6%95%b0%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae-%e9%87%8d%e8%af%95%e7%9a%84%e6%ac%a1%e6%95%b0%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae">#&lt;/a>
&lt;/h3>
&lt;p>重试的次数不宜过多，否则依然会对系统负载造成比较大的压力。&lt;/p></description></item><item><title>服务限流详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly03ly_limit-request/</link><pubDate>Thu, 16 Feb 2023 17:06:11 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly03ly_limit-request/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>针对软件系统来说，限流就是&lt;strong>对请求的速率进行限制&lt;/strong>，&lt;strong>避免瞬时的大量请求击垮软件系统&lt;/strong>。毕竟，软件系统的处理能力是有限的。如果说超过了其处理能力的范围，软件系统可能直接就挂掉了。&lt;/p>
&lt;p>限流可能会&lt;strong>导致用户的请求无法被正确处理&lt;/strong>，不过，这往往也是&lt;strong>权衡了软件系统的稳定性之后得到的最优解&lt;/strong>。&lt;/p>
&lt;p>现实生活中，处处都有限流的实际应用，就比如&lt;strong>排队买票&lt;/strong>是为了避免大量用户涌入购票而导致&lt;strong>售票员无法处理&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142045484.jpg" alt="排队示意图" />&lt;/p>
&lt;h2 id="常见限流算法有哪些">
 常见限流算法有哪些？
 &lt;a class="anchor" href="#%e5%b8%b8%e8%a7%81%e9%99%90%e6%b5%81%e7%ae%97%e6%b3%95%e6%9c%89%e5%93%aa%e4%ba%9b">#&lt;/a>
&lt;/h2>
&lt;p>简单介绍 4 种非常好理解并且容易实现的限流算法！&lt;/p>
&lt;blockquote>
&lt;p>图片来源于 InfoQ 的一篇文章
&lt;a target="_blank" href="https://www.infoq.cn/article/Qg2tX8fyw5Vt-f3HH673">《分布式服务限流实战，已经为你排好坑了》&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;h3 id="固定窗口计数器算法">
 固定窗口计数器算法
 &lt;a class="anchor" href="#%e5%9b%ba%e5%ae%9a%e7%aa%97%e5%8f%a3%e8%ae%a1%e6%95%b0%e5%99%a8%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;p>固定窗口其实就是时间窗口。&lt;strong>固定窗口计数器算法&lt;/strong> 规定了我们&lt;strong>单位时间处理的请求数量&lt;/strong>。&lt;/p>
&lt;p>假如我们规定系统中某个接口 1 分钟只能访问 33 次的话，使用固定窗口计数器算法的实现思路如下：&lt;/p>
&lt;ul>
&lt;li>给定一个变量 &lt;code>counter&lt;/code> 来&lt;strong>记录当前接口处理的请求数量&lt;/strong>，初始值为 0（代表接口当前 1 分钟内还未处理请求）。&lt;/li>
&lt;li>1 分钟之内每处理一个请求之后就将 &lt;code>counter+1&lt;/code> ，当 &lt;code>counter=33&lt;/code> 之后（也就是说在这 1 分钟内接口已经被访问 33 次的话），后续的请求就会被全部拒绝。&lt;/li>
&lt;li>等到 1 分钟结束后，将 &lt;code>counter&lt;/code> 重置 0，重新开始计数。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>这种限流算法无法保证限流速率，因而无法保证突然激增的流量。&lt;/strong>&lt;/p>
&lt;p>就比如说我们限制某个接口 1 分钟只能访问 1000 次，该接口的 QPS 为 500，前 55s 这个接口 1 个请求没有接收，后 1s 突然接收了 1000 个请求。然后，在当前场景下，这 1000 个请求在 1s 内是没办法被处理的，系统直接就被瞬时的大量请求给击垮了。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142045643.jpg" alt="固定窗口计数器算法" />&lt;/p></description></item><item><title>冗余设计</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly02ly_redundancy/</link><pubDate>Thu, 16 Feb 2023 16:54:24 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly02ly_redundancy/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>title&lt;/th>
 &lt;th>category&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>冗余设计详解&lt;/td>
 &lt;td>高可用&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>冗余设计是&lt;strong>保证系统和数据高可用&lt;/strong>的最常的手段。&lt;/p>
&lt;p>对于服务来说，冗余的思想就是&lt;strong>相同的服务部署多份&lt;/strong>，如果正在使用的服务突然挂掉的话，系统可以&lt;strong>很快切换&lt;/strong>到备份服务上，大大减少系统的不可用时间，提高系统的可用性。&lt;/p>
&lt;p>对于数据来说，冗余的思想就是&lt;strong>相同的数据备份多份&lt;/strong>，这样就可以很简单地&lt;strong>提高数据的安全性&lt;/strong>。&lt;/p>
&lt;p>实际上，日常生活中就有非常多的冗余思想的应用。&lt;/p>
&lt;p>拿我自己来说，我对于重要文件的保存方法就是冗余思想的应用。我日常所使用的重要文件都会&lt;strong>同步一份在 Github 以及个人云盘&lt;/strong>上，这样就可以保证即使电脑硬盘损坏，我也可以通过 Github 或者个人云盘找回自己的重要文件。&lt;/p>
&lt;p>&lt;strong>高可用集群（High Availability Cluster，简称 HA Cluster）&lt;/strong>、&lt;strong>同城灾备&lt;/strong>、&lt;strong>异地灾备&lt;/strong>、&lt;strong>同城多活&lt;/strong>和&lt;strong>异地多活&lt;/strong>是冗余思想在高可用系统设计中最典型的应用。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>高可用集群&lt;/strong> : 同一份服务部署两份或者多份，当正在使用的服务突然挂掉的话，可以切换到另外一台服务，从而保证服务的高可用。&lt;/li>
&lt;li>&lt;strong>同城灾备&lt;/strong> ：一整个集群可以部署在同一个机房，而同城灾备中相同服务部署在&lt;strong>同一个城市&lt;/strong>的&lt;strong>不同机房&lt;/strong>中。并且，&lt;strong>备用服务不处理请求&lt;/strong>。这样可以避免机房出现意外情况比如停电、火灾。&lt;/li>
&lt;li>&lt;strong>异地灾备&lt;/strong> ：类似于同城灾备，不同的是，相同服务部署在&lt;strong>异地&lt;/strong>（通常距离较远，甚至是在不同的城市或者国家）的&lt;strong>不同机房&lt;/strong>中&lt;/li>
&lt;li>&lt;strong>同城多活&lt;/strong> ：类似于同城灾备，但&lt;strong>备用服务可以处理请求&lt;/strong>，这样可以充分利用系统资源，提高系统的并发。&lt;/li>
&lt;li>&lt;strong>异地多活&lt;/strong> : 将服务部署在&lt;strong>异地的不同机房&lt;/strong>中，并且，它们可以同时&lt;strong>对外提供服务&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>高可用集群&lt;strong>单纯是服务的冗余&lt;/strong>，并没有强调地域。同城灾备、异地灾备、同城多活和异地多活实现了地域上的冗余。&lt;/p>
&lt;p>同城和异地的主要区别在于&lt;strong>机房之间的距离&lt;/strong>。异地通常距离较远，甚至是在不同的城市或者国家。&lt;/p>
&lt;p>和传统的灾备设计相比，同城多活和异地多活最明显的改变在于**“多活”&lt;strong>，即所有站点都是&lt;/strong>同时在对外提供服务&lt;strong>的。异地多活是为了应对突发状况比如&lt;/strong>火灾**、&lt;strong>地震&lt;/strong>等自然或者人为灾害。&lt;/p>
&lt;p>光做好冗余还不够，必须要配合上 &lt;strong>故障转移&lt;/strong> 才可以！ 所谓&lt;strong>故障转移&lt;/strong>，简单来说就是&lt;strong>实现不可用服务快速且自动地切换到可用服务&lt;/strong>，整个&lt;strong>过程不需要人为干涉&lt;/strong>。&lt;/p>
&lt;p>举个例子：哨兵模式的 Redis 集群中，&lt;strong>如果 Sentinel（哨兵） 检测到 master 节点出现故障的话， 它就会帮助我们实现故障转移，自动将某一台 slave 升级为 master&lt;/strong>，确保整个 Redis 系统的可用性。整个过程完全自动，不需要人工介入。我在
&lt;a target="_blank" href="https://www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7">《Java 面试指北》&lt;/a>的「技术面试题篇」中的数据库部分详细介绍了 Redis 集群相关的知识点&amp;amp;面试题，感兴趣的小伙伴可以看看。&lt;/p>
&lt;p>再举个例子：&lt;strong>Nginx 可以结合 Keepalived 来实现高可用。如果 Nginx 主服务器宕机的话，Keepalived 可以自动进行故障转移，备用 Nginx 主服务器升级为主服务。并且，这个切换对外是透明的，因为使用的虚拟 IP，虚拟 IP 不会改变&lt;/strong>。我在
&lt;a target="_blank" href="https://www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7">《Java 面试指北》&lt;/a>的「技术面试题篇」中的「服务器」部分详细介绍了 Nginx 相关的知识点&amp;amp;面试题，感兴趣的小伙伴可以看看。&lt;/p>
&lt;p>&lt;strong>异地多活&lt;/strong>架构实施起来非常难，需要考虑的因素非常多。本人不才，实际项目中并没有实践过异地多活架构，我对其了解还停留在书本知识。&lt;/p></description></item><item><title>高可用系统设计指南</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly01ly_high-availability-system-design/</link><pubDate>Thu, 16 Feb 2023 15:43:06 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyfly_high-availability/ly01ly_high-availability-system-design/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="什么是高可用可用性的判断标准是啥">
 什么是高可用？可用性的判断标准是啥？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e9%ab%98%e5%8f%af%e7%94%a8%e5%8f%af%e7%94%a8%e6%80%a7%e7%9a%84%e5%88%a4%e6%96%ad%e6%a0%87%e5%87%86%e6%98%af%e5%95%a5">#&lt;/a>
&lt;/h2>
&lt;p>高可用描述的是&lt;strong>一个系统在大部分时间都是可用的&lt;/strong>，可以为我们提供服务的。高可用代表系统即使在发生硬件故障或者系统升级的时候，&lt;strong>服务仍然是可用的&lt;/strong>。&lt;/p>
&lt;p>一般情况下，我们使用多少个 9 来评判一个系统的可用性，比如 99.9999% 就是代表该系统在所有的运行时间中只有 0.0001% 的时间是不可用的，这样的系统就是非常非常高可用的了！当然，也会有系统如果可用性不太好的话，可能连 9 都上不了。&lt;/p>
&lt;p>除此之外，系统的可用性还可以用&lt;strong>某功能的失败次数&lt;/strong>与&lt;strong>总的请求次数&lt;/strong>之比来衡量，比如对网站请求 1000 次，其中有 10 次请求失败，那么可用性就是 99%。&lt;/p>
&lt;h2 id="哪些情况会导致系统不可用">
 哪些情况会导致系统不可用？
 &lt;a class="anchor" href="#%e5%93%aa%e4%ba%9b%e6%83%85%e5%86%b5%e4%bc%9a%e5%af%bc%e8%87%b4%e7%b3%bb%e7%bb%9f%e4%b8%8d%e5%8f%af%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>黑客攻击；&lt;/li>
&lt;li>&lt;strong>硬件故障&lt;/strong>，比如服务器坏掉。&lt;/li>
&lt;li>&lt;strong>并发量/用户请求量激增&lt;/strong>导致整个服务宕掉或者部分服务不可用。&lt;/li>
&lt;li>代码中的坏味道导致内存泄漏或者其他问题导致&lt;strong>程序挂掉&lt;/strong>。&lt;/li>
&lt;li>网站架构某个&lt;strong>重要的角色&lt;/strong>比如 &lt;strong>Nginx&lt;/strong> 或者&lt;strong>数据库&lt;/strong>突然不可用。&lt;/li>
&lt;li>自然灾害或者&lt;strong>人为破坏&lt;/strong>。&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ol>
&lt;h2 id="有哪些提高系统可用性的方法">
 有哪些提高系统可用性的方法？
 &lt;a class="anchor" href="#%e6%9c%89%e5%93%aa%e4%ba%9b%e6%8f%90%e9%ab%98%e7%b3%bb%e7%bb%9f%e5%8f%af%e7%94%a8%e6%80%a7%e7%9a%84%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;h3 id="注重代码质量测试严格把关">
 注重代码质量，测试严格把关
 &lt;a class="anchor" href="#%e6%b3%a8%e9%87%8d%e4%bb%a3%e7%a0%81%e8%b4%a8%e9%87%8f%e6%b5%8b%e8%af%95%e4%b8%a5%e6%a0%bc%e6%8a%8a%e5%85%b3">#&lt;/a>
&lt;/h3>
&lt;p>我觉得这个是最最最重要的，代码质量有问题比如比较常见的内存泄漏、循环依赖都是对系统可用性极大的损害。大家都喜欢谈限流、降级、熔断，但是我觉得从代码质量这个源头把关是首先要做好的一件很重要的事情。如何提高代码质量？比较实际可用的就是 &lt;strong>CodeReview&lt;/strong>，不要在乎每天多花的那 1 个小时左右的时间，作用可大着呢！&lt;/p>
&lt;p>另外，安利几个对提高代码质量有实际效果的神器：&lt;/p>
&lt;ul>
&lt;li>
&lt;a target="_blank" href="https://www.sonarqube.org/">Sonarqube&lt;/a>；&lt;/li>
&lt;li>Alibaba 开源的 Java 诊断工具 
&lt;a target="_blank" href="https://arthas.aliyun.com/doc/">Arthas&lt;/a>；&lt;/li>
&lt;li>
&lt;a target="_blank" href="https://github.com/alibaba/p3c">阿里巴巴 Java 代码规范&lt;/a>（Alibaba Java Code Guidelines）；&lt;/li>
&lt;li>IDEA 自带的代码分析等工具。&lt;/li>
&lt;/ul>
&lt;h3 id="使用集群减少单点故障">
 使用集群，减少单点故障
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e9%9b%86%e7%be%a4%e5%87%8f%e5%b0%91%e5%8d%95%e7%82%b9%e6%95%85%e9%9a%9c">#&lt;/a>
&lt;/h3>
&lt;p>先拿常用的 Redis 举个例子！我们如何保证我们的 Redis 缓存高可用呢？答案就是使用&lt;strong>集群&lt;/strong>，&lt;strong>避免单点故障&lt;/strong>。当我们使用一个 Redis 实例作为缓存的时候，这个 Redis 实例挂了之后，整个缓存服务可能就挂了。使用了集群之后，即使一台 Redis 实例挂了，不到一秒就会有另外一台 Redis 实例顶上。&lt;/p></description></item><item><title>rocketmq常见面试题</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/message-mq/rocketmq-questions/</link><pubDate>Wed, 15 Feb 2023 09:58:47 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/message-mq/rocketmq-questions/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>本文来自读者 
&lt;a target="_blank" href="https://github.com/Snailclimb/JavaGuide/pull/291">PR&lt;/a>。&lt;/p>
&lt;blockquote>
&lt;p>主要是rocket mq的几个问题&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;h2 id="1-单机版消息中心">
 1 单机版消息中心
 &lt;a class="anchor" href="#1-%e5%8d%95%e6%9c%ba%e7%89%88%e6%b6%88%e6%81%af%e4%b8%ad%e5%bf%83">#&lt;/a>
&lt;/h2>
&lt;p>一个消息中心，最基本的需要支持多生产者、多消费者，例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Scratch&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 实际中会有 nameserver 服务来找到 broker 具体位置以及 broker 主从信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Broker broker &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Broker();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Producer producer1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Producer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> producer1.&lt;span style="color:#a6e22e">connectBroker&lt;/span>(broker);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Producer producer2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Producer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> producer2.&lt;span style="color:#a6e22e">connectBroker&lt;/span>(broker);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Consumer consumer1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Consumer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> consumer1.&lt;span style="color:#a6e22e">connectBroker&lt;/span>(broker);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Consumer consumer2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Consumer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> consumer2.&lt;span style="color:#a6e22e">connectBroker&lt;/span>(broker);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> 2; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> producer1.&lt;span style="color:#a6e22e">asyncSendMsg&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;producer1 send msg&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> producer2.&lt;span style="color:#a6e22e">asyncSendMsg&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;producer2 send msg&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;broker has msg:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> broker.&lt;span style="color:#a6e22e">getAllMagByDisk&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> 1; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;consumer1 consume msg：&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> consumer1.&lt;span style="color:#a6e22e">syncPullMsg&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> 3; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;consumer2 consume msg：&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> consumer2.&lt;span style="color:#a6e22e">syncPullMsg&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Producer&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Broker broker;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">connectBroker&lt;/span>(Broker broker) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">broker&lt;/span> &lt;span style="color:#f92672">=&lt;/span> broker;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">asyncSendMsg&lt;/span>(String msg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (broker &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RuntimeException(&lt;span style="color:#e6db74">&amp;#34;please connect broker first&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(() &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> broker.&lt;span style="color:#a6e22e">sendMsg&lt;/span>(msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }).&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Consumer&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Broker broker;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">connectBroker&lt;/span>(Broker broker) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">broker&lt;/span> &lt;span style="color:#f92672">=&lt;/span> broker;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">syncPullMsg&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> broker.&lt;span style="color:#a6e22e">getMsg&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Broker&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 对应 RocketMQ 中 MessageQueue，默认情况下 1 个 Topic 包含 4 个 MessageQueue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> LinkedBlockingQueue&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> messageQueue &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> LinkedBlockingQueue(Integer.&lt;span style="color:#a6e22e">MAX_VALUE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 实际发送消息到 broker 服务器使用 Netty 发送&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">sendMsg&lt;/span>(String msg) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> messageQueue.&lt;span style="color:#a6e22e">put&lt;/span>(msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 实际会同步或异步落盘，异步落盘使用的定时任务定时扫描落盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InterruptedException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getMsg&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> messageQueue.&lt;span style="color:#a6e22e">take&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InterruptedException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getAllMagByDisk&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StringBuilder sb &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StringBuilder(&lt;span style="color:#e6db74">&amp;#34;\n&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> messageQueue.&lt;span style="color:#a6e22e">iterator&lt;/span>().&lt;span style="color:#a6e22e">forEachRemaining&lt;/span>((msg) &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sb.&lt;span style="color:#a6e22e">append&lt;/span>(msg &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\n&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sb.&lt;span style="color:#a6e22e">toString&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>问题：&lt;/p></description></item><item><title>rocketmq介绍</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/message-mq/rocketmq-intro/</link><pubDate>Wed, 15 Feb 2023 09:58:20 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/message-mq/rocketmq-intro/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="消息队列扫盲">
 消息队列扫盲
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e6%89%ab%e7%9b%b2">#&lt;/a>
&lt;/h2>
&lt;p>消息队列顾名思义就是存放消息的队列，队列我就不解释了，别告诉我你连队列都不知道是啥吧？&lt;/p>
&lt;p>所以问题并不是消息队列是什么，而是 &lt;strong>消息队列为什么会出现？消息队列能用来干什么？用它来干这些事会带来什么好处？消息队列会带来副作用吗？&lt;/strong>&lt;/p>
&lt;h3 id="消息队列为什么会出现-消息队列为什么会出现">
 
&lt;a target="_blank" href="#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E5%87%BA%E7%8E%B0">#&lt;/a> 消息队列为什么会出现？
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e5%87%ba%e7%8e%b0-%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e4%b8%ba%e4%bb%80%e4%b9%88%e4%bc%9a%e5%87%ba%e7%8e%b0">#&lt;/a>
&lt;/h3>
&lt;p>消息队列算是作为后端程序员的一个必备技能吧，因为&lt;strong>分布式应用必定涉及到各个系统之间的通信问题&lt;/strong>，这个时候消息队列也应运而生了。可以说&lt;strong>分布式&lt;/strong>的产生是消息队列的基础，而分布式怕是一个很古老的概念了吧，所以消息队列也是一个很古老的&lt;strong>中间件&lt;/strong>了。&lt;/p>
&lt;h3 id="消息队列能用来干什么-消息队列能用来干什么">
 
&lt;a target="_blank" href="#%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E8%83%BD%E7%94%A8%E6%9D%A5%E5%B9%B2%E4%BB%80%E4%B9%88">#&lt;/a> 消息队列能用来干什么？
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e8%83%bd%e7%94%a8%e6%9d%a5%e5%b9%b2%e4%bb%80%e4%b9%88-%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e8%83%bd%e7%94%a8%e6%9d%a5%e5%b9%b2%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h3>
&lt;h4 id="异步-异步">
 
&lt;a target="_blank" href="#%E5%BC%82%E6%AD%A5">#&lt;/a> 异步
 &lt;a class="anchor" href="#%e5%bc%82%e6%ad%a5-%e5%bc%82%e6%ad%a5">#&lt;/a>
&lt;/h4>
&lt;p>你可能会反驳我，应用之间的通信又不是只能由消息队列解决，好好的通信为什么&lt;strong>中间非要插一个消息队列&lt;/strong>呢？我不能直接进行通信吗？&lt;/p>
&lt;p>很好👍，你又提出了一个概念，&lt;strong>同步通信&lt;/strong>。就比如现在业界使用比较多的 &lt;code>Dubbo&lt;/code> 就是一个适用于各个系统之间&lt;strong>同步通信的 &lt;code>RPC&lt;/code> 框架&lt;/strong>。&lt;/p>
&lt;p>我来举个🌰吧，比如我们有一个购票系统，需求是用户在购买完之后能接收到购买完成的短信。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142042093.jpg" alt="img" />&lt;/p>
&lt;p>我们省略中间的网络通信时间消耗，假如购票系统处理需要 150ms ，短信系统处理需要 200ms ，那么整个处理流程的时间消耗就是 150ms + 200ms = 350ms。&lt;/p>
&lt;p>当然，乍看没什么问题。可是仔细一想你就感觉有点问题，我用户购票在购票系统的时候其实就已经完成了购买，而我现在通过同步调用非要让整个请求拉长时间，而短信系统这玩意又不是很有必要，它仅仅是一个&lt;strong>辅助功能增强用户体验感&lt;/strong>而已。我现在整个调用流程就有点 &lt;strong>头重脚轻&lt;/strong> 的感觉了，购票是一个不太耗时的流程，而我现在因为同步调用，非要等待发送短信这个比较耗时的操作才返回结果。那我如果再加一个发送邮件呢？&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142042330.jpg" alt="img" />&lt;/p>
&lt;p>这样&lt;strong>整个系统的调用链又变长&lt;/strong>了，整个时间就变成了550ms。&lt;/p>
&lt;p>当我们在学生时代需要在食堂排队的时候，我们和食堂大妈就是一个同步的模型。&lt;/p>
&lt;p>我们需要告诉食堂大妈：“姐姐，给我加个鸡腿，再加个酸辣土豆丝，帮我浇点汁上去，多打点饭哦😋😋😋” 咦~~~ 为了多吃点，真恶心。&lt;/p>
&lt;p>然后大妈帮我们打饭配菜，我们看着大妈那颤抖的手和掉落的土豆丝不禁咽了咽口水。&lt;/p>
&lt;p>最终我们从大妈手中接过饭菜然后去寻找座位了&amp;hellip;&lt;/p>
&lt;p>回想一下，我们在给大妈发送需要的信息之后我们是 &lt;strong>同步等待大妈给我配好饭菜&lt;/strong> 的，上面我们只是加了鸡腿和土豆丝，万一我再加一个番茄牛腩，韭菜鸡蛋，这样是不是大妈打饭配菜的流程就会变长，我们等待的时间也会相应的变长。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142042452.jpg" alt="img" />&lt;/p>
&lt;p>那后来，我们工作赚钱了有钱去饭店吃饭了，我们告诉服务员来一碗牛肉面加个荷包蛋 &lt;strong>(传达一个消息)&lt;/strong> ，然后我们就可以在饭桌上安心的玩手机了 &lt;strong>(干自己其他事情)&lt;/strong> ，等到我们的牛肉面上了我们就可以吃了。这其中我们也就传达了一个消息，然后我们又转过头干其他事情了。这其中虽然做面的时间没有变短，但是我们只需要传达一个消息就可以干其他事情了，这是一个 &lt;strong>异步&lt;/strong> 的概念。&lt;/p>
&lt;p>所以，为了解决这一个问题，聪明的程序员在中间也加了个类似于服务员的中间件——消息队列。这个时候我们就可以把模型给改造了。&lt;/p>
&lt;p>&lt;img src="https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-11/16ef38124f55eaea.jpg" alt="img" />&lt;/p>
&lt;p>这样，我们在将消息存入消息队列之后我们就可以直接返回了(我们告诉服务员我们要吃什么然后玩手机)，所以整个耗时只是 &lt;strong>150ms + 10ms = 160ms&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>但是你需要注意的是，整个流程的时长是没变的，就像你仅仅告诉服务员要吃什么是不会影响到做面的速度的。&lt;/p></description></item><item><title>message-queue</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/message-mq/base/</link><pubDate>Wed, 15 Feb 2023 09:56:36 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/message-mq/base/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>“RabbitMQ？”“Kafka？”“RocketMQ？”&amp;hellip;在日常学习与开发过程中，我们常常听到消息队列这个关键词。我也在我的多篇文章中提到了这个概念。可能你是熟练使用消息队列的老手，又或者你是不懂消息队列的新手，不论你了不了解消息队列，本文都将带你搞懂消息队列的一些&lt;strong>基本理论&lt;/strong>。&lt;/p>
&lt;p>如果你是老手，你可能从本文学到你之前不曾注意的一些关于消息队列的重要概念，如果你是新手，相信本文将是你打开消息队列大门的一板砖。&lt;/p>
&lt;h2 id="什么是消息队列">
 什么是消息队列？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97">#&lt;/a>
&lt;/h2>
&lt;p>我们可以把消息队列看作是一个&lt;strong>存放消息的容器&lt;/strong>，当我们需要使用消息的时候，直接&lt;strong>从容器中取出消息&lt;/strong>供自己使用即可。由于队列 Queue 是一种&lt;strong>先进先出&lt;/strong>的数据结构，所以消费消息时也是&lt;strong>按照顺序来消费&lt;/strong>的。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142040452.jpg" alt="Message queue" />&lt;/p>
&lt;p>参与消息传递的双方称为&lt;strong>生产者&lt;/strong>和&lt;strong>消费者&lt;/strong>，生产者负责&lt;strong>发送&lt;/strong>消息，消费者负责&lt;strong>处理&lt;/strong>消息。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142040705.png" alt="发布/订阅（Pub/Sub）模型" />&lt;/p>
&lt;p>我们知道操作系统中的进程通信的一种很重要的方式就是消息队列。我们这里提到的&lt;strong>消息队列&lt;/strong>稍微有点区别，更多指的是&lt;strong>各个服务&lt;/strong>以及&lt;strong>系统内部各个组件&lt;/strong>/&lt;strong>模块&lt;/strong>之前的通信，属于一种&lt;strong>中间件&lt;/strong>。&lt;/p>
&lt;p>随着分布式和微服务系统的发展，消息队列在系统设计中有了&lt;strong>更大的发挥&lt;/strong>空间，使用消息队列可以&lt;strong>降低系统耦合性&lt;/strong>、&lt;strong>实现任务异步&lt;/strong>、&lt;strong>有效地进行流量削峰&lt;/strong>，是分布式和微服务系统中重要的组件之一。&lt;/p>
&lt;h2 id="消息队列有什么用">
 消息队列有什么用？
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e6%9c%89%e4%bb%80%e4%b9%88%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;p>通常来说，使用消息队列能为我们的系统带来下面三点好处：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>通过异步处理提高系统性能（减少响应所需时间）。&lt;/strong>&lt;/li>
&lt;li>&lt;strong>削峰/限流&lt;/strong>&lt;/li>
&lt;li>&lt;strong>降低系统耦合性。&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>如果在面试的时候你被面试官问到这个问题的话，一般情况是你在你的&lt;strong>简历上涉及到消息队列&lt;/strong>这方面的内容，这个时候推荐&lt;strong>你结合你自己的项目&lt;/strong>来回答。&lt;/p>
&lt;h3 id="通过异步处理提高系统性能减少响应所需时间">
 通过异步处理提高系统性能（减少响应所需时间）
 &lt;a class="anchor" href="#%e9%80%9a%e8%bf%87%e5%bc%82%e6%ad%a5%e5%a4%84%e7%90%86%e6%8f%90%e9%ab%98%e7%b3%bb%e7%bb%9f%e6%80%a7%e8%83%bd%e5%87%8f%e5%b0%91%e5%93%8d%e5%ba%94%e6%89%80%e9%9c%80%e6%97%b6%e9%97%b4">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212142040821.png" alt="ly-20241212142040821" />&lt;/p>
&lt;p>将用户的请求数据&lt;strong>存储到消息队列之后就立即返回结果&lt;/strong>。随后，系统再对消息进行消费。&lt;/p>
&lt;p>因为用户请求数据写入消息队列之后就立即返回给用户了，但是请求数据在后续的&lt;strong>业务校验&lt;/strong>、&lt;strong>写数据库&lt;/strong>等操作中&lt;strong>可能失败&lt;/strong>。因此，&lt;strong>使用消息队列进行异步处理之后，需要适当修改业务流程进行配合&lt;/strong>，比如用户在提交订单之后，订单数据写入消息队列，&lt;strong>不能立即返回用户订单提交成功&lt;/strong>，需要在消息队列的订单&lt;strong>消费者进程真正处理完该订单之后&lt;/strong>，甚至&lt;strong>出库&lt;/strong>后，再通过电子邮件或短信通知用户订单成功，&lt;strong>以免交易纠纷&lt;/strong>。这就类似我们平时手机订火车票和电影票。&lt;/p>
&lt;h3 id="削峰限流">
 削峰/限流
 &lt;a class="anchor" href="#%e5%89%8a%e5%b3%b0%e9%99%90%e6%b5%81">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>先将短时间高并发产生的事务消息存储在消息队列中，然后后端服务再慢慢根据自己的能力去消费这些消息，这样就避免直接把后端服务打垮掉。&lt;/strong>&lt;/p>
&lt;p>举例：在电子商务一些&lt;strong>秒杀&lt;/strong>、&lt;strong>促销&lt;/strong>活动中，合理使用消息队列可以&lt;strong>有效抵御促销活动&lt;/strong>刚开始大量订单涌入对系统的冲击。如下图所示：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142040941.jpg" alt="削峰" />&lt;/p>
&lt;h3 id="降低系统耦合性">
 降低系统耦合性
 &lt;a class="anchor" href="#%e9%99%8d%e4%bd%8e%e7%b3%bb%e7%bb%9f%e8%80%a6%e5%90%88%e6%80%a7">#&lt;/a>
&lt;/h3>
&lt;p>使用消息队列还可以降低系统耦合性。我们知道如果&lt;strong>模块之间不存在直接调用&lt;/strong>，那么新增模块或者修改模块就对其他模块影响较小，这样系统的&lt;strong>可扩展性&lt;/strong>无疑更好一些。还是直接上图吧：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142041055.jpg" alt="解耦" />&lt;/p>
&lt;p>&lt;strong>生产者（客户端）发送消息到消息队列中去，接受者（服务端）处理消息&lt;/strong>，需要消费的系统直接去消息队列取消息进行消费即可而不需要和其他系统有耦合，这显然也提高了系统的扩展性。&lt;/p>
&lt;p>&lt;strong>消息队列使用发布-订阅模式工作，消息发送者（生产者）发布消息，一个或多个消息接受者（消费者）订阅消息。&lt;/strong> 从上图可以看到&lt;strong>消息发送者（生产者）和消息接受者（消费者）之间没有直接耦合&lt;/strong>，消息发送者将消息&lt;strong>发送至分布式消息队列即结束&lt;/strong>对消息的处理，消息接受者&lt;strong>从分布式消息队列获取该消息后进行后续处理&lt;/strong>，并不需要知道该消息从何而来。&lt;strong>对新增业务，只要对该类消息感兴趣，即可订阅该消息，对原有系统和业务没有任何影响，从而实现网站业务的可扩展性设计&lt;/strong>。&lt;/p>
&lt;p>消息接受者对消息进行过滤、处理、包装后，构造成一个新的消息类型，将消息&lt;strong>继续发送出去，等待其他消息接受者订阅该消息&lt;/strong>。因此&lt;strong>基于事件（消息对象）驱动的业务架构&lt;/strong>可以是一系列流程。&lt;/p>
&lt;p>另外，为了&lt;strong>避免消息队列服务器宕机&lt;/strong>造成消息丢失，会将成功发送到消息队列的消息&lt;strong>存储在消息生产者服务器上&lt;/strong>，等消息真正被消费者服务器处理后才删除消息。在消息队列服务器宕机后，&lt;strong>生产者服务器会选择分布式消息队列服务器集群中的其他服务器发布消息&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>备注：&lt;/strong> 不要认为消息队列只能利用发布-订阅模式工作，只不过在解耦这个特定业务环境下是使用发布-订阅模式的。除了&lt;strong>发布-订阅&lt;/strong>模式，还有&lt;strong>点对点订阅&lt;/strong>模式（&lt;strong>一个消息只有一个消费者&lt;/strong>），我们比较常用的是发布-订阅模式。另外，这两种消息模型是 JMS 提供的，AMQP 协议还提供了 5 种消息模型。&lt;/p>
&lt;h2 id="使用消息队列哪些问题">
 使用消息队列哪些问题？
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e6%b6%88%e6%81%af%e9%98%9f%e5%88%97%e5%93%aa%e4%ba%9b%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>系统可用性降低：&lt;/strong> 系统可用性在某种程度上降低，为什么这样说呢？在加入 MQ 之前，你&lt;strong>不用考虑消息丢失或者说 MQ 挂掉&lt;/strong>等等的情况，但是，引入 MQ 之后你就需要去考虑了！&lt;/li>
&lt;li>&lt;strong>系统复杂性提高：&lt;/strong> 加入 MQ 之后，你需要保证消息没有被&lt;strong>重复消费&lt;/strong>、处理&lt;strong>消息丢失&lt;/strong>的情况、保证&lt;strong>消息传递&lt;/strong>的顺序性等等问题！&lt;/li>
&lt;li>&lt;strong>一致性问题：&lt;/strong> 我上面讲了消息队列可以实现&lt;strong>异步&lt;/strong>，消息队列带来的异步确实可以提高系统响应速度。但是，&lt;strong>万一消息的真正消费者并没有正确消费消息&lt;/strong>怎么办？这样就会导致数据不一致的情况了!&lt;/li>
&lt;/ul>
&lt;h2 id="jms-和-amqp">
 JMS 和 AMQP
 &lt;a class="anchor" href="#jms-%e5%92%8c-amqp">#&lt;/a>
&lt;/h2>
&lt;h3 id="jms-是什么">
 JMS 是什么？
 &lt;a class="anchor" href="#jms-%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h3>
&lt;p>JMS（JAVA Message Service,java 消息服务）是 java 的消息服务，JMS 的客户端之间可以通过 JMS 服务进行异步的消息传输。&lt;strong>JMS（JAVA Message Service，Java 消息服务）API 是一个消息服务的标准或者说是规范&lt;/strong>，允许应用程序组件基于 JavaEE 平台创建、发送、接收和读取消息。它使分布式通信耦合度更低，消息服务更加可靠以及异步性。&lt;/p></description></item><item><title>cdn</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/ly02ly_cdn/</link><pubDate>Tue, 14 Feb 2023 16:57:38 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/ly02ly_cdn/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="什么是-cdn-">
 什么是 CDN ？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-cdn-">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>CDN&lt;/strong> 全称是 Content Delivery Network/&lt;strong>Content Distribution Network&lt;/strong>，翻译过的意思是 &lt;strong>内容分发网络&lt;/strong> 。&lt;/p>
&lt;p>我们可以将内容分发网络拆开来看：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>内容&lt;/strong> ：指的是&lt;strong>静态资源&lt;/strong>比如图片、视频、文档、JS、CSS、HTML。&lt;/li>
&lt;li>&lt;strong>分发网络&lt;/strong> ：指的是将这些静态资源&lt;strong>分发到位于多个不同的地理位置机房中的服务器&lt;/strong>上，这样，就可以实现静态资源的&lt;strong>就近访问&lt;/strong>比如北京的用户直接访问北京机房的数据。&lt;/li>
&lt;/ul>
&lt;p>所以，简单来说，&lt;strong>CDN 就是将静态资源分发到多个不同的地方以实现就近访问，进而加快静态资源的访问速度，减轻服务器以及带宽的负担。&lt;/strong>&lt;/p>
&lt;p>类似于京东建立的庞大的仓储运输体系，京东物流在全国拥有非常多的仓库，仓储网络几乎覆盖全国所有区县。这样的话，用户下单的第一时间，商品就从距离用户最近的仓库，直接发往对应的配送站，再由京东小哥送到你家。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142039678.jpg" alt="京东仓配系统" />&lt;/p>
&lt;p>你可以将 CDN 看作是服务上一层的特殊缓存服务，分布在全国各地，主要用来处理静态资源的请求。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142039917.jpg" alt="CDN 简易示意图" />&lt;/p>
&lt;p>我们经常拿&lt;strong>全站加速&lt;/strong>和&lt;strong>内容分发&lt;/strong>网络做对比，不要把两者搞混了！全站加速（不同云服务商叫法不同，腾讯云叫 ECDN、阿里云叫 DCDN）既可以加速&lt;strong>静态资源&lt;/strong>又可以加速&lt;strong>动态资源&lt;/strong>，**内容分发网络（CDN）**主要针对的是 &lt;strong>静态资源&lt;/strong> 。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142040034.png" alt="ly-20241212142040034" />&lt;/p>
&lt;p>绝大部分公司都会在项目开发中交使用 &lt;strong>CDN 服务&lt;/strong>，但很少会有自建 CDN 服务的公司。基于&lt;strong>成本、稳定性和易用性&lt;/strong>考虑，建议&lt;strong>直接选择专业的云厂商&lt;/strong>（比如阿里云、腾讯云、华为云、青云）或者 CDN 厂商（比如网宿、蓝汛）提供的开箱即用的 CDN 服务。&lt;/p>
&lt;p>很多朋友可能要问了：&lt;strong>既然是就近访问，为什么不直接将服务部署在多个不同的地方呢？&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>成本太高&lt;/strong>，需要部署多份相同的服务。&lt;/li>
&lt;li>静态资源通常占用空间比较大且经常会被访问到，如果直接使用&lt;strong>服务器或者缓存&lt;/strong>来处理静态资源请求的话，对&lt;strong>系统资源消耗非常大&lt;/strong>，可能会影响到系统其他服务的正常运行。&lt;/li>
&lt;/ul>
&lt;p>同一个服务在在多个不同的地方部署多份（比如&lt;strong>同城灾备&lt;/strong>、&lt;strong>异地灾备&lt;/strong>、&lt;strong>同城多活&lt;/strong>、&lt;strong>异地多活&lt;/strong>）是为了实现系统的高可用而不是就近访问。&lt;/p>
&lt;h2 id="cdn-工作原理是什么">
 CDN 工作原理是什么？
 &lt;a class="anchor" href="#cdn-%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h2>
&lt;p>搞懂下面 3 个问题也就搞懂了 CDN 的工作原理：&lt;/p>
&lt;ol>
&lt;li>静态资源是如何被缓存到 CDN 节点中的？&lt;/li>
&lt;li>如何找到最合适的 CDN 节点？&lt;/li>
&lt;li>如何防止静态资源被盗用？&lt;/li>
&lt;/ol>
&lt;h3 id="静态资源是如何被缓存到-cdn-节点中的">
 静态资源是如何被缓存到 CDN 节点中的？
 &lt;a class="anchor" href="#%e9%9d%99%e6%80%81%e8%b5%84%e6%ba%90%e6%98%af%e5%a6%82%e4%bd%95%e8%a2%ab%e7%bc%93%e5%ad%98%e5%88%b0-cdn-%e8%8a%82%e7%82%b9%e4%b8%ad%e7%9a%84">#&lt;/a>
&lt;/h3>
&lt;p>你可以通过&lt;strong>预热&lt;/strong>的方式将源站的资源同步到 CDN 的节点中。这样的话，用户&lt;strong>首次请求资源&lt;/strong>可以直接从 CDN 节点中取，无需回源。这样可以降低源站压力，提升用户体验。&lt;/p></description></item><item><title>数据库读写分离&amp;分库分表详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/ly01ly_read-and-write-separation-and-library-subtable/</link><pubDate>Tue, 14 Feb 2023 16:38:42 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyely_high-performance/ly01ly_read-and-write-separation-and-library-subtable/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="读写分离">
 读写分离
 &lt;a class="anchor" href="#%e8%af%bb%e5%86%99%e5%88%86%e7%a6%bb">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是读写分离">
 什么是读写分离？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e8%af%bb%e5%86%99%e5%88%86%e7%a6%bb">#&lt;/a>
&lt;/h3>
&lt;p>见名思意，根据读写分离的名字，我们就可以知道：&lt;strong>读写分离主要是为了将对数据库的读写操作分散到不同的数据库节点上。&lt;/strong> 这样的话，就能够&lt;strong>小幅提升写&lt;/strong>性能，&lt;strong>大幅提升读&lt;/strong>性能。&lt;/p>
&lt;p>我简单画了一张图来帮助不太清楚读写分离的小伙伴理解。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142038662.png" alt="ly-20241212142038662" />&lt;/p>
&lt;p>一般情况下，我们都会选择&lt;strong>一主多从&lt;/strong>，也就是一台&lt;strong>主数据库负责写&lt;/strong>，其他的&lt;strong>从数据库负责读&lt;/strong>。主库和从库之间会进行数据&lt;strong>同步&lt;/strong>，以保证&lt;strong>从库&lt;/strong>中数据的&lt;strong>准确性&lt;/strong>。这样的架构实现起来比较&lt;strong>简单&lt;/strong>，并且也&lt;strong>符合系统的写少读多&lt;/strong>的特点。&lt;/p>
&lt;h3 id="读写分离会带来什么问题如何解决">
 读写分离会带来什么问题？如何解决？
 &lt;a class="anchor" href="#%e8%af%bb%e5%86%99%e5%88%86%e7%a6%bb%e4%bc%9a%e5%b8%a6%e6%9d%a5%e4%bb%80%e4%b9%88%e9%97%ae%e9%a2%98%e5%a6%82%e4%bd%95%e8%a7%a3%e5%86%b3">#&lt;/a>
&lt;/h3>
&lt;p>读写分离对于提升数据库的并发非常有效，但是，同时也会引来一个问题：主库和从库的数据存在延迟，比如你写完主库之后，主库的数据同步到从库是需要时间的，这个时间差就导致了主库和从库的数据不一致性问题。这也就是我们经常说的 &lt;strong>主从同步延迟&lt;/strong> 。&lt;/p>
&lt;p>主从同步延迟问题的解决，没有特别好的一种方案（可能是我太菜了，欢迎评论区补充）。你可以根据自己的业务场景，参考一下下面几种解决办法。&lt;/p>
&lt;p>&lt;strong>1.强制将读请求路由到主库处理。&lt;/strong>&lt;/p>
&lt;p>既然你从库的数据过期了，那我就&lt;strong>直接从主库读取&lt;/strong>嘛！这种方案虽然会增加主库的压力，但是，实现起来比较简单，也是我了解到的使用最多的一种方式。&lt;/p>
&lt;p>比如 &lt;strong>&lt;code>Sharding-JDBC&lt;/code>&lt;/strong> 就是采用的这种方案。通过使用 Sharding-JDBC 的 &lt;strong>&lt;code>HintManager&lt;/code> 分片键值管理器&lt;/strong>，我们可以&lt;strong>强制使用主库&lt;/strong>。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>HintManager hintManager &lt;span style="color:#f92672">=&lt;/span> HintManager.&lt;span style="color:#a6e22e">getInstance&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hintManager.&lt;span style="color:#a6e22e">setMasterRouteOnly&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 继续JDBC操作&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>对于这种方案，你可以将那些必须获取最新数据的读请求都交给主库处理。&lt;/p>
&lt;p>&lt;strong>2.延迟读取。&lt;/strong>&lt;/p>
&lt;p>还有一些朋友肯定会想既然主从同步存在延迟，那我就在&lt;strong>延迟之后读取&lt;/strong>啊，比如主从同步延迟 0.5s,那我就 1s 之后再读取数据。这样多方便啊！方便是方便，但是也很扯淡。&lt;/p>
&lt;p>不过，如果你是这样设计业务流程就会好很多：对于一些&lt;strong>对数据比较敏感&lt;/strong>的场景，你可以在&lt;strong>完成写请求之后&lt;/strong>，&lt;strong>避免立即&lt;/strong>进行请求操作。比如你支付成功之后，跳转到一个支付成功的页面，当你点击返回之后才返回自己的账户。&lt;/p>
&lt;p>另外，
&lt;a target="_blank" href="https://time.geekbang.org/column/intro/100020801?code=ieY8HeRSlDsFbuRtggbBQGxdTh-1jMASqEIeqzHAKrI%3D">《MySQL 实战 45 讲》&lt;/a>这个专栏中的
&lt;a target="_blank" href="https://time.geekbang.org/column/article/77636">《读写分离有哪些坑？》&lt;/a>这篇文章还介绍了很多其他比较实际的解决办法，感兴趣的小伙伴可以自行研究一下。&lt;/p>
&lt;h3 id="如何实现读写分离">
 如何实现读写分离？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e5%ae%9e%e7%8e%b0%e8%af%bb%e5%86%99%e5%88%86%e7%a6%bb">#&lt;/a>
&lt;/h3>
&lt;p>不论是使用哪一种读写分离具体的实现方案，想要&lt;strong>实现读写分离&lt;/strong>一般包含如下几步：&lt;/p>
&lt;ol>
&lt;li>部署多台数据库，选择&lt;strong>其中的一台作为主&lt;/strong>数据库，&lt;strong>其他&lt;/strong>的一台或者多台&lt;strong>作为从&lt;/strong>数据库。&lt;/li>
&lt;li>&lt;strong>保证&lt;/strong>主数据库和从数据库之间的数据是&lt;strong>实时同步&lt;/strong>的，这个过程也就是我们常说的&lt;strong>主从复制&lt;/strong>。&lt;/li>
&lt;li>系统将&lt;strong>写请求交给主&lt;/strong>数据库处理，读请求交给从数据库处理。[ 使用上 ]&lt;/li>
&lt;/ol>
&lt;p>落实到项目本身的话，常用的方式有两种：&lt;/p>
&lt;p>&lt;strong>1.代理方式&lt;/strong>&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142038906.png" alt="ly-20241212142038906" />&lt;/p>
&lt;p>我们可以在&lt;strong>应用&lt;/strong>和&lt;strong>数据&lt;/strong>中间&lt;strong>加了一个代理层&lt;/strong>。&lt;strong>应用&lt;/strong>程序所有的&lt;strong>数据请求都交给代理层&lt;/strong>处理，代理层负责&lt;strong>分离读写&lt;/strong>请求，将它们&lt;strong>路由到对应的数据库&lt;/strong>中。&lt;/p>
&lt;p>提供类似功能的中间件有 &lt;strong>MySQL Router&lt;/strong>（官方）、&lt;strong>Atlas&lt;/strong>（基于 MySQL Proxy）、&lt;strong>Maxscale&lt;/strong>、&lt;strong>MyCat&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>2.组件方式&lt;/strong>&lt;/p>
&lt;p>在这种方式中，我们可以通过引入第三方组件来帮助我们读写请求。&lt;/p>
&lt;p>这也是我&lt;strong>比较推荐&lt;/strong>的一种方式。这种方式目前在各种互联网公司中&lt;strong>用的最多&lt;/strong>的，相关的实际的案例也非常多。如果你要采用这种方式的话，推荐使用 &lt;strong>&lt;code>sharding-jdbc&lt;/code>&lt;/strong> ，&lt;strong>直接引入 jar&lt;/strong> 包即可使用，非常方便。同时，也&lt;strong>节省了很多运维的成本&lt;/strong>。&lt;/p></description></item><item><title>zookeeper实战</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly08ly_zookeeper-in-action/</link><pubDate>Tue, 14 Feb 2023 10:45:39 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly08ly_zookeeper-in-action/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-前言">
 1. 前言
 &lt;a class="anchor" href="#1-%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h2>
&lt;p>这篇文章简单给演示一下 ZooKeeper 常见命令的使用以及 ZooKeeper Java客户端 Curator 的基本使用。介绍到的内容都是最基本的操作，能满足日常工作的基本需要。&lt;/p>
&lt;p>如果文章有任何需要改善和完善的地方，欢迎在评论区指出，共同进步！&lt;/p>
&lt;h2 id="2-zookeeper-安装和使用">
 2. ZooKeeper 安装和使用
 &lt;a class="anchor" href="#2-zookeeper-%e5%ae%89%e8%a3%85%e5%92%8c%e4%bd%bf%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;h3 id="21-使用docker-安装-zookeeper">
 2.1. 使用Docker 安装 zookeeper
 &lt;a class="anchor" href="#21-%e4%bd%bf%e7%94%a8docker-%e5%ae%89%e8%a3%85-zookeeper">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>a.使用 Docker 下载 ZooKeeper&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker pull zookeeper:3.5.8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>b.运行 ZooKeeper&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker run -d --name zookeeper -p 2181:2181 zookeeper:3.5.8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="22-连接-zookeeper-服务">
 2.2. 连接 ZooKeeper 服务
 &lt;a class="anchor" href="#22-%e8%bf%9e%e6%8e%a5-zookeeper-%e6%9c%8d%e5%8a%a1">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>a.进入ZooKeeper容器中&lt;/strong>&lt;/p>
&lt;p>先使用 &lt;code>docker ps&lt;/code> 查看 ZooKeeper 的 ContainerID，然后使用 &lt;code>docker exec -it ContainerID /bin/bash&lt;/code> 命令进入容器中。&lt;/p>
&lt;p>&lt;strong>b.先进入 bin 目录,然后通过 &lt;code>./zkCli.sh -server 127.0.0.1:2181&lt;/code>命令连接ZooKeeper 服务&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>root@eaf70fc620cb:/apache-zookeeper-3.5.8-bin# cd bin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果你看到控制台成功打印出如下信息的话，说明你已经成功连接 ZooKeeper 服务。&lt;/p></description></item><item><title>zookeeper进阶</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly07ly_zookeeper-plus/</link><pubDate>Mon, 13 Feb 2023 17:30:07 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly07ly_zookeeper-plus/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>
&lt;a target="_blank" href="https://juejin.im/user/5c33853851882525ea106810">FrancisQ&lt;/a> 投稿。&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-好久不见">
 1. 好久不见
 &lt;a class="anchor" href="#1-%e5%a5%bd%e4%b9%85%e4%b8%8d%e8%a7%81">#&lt;/a>
&lt;/h2>
&lt;p>离上一篇文章的发布也快一个月了，想想已经快一个月没写东西了，其中可能有期末考试、课程设计和驾照考试，但这都不是借口！&lt;/p>
&lt;p>一到冬天就懒的不行，望广大掘友督促我🙄🙄✍️✍️。&lt;/p>
&lt;blockquote>
&lt;p>文章很长，先赞后看，养成习惯。❤️ 🧡 💛 💚 💙 💜&lt;/p>
&lt;/blockquote>
&lt;h2 id="2-什么是zookeeper">
 2. 什么是ZooKeeper
 &lt;a class="anchor" href="#2-%e4%bb%80%e4%b9%88%e6%98%afzookeeper">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>ZooKeeper&lt;/code> 由 &lt;code>Yahoo&lt;/code> 开发，后来捐赠给了 &lt;code>Apache&lt;/code> ，现已成为 &lt;code>Apache&lt;/code> 顶级项目。&lt;code>ZooKeeper&lt;/code> 是一个开源的&lt;strong>分布式应用程序协调服务器&lt;/strong>，其为&lt;strong>分布式系统提供一致性&lt;/strong>服务。其一致性是通过基于 &lt;code>Paxos&lt;/code> 算法的 &lt;code>ZAB&lt;/code> 协议完成的。其主要功能包括：&lt;strong>配置维护&lt;/strong>、&lt;strong>分布式同步&lt;/strong>、&lt;strong>集群管理&lt;/strong>、&lt;strong>分布式事务&lt;/strong>等。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142035025.png" alt="ly-20241212142035025" />&lt;/p>
&lt;p>简单来说， &lt;code>ZooKeeper&lt;/code> 是一个 &lt;strong>分布式协调服务框架&lt;/strong> 。分布式？协调服务？这啥玩意？🤔🤔&lt;/p>
&lt;p>其实解释到分布式这个概念的时候，我发现有些同学并不是能把 &lt;strong>分布式和集群&lt;/strong> 这两个概念很好的理解透。前段时间有同学和我探讨起分布式的东西，他说分布式不就是加机器吗？一台机器不够用再加一台抗压呗。当然加机器这种说法也无可厚非，你一个分布式系统必定涉及到多个机器，但是你别忘了，计算机学科中还有一个相似的概念—— &lt;code>Cluster&lt;/code> ，集群不也是加机器吗？但是 &lt;strong>集群 和 分布式&lt;/strong> 其实就是两个&lt;strong>完全不同的概念&lt;/strong>。&lt;/p>
&lt;p>比如，我现在有一个秒杀服务，并发量太大单机系统承受不住，那我加几台服务器也 &lt;strong>一样&lt;/strong> 提供秒杀服务，这个时候就是 &lt;strong>&lt;code>Cluster&lt;/code> 集群&lt;/strong> 。&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://camo.githubusercontent.com/87c9624f298e404de4aa6387af959870f61d9461a2a60de3a31f5ee47385360d/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f696d675f636f6e766572742f66666362303830656236366632343266666364386432303437613766343661612e706e67">&lt;img src="img/ly-20241212142035275.jpg" alt="cluster" />&lt;/a>&lt;/p>
&lt;p>但是，我现在换一种方式，我将一个秒杀服务 &lt;strong>拆分成多个子服务&lt;/strong> ，比如创建订单服务，增加积分服务，扣优惠券服务等等，&lt;strong>然后我将这些子服务都部署在不同的服务器上&lt;/strong> ，这个时候就是 &lt;strong>&lt;code>Distributed&lt;/code> 分布式&lt;/strong> 。&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://camo.githubusercontent.com/d2c1c6b9feb20352ecfa8182cdb3058d7dd3ffeec287cc66286461ca34226323/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f696d675f636f6e766572742f30373139316633386161393437623030373565356330613661303139613131642e706e67">&lt;img src="img/ly-20241212142035394.jpg" alt="distributed" />&lt;/a>&lt;/p>
&lt;p>而我为什么反驳同学所说的分布式就是加机器呢？因为我认为加机器更加适用于构建&lt;strong>集群&lt;/strong>，因为它真是只有加机器。而对于分布式来说，你首先需要将&lt;strong>业务进行拆分&lt;/strong>，然后&lt;strong>再加机器&lt;/strong>（不仅仅是加机器那么简单），同时你还要去解决&lt;strong>分布式带来的一系列问题&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142035517.jpg" alt="img" />&lt;/p>
&lt;p>比如各个分布式组件&lt;strong>如何协调&lt;/strong>起来，如何&lt;strong>减少&lt;/strong>各个系统之间的&lt;strong>耦合度&lt;/strong>，&lt;strong>分布式事务&lt;/strong>的处理，如何去&lt;strong>配置整个分布式系统&lt;/strong>等等。&lt;code>ZooKeeper&lt;/code> 主要就是解决这些问题的。&lt;/p>
&lt;h2 id="3-一致性问题">
 3. 一致性问题
 &lt;a class="anchor" href="#3-%e4%b8%80%e8%87%b4%e6%80%a7%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142035639.png" alt="image.png" />&lt;/p></description></item><item><title>zookeeper介绍</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly06ly_zookeeper-intro/</link><pubDate>Mon, 13 Feb 2023 15:59:20 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly06ly_zookeeper-intro/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-前言">
 1. 前言
 &lt;a class="anchor" href="#1-%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h2>
&lt;p>相信大家对 ZooKeeper 应该不算陌生。但是你真的了解 ZooKeeper 到底有啥用不？如果别人/面试官让你给他讲讲对于 ZooKeeper 的认识，你能回答到什么地步呢？&lt;/p>
&lt;p>拿我自己来说吧！我本人曾经使用 Dubbo 来做分布式项目的时候，使用了 ZooKeeper 作为&lt;strong>注册中心&lt;/strong>。为了保证分布式系统能够&lt;strong>同步访问某个资源&lt;/strong>，我还使用 ZooKeeper 做过&lt;strong>分布式锁&lt;/strong>。另外，我在学习 Kafka 的时候，知道 &lt;strong>Kafka&lt;/strong> 很多功能的实现&lt;strong>依赖了 ZooKeeper&lt;/strong>。&lt;/p>
&lt;p>前几天，总结项目经验的时候，我突然问自己 ZooKeeper 到底是个什么东西？想了半天，脑海中只是简单的能浮现出几句话：&lt;/p>
&lt;ol>
&lt;li>ZooKeeper 可以被用作&lt;strong>注册中心、分布式锁&lt;/strong>；&lt;/li>
&lt;li>ZooKeeper 是 &lt;strong>Hadoop 生态系统&lt;/strong>的一员；&lt;/li>
&lt;li>构建 ZooKeeper 集群的时候，使用的服务器最好是&lt;strong>奇数台&lt;/strong>。&lt;/li>
&lt;/ol>
&lt;p>由此可见，我对于 ZooKeeper 的理解仅仅是停留在了表面。&lt;/p>
&lt;p>所以，通过本文，希望带大家稍微详细的了解一下 ZooKeeper 。如果没有学过 ZooKeeper ，那么本文将会是你进入 ZooKeeper 大门的垫脚砖。如果你已经接触过 ZooKeeper ，那么本文将带你回顾一下 ZooKeeper 的一些基础概念。&lt;/p>
&lt;p>另外，本文不光会涉及到 ZooKeeper 的一些概念，后面的文章会介绍到 ZooKeeper 常见命令的使用以及使用 Apache Curator 作为 ZooKeeper 的客户端。&lt;/p>
&lt;p>&lt;em>如果文章有任何需要改善和完善的地方，欢迎在评论区指出，共同进步！&lt;/em>&lt;/p>
&lt;h2 id="2-zookeeper-介绍">
 2. ZooKeeper 介绍
 &lt;a class="anchor" href="#2-zookeeper-%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;h3 id="21-zookeeper-由来">
 2.1. ZooKeeper 由来
 &lt;a class="anchor" href="#21-zookeeper-%e7%94%b1%e6%9d%a5">#&lt;/a>
&lt;/h3>
&lt;p>正式介绍 ZooKeeper 之前，我们先来看看 ZooKeeper 的由来，还挺有意思的。&lt;/p></description></item><item><title>rpc_http</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly04ly_rpc-http/</link><pubDate>Sat, 11 Feb 2023 19:59:58 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly04ly_rpc-http/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212142032772.png" alt="" />&lt;/p>
&lt;p>我正在参与掘金技术社区创作者签约计划招募活动，
&lt;a target="_blank" href="https://juejin.cn/post/7112770927082864653">点击链接报名投稿&lt;/a>。&lt;/p>
&lt;p>我想起了我刚工作的时候，第一次接触RPC协议，当时就很懵，我HTTP协议用的好好的，为什么还要用RPC协议？&lt;/p>
&lt;p>于是就到网上去搜。&lt;/p>
&lt;p>不少解释显得非常官方，我相信大家在各种平台上也都看到过，解释了又好像没解释，都在&lt;strong>用一个我们不认识的概念去解释另外一个我们不认识的概念&lt;/strong>，懂的人不需要看，不懂的人看了还是不懂。&lt;/p>
&lt;p>这种看了，又好像没看的感觉，云里雾里的很难受，&lt;strong>我懂&lt;/strong>。&lt;/p>
&lt;p>为了避免大家有强烈的&lt;strong>审丑疲劳&lt;/strong>，今天我们来尝试重新换个方式讲一讲。&lt;/p>
&lt;h3 id="从tcp聊起">
 从TCP聊起
 &lt;a class="anchor" href="#%e4%bb%8etcp%e8%81%8a%e8%b5%b7">#&lt;/a>
&lt;/h3>
&lt;p>作为一个程序员，假设我们需要在A电脑的进程发一段数据到B电脑的进程，我们一般会在代码里使用socket进行编程。&lt;/p>
&lt;p>这时候，我们可选项一般也就&lt;strong>TCP和UDP二选一。TCP可靠，UDP不可靠。&lt;/strong> 除非是马总这种神级程序员（早期QQ大量使用UDP），否则，只要稍微对可靠性有些要求，普通人一般无脑选TCP就对了。&lt;/p>
&lt;p>类似下面这样。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">socket(AF_INET,SOCK_STREAM,0);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">复制代码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中&lt;code>SOCK_STREAM&lt;/code>，是指使用&lt;strong>字节流&lt;/strong>传输数据，说白了就是&lt;strong>TCP协议&lt;/strong>。&lt;/p>
&lt;p>在定义了socket之后，我们就可以愉快的对这个socket进行操作，比如用&lt;code>bind()&lt;/code>绑定IP端口，用&lt;code>connect()&lt;/code>发起建连。&lt;/p>
&lt;p>&lt;img src="img/51d1bda27fea39bd96ed660ee4af549d_MD5.gif" alt="握手建立连接流程" />&lt;/p>
&lt;p>在连接建立之后，我们就可以使用&lt;code>send()&lt;/code>发送数据，&lt;code>recv()&lt;/code>接收数据。&lt;/p>
&lt;p>光这样一个纯裸的TCP连接，就可以做到收发数据了，那是不是就够了？&lt;/p>
&lt;p>不行，这么用会有问题。&lt;/p>
&lt;h3 id="使用纯裸tcp会有什么问题">
 使用纯裸TCP会有什么问题
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e7%ba%af%e8%a3%b8tcp%e4%bc%9a%e6%9c%89%e4%bb%80%e4%b9%88%e9%97%ae%e9%a2%98">#&lt;/a>
&lt;/h3>
&lt;p>八股文常背，TCP是有三个特点，&lt;strong>面向连接&lt;/strong>、&lt;strong>可靠&lt;/strong>、基于&lt;strong>字节流&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="img/9b2a2a9eb7998867213b85c601e20513_MD5.webp" alt="TCP是什么" />&lt;/p>
&lt;p>这三个特点真的概括的&lt;strong>非常精辟&lt;/strong>，这个八股文我们没白背。&lt;/p>
&lt;p>每个特点展开都能聊一篇文章，而今天我们需要关注的是&lt;strong>基于字节流&lt;/strong>这一点。&lt;/p>
&lt;p>字节流可以理解为一个双向的通道里流淌的数据，这个&lt;strong>数据&lt;/strong>其实就是我们常说的二进制数据，简单来说就是一大堆 &lt;strong>01 串&lt;/strong>。纯裸TCP收发的这些 01 串之间是&lt;strong>没有任何边界&lt;/strong>的，你根本不知道到哪个地方才算一条完整消息。
&lt;img src="img/ly-20241212142033022.png" alt="" />&lt;/p>
&lt;p>正因为这个没有&lt;strong>任何边界&lt;/strong>的特点，所以当我们选择使用TCP发送 &lt;strong>&amp;ldquo;夏洛&amp;quot;和&amp;quot;特烦恼&amp;rdquo;&lt;/strong> 的时候，接收端收到的就是 &lt;strong>&amp;ldquo;夏洛特烦恼&amp;rdquo;&lt;/strong> ，这时候接收端没发区分你是想要表达 &lt;strong>&amp;ldquo;夏洛&amp;rdquo;+&amp;ldquo;特烦恼&amp;rdquo;&lt;/strong> 还是 &lt;strong>&amp;ldquo;夏洛特&amp;rdquo;+&amp;ldquo;烦恼&amp;rdquo;&lt;/strong> 。&lt;/p>
&lt;p>&lt;img src="img/babad254069eade7c0df5d9db1635c92_MD5.webp" alt="消息对比" />&lt;/p>
&lt;p>这就是所谓的&lt;strong>粘包问题&lt;/strong>，之前也写过一篇专门的
&lt;a target="_blank" href="https://link.juejin.cn/?target=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F0-YBxU1cSbDdzcZEZjmQYA">文章&lt;/a>聊过这个问题。&lt;/p>
&lt;p>说这个的目的是为了告诉大家，纯裸TCP是不能直接拿来用的，你需要在这个基础上加入一些&lt;strong>自定义的规则&lt;/strong>，用于区分&lt;strong>消息边界&lt;/strong>。&lt;/p>
&lt;p>于是我们会把每条要发送的数据都包装一下，比如加入&lt;strong>消息头&lt;/strong>，&lt;strong>消息头里写清楚一个完整的包长度是多少&lt;/strong>，根据这个长度可以继续接收数据，截取出来后它们就是我们真正要传输的&lt;strong>消息体&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="img/7f2c3dd6224e63c56e4977708244e594_MD5.webp" alt="消息边界长度标志" />&lt;/p>
&lt;p>而这里头提到的&lt;strong>消息头&lt;/strong>，还可以放各种东西，比如消息体是否被压缩过和消息体格式之类的，只要上下游都约定好了，互相都认就可以了，这就是所谓的&lt;strong>协议。&lt;/strong>&lt;/p>
&lt;p>每个使用TCP的项目都可能会定义一套类似这样的协议解析标准，他们可能&lt;strong>有区别，但原理都类似&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>于是基于TCP，就衍生了非常多的协议，比如HTTP和RPC。&lt;/strong>&lt;/p>
&lt;h3 id="http和rpc">
 HTTP和RPC
 &lt;a class="anchor" href="#http%e5%92%8crpc">#&lt;/a>
&lt;/h3>
&lt;p>我们回过头来看网络的分层图。&lt;/p>
&lt;p>&lt;img src="img/dea756ded9c20f2a06905d73e33e08c9_MD5.webp" alt="四层网络协议" />&lt;/p>
&lt;p>&lt;strong>TCP是传输层的协议&lt;/strong>，而基于TCP造出来的HTTP和&lt;strong>各类&lt;/strong>RPC协议，它们都只是定义了不同消息格式的&lt;strong>应用层协议&lt;/strong>而已。&lt;/p>
&lt;p>&lt;strong>HTTP&lt;/strong>协议（&lt;strong>H&lt;/strong>yper &lt;strong>T&lt;/strong>ext &lt;strong>T&lt;/strong>ransfer &lt;strong>P&lt;/strong>rotocol），又叫做&lt;strong>超文本传输协议&lt;/strong>。我们用的比较多，平时上网在浏览器上敲个网址就能访问网页，这里用到的就是HTTP协议。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142033146.png" alt="" />&lt;/p></description></item><item><title>rpc基础及面试题</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly05ly_rpc-intro/</link><pubDate>Sat, 11 Feb 2023 19:41:34 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly05ly_rpc-intro/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>简单介绍一下 RPC 相关的基础概念。&lt;/p>
&lt;h2 id="何为-rpc">
 何为 RPC?
 &lt;a class="anchor" href="#%e4%bd%95%e4%b8%ba-rpc">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>RPC（Remote Procedure Call）&lt;/strong> 即远程过程调用，通过名字我们就能看出 RPC 关注的是远程调用而非本地调用。&lt;/p>
&lt;p>&lt;strong>为什么要 RPC ？&lt;/strong> 因为，两个不同的服务器上的服务提供的方法不在一个内存空间，所以，需要通过网络编程才能传递方法调用所需要的参数。并且，方法调用的结果也需要通过网络编程来接收。但是，如果我们自己手动网络编程来实现这个调用过程的话工作量是非常大的，因为，我们需要考虑底层传输方式（TCP还是UDP）、序列化方式等等方面。&lt;/p>
&lt;p>&lt;strong>RPC 能帮助我们做什么呢？&lt;/strong> 简单来说，通过 RPC 可以帮助我们调用远程计算机上某个服务的方法，这个过程就像调用本地方法一样简单。并且！我们不需要了解底层网络编程的具体细节。&lt;/p>
&lt;p>举个例子：两个不同的服务 A、B 部署在两台不同的机器上，服务 A 如果想要调用服务 B 中的某个方法的话就可以通过 RPC 来做。&lt;/p>
&lt;p>一言蔽之：&lt;strong>RPC 的出现就是为了让你调用远程方法像调用本地方法一样简单。&lt;/strong>&lt;/p>
&lt;h2 id="rpc-的原理是什么">
 RPC 的原理是什么?
 &lt;a class="anchor" href="#rpc-%e7%9a%84%e5%8e%9f%e7%90%86%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h2>
&lt;p>为了能够帮助小伙伴们理解 RPC 原理，我们可以将整个 RPC的 核心功能看作是下面👇 5 个部分实现的：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>客户端（服务消费端）&lt;/strong> ：调用远程方法的一端。&lt;/li>
&lt;li>&lt;strong>客户端 Stub（桩）&lt;/strong> ： 这其实就是一代理类。代理类主要做的事情很简单，就是把你调用方法、类、方法参数等信息传递到服务端。&lt;/li>
&lt;li>&lt;strong>网络传输&lt;/strong> ： 网络传输就是你要把你调用的方法的信息比如说参数啊这些东西传输到服务端，然后服务端执行完之后再把返回结果通过网络传输给你传输回来。网络传输的实现方式有很多种比如最近基本的 Socket或者性能以及封装更加优秀的 Netty（推荐）。&lt;/li>
&lt;li>&lt;strong>服务端 Stub（桩）&lt;/strong> ：这个桩就不是代理类了。我觉得理解为桩实际不太好，大家注意一下就好。这里的服务端 Stub 实际指的就是接收到客户端执行方法的请求后，去指定对应的方法然后返回结果给客户端的类。&lt;/li>
&lt;li>&lt;strong>服务端（服务提供端）&lt;/strong> ：提供远程方法的一端。&lt;/li>
&lt;/ol>
&lt;p>具体原理图如下，后面我会串起来将整个RPC的过程给大家说一下。&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://camo.githubusercontent.com/5e8198844ec97b718219e83fec147089c73daadc5c987752787bfa4d4d538c24/68747470733a2f2f6d792d626c6f672d746f2d7573652e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f31382d31322d362f33373334353835312e6a7067">&lt;img src="img/ly-20241212142033652.jpg" alt="RPC原理图" />&lt;/a>&lt;/p>
&lt;ol>
&lt;li>服务消费端（client）以本地调用的方式调用远程服务；&lt;/li>
&lt;li>客户端 Stub（client stub） 接收到调用后负责将方法、参数等组装成能够进行网络传输的消息体（序列化）：&lt;code>RpcRequest&lt;/code>；&lt;/li>
&lt;li>客户端 Stub（client stub） 找到远程服务的地址，并将消息发送到服务提供端；&lt;/li>
&lt;li>服务端 Stub（桩）收到消息将消息反序列化为Java对象: &lt;code>RpcRequest&lt;/code>；&lt;/li>
&lt;li>服务端 Stub（桩）根据&lt;code>RpcRequest&lt;/code>中的类、方法、方法参数等信息调用本地的方法；&lt;/li>
&lt;li>服务端 Stub（桩）得到方法执行结果并将组装成能够进行网络传输的消息体：&lt;code>RpcResponse&lt;/code>（序列化）发送至消费方；&lt;/li>
&lt;li>客户端 Stub（client stub）接收到消息并将消息反序列化为Java对象:&lt;code>RpcResponse&lt;/code> ，这样也就得到了最终结果。over!&lt;/li>
&lt;/ol>
&lt;p>相信小伙伴们看完上面的讲解之后，已经了解了 RPC 的原理。&lt;/p></description></item><item><title>分布式锁</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly03ly_distributed-lock/</link><pubDate>Sat, 11 Feb 2023 13:24:32 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly03ly_distributed-lock/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>网上有很多分布式锁相关的文章，写了一个相对简洁易懂的版本，针对面试和工作应该够用了。&lt;/p>
&lt;h2 id="什么是分布式锁">
 什么是分布式锁？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%88%86%e5%b8%83%e5%bc%8f%e9%94%81">#&lt;/a>
&lt;/h2>
&lt;p>对于单机多线程来说，在 Java 中，我们通常使用 &lt;code>ReetrantLock&lt;/code> 类、&lt;code>synchronized&lt;/code> 关键字这类 JDK 自带的 &lt;strong>本地锁&lt;/strong> 来控制&lt;strong>一个 JVM 进程&lt;/strong>内的&lt;strong>多个线程&lt;/strong>对&lt;strong>本地共享资源&lt;/strong>的访问。&lt;/p>
&lt;p>下面是我对本地锁画的一张示意图。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142031650.png" alt="ly-20241212142031650" />&lt;/p>
&lt;p>从图中可以看出，这些线程访问共享资源是互斥的，同一时刻只有一个线程可以获取到本地锁访问共享资源。&lt;/p>
&lt;p>&lt;strong>分布式系统&lt;/strong>下，&lt;strong>不同的服务/客户端&lt;/strong>通常&lt;strong>运行在独立的 JVM 进程&lt;/strong>上。如果&lt;strong>多个 JVM 进程共享同一份资源&lt;/strong>的话，使用&lt;strong>本地锁就没办法实现&lt;/strong>资源的互斥访问了。于是，&lt;strong>分布式锁&lt;/strong> 就诞生了。&lt;/p>
&lt;p>举个例子：系统的订单服务一共部署了 3 份，都对外提供服务。用户下订单之前需要检查库存，为了防止超卖，这里需要加锁以实现对检查库存操作的同步访问。由于订单服务位于不同的 JVM 进程中，本地锁在这种情况下就没办法正常工作了。我们需要用到分布式锁，这样的话，即使多个线程&lt;strong>不在同一个 JVM 进程&lt;/strong>中也能&lt;strong>获取到同一把锁&lt;/strong>，进而实现&lt;strong>共享资源的互斥访问&lt;/strong>。&lt;/p>
&lt;p>下面是我对分布式锁画的一张示意图。&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://github.com/Snailclimb/JavaGuide/blob/main/docs/distributed-system/images/distributed-lock/distributed-lock.png">&lt;img src="img/ly-20241212142031903.png" alt="分布式锁" />&lt;/a>&lt;/p>
&lt;p>从图中可以看出，这些独立的进程中的线程访问共享资源是互斥的，&lt;strong>同一时刻只有一个线程可以获取到分布式锁访问共享资源&lt;/strong>。&lt;/p>
&lt;p>一个最基本的分布式锁需要满足：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>互斥&lt;/strong> ：任意一个时刻，锁只能被一个线程持有；&lt;/li>
&lt;li>&lt;strong>高可用&lt;/strong> ：锁服务是高&lt;strong>可用&lt;/strong>的。并且，&lt;strong>即使客户端的释放锁的代码逻辑出现问题(这里说的是异常，不是说代码写的有问题)&lt;/strong>，锁最终&lt;strong>一定还是会被释放&lt;/strong>，&lt;strong>不会影响其他线程&lt;/strong>对共享资源的访问。&lt;/li>
&lt;li>&lt;strong>可重入&lt;/strong>：&lt;strong>(同)一个节点&lt;/strong>获取了锁之后，还可以&lt;strong>再次&lt;/strong>获取锁。&lt;/li>
&lt;/ul>
&lt;p>通常情况下，我们一般会选择基于 &lt;strong>Redis&lt;/strong> 或者 &lt;strong>ZooKeeper&lt;/strong> 实现分布式锁，Redis 用的要更多一点，我这里也以 Redis 为例介绍分布式锁的实现。&lt;/p>
&lt;h2 id="基于-redis-实现分布式锁">
 基于 Redis 实现分布式锁
 &lt;a class="anchor" href="#%e5%9f%ba%e4%ba%8e-redis-%e5%ae%9e%e7%8e%b0%e5%88%86%e5%b8%83%e5%bc%8f%e9%94%81">#&lt;/a>
&lt;/h2>
&lt;h3 id="如何基于-redis-实现一个最简易的分布式锁">
 如何基于 Redis 实现一个最简易的分布式锁？
 &lt;a class="anchor" href="#%e5%a6%82%e4%bd%95%e5%9f%ba%e4%ba%8e-redis-%e5%ae%9e%e7%8e%b0%e4%b8%80%e4%b8%aa%e6%9c%80%e7%ae%80%e6%98%93%e7%9a%84%e5%88%86%e5%b8%83%e5%bc%8f%e9%94%81">#&lt;/a>
&lt;/h3>
&lt;p>不论是实现&lt;strong>锁(本地)&lt;strong>还是&lt;/strong>分布式锁&lt;/strong>，核心都在于**“互斥”**。&lt;/p>
&lt;p>在 Redis 中， &lt;code>SETNX&lt;/code> 命令是可以帮助我们实现互斥。&lt;code>SETNX&lt;/code> 即 &lt;strong>SET&lt;/strong> if &lt;strong>N&lt;/strong>ot e&lt;strong>X&lt;/strong>ists (对应 Java 中的 &lt;code>setIfAbsent&lt;/code> 方法)，如果 key 不存在的话，才会设置 key 的值。如果 key 已经存在， &lt;code>SETNX&lt;/code> 啥也不做。&lt;/p></description></item><item><title>分布式id</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly02ly_distributed-id/</link><pubDate>Sat, 11 Feb 2023 13:00:31 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly02ly_distributed-id/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="分布式-id-介绍">
 分布式 ID 介绍
 &lt;a class="anchor" href="#%e5%88%86%e5%b8%83%e5%bc%8f-id-%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是-id">
 什么是 ID？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-id">#&lt;/a>
&lt;/h3>
&lt;p>日常开发中，我们需要对系统中的各种数据使用 ID 唯一表示，比如用户 ID 对应且仅对应一个人，商品 ID 对应且仅对应一件商品，订单 ID 对应且仅对应一个订单。&lt;/p>
&lt;p>我们现实生活中也有各种 ID，比如身份证 ID 对应且仅对应一个人、地址 ID 对应且仅对应&lt;/p>
&lt;p>简单来说，&lt;strong>ID 就是数据的唯一标识&lt;/strong>。&lt;/p>
&lt;h3 id="什么是分布式-id">
 什么是分布式 ID？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%88%86%e5%b8%83%e5%bc%8f-id">#&lt;/a>
&lt;/h3>
&lt;p>分布式 ID 是&lt;strong>分布式系统下的 ID&lt;/strong>。分布式 ID &lt;strong>不存在与现实生活中(属于技术上的问题，跟业务无关)&lt;/strong>，属于计算机系统中的一个概念。&lt;/p>
&lt;p>我简单举一个&lt;strong>分库分表&lt;/strong>的例子。&lt;/p>
&lt;p>我司的一个项目，使用的是单机 MySQL 。但是，没想到的是，项目上线一个月之后，随着使用人数越来越多，整个系统的数据量将越来越大。单机 MySQL 已经没办法支撑了，需要进行分库分表（推荐 &lt;strong>Sharding-JDBC&lt;/strong>）。&lt;/p>
&lt;p>在分库之后， &lt;strong>数据遍布在不同服务器上的数据库&lt;/strong>，数据库的自增主键已经没办法满足生成的主键唯一了。&lt;strong>我们如何为不同的数据节点生成全局唯一主键呢？&lt;/strong>&lt;/p>
&lt;p>这个时候就需要生成&lt;strong>分布式 ID&lt;/strong>了。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142029621.png" alt="ly-20241212142029621" />&lt;/p>
&lt;h3 id="分布式-id-需要满足哪些要求">
 分布式 ID 需要满足哪些要求?
 &lt;a class="anchor" href="#%e5%88%86%e5%b8%83%e5%bc%8f-id-%e9%9c%80%e8%a6%81%e6%bb%a1%e8%b6%b3%e5%93%aa%e4%ba%9b%e8%a6%81%e6%b1%82">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212142029864.png" alt="ly-20241212142029864" />&lt;/p>
&lt;p>分布式 ID 作为分布式系统中必不可少的一环，很多地方都要用到分布式 ID。&lt;/p>
&lt;p>一个最基本的分布式 ID 需要满足下面这些要求：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>全局唯一&lt;/strong> ：ID 的&lt;strong>全局唯一性&lt;/strong>肯定是首先要满足的！&lt;/li>
&lt;li>&lt;strong>高性能&lt;/strong> ： 分布式 ID 的&lt;strong>生成速度要快&lt;/strong>，对本地资源消耗要小。&lt;/li>
&lt;li>&lt;strong>高可用&lt;/strong> ：生成分布式 ID 的服务要保证&lt;strong>可用性无限接近于 100%&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>方便易用&lt;/strong> ：拿来即用，&lt;strong>使用方便，快速接入&lt;/strong>！&lt;/li>
&lt;/ul>
&lt;p>除了这些之外，一个比较好的分布式 ID 还应保证：&lt;/p></description></item><item><title>api网关</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly01ly_api-gateway/</link><pubDate>Fri, 10 Feb 2023 22:26:59 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/ly01ly_api-gateway/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="什么是网关有什么用">
 什么是网关？有什么用？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e7%bd%91%e5%85%b3%e6%9c%89%e4%bb%80%e4%b9%88%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;p>微服务背景下，一个系统被&lt;strong>拆分为多个服务&lt;/strong>，但是像&lt;strong>安全认证&lt;/strong>，&lt;strong>流量控制&lt;/strong>，&lt;strong>日志&lt;/strong>，&lt;strong>监控&lt;/strong>等功能是每个服务都需要的，没有网关的话，我们就需要在&lt;strong>每个服务&lt;/strong>中单独实现，这使得我们做了很多重复的事情并且没有一个&lt;strong>全局的视图来统一管理&lt;/strong>这些功能。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142028983.png" alt="ly-20241212142028983.png" />&lt;/p>
&lt;p>一般情况下，网关可以为我们提供&lt;strong>请求转发&lt;/strong>、&lt;strong>安全认证（身份/权限认证）&lt;/strong>、&lt;strong>流量控制&lt;/strong>、&lt;strong>负载均衡&lt;/strong>、&lt;strong>降级熔断&lt;/strong>、&lt;strong>日志&lt;/strong>、&lt;strong>监控&lt;/strong>等功能。&lt;/p>
&lt;p>上面介绍了这么多功能，实际上，网关主要做了一件事情：&lt;strong>请求过滤&lt;/strong> 。&lt;/p>
&lt;h2 id="有哪些常见的网关系统">
 有哪些常见的网关系统？
 &lt;a class="anchor" href="#%e6%9c%89%e5%93%aa%e4%ba%9b%e5%b8%b8%e8%a7%81%e7%9a%84%e7%bd%91%e5%85%b3%e7%b3%bb%e7%bb%9f">#&lt;/a>
&lt;/h2>
&lt;h3 id="netflix-zuul">
 Netflix Zuul
 &lt;a class="anchor" href="#netflix-zuul">#&lt;/a>
&lt;/h3>
&lt;p>Zuul 是 Netflix 开发的一款提供&lt;strong>动态路由&lt;/strong>、&lt;strong>监控&lt;/strong>、&lt;strong>弹性&lt;/strong>、&lt;strong>安全&lt;/strong>的网关服务。&lt;/p>
&lt;p>Zuul 主要通过&lt;strong>过滤器（类似于 AOP）来过滤请求&lt;/strong>，从而实现网关必备的各种功能。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142029228.jpg" alt="Zuul架构" />&lt;/p>
&lt;p>我们可以自定义过滤器来处理请求，并且，Zuul 生态本身就有很多现成的过滤器供我们使用。就比如限流可以直接用国外朋友写的 
&lt;a target="_blank" href="https://github.com/marcosbarbero/spring-cloud-zuul-ratelimit">spring-cloud-zuul-ratelimit&lt;/a> (这里只是举例说明，一般是配合 hystrix 来做限流)：&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-zuul&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;com.marcosbarbero.cloud&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;spring-cloud-zuul-ratelimit&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;2.2.0.RELEASE&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Zuul 1.x &lt;strong>基于同步 IO，性能较差&lt;/strong>。Zuul 2.x &lt;strong>基于 Netty 实现了异步 IO&lt;/strong>，性能得到了大幅改进。&lt;/p>
&lt;ul>
&lt;li>Github 地址 ： 
&lt;a target="_blank" href="https://github.com/Netflix/zuul">https://github.com/Netflix/zuul&lt;/a>&lt;/li>
&lt;li>官方 Wiki ： 
&lt;a target="_blank" href="https://github.com/Netflix/zuul/wiki">https://github.com/Netflix/zuul/wiki&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="spring-cloud-gateway">
 Spring Cloud Gateway
 &lt;a class="anchor" href="#spring-cloud-gateway">#&lt;/a>
&lt;/h3>
&lt;p>SpringCloud Gateway 属于 Spring Cloud 生态系统中的网关，其诞生的目标是为了替代老牌网关 **Zuul **。准确点来说，应该是 &lt;strong>Zuul 1.x&lt;/strong>。SpringCloud Gateway 起步要比 Zuul 2.x 更早。&lt;/p></description></item><item><title>raft算法</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/base/raft-algorithm/</link><pubDate>Fri, 10 Feb 2023 17:10:36 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/base/raft-algorithm/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="1-背景">
 1 背景
 &lt;a class="anchor" href="#1-%e8%83%8c%e6%99%af">#&lt;/a>
&lt;/h2>
&lt;p>当今的数据中心和应用程序在高度动态的环境中运行，为了应对&lt;strong>高度动态&lt;/strong>的环境，它们&lt;strong>通过额外的服务器进行横向扩展&lt;/strong>，并且&lt;strong>根据需求进行扩展和收&lt;/strong>缩。同时，服务器和网络故障也很常见。&lt;/p>
&lt;p>因此，系统必须在正常操作期间处理服务器的上下线。它们必须对变故&lt;strong>做出反应并在几秒钟内自动适应&lt;/strong>；对客户来说的话，明显的中断通常是不可接受的。&lt;/p>
&lt;p>幸运的是，分布式共识可以帮助应对这些挑战。&lt;/p>
&lt;h3 id="11-拜占庭将军">
 1.1 拜占庭将军
 &lt;a class="anchor" href="#11-%e6%8b%9c%e5%8d%a0%e5%ba%ad%e5%b0%86%e5%86%9b">#&lt;/a>
&lt;/h3>
&lt;p>在介绍共识算法之前，先介绍一个简化版拜占庭将军的例子来帮助理解共识算法。&lt;/p>
&lt;blockquote>
&lt;p>假设多位拜占庭将军中没有叛军，信使的信息可靠但有可能被暗杀的情况下，将军们如何达成是否要进攻的一致性决定？&lt;/p>
&lt;/blockquote>
&lt;p>解决方案大致可以理解成：先在所有的将军中选出一个大将军，用来做出所有的决定。&lt;/p>
&lt;p>举例如下：假如现在一共有 3 个将军 A，B 和 C，每个将军都有一个随机时间的倒计时器，&lt;strong>倒计时一结束&lt;/strong>，这个将军就&lt;strong>把自己当成大将军候选人&lt;/strong>，然后派信使&lt;strong>传递选举投票的信息给将军 B 和 C&lt;/strong>，如果将军 B 和 C &lt;strong>还没有把自己当作候选人&lt;/strong>（自己的倒计时还没有结束），并且&lt;strong>没有把选举票投给其他人&lt;/strong>，它们就会把票投给将军 A，信使回到将军 A 时，将军 A 知道自己收到了足够的票数，成为大将军。在有了大将军之后，&lt;strong>是否需要进攻就由大将军 A&lt;/strong> 决定，然后再去派信使通知另外两个将军，自己已经成为了大将军。如果一段时间还没收到将军 B 和 C 的回复（信使可能会被暗杀），那就再重派一个信使，直到收到回复。&lt;/p>
&lt;h3 id="12-共识算法">
 1.2 共识算法
 &lt;a class="anchor" href="#12-%e5%85%b1%e8%af%86%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;p>共识是可容错系统中的一个基本问题：&lt;strong>即使面对故障，服务器也可以在共享状态上达成一致&lt;/strong>。&lt;/p>
&lt;p>共识算法允许一组节点像一个整体一样一起工作，即使其中的一些节点出现故障也能够继续工作下去，其正确性主要是源于复制状态机的性质：一组&lt;code>Server&lt;/code>的状态机计算相同状态的副本，即使有一部分的&lt;code>Server&lt;/code>宕机了它们仍然能够继续运行。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142028468.jpg" alt="rsm-architecture.png" />&lt;/p>
&lt;pre tabindex="0">&lt;code>图-1 复制状态机架构
&lt;/code>&lt;/pre>&lt;p>一般通过&lt;strong>使用复制日志来实现复制状态机&lt;/strong>。&lt;strong>每个&lt;code>Server&lt;/code>存储着一份包括命令序列的日志文件&lt;/strong>，状态机会按顺序执行这些命令。因为每个日志包含相同的命令，并且顺序也相同，所以每个状态机处理相同的命令序列。由于状态机是确定性的，所以&lt;strong>处理相同的状态，得到相同的输出&lt;/strong>。&lt;/p>
&lt;p>因此共识算法的工作就是&lt;strong>保持复制日志的一致性&lt;/strong>。服务器上的共识模块从客户端接收命令并将它们添加到日志中。它与其他服务器上的共识模块通信，以确保即使某些服务器发生故障。每个日志最终包含相同顺序的请求。一旦命令被正确地复制，它们就被称为已提交。每个服务器的状态机按照日志顺序处理已提交的命令，并将输出返回给客户端，因此，这些服务器形成了一个单一的、高度可靠的状态机。&lt;/p>
&lt;p>适用于实际系统的共识算法通常具有以下特性：&lt;/p>
&lt;ul>
&lt;li>安全。&lt;strong>确保在非拜占庭条件（也就是上文中提到的简易版拜占庭）下的安全性&lt;/strong>，包括&lt;strong>网络延迟&lt;/strong>、&lt;strong>分区&lt;/strong>、&lt;strong>包丢失&lt;/strong>、&lt;strong>复制&lt;/strong>和&lt;strong>重新排序&lt;/strong>。&lt;/li>
&lt;li>高可用。只要&lt;strong>大多数服务器都是可操作&lt;/strong>的，并且可以相互通信，也可以与客户端进行通信，那么这些服务器就可以看作完全功能可用的。因此，一个典型的由五台服务器组成的集群可以容忍任何两台服务器端故障。假设服务器因停止而发生故障；它们&lt;strong>稍后可能会从稳定存储上的状态中恢复并重新加入集群&lt;/strong>。&lt;/li>
&lt;li>一致性不依赖时序。错误的时钟和极端的消息延迟，在&lt;strong>最坏的情况下也只会造成可用性问题，而不会产生一致性问题&lt;/strong>。&lt;/li>
&lt;li>在集群中大多数服务器响应，&lt;strong>命令就可以完成&lt;/strong>，不会被少数运行缓慢的服务器来影响整体系统性能。&lt;/li>
&lt;/ul>
&lt;h2 id="2-基础">
 2 基础
 &lt;a class="anchor" href="#2-%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;h3 id="21-节点类型">
 2.1 节点类型
 &lt;a class="anchor" href="#21-%e8%8a%82%e7%82%b9%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h3>
&lt;p>一个 Raft 集群包括若干服务器，以典型的 5 服务器集群举例。在任意的时间，每个服务器一定会处于以下三个状态中的一个：&lt;/p>
&lt;ul>
&lt;li>&lt;code>Leader&lt;/code>：负责发起心跳，响应客户端，创建日志，同步日志。&lt;/li>
&lt;li>&lt;code>Candidate&lt;/code>：Leader 选举过程中的临时角色，由 Follower 转化而来，发起投票参与竞选。&lt;/li>
&lt;li>&lt;code>Follower&lt;/code>：接受 Leader 的心跳和日志同步数据，投票给 Candidate。&lt;/li>
&lt;/ul>
&lt;p>在正常的情况下，只有一个服务器是 Leader，剩下的服务器是 Follower。Follower 是被动的，它们不会发送任何请求，只是响应来自 Leader 和 Candidate 的请求。&lt;/p></description></item><item><title>paxos算法</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/base/paxos-algorithm/</link><pubDate>Fri, 10 Feb 2023 17:02:45 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/base/paxos-algorithm/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="背景">
 背景
 &lt;a class="anchor" href="#%e8%83%8c%e6%99%af">#&lt;/a>
&lt;/h2>
&lt;p>Paxos 算法是 Leslie Lamport（
&lt;a target="_blank" href="https://zh.wikipedia.org/wiki/%E8%8E%B1%E6%96%AF%E5%88%A9%C2%B7%E5%85%B0%E4%BC%AF%E7%89%B9">莱斯利·兰伯特&lt;/a>）在 &lt;strong>1990&lt;/strong> 年提出了一种分布式系统 &lt;strong>共识&lt;/strong> 算法。这也是第一个被证明完备的共识算法（前提是不存在拜占庭将军问题，也就是&lt;strong>没有恶意节点&lt;/strong>）。&lt;/p>
&lt;p>为了介绍 Paxos 算法，兰伯特专门写了一篇幽默风趣的论文。在这篇论文中，他虚拟了一个叫做 Paxos 的希腊城邦来更形象化地介绍 Paxos 算法。&lt;/p>
&lt;p>不过，审稿人并不认可这篇论文的幽默。于是，他们就给兰伯特说：“如果你想要成功发表这篇论文的话，必须删除所有 Paxos 相关的故事背景”。兰伯特一听就不开心了：“我凭什么修改啊，你们这些审稿人就是缺乏幽默细胞，发不了就不发了呗！”。&lt;/p>
&lt;p>于是乎，提出 Paxos 算法的那篇论文在当时并没有被成功发表。&lt;/p>
&lt;p>直到 1998 年，系统研究中心 (Systems Research Center，SRC）的两个技术研究员需要找一些合适的分布式算法来服务他们正在构建的分布式系统，Paxos 算法刚好可以解决他们的部分需求。因此，兰伯特就把论文发给了他们。在看了论文之后，这俩大佬觉得论文还是挺不错的。于是，兰伯特在 &lt;strong>1998&lt;/strong> 年重新发表论文 
&lt;a target="_blank" href="http://lamport.azurewebsites.net/pubs/lamport-paxos.pdf">《The Part-Time Parliament》&lt;/a>。&lt;/p>
&lt;p>论文发表之后，各路学者直呼看不懂，言语中还略显调侃之意。这谁忍得了，在 &lt;strong>2001&lt;/strong> 年的时候，兰伯特专门又写了一篇 
&lt;a target="_blank" href="http://lamport.azurewebsites.net/pubs/paxos-simple.pdf">《Paxos Made Simple》&lt;/a> 的论文来简化对 Paxos 的介绍，主要讲述&lt;strong>两阶段共识协议&lt;/strong>部分，顺便还不忘嘲讽一下这群学者。&lt;/p>
&lt;p>《Paxos Made Simple》这篇论文就 14 页，相比于 《The Part-Time Parliament》的 33 页精简了不少。最关键的是这篇论文的摘要就一句话：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142028075.png" alt="ly-20241212142028075" />&lt;/p>
&lt;blockquote>
&lt;p>The Paxos algorithm, when presented in plain English, is very simple.&lt;/p>
&lt;/blockquote>
&lt;p>翻译过来的意思大概就是：&lt;strong>当我用无修饰的英文来描述时，Paxos 算法真心简单！&lt;/strong>&lt;/p>
&lt;p>有没有感觉到来自兰伯特大佬满满地嘲讽的味道？&lt;/p></description></item><item><title>CAP&amp;BASE 理论</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/base/cap_base-theorem/</link><pubDate>Fri, 10 Feb 2023 15:03:48 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lydly_distributed_system/base/cap_base-theorem/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>经历过技术面试的小伙伴想必对 CAP &amp;amp; BASE 这个两个理论已经再熟悉不过了！&lt;/p>
&lt;p>我当年参加面试的时候，不夸张地说，只要问到分布式相关的内容，面试官几乎是必定会问这两个&lt;strong>分布式相关的理论&lt;/strong>。一是因为这两个分布式基础理论是学习分布式知识的&lt;strong>必备前置基础&lt;/strong>，二是因为很多面试官自己比较熟悉这两个理论（方便提问）。&lt;/p>
&lt;p>我们非常有必要将这两个理论搞懂，并且能够用自己的理解给别人讲出来。&lt;/p>
&lt;h2 id="cap-理论">
 CAP 理论
 &lt;a class="anchor" href="#cap-%e7%90%86%e8%ae%ba">#&lt;/a>
&lt;/h2>
&lt;p>
&lt;a target="_blank" href="https://zh.wikipedia.org/wiki/CAP%E5%AE%9A%E7%90%86">CAP 理论/定理&lt;/a>起源于 2000 年，由加州大学伯克利分校的 Eric Brewer 教授在分布式计算原理研讨会（PODC）上提出，因此 CAP 定理又被称作 &lt;strong>布鲁尔定理（Brewer’s theorem）&lt;/strong>&lt;/p>
&lt;p>2 年后，麻省理工学院的 Seth Gilbert 和 Nancy Lynch 发表了布鲁尔猜想的证明，CAP 理论正式成为&lt;strong>分布式领域的定理&lt;/strong>。&lt;/p>
&lt;h3 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>&lt;code>[kənˈsɪstənsi] consistency 一致性&lt;/code>&lt;br>
&lt;code>[əˌveɪlə'bɪləti] availability 可用性 &lt;/code>,&lt;br>
&lt;code>[pɑːˈtɪʃn] 分割 [ˈtɒlərəns] 容忍, &lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>CAP&lt;/strong> 也就是 &lt;strong>Consistency（一致性）&lt;/strong>、&lt;strong>Availability（可用性）&lt;/strong>、&lt;strong>Partition Tolerance（分区容错性）&lt;/strong> 这三个单词首字母组合。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142027432.png" alt="ly-20241212142027432" />&lt;/p>
&lt;p>CAP 理论的提出者布鲁尔在提出 CAP 猜想的时候，并没有详细定义 &lt;strong>Consistency&lt;/strong>、&lt;strong>Availability&lt;/strong>、&lt;strong>Partition Tolerance&lt;/strong> 三个单词的明确定义。&lt;/p>
&lt;p>因此，对于 CAP 的民间解读有很多，一般比较被大家推荐的是下面 👇 这种版本的解读。&lt;/p>
&lt;p>在理论计算机科学中，CAP 定理（CAP theorem）指出对于一个分布式系统来说，当设计&lt;strong>读写操作&lt;/strong>时，只能同时满足以下三点中的两个：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>一致性（Consistency）&lt;/strong> : 所有节点&lt;strong>访问同一份最新的数据副本&lt;/strong>&lt;/li>
&lt;li>&lt;strong>可用性（Availability）&lt;/strong>: &lt;strong>非故障的节点在合理的时间内返回合理的响应&lt;/strong>（不是错误或者超时的响应）。&lt;/li>
&lt;li>&lt;strong>分区容错性（Partition Tolerance）&lt;/strong> : 分布式系统出现网络分区的时候，&lt;strong>仍然能够对外提供服务&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>什么是网络分区？&lt;/strong>&lt;/p></description></item><item><title>Mybatis原理系列(3)</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/MyBatis/principle/mybatis-principle3/</link><pubDate>Fri, 10 Feb 2023 11:27:48 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/MyBatis/principle/mybatis-principle3/</guid><description>&lt;blockquote>
&lt;p>转载自https://www.jianshu.com/p/4e268828db48（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>还没看完&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>在上篇文章中，我们讲解了MyBatis的启动流程，以及启动过程中涉及到的组件，在本篇文中，我们继续探索SqlSession,SqlSessionFactory,SqlSessionFactoryBuilder的关系。SqlSession作为MyBatis的核心组件，可以说MyBatis的所有操作都是围绕SqlSession来展开的。对&lt;strong>SqlSession理解透彻&lt;/strong>，才能全面掌握MyBatis。&lt;/p>
&lt;/blockquote>
&lt;h4 id="1-sqlsession初识">
 1. SqlSession初识
 &lt;a class="anchor" href="#1-sqlsession%e5%88%9d%e8%af%86">#&lt;/a>
&lt;/h4>
&lt;p>SqlSession在一开始就介绍过是高级接口，类似于JDBC操作的connection对象，它包装了数据库连接，通过这个接口我们可以实现增删改查，提交/回滚事物，关闭连接，获取代理类等操作。SqlSession是个接口，其默认实现是DefaultSqlSession。SqlSession是线程不安全的，每个线程都会有自己唯一的SqlSession，不同线程间调用同一个SqlSession会出现问题，因此在使用完后需要close掉。&lt;/p>
&lt;p>&lt;img src="img/6aa056bf515cfd3c4bc96542f4b99250_MD5.webp" alt="img" />&lt;/p>
&lt;p>SqlSession的方法&lt;/p>
&lt;h4 id="2-sqlsession的创建">
 2. SqlSession的创建
 &lt;a class="anchor" href="#2-sqlsession%e7%9a%84%e5%88%9b%e5%bb%ba">#&lt;/a>
&lt;/h4>
&lt;p>SqlSessionFactoryBuilder的build()方法使用建造者模式创建了SqlSessionFactory接口对象，SqlSessionFactory接口的默认实现是DefaultSqlSessionFactory。SqlSessionFactory使用实例工厂模式来创建SqlSession对象。SqlSession,SqlSessionFactory,SqlSessionFactoryBuilder的关系如下(图画得有点丑&amp;hellip;)：&lt;/p>
&lt;p>&lt;img src="img/dda341fb9f426f5b159a42798973cbba_MD5.webp" alt="img" />&lt;/p>
&lt;p>类图&lt;/p>
&lt;p>DefaultSqlSessionFactory中openSession是有两种方法一种是openSessionFromDataSource，另一种是openSessionFromConnection。这两种是什么区别呢？从字面意义上将，一种是从数据源中获取SqlSession对象，一种是由已有连接获取SqlSession。SqlSession实际是对数据库连接的一层包装，数据库连接是个珍贵的资源，如果频繁的创建销毁将会影响吞吐量，因此使用数据库连接池化技术就可以复用数据库连接了。因此openSessionFromDataSource会从数据库连接池中获取一个连接，然后包装成一个SqlSession对像。openSessionFromConnection则是直接包装已有的连接并返回SqlSession对像。&lt;/p>
&lt;p>openSessionFromDataSource 主要经历了以下几步：&lt;/p>
&lt;ol>
&lt;li>从获取configuration中获取Environment对象，Environment包含了数据库配置&lt;/li>
&lt;li>从Environment获取DataSource数据源&lt;/li>
&lt;li>从DataSource数据源中获取Connection连接对象&lt;/li>
&lt;li>从DataSource数据源中获取TransactionFactory事物工厂&lt;/li>
&lt;li>从TransactionFactory中创建事物Transaction对象&lt;/li>
&lt;li>创建Executor对象&lt;/li>
&lt;li>包装configuration和Executor对象成DefaultSqlSession对象&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> SqlSession &lt;span style="color:#a6e22e">openSessionFromDataSource&lt;/span>(ExecutorType execType, TransactionIsolationLevel level, &lt;span style="color:#66d9ef">boolean&lt;/span> autoCommit) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Transaction tx &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> Environment environment &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">getEnvironment&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> TransactionFactory transactionFactory &lt;span style="color:#f92672">=&lt;/span> getTransactionFactoryFromEnvironment(environment);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tx &lt;span style="color:#f92672">=&lt;/span> transactionFactory.&lt;span style="color:#a6e22e">newTransaction&lt;/span>(environment.&lt;span style="color:#a6e22e">getDataSource&lt;/span>(), level, autoCommit);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> Executor executor &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">newExecutor&lt;/span>(tx, execType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DefaultSqlSession(configuration, executor, autoCommit);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> closeTransaction(tx); &lt;span style="color:#75715e">// may have fetched a connection so lets call close()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ExceptionFactory.&lt;span style="color:#a6e22e">wrapException&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Error opening session. Cause: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e, e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">reset&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> SqlSession &lt;span style="color:#a6e22e">openSessionFromConnection&lt;/span>(ExecutorType execType, Connection connection) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> autoCommit;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autoCommit &lt;span style="color:#f92672">=&lt;/span> connection.&lt;span style="color:#a6e22e">getAutoCommit&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (SQLException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Failover to true, as most poor drivers&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// or databases won&amp;#39;t support transactions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> autoCommit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> Environment environment &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">getEnvironment&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> TransactionFactory transactionFactory &lt;span style="color:#f92672">=&lt;/span> getTransactionFactoryFromEnvironment(environment);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> Transaction tx &lt;span style="color:#f92672">=&lt;/span> transactionFactory.&lt;span style="color:#a6e22e">newTransaction&lt;/span>(connection);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> Executor executor &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">newExecutor&lt;/span>(tx, execType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DefaultSqlSession(configuration, executor, autoCommit);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ExceptionFactory.&lt;span style="color:#a6e22e">wrapException&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Error opening session. Cause: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e, e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">reset&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-sqlsession的使用">
 3. SqlSession的使用
 &lt;a class="anchor" href="#3-sqlsession%e7%9a%84%e4%bd%bf%e7%94%a8">#&lt;/a>
&lt;/h4>
&lt;p>SqlSession 获取成功后，我们就可以使用其中的方法了，比如直接使用SqlSession发送sql语句，或者通过mapper映射文件的方式来使用，在上两篇文章中我们都是通过mapper映射文件来使用的，接下来就介绍第一种，直接使用SqlSession发送sql语句。&lt;/p></description></item><item><title>Mybatis原理系列(2)</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/MyBatis/principle/mybatis-principle2/</link><pubDate>Fri, 10 Feb 2023 11:04:31 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/MyBatis/principle/mybatis-principle2/</guid><description>&lt;blockquote>
&lt;p>转载自https://www.jianshu.com/p/7d6b891180a3（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>在上篇文章中，我们举了一个例子如何使用MyBatis，但是对其中&lt;strong>dao层&lt;/strong>，&lt;strong>entity层&lt;/strong>，&lt;strong>mapper层&lt;/strong>间的关系不得而知，从此篇文章开始，笔者将&lt;strong>从MyBatis的启动流程&lt;/strong>着手，真正的开始研究MyBatis源码了。&lt;/p>
&lt;/blockquote>
&lt;h4 id="1-mybatis启动代码示例">
 1. MyBatis启动代码示例
 &lt;a class="anchor" href="#1-mybatis%e5%90%af%e5%8a%a8%e4%bb%a3%e7%a0%81%e7%a4%ba%e4%be%8b">#&lt;/a>
&lt;/h4>
&lt;p>在上篇文章中，介绍了MyBatis的相关配置和各层代码编写，本文将以下代码展开描述和介绍MyBatis的启动流程，并简略的介绍各个模块的作用，&lt;strong>各个模块的细节部分将在其它文章中呈现&lt;/strong>。&lt;/p>
&lt;p>回顾下上文中使用mybatis的部分代码，包括七步。每步虽然都是一行代码，但是隐藏了很多细节。接下来我们将围绕这起步展开了解。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Slf4j&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MyBatisBootStrap&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 1. 读取配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream inputStream &lt;span style="color:#f92672">=&lt;/span> Resources.&lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;mybatis-config.xml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 2. 创建SqlSessionFactory工厂&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSessionFactory sqlSessionFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SqlSessionFactoryBuilder().&lt;span style="color:#a6e22e">build&lt;/span>(inputStream);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 3. 获取sqlSession&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSession sqlSession &lt;span style="color:#f92672">=&lt;/span> sqlSessionFactory.&lt;span style="color:#a6e22e">openSession&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 4. 获取Mapper&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TTestUserMapper userMapper &lt;span style="color:#f92672">=&lt;/span> sqlSession.&lt;span style="color:#a6e22e">getMapper&lt;/span>(TTestUserMapper.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 5. 执行接口方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TTestUser userInfo &lt;span style="color:#f92672">=&lt;/span> userMapper.&lt;span style="color:#a6e22e">selectByPrimaryKey&lt;/span>(16L);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;userInfo = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> JSONUtil.&lt;span style="color:#a6e22e">toJsonStr&lt;/span>(userInfo));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 6. 提交事物&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlSession.&lt;span style="color:#a6e22e">commit&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 7. 关闭资源&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlSession.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inputStream.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">error&lt;/span>(e.&lt;span style="color:#a6e22e">getMessage&lt;/span>(), e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="2-读取配置">
 2. 读取配置
 &lt;a class="anchor" href="#2-%e8%af%bb%e5%8f%96%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 1. 读取配置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>InputStream inputStream &lt;span style="color:#f92672">=&lt;/span> Resources.getResourceAsStream(&lt;span style="color:#e6db74">&amp;#34;mybatis-config.xml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在&lt;strong>mybatis-config.xml&lt;/strong>中我们配置了&lt;strong>属性&lt;/strong>，&lt;strong>环境&lt;/strong>，&lt;strong>映射文件路径&lt;/strong>等，其实不仅可以配置以上内容，还可以配置&lt;strong>插件&lt;/strong>，&lt;strong>反射工厂&lt;/strong>，&lt;strong>类型处理器&lt;/strong>等等其它内容。在启动流程中的第一步我们就需要&lt;strong>读取这个配置文件&lt;/strong>，并获取一个输入流为下一步解析配置文件作准备。&lt;/p></description></item><item><title>Mybatis原理系列(1)</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/MyBatis/principle/mybatis-principle1/</link><pubDate>Fri, 10 Feb 2023 08:54:26 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/MyBatis/principle/mybatis-principle1/</guid><description>&lt;blockquote>
&lt;p>转载自https://www.jianshu.com/p/ada025f97a07（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>作为Java码农，无论在面试中，还是在工作中都会遇到MyBatis的相关问题。笔者从大学开始就接触MyBatis，到现在为止都是会用，知道怎么配置，怎么编写xml，但是不知道Mybatis核心原理，一遇到问题就复制错误信息百度解决。为了改变这种境地，鼓起勇气开始下定决心阅读MyBatis源码，并开始记录阅读过程，希望和大家分享。&lt;/p>
&lt;/blockquote>
&lt;h4 id="1-初识mybatis">
 1. 初识MyBatis
 &lt;a class="anchor" href="#1-%e5%88%9d%e8%af%86mybatis">#&lt;/a>
&lt;/h4>
&lt;p>还记得当初接触MyBatis时，觉得要配置很多，而且sql要单独写在xml中，相比Hibernate来说简直不太友好，直到后来出现了复杂的业务需求，需要编写相应的复杂的sql，此时用Hibernate反而更加麻烦了，用MyBatis是真香了。因此笔者对MyBatis的第一印象就是&lt;strong>将业务关注的sql&lt;/strong>和&lt;strong>java代码&lt;/strong>进行了解耦，在业务复杂变化的时候，相应的数据库操作需要相应进行修改，&lt;strong>如果通过java代码构建操作数据逻辑&lt;/strong>，这不断变动的需求对程序员的耐心是极大的考验。如果&lt;strong>将sql统一的维护在一个文件&lt;/strong>里，java代码用接口定义，在需求变动时，&lt;strong>只用改相应的sql&lt;/strong>，从而&lt;strong>减少了修改量&lt;/strong>，&lt;strong>提高开发效率&lt;/strong>。以上也是经常在面试中经常问到的Hibernate和MyBatis间的区别一点。&lt;/p>
&lt;p>切到正题，Mybatis是什么呢？&lt;/p>
&lt;p>Mybatis SQL 映射框架使得一个&lt;strong>面向对象构建的应用程序&lt;/strong>去&lt;strong>访问一个关系型数据库&lt;/strong>变得更容易。MyBatis使用&lt;strong>XML描述符&lt;/strong>或&lt;strong>注解&lt;/strong>将&lt;strong>对象&lt;/strong>与&lt;strong>存储过程&lt;/strong>或&lt;strong>SQL语句耦合&lt;/strong>。与对象关系映射工具相比，简单性是MyBatis数据映射器的最大优势。&lt;/p>
&lt;p>以上是Mybatis的官方解释，其中“映射”，“面向对象”，“关系型”，“xml”等等都是Mybatis的关键词，也是我们了解了Mybatis原理后，会恍然大悟的地方。笔者现在不详述这些概念，在最后总结的时候再进行详述。我们只要知道Mybatis为我们操作数据库提供了很大的便捷。&lt;/p>
&lt;h4 id="2-源码下载">
 2. 源码下载
 &lt;a class="anchor" href="#2-%e6%ba%90%e7%a0%81%e4%b8%8b%e8%bd%bd">#&lt;/a>
&lt;/h4>
&lt;blockquote>
&lt;p>这里建议使用maven即可，在pom.xml添加以下依赖&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>8.0.32&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.mybatis&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mybatis&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.5.6&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--这里还添加了一些辅助的依赖--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--lombok--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.projectlombok&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>lombok&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.18.8&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--日志模块--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.logging.log4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>log4j-api&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.17.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后在ExternalLibraries 的mybatis:3.5.6里找到，就能看到目录结构 ，随便找一个进去 idea右上角会出现DownloadSource之类的字样 ，点击即可&lt;br>
&lt;img src="img/ly-20241212142014144.png" alt="ly-20241212142014144" />&lt;/p>
&lt;/blockquote>
&lt;p>我们首先要从github上下载源码，
&lt;a target="_blank" href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fmybatis%2Fmybatis-3">仓库地址&lt;/a>，然后在IDEA中clone代码&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142014403.png" alt="img" />&lt;/p>
&lt;p>在打开中的IDEA中，选择vsc -&amp;gt; get from version control -&amp;gt; 复制刚才的地址&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142014541.png" alt="img" />&lt;/p>
&lt;p>image.png&lt;/p>
&lt;p>点击clone即可&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142014681.png" alt="img" />&lt;/p></description></item><item><title>Mybatis面试</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/MyBatis/MyBatis-interview/</link><pubDate>Thu, 09 Feb 2023 16:34:39 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/MyBatis/MyBatis-interview/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;p>部分疑问参考自 
&lt;a target="_blank" href="https://blog.csdn.net/Gherbirthday0916">https://blog.csdn.net/Gherbirthday0916&lt;/a> 感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h3 id="-和--的区别是什么">
 #{} 和 ${} 的区别是什么？
 &lt;a class="anchor" href="#-%e5%92%8c--%e7%9a%84%e5%8c%ba%e5%88%ab%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h3>
&lt;p>注：这道题是面试官面试我同事的。&lt;/p>
&lt;p>答：&lt;/p>
&lt;ul>
&lt;li>&lt;code>${}&lt;/code>是 Properties &lt;strong>文件中的变量占位符&lt;/strong>，它可以用于&lt;strong>标签属性值&lt;/strong>和 &lt;strong>sql 内部&lt;/strong>，属于&lt;strong>静态文本替换&lt;/strong>，比如${driver}会被静态替换为&lt;code>com.mysql.jdbc. Driver&lt;/code>。&lt;/li>
&lt;li>&lt;code>#{}&lt;/code>是 sql 的参数占位符，MyBatis 会&lt;strong>将 sql 中的&lt;code>#{}&lt;/code>&lt;strong>替换为&lt;/strong>? 号&lt;/strong>，在 sql 执行前会使用 &lt;strong>PreparedStatement 的参数设置&lt;/strong>方法，&lt;strong>按序给 sql 的? 号占位符设置参数值&lt;/strong>，比如 ps.setInt(0, parameterValue)，&lt;code>#{item.name}&lt;/code> 的取值方式为使用&lt;strong>反射从参数对象中获取 item 对象的 name 属性值&lt;/strong>，相当于 &lt;strong>&lt;code>param.getItem().getName()&lt;/code>&lt;/strong>。 [&lt;strong>这里用到了反射&lt;/strong>]&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>在&lt;strong>底层构造完整SQL&lt;/strong>语句时，MyBatis的两种&lt;strong>传参方式&lt;/strong>所采取的方式不同。&lt;code>#{Parameter}&lt;/code>采用&lt;strong>预编译&lt;/strong>的方式构造SQL，&lt;strong>避免了 SQL注入&lt;/strong> 的产生。而**&lt;code>${Parameter}&lt;/code>采用拼接&lt;strong>的方式构造SQL，在&lt;/strong>对用户输入过滤不严格**的前提下，此处很可能存在SQL注入&lt;/p>
&lt;/blockquote>
&lt;h3 id="xml-映射文件中除了常见的-selectinsertupdatedelete-标签之外还有哪些标签">
 xml 映射文件中，除了常见的 select、insert、update、delete 标签之外，还有哪些标签？
 &lt;a class="anchor" href="#xml-%e6%98%a0%e5%b0%84%e6%96%87%e4%bb%b6%e4%b8%ad%e9%99%a4%e4%ba%86%e5%b8%b8%e8%a7%81%e7%9a%84-selectinsertupdatedelete-%e6%a0%87%e7%ad%be%e4%b9%8b%e5%a4%96%e8%bf%98%e6%9c%89%e5%93%aa%e4%ba%9b%e6%a0%87%e7%ad%be">#&lt;/a>
&lt;/h3>
&lt;p>注：这道题是京东面试官面试我时问的。&lt;/p>
&lt;p>答：还有很多其他的标签， &lt;strong>&lt;code>&amp;lt;resultMap&amp;gt;&lt;/code>&lt;/strong> 、 &lt;strong>&lt;code>&amp;lt;parameterMap&amp;gt;&lt;/code>&lt;/strong> 、 &lt;strong>&lt;code>&amp;lt;sql&amp;gt;&lt;/code>&lt;/strong> 、 &lt;strong>&lt;code>&amp;lt;include&amp;gt;&lt;/code>&lt;/strong> 、 &lt;strong>&lt;code>&amp;lt;selectKey&amp;gt;&lt;/code>&lt;/strong> ，加上动态 sql 的 9 个标签， &lt;strong>&lt;code>trim|where|set|foreach|if|choose|when|otherwise|bind&lt;/code>&lt;/strong> 等，其中 &lt;code>&amp;lt;sql&amp;gt;&lt;/code> 为 sql 片段标签，通过 &lt;code>&amp;lt;include&amp;gt;&lt;/code> 标签引入 sql 片段， &lt;code>&amp;lt;selectKey&amp;gt;&lt;/code> 为不支持自增的主键生成策略标签。&lt;/p></description></item><item><title>ConditionalOnClass实践</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/conditional_on_class/</link><pubDate>Thu, 09 Feb 2023 15:38:01 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/conditional_on_class/</guid><description>&lt;h1 id="两个测试方向">
 两个测试方向
 &lt;a class="anchor" href="#%e4%b8%a4%e4%b8%aa%e6%b5%8b%e8%af%95%e6%96%b9%e5%90%91">#&lt;/a>
&lt;/h1>
&lt;h2 id="方向1两个maven项目">
 方向1：两个maven项目
 &lt;a class="anchor" href="#%e6%96%b9%e5%90%911%e4%b8%a4%e4%b8%aamaven%e9%a1%b9%e7%9b%ae">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>详见git上的 conditional_on_class_main 项目以及 conditional_on_class2 项目&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>基础maven项目 conditional_on_class2&lt;br>
pom文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;project&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span style="color:#f92672">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.example&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>conditional_on_class_2&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>java类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> com;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">LyReferenceImpl&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">sayWord&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello one&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>简单的SpringBoot项目 conditional_on_class_main&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!--pom文件--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;project&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span style="color:#f92672">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.example&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>conditional_on_class_main&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;parent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-parent&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.7.8&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/parent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--把1配置的bean引用进来--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.example&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>conditional_on_class_2&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>provided&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;optional&amp;gt;&lt;/span>true&lt;span style="color:#f92672">&amp;lt;/optional&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-web&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;build&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-maven-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;excludes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- 默认会将conditional_on_class_2 打包进去,现在会配置SayExist
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">						如果放开注释,那么会配置SayNotExist--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--&amp;lt;dependency&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;lt;groupId&amp;gt;org.example&amp;lt;/groupId&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;lt;artifactId&amp;gt;conditional_on_class_2&amp;lt;/artifactId&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;lt;/dependency&amp;gt;--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/excludes&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;jvmArguments&amp;gt;&lt;/span>-Dfile.encoding=UTF-8&lt;span style="color:#f92672">&amp;lt;/jvmArguments&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;executions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;execution&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;goals&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;goal&amp;gt;&lt;/span>repackage&lt;span style="color:#f92672">&amp;lt;/goal&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;!--可以把依赖的包都打包到生成的Jar包中 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/goals&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/execution&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/executions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/build&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//两个配置类 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//配置类1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> com.config;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> com.service.ISay;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> com.service.SayExist;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.context.annotation.Bean;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.context.annotation.Configuration;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//不要放在方法里面,否则会报错&amp;#34;java.lang.ArrayStoreException: sun.reflect.annotation.TypeNotPresentExceptionProxy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@ConditionalOnClass&lt;/span>(value &lt;span style="color:#f92672">=&lt;/span> com.&lt;span style="color:#a6e22e">LyReferenceImpl&lt;/span>.&lt;span style="color:#a6e22e">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ExistConfiguration&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ISay &lt;span style="color:#a6e22e">getISay1&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SayExist();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//配置类2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> com.config;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> com.service.ISay;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> com.service.SayNotExist;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.context.annotation.Bean;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.springframework.context.annotation.Configuration;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@ConditionalOnMissingClass&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.LyReferenceImpl&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">NotExistConfiguration&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ISay &lt;span style="color:#a6e22e">getISay1&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SayNotExist();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="方向23个maven项目建议用这个理解">
 方向2：3个maven项目(建议用这个理解)
 &lt;a class="anchor" href="#%e6%96%b9%e5%90%9123%e4%b8%aamaven%e9%a1%b9%e7%9b%ae%e5%bb%ba%e8%ae%ae%e7%94%a8%e8%bf%99%e4%b8%aa%e7%90%86%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>注意，这里可能还漏了一个问题，那就是 这个conditional_on_class1 的configuration之所以能够被自动装配，是因为和 conditional_on_class_main1的Application类是同一个包，所以不用特殊处理。如果是其他包名的话，那么是需要用到spring boot的自动装配机制的：在conditional_on_class1 工程的 resources 包下创建&lt;code>META-INF/spring.factories&lt;/code>，并写上Config类的全类名&lt;/p></description></item><item><title>SpringBoot自动装配原理</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly05ly_springboot-auto-assembly/</link><pubDate>Thu, 09 Feb 2023 10:37:36 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly05ly_springboot-auto-assembly/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>每次问到 Spring Boot， 面试官非常喜欢问这个问题：“讲述一下 SpringBoot 自动装配原理？”。&lt;/p>
&lt;p>我觉得我们可以从以下几个方面回答：&lt;/p>
&lt;ol>
&lt;li>什么是 &lt;strong>SpringBoot 自动装配&lt;/strong>？&lt;/li>
&lt;li>SpringBoot 是&lt;strong>如何实现自动装配&lt;/strong>的？&lt;strong>如何实现按需加载&lt;/strong>？&lt;/li>
&lt;li>&lt;strong>如何实现一个 Starter&lt;/strong>？&lt;/li>
&lt;/ol>
&lt;p>篇幅问题，这篇文章并没有深入，小伙伴们也可以直接使用 debug 的方式去看看 SpringBoot 自动装配部分的源代码。&lt;/p>
&lt;h2 id="前言">
 前言
 &lt;a class="anchor" href="#%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h2>
&lt;p>使用过 Spring 的小伙伴，一定有被 XML 配置统治的恐惧。即使 Spring 后面引入了基于注解的配置，我们在开启某些 Spring 特性或者引入第三方依赖的时候，还是需要用 XML 或 Java 进行显式配置。&lt;/p>
&lt;p>举个例子。没有 Spring Boot 的时候，我们写一个 RestFul Web 服务，还首先需要进行如下配置。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">RESTConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> View &lt;span style="color:#a6e22e">jsonTemplate&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MappingJackson2JsonView view &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> MappingJackson2JsonView();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> view.&lt;span style="color:#a6e22e">setPrettyPrint&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> view;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Bean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> ViewResolver &lt;span style="color:#a6e22e">viewResolver&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BeanNameViewResolver();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spring&lt;span style="color:#f92672">-&lt;/span>servlet.&lt;span style="color:#a6e22e">xml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>beans xmlns&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns:xsi&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span> xmlns:context&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns:mvc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/mvc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xsi:schemaLocation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/context/ http://www.springframework.org/schema/context/spring-context.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/mvc/ http://www.springframework.org/schema/mvc/spring-mvc.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>context:component&lt;span style="color:#f92672">-&lt;/span>scan base&lt;span style="color:#f92672">-&lt;/span>package&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.howtodoinjava.demo&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>mvc:annotation&lt;span style="color:#f92672">-&lt;/span>driven &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;!--&lt;/span> JSON Support &lt;span style="color:#f92672">--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bean name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;viewResolver&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">=&amp;#34;&lt;/span>&lt;span style="color:#a6e22e">org&lt;/span>.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">view&lt;/span>.&lt;span style="color:#a6e22e">BeanNameViewResolver&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;bean name=&amp;#34;&lt;/span>jsonTemplate&lt;span style="color:#e6db74">&amp;#34; class=&amp;#34;&lt;/span>org.&lt;span style="color:#a6e22e">springframework&lt;/span>.&lt;span style="color:#a6e22e">web&lt;/span>.&lt;span style="color:#a6e22e">servlet&lt;/span>.&lt;span style="color:#a6e22e">view&lt;/span>.&lt;span style="color:#a6e22e">json&lt;/span>.&lt;span style="color:#a6e22e">MappingJackson2JsonView&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;lt;/beans&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>但是，Spring Boot 项目，我们只需要添加相关依赖，无需配置，通过启动下面的 &lt;code>main&lt;/code> 方法即可。&lt;/p></description></item><item><title>spring 设计模式</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly04ly_spring-design-patterns/</link><pubDate>Wed, 08 Feb 2023 20:18:14 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly04ly_spring-design-patterns/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>“JDK 中用到了哪些设计模式? Spring 中用到了哪些设计模式? ”这两个问题，在面试中比较常见。&lt;/p>
&lt;p>我在网上搜索了一下关于 Spring 中设计模式的讲解几乎都是千篇一律，而且大部分都年代久远。所以，花了几天时间自己总结了一下。&lt;/p>
&lt;p>由于我的个人能力有限，文中如有任何错误各位都可以指出。另外，文章篇幅有限，对于设计模式以及一些源码的解读我只是一笔带过，这篇文章的主要目的是回顾一下 Spring 中的设计模式。&lt;/p>
&lt;h2 id="控制反转ioc和依赖注入di">
 控制反转(IoC)和依赖注入(DI)
 &lt;a class="anchor" href="#%e6%8e%a7%e5%88%b6%e5%8f%8d%e8%bd%acioc%e5%92%8c%e4%be%9d%e8%b5%96%e6%b3%a8%e5%85%a5di">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>IoC(Inversion of Control,控制反转)&lt;/strong> 是 Spring 中一个非常非常重要的概念，它不是什么技术，而是一种&lt;strong>解耦的设计思想&lt;/strong>。IoC 的主要目的是借助于“第三方”(Spring 中的 IoC 容器) 实现&lt;strong>具有依赖关系的对象之间的解耦&lt;/strong>(IOC 容器管理对象，你只管使用即可)，从而降低代码之间的耦合度。&lt;/p>
&lt;p>&lt;strong>IoC 是一个原则，而不是一个模式，以下模式（但不限于）实现了 IoC 原则。&lt;/strong>&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142011328.jpg" alt="ioc-patterns" />&lt;/p>
&lt;p>&lt;strong>Spring IoC 容器就像是一个工厂一样，当我们需要创建一个对象的时候，只需要配置好配置文件/注解即可，完全不用考虑对象是如何被创建出来的。&lt;/strong> IoC 容器负责创建对象，将对象连接在一起，配置这些对象，并从创建中处理这些对象的整个生命周期，直到它们被完全销毁。&lt;/p>
&lt;p>在实际项目中一个 Service 类如果有几百甚至上千个类作为它的底层，我们需要实例化这个 Service，你可能要每次都要搞清这个 Service 所有底层类的构造函数，这可能会把人逼疯。如果利用 IOC 的话，你&lt;strong>只需要配置好，然后在需要的地方引用&lt;/strong>就行了，这大大增加了项目的可维护性且降低了开发难度。&lt;/p>
&lt;blockquote>
&lt;p>关于 Spring IOC 的理解，推荐看这一下知乎的一个回答：https://www.zhihu.com/question/23277575/answer/169698662 ，非常不错。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>控制反转怎么理解呢?&lt;/strong> 举个例子：&amp;quot;&lt;strong>对象 a 依赖了对象 b，当对象 a 需要使用 对象 b 的时候必须自己去创建。但是当系统引入了 IOC 容器后， 对象 a 和对象 b 之前就失去了直接的联系。这个时候，当对象 a 需要使用 对象 b 的时候， 我们可以指定 IOC 容器去创建一个对象 b 注入到对象 a 中&lt;/strong>&amp;quot;。 对象 a 获得依赖对象 b 的过程,由&lt;strong>主动&lt;/strong>行为变为了&lt;strong>被动&lt;/strong>行为，控制权反转，这就是控制反转名字的由来。&lt;/p></description></item><item><title>Spring事务详情</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly03ly_spring-transaction/</link><pubDate>Wed, 08 Feb 2023 16:08:16 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly03ly_spring-transaction/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>前段时间答应读者的 &lt;strong>Spring 事务&lt;/strong> 分析总结终于来了。这部分内容比较重要，不论是对于工作还是面试，但是网上比较好的参考资料比较少。&lt;/p>
&lt;h2 id="什么是事务">
 什么是事务？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e4%ba%8b%e5%8a%a1">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>事务是逻辑上的一组操作，要么都执行，要么都不执行。&lt;/strong>&lt;/p>
&lt;p>相信大家应该都能背上面这句话了，下面我结合我们日常的真实开发来谈一谈。&lt;/p>
&lt;p>我们系统的&lt;strong>每个业务方法&lt;/strong>可能包括了&lt;strong>多个原子性的数据库操作&lt;/strong>，比如下面的 &lt;code>savePerson()&lt;/code> 方法中就有&lt;strong>两个&lt;/strong>原子性的数据库操作。&lt;strong>这些&lt;/strong>原子性的数据库&lt;strong>操作&lt;/strong>是&lt;strong>有依赖&lt;/strong>的，它们要么&lt;strong>都执行&lt;/strong>，要不就&lt;strong>都不执行&lt;/strong>。&lt;/p>
&lt;pre tabindex="0">&lt;code>	public void savePerson() {
		personDao.save(person);
		personDetailDao.save(personDetail);
	}
&lt;/code>&lt;/pre>&lt;p>另外，需要格外注意的是：&lt;strong>事务能否生效数据库引擎是否支持事务是关键。比如常用的 MySQL 数据库默认使用支持事务的 &lt;code>innodb&lt;/code>引擎。但是，如果把数据库引擎变为 &lt;code>myisam&lt;/code>，那么程序也就不再支持事务了！&lt;/strong>&lt;/p>
&lt;p>事务最经典也经常被拿出来说例子就是转账了。假如小明要给小红转账 1000 元，这个转账会涉及到两个关键操作就是：&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>将小明的余额减少 1000 元。&lt;/li>
&lt;li>将小红的余额增加 1000 元。&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>万一在这两个操作之间突然出现错误比如银行系统崩溃或者网络故障，导致小明余额减少而小红的余额没有增加，这样就不对了。事务就是保证这两个关键操作要么都成功，要么都要失败。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">OrdersService&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> AccountDao accountDao;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setOrdersDao&lt;/span>(AccountDao accountDao) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">accountDao&lt;/span> &lt;span style="color:#f92672">=&lt;/span> accountDao;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Transactional&lt;/span>(propagation &lt;span style="color:#f92672">=&lt;/span> Propagation.&lt;span style="color:#a6e22e">REQUIRED&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> isolation &lt;span style="color:#f92672">=&lt;/span> Isolation.&lt;span style="color:#a6e22e">DEFAULT&lt;/span>, readOnly &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>, timeout &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">accountMoney&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//小红账户多1000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		accountDao.&lt;span style="color:#a6e22e">addMoney&lt;/span>(1000,xiaohong);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">//模拟突然出现的异常，比如银行中可能为突然停电等等&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//如果没有配置事务管理的话会造成，小红账户多了1000而小明账户没有少钱&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 10 &lt;span style="color:#f92672">/&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">//小王账户少1000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		accountDao.&lt;span style="color:#a6e22e">reduceMoney&lt;/span>(1000,xiaoming);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>另外，数据库事务的 &lt;strong>ACID&lt;/strong> 四大特性是事务的基础，下面简单来了解一下。&lt;/p></description></item><item><title>Spring/SpringBoot常用注解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly02ly_spring-annotations/</link><pubDate>Wed, 08 Feb 2023 14:56:32 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly02ly_spring-annotations/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h3 id="0前言">
 0.前言
 &lt;a class="anchor" href="#0%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h3>
&lt;p>可以毫不夸张地说，这篇文章介绍的 Spring/SpringBoot 常用注解基本已经涵盖你工作中遇到的大部分常用的场景。对于每一个注解我都说了具体用法，掌握搞懂，使用 SpringBoot 来开发项目基本没啥大问题了！&lt;/p>
&lt;p>&lt;strong>为什么要写这篇文章？&lt;/strong>&lt;/p>
&lt;p>最近看到网上有一篇关于 SpringBoot 常用注解的文章被转载的比较多，我看了文章内容之后属实觉得质量有点低，并且有点会误导没有太多实际使用经验的人（这些人又占据了大多数）。所以，自己索性花了大概 两天时间简单总结一下了。&lt;/p>
&lt;p>&lt;strong>因为我个人的能力和精力有限，如果有任何不对或者需要完善的地方，请帮忙指出！Guide 哥感激不尽！&lt;/strong>&lt;/p>
&lt;h3 id="1-springbootapplication">
 1. &lt;code>@SpringBootApplication&lt;/code>
 &lt;a class="anchor" href="#1-springbootapplication">#&lt;/a>
&lt;/h3>
&lt;p>这里先单独拎出&lt;code>@SpringBootApplication&lt;/code> 注解说一下，虽然我们一般不会主动去使用它。&lt;/p>
&lt;p>&lt;em>Guide 哥：这个注解是 Spring Boot 项目的基石，创建 SpringBoot 项目之后会默认在主类加上。&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@SpringBootApplication&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SpringSecurityJwtGuideApplication&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(java.&lt;span style="color:#a6e22e">lang&lt;/span>.&lt;span style="color:#a6e22e">String&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SpringApplication.&lt;span style="color:#a6e22e">run&lt;/span>(SpringSecurityJwtGuideApplication.&lt;span style="color:#a6e22e">class&lt;/span>, args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们可以把 &lt;code>@SpringBootApplication&lt;/code>看作是 &lt;code>@Configuration&lt;/code>、&lt;code>@EnableAutoConfiguration&lt;/code>、&lt;code>@ComponentScan&lt;/code> 注解的集合。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> org.springframework.boot.autoconfigure;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">TYPE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Documented&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Inherited&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@SpringBootConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@EnableAutoConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@ComponentScan&lt;/span>(excludeFilters &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">@Filter&lt;/span>(type &lt;span style="color:#f92672">=&lt;/span> FilterType.&lt;span style="color:#a6e22e">CUSTOM&lt;/span>, classes &lt;span style="color:#f92672">=&lt;/span> TypeExcludeFilter.&lt;span style="color:#a6e22e">class&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">@Filter&lt;/span>(type &lt;span style="color:#f92672">=&lt;/span> FilterType.&lt;span style="color:#a6e22e">CUSTOM&lt;/span>, classes &lt;span style="color:#f92672">=&lt;/span> AutoConfigurationExcludeFilter.&lt;span style="color:#a6e22e">class&lt;/span>) })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> SpringBootApplication {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> org.springframework.boot;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Target&lt;/span>(ElementType.&lt;span style="color:#a6e22e">TYPE&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Retention&lt;/span>(RetentionPolicy.&lt;span style="color:#a6e22e">RUNTIME&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Documented&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">@interface&lt;/span> SpringBootConfiguration {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>根据 SpringBoot 官网，这三个注解的作用分别是：&lt;/p></description></item><item><title>spring 常见面试题总结</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly01ly_spring-knowledge-and-questions-summary/</link><pubDate>Tue, 07 Feb 2023 16:48:03 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lybly_framework/ly01ly_spring-knowledge-and-questions-summary/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>这篇文章主要是想通过一些问题，加深大家对于 Spring 的理解，所以不会涉及太多的代码！&lt;/p>
&lt;p>下面的很多问题我自己在使用 Spring 的过程中也并没有注意，自己也是临时查阅了很多资料和书籍补上的。网上也有一些很多关于 Spring 常见问题/面试题整理的文章，我感觉大部分都是互相 copy，而且很多问题也不是很好，有些回答也存在问题。所以，自己花了一周的业余时间整理了一下，希望对大家有帮助。&lt;/p>
&lt;h2 id="spring-基础">
 Spring 基础
 &lt;a class="anchor" href="#spring-%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是-spring-框架">
 什么是 Spring 框架?
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-spring-%e6%a1%86%e6%9e%b6">#&lt;/a>
&lt;/h3>
&lt;p>Spring 是一款&lt;strong>开源&lt;/strong>的&lt;strong>轻量级 Java 开发框架&lt;/strong>，旨在提高开发人员的&lt;strong>开发效率&lt;/strong>以及系统的&lt;strong>可维护性&lt;/strong>。&lt;/p>
&lt;p>我们一般说 Spring 框架指的都是 Spring Framework，它是很&lt;strong>多模块的集合&lt;/strong>，使用这些模块可以很方便地协助我们进行开发，比如说 Spring 支持 &lt;strong>IoC&lt;/strong>（&lt;strong>Inversion of Control:控制反转&lt;/strong>） 和 &lt;strong>AOP&lt;/strong>(&lt;strong>Aspect-Oriented Programming:面向切面编程&lt;/strong>)、可以很方便地&lt;strong>对数据库进行访问&lt;/strong>、可以很&lt;strong>方便地集成第三方组件&lt;/strong>（&lt;strong>电子邮件&lt;/strong>，&lt;strong>任务&lt;/strong>，&lt;strong>调度&lt;/strong>，缓存等等）、对&lt;strong>单元测试&lt;/strong>支持比较好、支持 &lt;strong>RESTful Java 应用程序&lt;/strong>的开发。&lt;/p>
&lt;p>[&lt;img src="img/ly-20241212142008049.jpg" alt="img" />&lt;/p>
&lt;p>Spring 最核心的思想就是不重新造轮子，&lt;strong>开箱即用&lt;/strong>，提高开发效率。&lt;/p>
&lt;p>Spring 翻译过来就是春天的意思，可见其目标和使命就是为 Java 程序员带来春天啊！感动！&lt;/p>
&lt;p>🤐 多提一嘴 ： &lt;strong>语言的流行通常需要一个杀手级的应用，Spring 就是 Java 生态的一个杀手级的应用框架。&lt;/strong>&lt;/p>
&lt;p>Spring 提供的核心功能主要是 &lt;strong>IoC&lt;/strong> 和 &lt;strong>AOP&lt;/strong>。学习 Spring ，一定要把 IoC 和 AOP 的核心思想搞懂！&lt;/p>
&lt;ul>
&lt;li>Spring 官网：https://spring.io/&lt;/li>
&lt;li>Github 地址： 
&lt;a target="_blank" href="https://github.com/spring-projects/spring-framework">https://github.com/spring-projects/spring-framework&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="spring-包含的模块有哪些">
 Spring 包含的模块有哪些？
 &lt;a class="anchor" href="#spring-%e5%8c%85%e5%90%ab%e7%9a%84%e6%a8%a1%e5%9d%97%e6%9c%89%e5%93%aa%e4%ba%9b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>Spring4.x 版本&lt;/strong> ：&lt;/p></description></item><item><title>git</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyaly_dev_tools/git/</link><pubDate>Tue, 07 Feb 2023 16:14:19 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyaly_dev_tools/git/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="版本控制">
 版本控制
 &lt;a class="anchor" href="#%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是版本控制">
 什么是版本控制
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6">#&lt;/a>
&lt;/h3>
&lt;p>&lt;strong>版本控制&lt;/strong>是一种&lt;strong>记录一个&lt;/strong>或&lt;strong>若干文件内容变化&lt;/strong>，以便&lt;strong>将来查阅特定版本修订情况&lt;/strong>的系统。 除了&lt;strong>项目源代码&lt;/strong>，你还可以对&lt;strong>任何类型的文件&lt;/strong>进行版本控制。&lt;/p>
&lt;h3 id="为什么要版本控制">
 为什么要版本控制
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6">#&lt;/a>
&lt;/h3>
&lt;p>有了它你就可以将某个文件&lt;strong>回溯到之前的状态&lt;/strong>，甚至将&lt;strong>整个项目都回退到过去某个时间点&lt;/strong>的状态，你可以&lt;strong>比较&lt;/strong>文件的变化细节，&lt;strong>查出最后&lt;/strong>是谁修改了哪个地方，从而&lt;strong>找出导致怪异问题&lt;/strong>出现的原因，又是&lt;strong>谁在何时报告了&lt;/strong>某个功能缺陷等等。&lt;/p>
&lt;h3 id="本地版本控制系统">
 本地版本控制系统
 &lt;a class="anchor" href="#%e6%9c%ac%e5%9c%b0%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6%e7%b3%bb%e7%bb%9f">#&lt;/a>
&lt;/h3>
&lt;p>许多人习惯用&lt;strong>复制整个项目&lt;/strong>目录的方式来&lt;strong>保存不同的版本&lt;/strong>，或许还会&lt;strong>改名加上备份时间&lt;/strong>以示区别。 这么做唯一的好处就是&lt;strong>简单&lt;/strong>，但是特别容&lt;strong>易犯错&lt;/strong>。 有时候会&lt;strong>混淆&lt;/strong>所在的工作目录，一不小心会&lt;strong>写错&lt;/strong>文件或者&lt;strong>覆盖&lt;/strong>意想外的文件。&lt;/p>
&lt;p>为了解决这个问题，人们很久以前就开发了许多种&lt;strong>本地版本控制&lt;/strong>系统，大多都是采用某种&lt;strong>简单的数据库&lt;/strong>来&lt;strong>记录文件的历次更新&lt;/strong>差异。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142006392.png" alt="image.png" />&lt;/p>
&lt;h3 id="集中化的版本控制系统">
 集中化的版本控制系统
 &lt;a class="anchor" href="#%e9%9b%86%e4%b8%ad%e5%8c%96%e7%9a%84%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6%e7%b3%bb%e7%bb%9f">#&lt;/a>
&lt;/h3>
&lt;p>接下来人们又遇到一个问题，如何让在&lt;strong>不同系统上的开发者协同&lt;/strong>工作？ 于是，&lt;strong>集中化的版本控制&lt;/strong>系统（&lt;strong>Centralized Version Control Systems&lt;/strong>，简称 &lt;strong>CVCS&lt;/strong>）应运而生。&lt;/p>
&lt;p>集中化的版本控制系统都有一个&lt;strong>单一的集中管理的服务器&lt;/strong>，&lt;strong>保存所有文件的修订版本&lt;/strong>，而协同工作的人们都通过客户端&lt;strong>连到这台服务器&lt;/strong>，取出&lt;strong>最新&lt;/strong>的文件或者&lt;strong>提交更新&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142006663.png" alt="image.png" />&lt;/p>
&lt;p>这么做虽然解决了本地版本控制系统无法让在不同系统上的开发者协同工作的诟病，但也还是存在下面的问题：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>单点故障：&lt;/strong> &lt;strong>中央服务器宕机&lt;/strong>，则其他人无法使用；如果中心数据库磁盘损坏又没有进行备份，你将丢失所有数据。本地版本控制系统也存在类似问题，只要整个项目的历史记录被&lt;strong>保存在单一&lt;/strong>位置，就有&lt;strong>丢失所有历史更新记录&lt;/strong>的风险。&lt;/li>
&lt;li>&lt;strong>必须联网才能工作：&lt;/strong> &lt;strong>受网络&lt;/strong>状况、带宽影响。&lt;/li>
&lt;/ul>
&lt;h3 id="分布式版本控制系统">
 分布式版本控制系统
 &lt;a class="anchor" href="#%e5%88%86%e5%b8%83%e5%bc%8f%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6%e7%b3%bb%e7%bb%9f">#&lt;/a>
&lt;/h3>
&lt;p>于是分布式版本控制系统（&lt;strong>Distributed Version Control System&lt;/strong>，简称 &lt;strong>DVCS&lt;/strong>）面世了。 Git 就是一个典型的分布式版本控制系统。&lt;/p>
&lt;p>这类系统，客户端并&lt;strong>不只提取最新版本的文件快照&lt;/strong>，而是把&lt;strong>代码仓库完整地镜像&lt;/strong>下来。 这么一来，任何一处协同工作用的服务器发生故障，事后都可以用&lt;strong>任何一个镜像出来的本地仓库&lt;/strong>恢复。 因为每一次的克隆操作，实际上都是一次对&lt;strong>代码仓库的完整备份&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142006803.png" alt="image.png" />&lt;/p>
&lt;p>分布式版本控制系统可以&lt;strong>不用联网就可以工作&lt;/strong>，因为每个人的电脑上都是完整的版本库，当你修改了某个文件后，你只需要&lt;strong>将自己的修改推送给别人&lt;/strong>就可以了。但是，在实际使用分布式版本控制系统的时候，很少会&lt;strong>直接进行推送&lt;/strong>修改，而是&lt;strong>使用一台充当“中央服务器”&lt;strong>的东西。这个服务器的作用仅仅是用来&lt;/strong>方便“交换”大家的修改&lt;/strong>，没有它大家也一样干活，只是交换修改不方便而已。&lt;/p>
&lt;p>分布式版本控制系统的优势不单是不必联网这么简单，后面我们还会看到 Git 极其&lt;strong>强大的分支管理&lt;/strong>等功能。&lt;/p>
&lt;h2 id="认识-git">
 认识 Git
 &lt;a class="anchor" href="#%e8%ae%a4%e8%af%86-git">#&lt;/a>
&lt;/h2>
&lt;h3 id="git-简史">
 Git 简史
 &lt;a class="anchor" href="#git-%e7%ae%80%e5%8f%b2">#&lt;/a>
&lt;/h3>
&lt;p>Linux 内核项目组当时使用分布式版本控制系统 &lt;strong>BitKeeper&lt;/strong> 来管理和维护代码。但是，后来开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。 Linux 开源社区（特别是 Linux 的缔造者 &lt;strong>Linus Torvalds&lt;/strong>）基于使用 BitKeeper 时的经验教训，开发出自己的版本系统，而且对新的版本控制系统做了很多改进。&lt;/p></description></item><item><title>maven</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyaly_dev_tools/maven/</link><pubDate>Tue, 07 Feb 2023 13:28:19 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/lyaly_dev_tools/maven/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>这部分内容主要根据 Maven 官方文档整理，做了对应的删减，主要保留比较重要的部分，不涉及实战，主要是一些重要概念的介绍。&lt;/p>
&lt;/blockquote>
&lt;h2 id="maven-介绍">
 Maven 介绍
 &lt;a class="anchor" href="#maven-%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;p>
&lt;a target="_blank" href="https://github.com/apache/maven">Maven&lt;/a> 官方文档是这样介绍的 Maven 的：&lt;/p>
&lt;blockquote>
&lt;p>Apache Maven is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project&amp;rsquo;s build, reporting and documentation from a central piece of information.&lt;/p>
&lt;p>Apache Maven 的本质是一个&lt;strong>软件项目管理&lt;/strong>和&lt;strong>理解&lt;/strong>工具。基于&lt;strong>项目对象模型&lt;/strong> (&lt;strong>Project Object Model&lt;/strong>，POM) 的概念，Maven 可以从&lt;strong>一条中心信息&lt;/strong> &lt;strong>管理&lt;/strong>项目的&lt;strong>构建&lt;/strong>、&lt;strong>报告&lt;/strong>和&lt;strong>文档&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>什么是 POM？&lt;/strong> 每一个 Maven 工程都有一个 &lt;strong>&lt;code>pom.xml&lt;/code>&lt;/strong> 文件，位于根目录中，包含项目&lt;strong>构建生命周期&lt;/strong>的详细信息。通过 &lt;code>pom.xml&lt;/code> 文件，我们可以定义&lt;strong>项目&lt;/strong>的&lt;strong>坐标&lt;/strong>、&lt;strong>项目依赖&lt;/strong>、&lt;strong>项目信息&lt;/strong>、&lt;strong>插件信息&lt;/strong>等等配置。&lt;/p>
&lt;p>对于开发者来说，Maven 的主要作用主要有 3 个：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>项目构建&lt;/strong> ：提供&lt;strong>标准&lt;/strong>的、&lt;strong>跨平台&lt;/strong>的&lt;strong>自动化项目构建&lt;/strong>方式。&lt;/li>
&lt;li>&lt;strong>依赖管理&lt;/strong> ：&lt;strong>方便快捷&lt;/strong>的&lt;strong>管理项目依赖的资源&lt;/strong>（&lt;strong>jar 包&lt;/strong>），避免&lt;strong>资源间的版本冲突&lt;/strong>问题。&lt;/li>
&lt;li>&lt;strong>统一开发结构&lt;/strong> ：提供&lt;strong>标准&lt;/strong>的、&lt;strong>统一&lt;/strong>的&lt;strong>项目结构&lt;/strong>。&lt;/li>
&lt;/ol>
&lt;p>关于 Maven 的基本使用这里就不介绍了，建议看看官网的 5 分钟上手 Maven 的教程：
&lt;a target="_blank" href="https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html">Maven in 5 Minutes&lt;/a> 。&lt;/p></description></item><item><title>Atomic预备知识</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly030301lyatomicpre/</link><pubDate>Fri, 03 Feb 2023 11:04:33 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly030301lyatomicpre/</guid><description>&lt;h3 id="java实现cas的原理非javaguide">
 Java实现CAS的原理[非javaguide]
 &lt;a class="anchor" href="#java%e5%ae%9e%e7%8e%b0cas%e7%9a%84%e5%8e%9f%e7%90%86%e9%9d%9ejavaguide">#&lt;/a>
&lt;/h3>
&lt;p>i&lt;ins>是非线程安全的，因为**i&lt;/ins>不是原子&lt;strong>操作；可以使用&lt;/strong>synchronized和CAS实现加锁**&lt;/p>
&lt;p>&lt;strong>synchronized是悲观锁&lt;/strong>，一旦获得锁，其他线程进入后就会阻塞等待锁；而&lt;strong>CAS是乐观锁&lt;/strong>，执行时不会加锁，假设没有冲突，&lt;strong>如果因为冲突失败了就重试&lt;/strong>，直到成功&lt;/p>
&lt;ul>
&lt;li>
&lt;p>乐观锁和悲观锁&lt;/p>
&lt;ul>
&lt;li>这是一种分类方式&lt;/li>
&lt;li>&lt;strong>悲观锁&lt;/strong>，总是认为&lt;strong>每次访问共享资源会发生冲突&lt;/strong>，所以&lt;strong>必须对每次数据操作加锁&lt;/strong>，以&lt;strong>保证临界区的程序同一时间只能有一个线程&lt;/strong>在执行&lt;/li>
&lt;li>乐观锁，又称**“无锁”**，&lt;strong>假设对共享资源访问没有冲突&lt;/strong>，线程可以不停的执行，无需加锁无需等待；一旦发生冲突，通常是使用一种称为CAS的技术保证线程执行安全
&lt;ul>
&lt;li>无锁没有锁的存在，因此不可能发生死锁，即&lt;strong>乐观锁天生免疫死锁&lt;/strong>&lt;/li>
&lt;li>乐观锁用于**“读多写少”&lt;strong>的环境，&lt;strong>避免加锁频繁影响性能&lt;/strong>；悲观锁用于&lt;/strong>“写多读少”&lt;strong>，避免&lt;/strong>频繁失败及重试**影响性能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>CAS概念，即CompareAndSwap ，比较和交换，CAS中，有三个值（概念上）&lt;br>
V：要更新的变量(var)；E：期望值（expected）；N：新值（new）
判断V是否等于E，如果等于，将V的值设置为N；如果不等，说明已经有其它线程更新了V，则当前线程放弃更新，什么都不做。
一般来说，预期值E本质上指的是“旧值”（判断是否修改了）&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>如果有一个多个线程共享的变量&lt;code>i&lt;/code>原本等于5，我现在在线程A中，想把它设置为新的值6;&lt;/li>
&lt;li>我们使用CAS来做这个事情；&lt;/li>
&lt;li>（首先要把原来的值5在线程中保存起来）&lt;/li>
&lt;li>接下来是原子操作：首先我们&lt;strong>用（现在的i）去与5对比，发现它等于5，说明没有被其它线程改过，那我就把它设置为新的值6&lt;/strong>，此次CAS成功，&lt;code>i&lt;/code>的值被设置成了6；&lt;/li>
&lt;li>如果不等于5，说明&lt;code>i&lt;/code>被其它线程改过了（比如现在&lt;code>i&lt;/code>的值为2），那么我就什么也不做，此次CAS失败，&lt;code>i&lt;/code>的值仍然为2。&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>其中i为V，5为E，6为N&lt;/p>
&lt;/blockquote>
&lt;p>CAS是一种原子操作，它是一种系统原语，是一条CPU原子指令，从CPU层面保证它的原子性（&lt;strong>不可能出现说，判断了对比了i为5之后，正准备更新它的值，此时该值被其他线程改了&lt;/strong>）&lt;/p>
&lt;p>当&lt;strong>多个线程同时使用CAS操作一个变量&lt;/strong>时，&lt;strong>只有一个会胜出，并成功更新&lt;/strong>，&lt;strong>其余均会失败&lt;/strong>，但&lt;strong>失败的线程并不会被挂起&lt;/strong>，仅是&lt;strong>被告知失败，并且允许再次尝试&lt;/strong>，当然也&lt;strong>允许失败的线程放弃&lt;/strong>操作。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Java实现CAS的原理 - Unsafe类&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在Java中，如果一个方法是native的，那Java就不负责具体实现它，而是交给底层的JVM使用c或者c++去实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java中有一个Unsafe类，在sun.misc包中，里面有一些native方法，其中包括：&lt;/p>
&lt;blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">compareAndSwapObject&lt;/span>(Object o, &lt;span style="color:#66d9ef">long&lt;/span> offset,Object expected, Object x);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">compareAndSwapInt&lt;/span>(Object o, &lt;span style="color:#66d9ef">long&lt;/span> offset,&lt;span style="color:#66d9ef">int&lt;/span> expected,&lt;span style="color:#66d9ef">int&lt;/span> x);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">compareAndSwapLong&lt;/span>(Object o, &lt;span style="color:#66d9ef">long&lt;/span> offset,&lt;span style="color:#66d9ef">long&lt;/span> expected,&lt;span style="color:#66d9ef">long&lt;/span> x);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//------&amp;gt;AtomicInteger.class&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AtomicInteger&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Number &lt;span style="color:#66d9ef">implements&lt;/span> java.&lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">Serializable&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> serialVersionUID &lt;span style="color:#f92672">=&lt;/span> 6214790243416807050L;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// setup to use Unsafe.compareAndSwapInt for updates&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Unsafe unsafe &lt;span style="color:#f92672">=&lt;/span> Unsafe.&lt;span style="color:#a6e22e">getUnsafe&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> valueOffset;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> valueOffset &lt;span style="color:#f92672">=&lt;/span> unsafe.&lt;span style="color:#a6e22e">objectFieldOffset&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (AtomicInteger.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getDeclaredField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;value&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception ex) { &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Error(ex); }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">volatile&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getAndIncrement&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> unsafe.&lt;span style="color:#a6e22e">getAndAddInt&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>, valueOffset, 1);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;pre>&lt;code>}
&lt;/code>&lt;/pre>
&lt;p>}&lt;/p></description></item><item><title>MySQL高性能优化规范建议总结</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0611lymysql-high-performance-optimization-specification-recommendations/</link><pubDate>Fri, 20 Jan 2023 11:36:34 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0611lymysql-high-performance-optimization-specification-recommendations/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>索引优化相关&lt;/p>
&lt;ol>
&lt;li>in 代替 or&lt;/li>
&lt;li>not exist 代替 not in&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h1 id="数据库命名规范">
 数据库命名规范
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e5%91%bd%e5%90%8d%e8%a7%84%e8%8c%83">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>所有&lt;strong>数据库对象&lt;/strong>名称必须使用&lt;strong>小写字母&lt;/strong>并用&lt;strong>下划线分割&lt;/strong>&lt;/li>
&lt;li>所有数据库对象名称&lt;strong>禁止使用 MySQL 保留关键字&lt;/strong>（如果表名中包含关键字查询时，需要将其用单引号括起来）&lt;/li>
&lt;li>数据库对象的命名要能做到&lt;strong>见名识意&lt;/strong>，并且最好&lt;strong>不要超过 32 个&lt;/strong>字符&lt;/li>
&lt;li>&lt;strong>临时库表&lt;/strong>必须&lt;strong>以 &lt;code>tmp_&lt;/code> 为前缀&lt;/strong>并以日期为后缀，&lt;strong>备份表&lt;/strong>必须&lt;strong>以 &lt;code>bak_&lt;/code> 为前缀&lt;/strong>并&lt;strong>以日期 (时间戳) 为后缀&lt;/strong>&lt;/li>
&lt;li>所有&lt;strong>存储相同数据的列名和列类型&lt;/strong>必须一致（&lt;strong>一般作为关联列&lt;/strong>，如果查询时关联列&lt;strong>类型不一致会自动进行数据类型隐式转换&lt;/strong>，会&lt;strong>造成列上的索引失效&lt;/strong>，导致查询效率降低）&lt;/li>
&lt;/ul>
&lt;h1 id="数据库基本设计规范">
 数据库基本设计规范
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e5%9f%ba%e6%9c%ac%e8%ae%be%e8%ae%a1%e8%a7%84%e8%8c%83">#&lt;/a>
&lt;/h1>
&lt;h2 id="所有表必须使用innodb存储引擎">
 所有表必须使用InnoDB存储引擎
 &lt;a class="anchor" href="#%e6%89%80%e6%9c%89%e8%a1%a8%e5%bf%85%e9%a1%bb%e4%bd%bf%e7%94%a8innodb%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>没有特殊要求（即 InnoDB 无法满足的功能如：列存储，存储空间数据等）的情况下，所有表必须使用 InnoDB 存储引擎（MySQL5.5 之前默认使用 Myisam，5.6 以后默认的为 InnoDB）。&lt;/li>
&lt;li>InnoDB 支持&lt;strong>事务&lt;/strong>，支持&lt;strong>行级锁&lt;/strong>，更好的&lt;strong>恢复性&lt;/strong>，&lt;strong>高并发&lt;/strong>下性能更好&lt;/li>
&lt;/ul>
&lt;h2 id="数据库和表的字符集统一使用utf-8">
 数据库和表的字符集统一使用UTF-8
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%ba%93%e5%92%8c%e8%a1%a8%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86%e7%bb%9f%e4%b8%80%e4%bd%bf%e7%94%a8utf-8">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>兼容性&lt;/strong>更好，&lt;strong>统一字符集&lt;/strong>可以避免由于字符集转换产生的&lt;strong>乱码&lt;/strong>，不同的字符集进行比较前需要进行转换会造成&lt;strong>索引失效&lt;/strong>，如果数据库中有&lt;strong>存储 emoji 表情&lt;/strong>的需要，字符集需要采用 &lt;strong>utf8mb4&lt;/strong> 字符集。&lt;/p>
&lt;p>参考文章：&lt;/p>
&lt;ul>
&lt;li>
&lt;a target="_blank" href="https://blog.csdn.net/horses/article/details/107243447">MySQL 字符集不一致导致索引失效的一个真实案例open in new window&lt;/a>&lt;/li>
&lt;li>[MySQL 字符集详解&lt;/li>
&lt;/ul>
&lt;h2 id="所有表和字段都需要添加注释">
 所有表和字段都需要添加注释
 &lt;a class="anchor" href="#%e6%89%80%e6%9c%89%e8%a1%a8%e5%92%8c%e5%ad%97%e6%ae%b5%e9%83%bd%e9%9c%80%e8%a6%81%e6%b7%bb%e5%8a%a0%e6%b3%a8%e9%87%8a">#&lt;/a>
&lt;/h2>
&lt;p>使用 &lt;strong>comment 从句添加表&lt;/strong>和&lt;strong>列的备注&lt;/strong>，从一开始就进行数据字典的维护&lt;/p>
&lt;h2 id="尽量控制单表数据量的大小建议控制在500万以内">
 尽量控制单表数据量的大小，建议控制在500万以内
 &lt;a class="anchor" href="#%e5%b0%bd%e9%87%8f%e6%8e%a7%e5%88%b6%e5%8d%95%e8%a1%a8%e6%95%b0%e6%8d%ae%e9%87%8f%e7%9a%84%e5%a4%a7%e5%b0%8f%e5%bb%ba%e8%ae%ae%e6%8e%a7%e5%88%b6%e5%9c%a8500%e4%b8%87%e4%bb%a5%e5%86%85">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>500 万并不是 MySQL 数据库的限制，&lt;strong>过大会造成修改表结构&lt;/strong>，&lt;strong>备份&lt;/strong>，&lt;strong>恢复&lt;/strong>都会有很大的问题。&lt;/p></description></item><item><title>MySQL常见面试题总结</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0610lymysql-questions-01/</link><pubDate>Fri, 20 Jan 2023 11:36:06 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0610lymysql-questions-01/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!====&lt;/p>
&lt;/blockquote>
&lt;h1 id="mysql基础">
 MySQL基础
 &lt;a class="anchor" href="#mysql%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h1>
&lt;h2 id="关系型数据库介绍">
 关系型数据库介绍
 &lt;a class="anchor" href="#%e5%85%b3%e7%b3%bb%e5%9e%8b%e6%95%b0%e6%8d%ae%e5%ba%93%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>关系型数据库&lt;/strong>，建立在&lt;strong>关系模型&lt;/strong>的基础上的数据库。表明数据库中所&lt;strong>存储&lt;/strong>的数据之间的&lt;strong>联系&lt;/strong>（一对一、一对多、多对多）&lt;/li>
&lt;li>关系型数据库中，我们的数据都被&lt;strong>存放在各种表&lt;/strong>中（比如用户表），表中的&lt;strong>每一行&lt;/strong>存放着&lt;strong>一条数据（比如一个用户的信息）&lt;/strong>
&lt;img src="img/ly-20241212141910786.png" alt="关系型数据库表关系" />&lt;/li>
&lt;li>大部分关系型数据库都使用&lt;strong>SQL&lt;/strong>来操作数据库中的数据，并且大部分&lt;strong>关系型数据库&lt;/strong>都支持&lt;strong>事务&lt;/strong>的&lt;strong>四大特性（ACID）&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>常见的关系型数据库&lt;/strong>&lt;br>
&lt;strong>MySQL&lt;/strong>、&lt;strong>PostgreSQL&lt;/strong>、&lt;strong>Oracle&lt;/strong>、&lt;strong>SQL Server&lt;/strong>、&lt;strong>SQLite&lt;/strong>（&lt;strong>微信本地的聊天记录&lt;/strong>的存储就是用的 SQLite） &amp;hellip;&amp;hellip;&lt;/p>
&lt;h2 id="mysql介绍">
 MySQL介绍
 &lt;a class="anchor" href="#mysql%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212141911084.png" alt="img" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>MySQL是一种&lt;strong>关系型数据库&lt;/strong>，主要用于&lt;strong>持久化存储&lt;/strong>我们系统中的一些数据比如&lt;strong>用户信息&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>由于 MySQL 是&lt;strong>开源&lt;/strong>免费并且比较&lt;strong>成熟&lt;/strong>的数据库，因此，MySQL 被大量使用在各种系统中。任何人都可以在 &lt;strong>GPL(General Public License 通用性公开许可证)&lt;/strong> 的许可下下载并根据&lt;strong>个性化的需要&lt;/strong>对其进行&lt;strong>修改&lt;/strong>。MySQL 的默认端口号是&lt;strong>3306&lt;/strong>。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="mysql基础架构">
 MySQL基础架构
 &lt;a class="anchor" href="#mysql%e5%9f%ba%e7%a1%80%e6%9e%b6%e6%9e%84">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>MySQL的一个&lt;strong>简要机构图&lt;/strong>，客户端的一条&lt;strong>SQL语句&lt;/strong>在MySQL内部如何执行
&lt;img src="img/ly-20241212141911246.png" alt="ly-20241212141911246" />&lt;/li>
&lt;li>MySQL主要由几部分构成
&lt;ol>
&lt;li>&lt;strong>连接器&lt;/strong>：&lt;strong>身份认证&lt;/strong>和&lt;strong>权限相关&lt;/strong>（登录MySQL的时候）&lt;/li>
&lt;li>&lt;strong>查询缓存&lt;/strong>：执行&lt;strong>查询&lt;/strong>语句的时候，会先&lt;strong>查询缓存&lt;/strong>（MySQL8.0版本后&lt;strong>移除&lt;/strong>，因为这个功能不太实用）&lt;/li>
&lt;li>&lt;strong>分析器&lt;/strong>：&lt;strong>没有命中缓存&lt;/strong>的话，SQL语句就会经过分析器，分析器说白了就是要先看你的SQL语句&lt;strong>要干嘛&lt;/strong>，再检查你的&lt;strong>SQL语句语法&lt;/strong>是否正确&lt;/li>
&lt;li>&lt;strong>优化器&lt;/strong>：按照&lt;strong>MySQL认为最优的方案&lt;/strong>去执行&lt;/li>
&lt;li>&lt;strong>执行器&lt;/strong>：&lt;strong>执行&lt;/strong>语句，然后从&lt;strong>存储引擎返回&lt;/strong>数据。执行语句之前会&lt;strong>先判断是否有权限&lt;/strong>，如果没有权限，就会报错&lt;/li>
&lt;li>&lt;strong>插件式存储引擎&lt;/strong>：主要负责&lt;strong>数据&lt;/strong>的&lt;strong>存储&lt;/strong>和&lt;strong>读取&lt;/strong>，采用的是&lt;strong>插件式架构&lt;/strong>，支持&lt;strong>InnoDB&lt;/strong>、&lt;strong>MyISAM&lt;/strong>、&lt;strong>Memory&lt;/strong>等多种存储引擎&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h1 id="mysql存储引擎">
 MySQL存储引擎
 &lt;a class="anchor" href="#mysql%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e">#&lt;/a>
&lt;/h1>
&lt;p>MySQL&lt;strong>核心&lt;/strong>在于&lt;strong>存储引擎&lt;/strong>&lt;/p>
&lt;h2 id="mysql支持哪些存储引擎默认使用哪个">
 MySQL支持哪些存储引擎？默认使用哪个？
 &lt;a class="anchor" href="#mysql%e6%94%af%e6%8c%81%e5%93%aa%e4%ba%9b%e5%ad%98%e5%82%a8%e5%bc%95%e6%93%8e%e9%bb%98%e8%ae%a4%e4%bd%bf%e7%94%a8%e5%93%aa%e4%b8%aa">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>MySQL支持&lt;strong>多种存储引擎&lt;/strong>，可以通过&lt;code>show engines&lt;/code>命令来&lt;strong>查看MySQL支持的所有存储引擎&lt;/strong>
&lt;img src="img/ly-20241212141911409.png" alt="查看 MySQL 提供的所有存储引擎" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>默认&lt;/strong>存储引擎为InnoDB，并且，所有存储引擎中&lt;strong>只有InnoDB是事务性存储引擎&lt;/strong>，也就是说&lt;strong>只有InnoDB支持事务&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>这里使用MySQL 8.x&lt;/strong>
MySQL 5.5.5之前，MyISAM是MySQL的默认存储引擎；5.5.5之后，InnoDB是MySQL的默认存储引擎，可以通过&lt;code>select version()&lt;/code>命令查看你的MySQL版本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>mysql&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#a6e22e">version&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+-----------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#a6e22e">version&lt;/span>() &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+-----------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span>.&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">27&lt;/span> &lt;span style="color:#f92672">|&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">+-----------+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span> row &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#66d9ef">set&lt;/span> (&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> sec) 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用&lt;code>show variables like %storage_engine%&lt;/code>命令直接查看MySQL&lt;strong>当前默认的存储引擎&lt;/strong> &lt;br>
&lt;img src="img/ly-20241212141911580.png" alt="查看 MySQL 当前默认的存储引擎" />&lt;/p></description></item><item><title>MySQL中的隐式转换造成的索引失效</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0609lyindex-invalidation-caused-by-implicit-conversion/</link><pubDate>Thu, 19 Jan 2023 17:10:48 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0609lyindex-invalidation-caused-by-implicit-conversion/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;p>本篇文章基于MySQL 5.7.26，原文：https://www.guitu18.com/post/2019/11/24/61.html&lt;/p>
&lt;/blockquote>
&lt;h1 id="前言">
 前言
 &lt;a class="anchor" href="#%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>关于&lt;strong>数据库优化&lt;/strong>，最常见的莫过于&lt;strong>索引失效&lt;/strong>，数据量多的时候比较明显，处理不及时会造成&lt;strong>雪球效应&lt;/strong>，最终导致&lt;strong>数据库卡死甚至瘫痪&lt;/strong>。&lt;/li>
&lt;li>这里说的是&lt;strong>隐式转换造成的索引失效&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h1 id="数据准备">
 数据准备
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e5%87%86%e5%a4%87">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 创建测试数据表
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> test1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#f92672">`&lt;/span>test1&lt;span style="color:#f92672">`&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>(&lt;span style="color:#ae81ff">11&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>num1&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>(&lt;span style="color:#ae81ff">11&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>num2&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">varchar&lt;/span>(&lt;span style="color:#ae81ff">11&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>type1&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>(&lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>type2&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>(&lt;span style="color:#ae81ff">4&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>str1&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">varchar&lt;/span>(&lt;span style="color:#ae81ff">100&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>str2&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">varchar&lt;/span>(&lt;span style="color:#ae81ff">100&lt;/span>) &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">KEY&lt;/span> &lt;span style="color:#f92672">`&lt;/span>num1&lt;span style="color:#f92672">`&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>num1&lt;span style="color:#f92672">`&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">KEY&lt;/span> &lt;span style="color:#f92672">`&lt;/span>num2&lt;span style="color:#f92672">`&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>num2&lt;span style="color:#f92672">`&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">KEY&lt;/span> &lt;span style="color:#f92672">`&lt;/span>type1&lt;span style="color:#f92672">`&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>type1&lt;span style="color:#f92672">`&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">KEY&lt;/span> &lt;span style="color:#f92672">`&lt;/span>str1&lt;span style="color:#f92672">`&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>str1&lt;span style="color:#f92672">`&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">KEY&lt;/span> &lt;span style="color:#f92672">`&lt;/span>str2&lt;span style="color:#f92672">`&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>str2&lt;span style="color:#f92672">`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) &lt;span style="color:#66d9ef">ENGINE&lt;/span>&lt;span style="color:#f92672">=&lt;/span>InnoDB &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">CHARSET&lt;/span>&lt;span style="color:#f92672">=&lt;/span>utf8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 创建存储过程
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">PROCEDURE&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> pre_test1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DELIMITER &lt;span style="color:#f92672">//&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">PROCEDURE&lt;/span> &lt;span style="color:#f92672">`&lt;/span>pre_test1&lt;span style="color:#f92672">`&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BEGIN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">DECLARE&lt;/span> i &lt;span style="color:#66d9ef">INT&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SET&lt;/span> autocommit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">WHILE&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">10000000&lt;/span> DO
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SET&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> i &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#f92672">@&lt;/span>str1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">SUBSTRING&lt;/span>(&lt;span style="color:#a6e22e">MD5&lt;/span>(&lt;span style="color:#a6e22e">RAND&lt;/span>()),&lt;span style="color:#ae81ff">1&lt;/span>,&lt;span style="color:#ae81ff">20&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- 每100条数据str2产生一个null值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> i &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">THEN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#f92672">@&lt;/span>str2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">ELSE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">SET&lt;/span> &lt;span style="color:#f92672">@&lt;/span>str2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">@&lt;/span>str1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> END &lt;span style="color:#66d9ef">IF&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#a6e22e">test1&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span>, &lt;span style="color:#f92672">`&lt;/span>num1&lt;span style="color:#f92672">`&lt;/span>, &lt;span style="color:#f92672">`&lt;/span>num2&lt;span style="color:#f92672">`&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>type1&lt;span style="color:#f92672">`&lt;/span>, &lt;span style="color:#f92672">`&lt;/span>type2&lt;span style="color:#f92672">`&lt;/span>, &lt;span style="color:#f92672">`&lt;/span>str1&lt;span style="color:#f92672">`&lt;/span>, &lt;span style="color:#f92672">`&lt;/span>str2&lt;span style="color:#f92672">`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">VALUES&lt;/span> (&lt;span style="color:#a6e22e">CONCAT&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>, i), &lt;span style="color:#a6e22e">CONCAT&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>, i),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">CONCAT&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>, i), i&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>, i&lt;span style="color:#f92672">%&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#f92672">@&lt;/span>str1, &lt;span style="color:#f92672">@&lt;/span>str2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">-- 事务优化，每一万条数据提交一次事务
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> i &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">10000&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#66d9ef">THEN&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> COMMIT;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> END &lt;span style="color:#66d9ef">IF&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> END &lt;span style="color:#66d9ef">WHILE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>END;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">//&lt;/span> DELIMITER ;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 执行存储过程
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">CALL&lt;/span> &lt;span style="color:#a6e22e">pre_test1&lt;/span>(); 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，七个字段，首先使用存储过程生成 1000 万条测试数据， 测试表一共建立了 7 个字段（包括主键），&lt;strong>&lt;code>num1&lt;/code>&lt;strong>和&lt;/strong>&lt;code>num2&lt;/code>&lt;strong>保存的是和&lt;code>ID&lt;/code>一样的顺序数字，其中&lt;/strong>&lt;code>num2&lt;/code>是字符串类型&lt;/strong>。 &lt;strong>&lt;code>type1&lt;/code>&lt;strong>和&lt;/strong>&lt;code>type2&lt;/code>&lt;strong>保存的都是主键对 5 的取模，目的是模拟实际应用中常用&lt;/strong>类似 type 类型&lt;/strong>的数据，但是**&lt;code>type2&lt;/code>是没有建立索引&lt;strong>的。 &lt;code>str1&lt;/code>和&lt;code>str2&lt;/code>都是保存了一个 &lt;strong>20 位长度的随机字符串&lt;/strong>，&lt;/strong>&lt;code>str1&lt;/code>不能为&lt;code>NULL&lt;/code>，&lt;code>str2&lt;/code>允许为&lt;code>NULL&lt;/code>&lt;strong>，相应的生成测试数据的时候我也会&lt;/strong>在&lt;code>str2&lt;/code>字段生产少量&lt;code>NULL&lt;/code>值**（每 100 条数据产生一个&lt;code>NULL&lt;/code>值）。&lt;/p></description></item><item><title>MySQL数据库时间类型数据存储建议</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0608lysome-thoughts-on-database-storage-time/</link><pubDate>Thu, 19 Jan 2023 17:10:06 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0608lysome-thoughts-on-database-storage-time/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="不要用字符串存储日期">
 不要用字符串存储日期
 &lt;a class="anchor" href="#%e4%b8%8d%e8%a6%81%e7%94%a8%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%ad%98%e5%82%a8%e6%97%a5%e6%9c%9f">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>优点：简单直白&lt;/li>
&lt;li>缺点
&lt;ol>
&lt;li>字符串&lt;strong>占有的空间更大&lt;/strong>&lt;/li>
&lt;li>字符串存储的日期&lt;strong>效率比较低&lt;/strong>（逐个字符进行比较），&lt;strong>无法用日期相关的API&lt;/strong>进行计算和比较&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h1 id="datetime和timestamp之间抉择">
 Datetime和Timestamp之间抉择
 &lt;a class="anchor" href="#datetime%e5%92%8ctimestamp%e4%b9%8b%e9%97%b4%e6%8a%89%e6%8b%a9">#&lt;/a>
&lt;/h1>
&lt;p>Datetime 和 Timestamp 是 MySQL 提供的两种&lt;strong>比较相似&lt;/strong>的保存时间的数据类型。他们两者究竟该如何选择呢？&lt;/p>
&lt;p>&lt;strong>通常我们都会首选 Timestamp&lt;/strong>&lt;/p>
&lt;h2 id="datetime类型没有时区信息">
 Datetime类型没有时区信息
 &lt;a class="anchor" href="#datetime%e7%b1%bb%e5%9e%8b%e6%b2%a1%e6%9c%89%e6%97%b6%e5%8c%ba%e4%bf%a1%e6%81%af">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>DateTime 类型是没有时区信息的（时区无关）&lt;/strong> ，DateTime 类型保存的时间都是&lt;strong>当前会话所设置的时区&lt;/strong>对应的时间。这样就会有什么问题呢？当你的时区更换之后，比如你的服务器更换地址或者更换客户端连接时区设置的话，就会导致你从数据库中读出的时间错误。不要小看这个问题，很多系统就是因为这个问题闹出了很多笑话。&lt;/li>
&lt;li>&lt;strong>Timestamp 和时区有关&lt;/strong>。Timestamp 类型字段的值会随着服务器时区的变化而变化，自动换算成相应的时间，说简单点就是&lt;strong>在不同时区&lt;/strong>，&lt;strong>查询到同一个条记录此字段的值会不一样&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>案例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 建表
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#f92672">`&lt;/span>time_zone_test&lt;span style="color:#f92672">`&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">bigint&lt;/span>(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">AUTO_INCREMENT&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>date_time&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">datetime&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">`&lt;/span>time_stamp&lt;span style="color:#f92672">`&lt;/span> &lt;span style="color:#66d9ef">timestamp&lt;/span> &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">CURRENT_TIMESTAMP&lt;/span> &lt;span style="color:#66d9ef">ON&lt;/span> &lt;span style="color:#66d9ef">UPDATE&lt;/span> &lt;span style="color:#66d9ef">CURRENT_TIMESTAMP&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span> (&lt;span style="color:#f92672">`&lt;/span>id&lt;span style="color:#f92672">`&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>) &lt;span style="color:#66d9ef">ENGINE&lt;/span>&lt;span style="color:#f92672">=&lt;/span>InnoDB &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">CHARSET&lt;/span>&lt;span style="color:#f92672">=&lt;/span>utf8; 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 插入数据
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#a6e22e">time_zone_test&lt;/span>(date_time,time_stamp) &lt;span style="color:#66d9ef">VALUES&lt;/span>(&lt;span style="color:#a6e22e">NOW&lt;/span>(),&lt;span style="color:#a6e22e">NOW&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 查看数据
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">select&lt;/span> date_time,time_stamp &lt;span style="color:#66d9ef">from&lt;/span> time_zone_test;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 结果
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> +---------------------+---------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">| date_time | time_stamp |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">+---------------------+---------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">| 2020-01-11 09:53:32 | 2020-01-11 09:53:32 |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">+---------------------+---------------------+
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">------ 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改时区并查看数据&lt;/p></description></item><item><title>SQL语句在MySQL中的执行过程</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0605lyhow-sql-executed-in-mysql/</link><pubDate>Thu, 19 Jan 2023 10:20:57 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0605lyhow-sql-executed-in-mysql/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;p>原文 
&lt;a target="_blank" href="https://github.com/kinglaw1204">https://github.com/kinglaw1204&lt;/a> 感谢作者&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>本篇文章会分析&lt;strong>一个SQL语句&lt;/strong>在MySQL的&lt;strong>执行流程&lt;/strong>，包括&lt;strong>SQL的查询&lt;/strong>在MySQL内部会怎么&lt;strong>流转&lt;/strong>，&lt;strong>SQL语句的更新&lt;/strong>是怎么完成的&lt;/li>
&lt;li>分析之前先看看&lt;strong>MySQL的基础架构&lt;/strong>，知道了MySQL由&lt;strong>哪些组件&lt;/strong>组成以及&lt;strong>这些组件的作用&lt;/strong>是什么，可以帮助我们&lt;strong>理解&lt;/strong>和&lt;strong>解决&lt;/strong>这些问题&lt;/li>
&lt;/ul>
&lt;h1 id="mysql基础架构分析">
 MySQL基础架构分析
 &lt;a class="anchor" href="#mysql%e5%9f%ba%e7%a1%80%e6%9e%b6%e6%9e%84%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20241212141908611.png" alt="ly-20241212141908611" />&lt;/p>
&lt;h2 id="mysql基本架构概览">
 MySQL基本架构概览
 &lt;a class="anchor" href="#mysql%e5%9f%ba%e6%9c%ac%e6%9e%b6%e6%9e%84%e6%a6%82%e8%a7%88">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>下图是MySQL的简要架构图，从下图可以看到&lt;strong>用户的SQL语句&lt;/strong>在MySQL内部是&lt;strong>如何执行的&lt;/strong>&lt;/li>
&lt;li>先简单介绍一个下图涉及的一些组件的基本作用
&lt;img src="img/ly-20241212141908907.png" alt="ly-20241212141908907" />
&lt;ol>
&lt;li>&lt;strong>连接器&lt;/strong>： &lt;strong>身份认证&lt;/strong>和&lt;strong>权限相关&lt;/strong>（登录MySQL的时候）&lt;/li>
&lt;li>&lt;strong>查询缓存&lt;/strong>：执行查询语句的时候，会&lt;strong>先查询缓存&lt;/strong>（MySQL8.0版本后移除，因为这个功能不太实用）&lt;/li>
&lt;li>&lt;strong>分析器&lt;/strong>：&lt;strong>没有命中&lt;/strong>缓存的话，SQL语句就会经过分析器，分析器说白了就是要&lt;strong>先看&lt;/strong>你的SQL语句干嘛，再&lt;strong>检查&lt;/strong>你的SQL语句&lt;strong>语法&lt;/strong>是否正确&lt;/li>
&lt;li>&lt;strong>优化器&lt;/strong>：按照&lt;strong>MySQL认为最优的方案&lt;/strong>去执行&lt;/li>
&lt;li>&lt;strong>执行器&lt;/strong>：&lt;strong>执行语句&lt;/strong>，然后从&lt;strong>存储引擎&lt;/strong>返回数据&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>简单来说 MySQL 主要分为 Server 层和存储引擎层：
&lt;ul>
&lt;li>&lt;strong>Server 层&lt;/strong>：主要包括&lt;strong>连接器&lt;/strong>、&lt;strong>查询缓存&lt;/strong>、&lt;strong>分析器&lt;/strong>、&lt;strong>优化器&lt;/strong>、&lt;strong>执行器&lt;/strong>等，所有&lt;strong>跨存储引擎&lt;/strong>的功能都在这一层实现，比如&lt;strong>存储过程&lt;/strong>、&lt;strong>触发器&lt;/strong>、&lt;strong>视图&lt;/strong>，&lt;strong>函数&lt;/strong>等，还有一个&lt;strong>通用的日志模块 binlog 日志模块&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>存储引擎&lt;/strong>： 主要负责数据的&lt;strong>存储&lt;/strong>和&lt;strong>读取&lt;/strong>，采用&lt;strong>可以替换的插件式架构&lt;/strong>，支持 InnoDB、MyISAM、Memory 等多个存储引擎，其中 InnoDB 引擎有自有的日志模块 &lt;strong>redolog 模块&lt;/strong>。&lt;strong>现在最常用的存储引擎是 InnoDB，它从 MySQL 5.5 版本开始就被当做默认存储引擎了&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="server层基本组件介绍">
 Server层基本组件介绍
 &lt;a class="anchor" href="#server%e5%b1%82%e5%9f%ba%e6%9c%ac%e7%bb%84%e4%bb%b6%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212141909073.png" alt="ly-20241212141909073" />&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>连接器&lt;/strong>
连接器主要和&lt;strong>身份认证&lt;/strong>和&lt;strong>权限相关&lt;/strong>的功能相关，就好比一个级别很高的门卫一样&lt;/p>
&lt;blockquote>
&lt;p>主要负责用户登录数据库，进行用户的身份认证，包括校验账户密码，权限等操作，如果用户&lt;strong>账户密码&lt;/strong>已通过，连接器会到&lt;strong>权限表&lt;/strong>中查询&lt;strong>该用户的所有权限&lt;/strong>，之后在这个连接里的权限逻辑判断都是会依赖&lt;strong>此时读取到的权限数据&lt;/strong>，也就是说，&lt;strong>后续只要这个连接不断开&lt;/strong>，&lt;strong>即使&lt;/strong>管理员&lt;strong>修改&lt;/strong>了该用户的权限，该用户也是不受影响的。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>查询缓存（MySQL8.0 版本后移除）&lt;/strong>&lt;br>
查询缓存&lt;strong>主要用来缓存&lt;/strong>我们所执行的 &lt;strong>SELECT 语句&lt;/strong>以及该&lt;strong>语句的结果集&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>连接建立后，执行查询语句的时候，会先查询缓存，MySQL 会先校验这个 SQL 是否执行过，以 &lt;strong>Key-Value&lt;/strong> 的形式缓存在内存中，Key 是查询预计，Value 是结果集。如果缓存 key 被命中，就会直接返回给客户端，如果没有命中，就会执行后续的操作，完成后也会把结果缓存起来，方便下一次调用。当然在真正执行缓存查询的时候还是会校验用户的权限，是否有该表的查询条件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MySQL 查询不建议使用缓存，因为查询缓存失效在实际业务场景中可能会非常频繁，假如&lt;strong>你对一个表更新&lt;/strong>的话，&lt;strong>这个表上的所有的查询缓存都会被清空&lt;/strong>。对于&lt;strong>不经常更新的数据&lt;/strong>来说，&lt;strong>使用缓存还是可以&lt;/strong>的。所以，一般在大多数情况下我们都是不推荐去使用查询缓存的。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>MySQL &lt;strong>8.0 版本后删除了缓存&lt;/strong>的功能，官方也是认为该功能在实际的应用场景比较少，所以干脆直接删掉了&lt;/p></description></item><item><title>innodb引擎对MVCC的实现</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0604lyinnodb-implementation-of-mvcc/</link><pubDate>Mon, 16 Jan 2023 19:23:55 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0604lyinnodb-implementation-of-mvcc/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="一致性非锁定读和锁定读">
 一致性非锁定读和锁定读
 &lt;a class="anchor" href="#%e4%b8%80%e8%87%b4%e6%80%a7%e9%9d%9e%e9%94%81%e5%ae%9a%e8%af%bb%e5%92%8c%e9%94%81%e5%ae%9a%e8%af%bb">#&lt;/a>
&lt;/h1>
&lt;h2 id="一致性非锁定读">
 一致性非锁定读
 &lt;a class="anchor" href="#%e4%b8%80%e8%87%b4%e6%80%a7%e9%9d%9e%e9%94%81%e5%ae%9a%e8%af%bb">#&lt;/a>
&lt;/h2>
&lt;p>★★非锁定★★&lt;/p>
&lt;ul>
&lt;li>对于&lt;strong>一致性非锁定读（Consistent Nonlocking Reads）&lt;strong>的实现，通常做法是&lt;/strong>加一个版本号&lt;/strong>或者&lt;strong>时间戳&lt;/strong>字段，在更新数据的同时&lt;strong>版本号+1&lt;/strong>或者&lt;strong>更新时间戳&lt;/strong>。查询时，将&lt;strong>当前可见的版本号&lt;/strong>与&lt;strong>对应记录的版本号&lt;/strong>进行比对，如果&lt;strong>记录的版本&lt;/strong>小于&lt;strong>可见版本&lt;/strong>，则表示&lt;strong>该记录可见&lt;/strong>&lt;/li>
&lt;li>&lt;strong>InnoDB&lt;/strong>存储引擎中，&lt;strong>多版本控制（multi versioning）&lt;strong>即是非锁定读的实现。如果读取的行&lt;/strong>正在执行DELETE&lt;/strong>或&lt;strong>UPDATE&lt;/strong>操作，这时读取操作&lt;strong>不会去等待行上&lt;/strong> &lt;strong>锁的释放&lt;/strong>.相反地，Inn哦DB存储引擎会去读取&lt;strong>行的一个快照数据&lt;/strong>，对于这种&lt;strong>读取历史数据&lt;/strong>的方式，我们叫它&lt;strong>快照读（snapshot read）&lt;/strong>。&lt;/li>
&lt;li>在 &lt;strong>&lt;code>Repeatable Read&lt;/code>&lt;/strong> 和 &lt;strong>&lt;code>Read Committed&lt;/code>&lt;/strong> 两个隔离级别下，如果是执行普通的 &lt;code>select&lt;/code> 语句（&lt;strong>不包括 &lt;code>select ... lock in share mode&lt;/code> ,&lt;code>select ... for update&lt;/code>&lt;/strong>）则会使用 &lt;strong>&lt;code>一致性非锁定读（MVCC）&lt;/code>&lt;/strong>。并且在 &lt;strong>&lt;code>Repeatable Read&lt;/code> 下 &lt;code>MVCC&lt;/code> 实现了可重复读和防止部分幻读&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="锁定读">
 锁定读
 &lt;a class="anchor" href="#%e9%94%81%e5%ae%9a%e8%af%bb">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>如果执行的是下列语句，就是&lt;strong>锁定读（Locking Reads）&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;code>select ... lock in share&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>select ... for update&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>insert &lt;/code>、&lt;code>upate&lt;/code>、&lt;code>delete&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>锁定读下，读取的是数据的最新版本，这种读也被称为&lt;strong>当前读current read&lt;/strong>。&lt;strong>锁定读&lt;/strong>会对读取到的记录加锁&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>select ... lock in share mode &lt;/code>：对(读取到的)记录加&lt;strong>S锁&lt;/strong>，其他事务也可以加S锁，如果加X锁则会被阻塞&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>select ... for update&lt;/code>、&lt;code>insert&lt;/code>、&lt;code>update&lt;/code>、&lt;code>delete&lt;/code>：对记录加&lt;strong>X锁&lt;/strong>，且其他事务不能加任何锁&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>在一致性非锁定读下，即使读取的记录&lt;strong>已被其他事务加上X锁&lt;/strong>，这时记录也是可以被读取的，即读取的&lt;strong>快照数据&lt;/strong>。&lt;/p></description></item><item><title>MySQL事务隔离级别详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0603lytransaction-isolation-level/</link><pubDate>Mon, 16 Jan 2023 01:00:44 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0603lytransaction-isolation-level/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="事务隔离级别总结">
 事务隔离级别总结
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e9%9a%94%e7%a6%bb%e7%ba%a7%e5%88%ab%e6%80%bb%e7%bb%93">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>SQL标准定义了&lt;strong>四个隔离级别&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>READ-UNCOMMITTED(读取未提交)&lt;/strong>：&lt;strong>最低&lt;/strong>的隔离级别，允许读取&lt;strong>尚未提交的数据&lt;/strong>变更，可能会导致&lt;strong>脏读、幻读或不可重复读&lt;/strong>&lt;/li>
&lt;li>&lt;strong>READ-COMMITED(读取已提交)&lt;/strong>：允许读取&lt;strong>并发事务&lt;/strong> &lt;strong>已经提交&lt;/strong>的数据，可以阻止&lt;strong>脏读&lt;/strong>，但是&lt;strong>幻读&lt;/strong>或&lt;strong>不可重复读&lt;/strong>仍有可能发生&lt;/li>
&lt;li>&lt;strong>REPEATABLE-READ(可重复读)&lt;/strong>：对&lt;strong>同一字段的多次读取&lt;/strong>结果都是一致的，除非数据是被&lt;strong>本身事务自己&lt;/strong>所修改，可以&lt;strong>阻止脏读&lt;/strong>和&lt;strong>不可重复读&lt;/strong>，但&lt;strong>幻读&lt;/strong>仍有可能发生&lt;/li>
&lt;li>&lt;strong>SERIALIZABLE(可串行化)&lt;/strong>：&lt;strong>最高&lt;/strong>的隔离级别，&lt;strong>完全服从ACID&lt;/strong>的隔离级别。所有的&lt;strong>事务依次逐个&lt;/strong>执行，这样事务之间就&lt;strong>完全不可能产生干扰&lt;/strong>，也就是说，该级别可以防止&lt;strong>脏读&lt;/strong>、&lt;strong>不可重复读&lt;/strong>以及&lt;strong>幻读&lt;/strong>。&lt;/li>
&lt;/ol>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: center">隔离级别&lt;/th>
 &lt;th style="text-align: center">脏读&lt;/th>
 &lt;th style="text-align: center">不可重复读&lt;/th>
 &lt;th style="text-align: center">幻读&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: center">READ-UNCOMMITTED&lt;/td>
 &lt;td style="text-align: center">√&lt;/td>
 &lt;td style="text-align: center">√&lt;/td>
 &lt;td style="text-align: center">√&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">READ-COMMITTED&lt;/td>
 &lt;td style="text-align: center">×&lt;/td>
 &lt;td style="text-align: center">√&lt;/td>
 &lt;td style="text-align: center">√&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">REPEATABLE-READ&lt;/td>
 &lt;td style="text-align: center">×&lt;/td>
 &lt;td style="text-align: center">×&lt;/td>
 &lt;td style="text-align: center">√&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: center">SERIALIZABLE&lt;/td>
 &lt;td style="text-align: center">×&lt;/td>
 &lt;td style="text-align: center">×&lt;/td>
 &lt;td style="text-align: center">×&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;/li>
&lt;li>
&lt;p>MySQL InnoDB 存储引擎的默认支持的隔离级别是 &lt;strong>REPEATABLE-READ（可重读）&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>使用命令查看，通过&lt;code>SELECT @@tx_isolation;&lt;/code>。&lt;br>
MySQL 8.0 该命令改为&lt;code>SELECT @@transaction_isolation;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>MySQL&amp;gt; SELECT @@tx_isolation;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| @@tx_isolation |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------+
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>| REPEATABLE-READ |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+-----------------+ 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>从上面对SQL标准定义了&lt;strong>四个隔离级别&lt;/strong>的介绍可以看出，标准的SQL隔离级别里，&lt;strong>REPEATABLE-READ(可重复读)&lt;strong>是不可以防止幻读的。但是，&lt;strong>InnoDB实现的REPEATABLE-READ&lt;/strong> 隔离级别其实是可以&lt;/strong>解决幻读&lt;/strong>问题发生的，分两种情况&lt;/p>
&lt;ol>
&lt;li>&lt;strong>快照读&lt;/strong>：由&lt;strong>MVCC&lt;/strong>机制来保证不出现幻读&lt;/li>
&lt;li>&lt;strong>当前读&lt;/strong>：使用&lt;strong>Next-Key Lock&lt;/strong>进行&lt;strong>加锁&lt;/strong>来保证不出现幻读，Next-Key Lock是&lt;strong>行锁（Record Lock ）和间隙锁（Gap Lock）的结合&lt;/strong>，行锁只能锁住已经存在的行，为了避免插入新行，需要依赖&lt;strong>间隙锁&lt;/strong> (&lt;strong>只用间隙锁不行，因为间隙锁是 &amp;gt; 或 &amp;lt; ，不包括等于，所以再可重复读下原记录可能会被删掉&lt;/strong>)&lt;/li>
&lt;/ol>
&lt;p>因为&lt;strong>隔离级别越低，事务请求的锁越少&lt;/strong>，所以大部分数据库系统的隔离级别都是 &lt;strong>READ-COMMITTED&lt;/strong> ，但是你要知道的是 InnoDB 存储引擎默认使用 &lt;strong>REPEATABLE-READ&lt;/strong> 并不会有任何性能损失。&lt;/p></description></item><item><title>日志</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0602lymysql-logs/</link><pubDate>Sat, 14 Jan 2023 17:31:53 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0602lymysql-logs/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="前言">
 前言
 &lt;a class="anchor" href="#%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>首先要了解一个东西 ：WAL，全称 Write-Ahead Logging&lt;code>，它的关键点就是&lt;/code>先写日志，再写磁盘&lt;/p>
&lt;blockquote>
&lt;p>在概念上，innodb通过***force log at commit***机制实现事务的持久性，即在事务提交的时候，必须先将该事务的所有事务日志写入到磁盘上的redo log file和undo log file中进行持久化&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;ol>
&lt;li>
&lt;p>WAL 机制的原理也很简单：&lt;strong>修改并不直接写入到数据库文件中，而是写入到另外一个称为 WAL 的文件中；如果事务失败，WAL 中的记录会被忽略，撤销修改；如果事务成功，它将在随后的某个时间被写回到数据库文件中，提交修改&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 WAL 的数据库系统不会再每新增一条 WAL 日志就将其刷入数据库文件中，一般&lt;strong>积累一定的量然后批量写入，通常使用页为单位，这是磁盘的写入单位&lt;/strong>。 同步 &lt;strong>WAL 文件和数据库文件的行为被称为 checkpoint（检查点）&lt;/strong>，一般在 WAL 文件积累到一定页数修改的时候；当然，有些系统也可以手动执行 checkpoint。执行 checkpoint 之后，WAL 文件可以被清空，这样可以保证 WAL 文件不会因为太大而性能下降。&lt;/p>
&lt;p>有些数据库系统读取请求也可以使用 WAL，通过读取 WAL 最新日志就可以获取到数据的最新状态&lt;/p>
&lt;blockquote>
&lt;p>关于checkpoint：https://www.cnblogs.com/chenpingzhao/p/5107480.html&lt;strong>思考一下这个场景&lt;/strong>：如果重做日志可以无限地增大，同时缓冲池也足够大 ，那么是不需要将缓冲池中页的新版本刷新回磁盘。因为当发生宕机时，完全可以通过重做日志来恢复整个数据库系统中的数据到宕机发生的时刻。但是这需要两个前提条件：1、缓冲池可以缓存数据库中所有的数据；2、重做日志可以无限增大&lt;/p>
&lt;p>因此Checkpoint（检查点）技术就诞生了，目的是解决以下几个问题：1、&lt;strong>缩短数据库的恢复时间&lt;/strong>；2、&lt;strong>缓冲池不够用时，将脏页刷新到磁盘&lt;/strong>；3、&lt;strong>重做日志不可用时，刷新脏页&lt;/strong>。&lt;/p>
&lt;ul>
&lt;li>当数据库发生宕机时，数据库&lt;strong>不需要重做所有的日志，因为Checkpoint之前的页都已经刷新回磁盘&lt;/strong>。数据库只需对Checkpoint后的重做日志进行恢复，这样就大大缩短了恢复的时间。&lt;/li>
&lt;li>当缓冲池不够用时，根据LRU算法会溢出最近最少使用的页，若此页为脏页，那么需要强制执行Checkpoint，将脏页也就是页的新版本刷回磁盘。&lt;/li>
&lt;li>当重做日志出现不可用时，因为当前事务数据库系统对重做日志的设计都是循环使用的，并不是让其无限增大的，重做日志可以被重用的部分是指这些重做日志已经不再需要，当数据库发生宕机时，数据库恢复操作不需要这部分的重做日志，因此这部分就可以被覆盖重用。如果重做日志还需要使用，那么必须强制Checkpoint，将缓冲池中的页至少刷新到当前重做日志的位置。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>mysql 的 WAL，大家可能都比较熟悉。mysql 通过 redo、undo 日志实现 WAL。redo log 称为重做日志，每当有操作时，在&lt;strong>数据变更之前将操作写入 redo log&lt;/strong>，这样当发生掉电之类的情况时系统可以在重启后继续操作。undo log 称为撤销日志，当一些变更执行到一半无法完成时，可以根据撤销日志恢复到变更之间的状态。mysql 中用 redo log 来在系统 Crash 重启之类的情况时修复数据（事务的持久性），而 undo log 来保证事务的原子性。&lt;/p></description></item><item><title>索引</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0601lymysql-index/</link><pubDate>Tue, 10 Jan 2023 22:09:25 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/MySQL/ly0601lymysql-index/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="补充索引基础知识引自b站sgg视频">
 补充索引基础知识(引自b站sgg视频)
 &lt;a class="anchor" href="#%e8%a1%a5%e5%85%85%e7%b4%a2%e5%bc%95%e5%9f%ba%e7%a1%80%e7%9f%a5%e8%af%86%e5%bc%95%e8%87%aab%e7%ab%99sgg%e8%a7%86%e9%a2%91">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>存储引擎，数据的基本单位是&lt;strong>页&lt;/strong>，如果数据很少，只有一页，那就简单，是直接二分查找(不涉及磁盘IO)；如果数据很多，有好几个页，那么需要对页建立一种数据结构，能够最快定位到哪一页，然后减少磁盘IO&lt;/li>
&lt;/ol>
&lt;h1 id="索引介绍">
 索引介绍
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>索引是一种用于&lt;strong>快速查询&lt;/strong>和&lt;strong>检索数据&lt;/strong>的数据结构，其本质可以看成是一种&lt;strong>排序好&lt;/strong>的数据结构&lt;/p>
&lt;blockquote>
&lt;p>索引的作用就相当于书的目录。打个比方: 我们在查字典的时候，如果没有目录，那我们就只能一页一页的去找我们需要查的那个字，速度很慢。如果有目录了，我们只需要先去目录里查找字的位置，然后直接翻到那一页就行了&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>索引底层数据结构存在很多种类型，常见的索引结构有：&lt;strong>B树&lt;/strong>，&lt;strong>B+树&lt;/strong>和&lt;strong>Hash&lt;/strong>、&lt;strong>红黑树&lt;/strong>。在MySQL中，无论是Innodb还是MyIsam，都使用了B+树作为索引结构&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="索引的优缺点">
 索引的优缺点
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95%e7%9a%84%e4%bc%98%e7%bc%ba%e7%82%b9">#&lt;/a>
&lt;/h1>
&lt;p>&lt;strong>优点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>使用索引可以大大&lt;strong>加快&lt;/strong> 数据的检索速度（大大&lt;strong>减少检索的数据量&lt;/strong>）, 这也是创建索引的最主要的原因。&lt;/li>
&lt;li>通过创建&lt;strong>唯一性索引&lt;/strong>，可以保证数据库表中&lt;strong>每一行数据的唯一性&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>缺点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>创建索引&lt;/strong>和&lt;strong>维护索引&lt;/strong>需要&lt;strong>耗费许多&lt;/strong>时间。当对表中的数据进行&lt;strong>增删改&lt;/strong>的时候，如果数据有索引，那么&lt;strong>索引也需要动态的修改&lt;/strong>，会&lt;strong>降低 SQL 执行效率&lt;/strong>。&lt;/li>
&lt;li>索引需要使用&lt;strong>物理文件存储&lt;/strong>，也会&lt;strong>耗费一定空间&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>索引一定会提高查询性能吗&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>多数情况下，&lt;strong>索引查询&lt;/strong>都是比&lt;strong>全表扫描&lt;/strong>要快的。但是如果数据库的&lt;strong>数据量不大&lt;/strong>，那么使用&lt;strong>索引也不一定能够带来很大提升&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h1 id="索引的底层数据结构">
 索引的底层数据结构
 &lt;a class="anchor" href="#%e7%b4%a2%e5%bc%95%e7%9a%84%e5%ba%95%e5%b1%82%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h1>
&lt;h2 id="hash表">
 Hash表
 &lt;a class="anchor" href="#hash%e8%a1%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>哈希表是键值对的集合，通过&lt;strong>键（key）&lt;strong>即可&lt;/strong>快速取出对应的值（value）&lt;/strong>，因此哈希表可以&lt;strong>快速检索数据（接近O(1))&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为何能够通过key快速取出value呢？原因在于&lt;strong>哈希算法（也叫散列算法）&lt;/strong>。通过哈希算法，我们可以&lt;strong>快速找到key对应的index&lt;/strong>，找到了index也就找到了对应的value&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>hash &lt;span style="color:#f92672">=&lt;/span> hashfunc(key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index &lt;span style="color:#f92672">=&lt;/span> hash &lt;span style="color:#f92672">%&lt;/span> array_size
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意，图中keys[天蓝色]是&lt;strong>字符串&lt;/strong>，&lt;strong>不是什么莫名其妙的人&lt;/strong>
&lt;img src="img/ly-20241212141858665.png" alt="ly-20241212141858665" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>哈希算法有个 &lt;strong>Hash 冲突&lt;/strong> 问题，也就是说&lt;strong>多个不同的 key 最后得到的 index 相同&lt;/strong>。通常情况下，我们常用的解决办法是 &lt;strong>链地址法&lt;/strong>。链地址法就是&lt;strong>将哈希冲突数据存放在链表中&lt;/strong>。就比如 JDK1.8 之前 &lt;code>HashMap&lt;/code> 就是通过&lt;strong>链地址法来解决哈希冲突&lt;/strong>的。不过，JDK1.8 以后&lt;code>HashMap&lt;/code>&lt;strong>为了减少链表过长&lt;/strong>的时候搜索时间过长引入了&lt;strong>红黑树&lt;/strong>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为了减&lt;strong>少 Hash 冲突&lt;/strong>的发生，一个&lt;strong>好的哈希函数&lt;/strong>应该**“均匀地”将数据分布**在整个可能的哈希值集合中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>由于&lt;strong>Hash索引&lt;/strong>不支持&lt;strong>顺序&lt;/strong>和&lt;strong>范围查询&lt;/strong>，假如要对表中的数据进行&lt;strong>排序&lt;/strong>或者&lt;strong>进行范围查询&lt;/strong>，那&lt;strong>Hash索引&lt;/strong>就不行了，并且，&lt;strong>每次IO&lt;/strong>只能取一个&lt;/p>
&lt;blockquote>
&lt;p>例如： &lt;code>SELECT * FROM tb1 WHERE id &amp;lt; 500 ; &lt;/code>&lt;/p></description></item><item><title>字符集详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/ly0502lycharactor-set/</link><pubDate>Tue, 10 Jan 2023 16:48:22 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/ly0502lycharactor-set/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>图示总结&lt;br>
&lt;img src="img/ly-20241212141855666.png" alt="ly-20241212141855666" />&lt;/p>
&lt;ul>
&lt;li>MySQL字符编码集有&lt;strong>两套UTF-8&lt;/strong>编码实现：&lt;strong>utf-8&lt;/strong> 和 &lt;strong>utf8mb4&lt;/strong>&lt;br>
而其中，utf-8 &lt;strong>不支持存储&lt;/strong>emoji符号和一些比较复杂的汉字、繁体字，会出错&lt;/li>
&lt;/ul>
&lt;h1 id="何为字符集">
 何为字符集
 &lt;a class="anchor" href="#%e4%bd%95%e4%b8%ba%e5%ad%97%e7%ac%a6%e9%9b%86">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>字符是&lt;strong>各种文字&lt;/strong>和&lt;strong>符号&lt;/strong>的统称，包括&lt;strong>各个国家文字&lt;/strong>、&lt;strong>标点符号&lt;/strong>、&lt;strong>表情&lt;/strong>、&lt;strong>数字&lt;/strong>等等&lt;/p>
&lt;ul>
&lt;li>字符集就是&lt;strong>一系列字符&lt;/strong>的集合，字符集的种类较多，每个字符集可以表示的&lt;strong>字符范围&lt;/strong>通常不同，就比如说&lt;strong>有些字符集&lt;/strong>无法表示汉字&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>计算机只能存储&lt;strong>二进制&lt;/strong>的数据，那&lt;strong>英文&lt;/strong>、&lt;strong>汉字&lt;/strong>、&lt;strong>表情&lt;/strong>等字符应该如何存储呢&lt;/p>
&lt;ul>
&lt;li>
&lt;p>我们要将这些&lt;strong>字符和二进制的数据一一对应&lt;/strong>起来，比如说字符“a”对应“01100001”，反之，“01100001”对应 “a”。我们将字符对应二进制数据的过程称为&amp;quot;&lt;strong>字符编码&lt;/strong>&amp;quot;，反之，二进制数据解析成字符的过程称为“&lt;strong>字符解码&lt;/strong>”。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141855958.png" alt="ly-20241212141855958" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="有哪些常见的字符集">
 有哪些常见的字符集
 &lt;a class="anchor" href="#%e6%9c%89%e5%93%aa%e4%ba%9b%e5%b8%b8%e8%a7%81%e7%9a%84%e5%ad%97%e7%ac%a6%e9%9b%86">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>常见的字符集有&lt;strong>ASCLL&lt;/strong>、&lt;strong>GB2312&lt;/strong>、&lt;strong>GBK&lt;/strong>、&lt;strong>UTF-8&lt;/strong>&lt;/li>
&lt;li>不同的字符集的主要区别在于
&lt;ol>
&lt;li>可以表示的&lt;strong>字符范围&lt;/strong>&lt;/li>
&lt;li>&lt;strong>编码方式&lt;/strong>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="ascll">
 ASCLL
 &lt;a class="anchor" href="#ascll">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>ASCII&lt;/strong> (&lt;strong>A&lt;/strong>merican &lt;strong>S&lt;/strong>tandard &lt;strong>C&lt;/strong>ode for &lt;strong>I&lt;/strong>nformation &lt;strong>I&lt;/strong>nterchange，美国信息交换标准代码) 是一套主要用于现代美国英语的字符集（这也是 ASCII 字符集的局限性所在）&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>为什么 ASCII 字符集没有考虑到中文等其他字符呢？&lt;/strong> 因为计算机是美国人发明的，当时，计算机的发展还处于比较雏形的时代，还未在其他国家大规模使用。因此，美国发布 ASCII 字符集的时候没有考虑兼容其他国家的语言&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>ASCII 字符集至今为止共定义了 128 个字符，其中有 33 个控制字符（比如回车、删除）无法显示&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个 ASCII 码长度是一个字节也就是 8 个 bit，比如“a”对应的 ASCII 码是“01100001”。不过，最高位是 0 仅仅作为校验位，其余 7 位使用 0 和 1 进行组合，所以，ASCII 字符集可以定义 128（2^7）个字符&lt;/p>
&lt;blockquote>
&lt;p>由于，ASCII 码可以表示的字符实在是太少了。后来，人们对其进行了扩展得到了 &lt;strong>ASCII 扩展字符集&lt;/strong> 。ASCII 扩展字符集使用 8 位（bits）表示一个字符，所以，ASCII 扩展字符集可以定义 256（2^8）个字符&lt;/p></description></item><item><title>树</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/cs_basics/data-structure/tree/</link><pubDate>Mon, 09 Jan 2023 15:52:34 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/cs_basics/data-structure/tree/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>树是一种类似现实生活中的树的数据结构（&lt;strong>倒置的树&lt;/strong>）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>任何一颗非空树&lt;strong>只有一个根节点&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一棵树具有以下特点：&lt;/p>
&lt;ol>
&lt;li>一棵树中的任何两个节点有且仅有唯一的一条路相通 （因为每个结点只会有一个父节点）&lt;/li>
&lt;li>一棵树如果有n个节点，那么它一定恰好有n-1条边&lt;/li>
&lt;li>一棵树不包括回路&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>下面是一颗&lt;strong>二叉树&lt;/strong>
&lt;img src="img/ly-20241212141852140.png" alt="ly-20241212141852140" />
深度和高度是对应的；根节点所在层为1层&lt;/p>
&lt;/li>
&lt;li>
&lt;p>常用概念&lt;/p>
&lt;ol>
&lt;li>
&lt;p>节点：树中每个元素都可以统称为节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根节点：顶层节点，或者说没有父节点的节点。上图中A节点就是根节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>父节点：若一个节点含有子节点，则这个节点称为其子节点的父节点。上图中的 B 节点是 D 节点、E 节点的父节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>兄弟节点：具有&lt;strong>相同父节点的节点&lt;/strong>互称为兄弟节点。上图中 D 节点、E 节点的共同父节点是 B 节点，故 D 和 E 为兄弟节点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>叶子节点：&lt;strong>没有子节点&lt;/strong>的节点。上图中的 D、F、H、I 都是叶子节点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>节点的高度**（跟叶子节点有关，同一层不一定一样）&lt;strong>：&lt;strong>该节点到叶子节点&lt;/strong>的&lt;/strong>最长&lt;strong>路径&lt;/strong>所包含的&lt;strong>边数&lt;/strong>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>节点的深度**（跟根节点有关，同一层是一样的）&lt;strong>：&lt;strong>根节点到该节点&lt;/strong>的路径所包含的&lt;/strong>边数**&lt;/p>
&lt;/li>
&lt;li>
&lt;p>节点的层数：节点的深度+1&lt;/p>
&lt;/li>
&lt;li>
&lt;p>树的高度：根节点的高度&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h1 id="二叉树的分类">
 二叉树的分类
 &lt;a class="anchor" href="#%e4%ba%8c%e5%8f%89%e6%a0%91%e7%9a%84%e5%88%86%e7%b1%bb">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>**二叉树（Binary tree）**是每个节点最多只有两个分支（即不存在分支度大于2的节点）的树结构&lt;/li>
&lt;li>&lt;strong>二叉树&lt;/strong>的分支，通常被称为&lt;strong>左子树&lt;/strong>或&lt;strong>右子树&lt;/strong>，并且，&lt;strong>二叉树&lt;/strong>的分支具有左右次序，不能随意颠倒&lt;/li>
&lt;li>&lt;strong>二叉树&lt;/strong>的第i层至多拥有&lt;strong>2^(i-1)&lt;/strong> 个节点&lt;br>
深度为&lt;strong>k&lt;/strong>的二叉树至多总共有 &lt;strong>2^(k+1) -1&lt;/strong> 个节点 （深度为k，最多k + 1 层，最多为满二叉树的情况）&lt;br>
至少有2^(k) 个节点，即 深度为k-1的二叉树的最多的节点再加1&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>（关于节点的深度的定义国内争议比较多，我个人比较认可维基百科对
&lt;a target="_blank" href="https://zh.wikipedia.org/wiki/%E6%A0%91_%28%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%29#/%E6%9C%AF%E8%AF%AD">节点深度的定义open in new window&lt;/a>）。
&lt;img src="img/ly-20241212141852434.png" alt="ly-20241212141852434" />&lt;/p>
&lt;/blockquote>
&lt;h2 id="满二叉树">
 满二叉树
 &lt;a class="anchor" href="#%e6%bb%a1%e4%ba%8c%e5%8f%89%e6%a0%91">#&lt;/a>
&lt;/h2>
&lt;p>一个二叉树，如果每一个&lt;strong>层&lt;/strong>的结点数都达到最大值，则这个二叉树就是 &lt;strong>满二叉树&lt;/strong>。也就是说，如果一个&lt;strong>二叉树的层数&lt;/strong>为 K，且结点总数是(2^k) -1 ，则它就是 &lt;strong>满二叉树&lt;/strong>。
&lt;img src="img/ly-20241212141852640.png" alt="ly-20241212141852640" />&lt;/p></description></item><item><title>堆</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/cs_basics/data-structure/heap/</link><pubDate>Fri, 06 Jan 2023 10:46:19 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/cs_basics/data-structure/heap/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="什么是堆">
 什么是堆
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%a0%86">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>堆是&lt;strong>满足以下条件&lt;/strong>的树
堆中每一个节点值都&lt;strong>大于等于（或小于等于）子树中所有节点&lt;/strong>。或者说，任意一个节点的值**都大于等于（或小于等于）**所有子节点的值&lt;/p>
&lt;blockquote>
&lt;p>大家可以把堆(最大堆)理解为一个公司,这个公司很公平,谁能力强谁就当老大,不存在弱的人当老大,老大手底下的人一定不会比他强。这样有助于理解后续堆的操作。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>堆不一定是完全二叉树&lt;/strong>，为了方便&lt;strong>存储&lt;/strong>和&lt;strong>索引&lt;/strong>，我们通常用完全二叉树的形式来表示堆&lt;br>
广为人知的&lt;strong>斐波那契堆&lt;/strong>和&lt;strong>二项堆&lt;/strong>就不是完全二叉树，它们甚至都&lt;strong>不是二叉树&lt;/strong>&lt;/li>
&lt;li>(二叉)堆是一个数组，它可以被看成是一个&lt;strong>近似的完全二叉树&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>下面给出的图是否是堆（通过定义）&lt;/p>
&lt;p>1，2是。
3不是。
&lt;img src="img/ly-20241212141845610.png" alt="ly-20241212141845610" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="堆的用途">
 堆的用途
 &lt;a class="anchor" href="#%e5%a0%86%e7%9a%84%e7%94%a8%e9%80%94">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>当我们&lt;strong>只关心&lt;/strong>所有数据中的&lt;strong>最大值&lt;/strong>或者&lt;strong>最小值&lt;/strong>，存在&lt;strong>多次获取最大值&lt;/strong>或者&lt;strong>最小值&lt;/strong>，多次插入或删除数据时，就可以使用堆。&lt;/p>
&lt;blockquote>
&lt;p>有小伙伴可能会想到用&lt;strong>有序数组&lt;/strong>，初始化一个有序数组时间复杂度是 &lt;code>O(nlog(n))&lt;/code>&lt;strong>[也就是将一堆数字乱序排序，最快是O(nlog(n))]&lt;/strong>，查找最大值或者最小值时间复杂度都是 &lt;code>O(1)&lt;/code>，但是，涉及到更新（插入或删除）数据时，时间复杂度为 &lt;code>O(n)&lt;/code>，即使是使用复杂度为 &lt;code>O(log(n))&lt;/code> 的二分法找到要插入或者删除的数据，在移动数据时也需要 &lt;code>O(n)&lt;/code> 的时间复杂度。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>相对于有序数组而言，堆的主要优势在于更新数据效率较高&lt;/p>
&lt;ul>
&lt;li>堆的&lt;strong>初始化时间复杂度&lt;/strong>为O(nlog(n))，堆可以做到&lt;strong>O(1)&lt;strong>的时间复杂度取出&lt;/strong>最大值&lt;/strong>或者&lt;strong>最小值&lt;/strong>，&lt;strong>O(log(n))&lt;strong>的时间复杂度&lt;/strong>插入或者删除&lt;/strong>数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="堆的分类">
 堆的分类
 &lt;a class="anchor" href="#%e5%a0%86%e7%9a%84%e5%88%86%e7%b1%bb">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>堆分为&lt;strong>最大堆&lt;/strong>和&lt;strong>最小堆&lt;/strong>，二者的区别在于节点的&lt;strong>排序方式&lt;/strong>
&lt;ul>
&lt;li>最大堆：堆中的每一个节点的值&lt;strong>都大于&lt;/strong>子树中&lt;strong>所有节点&lt;/strong>的值&lt;/li>
&lt;li>最小堆：堆中的每一个节点的值&lt;strong>都小于&lt;/strong>子树中&lt;strong>所有节点&lt;/strong>的值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>如图，图1是最大堆，图2是最小堆
&lt;img src="img/ly-20241212141845906.png" alt="ly-20241212141845906" />&lt;/li>
&lt;/ul>
&lt;h1 id="堆的存储">
 堆的存储
 &lt;a class="anchor" href="#%e5%a0%86%e7%9a%84%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>由于&lt;strong>完全二叉树的优秀性质&lt;/strong>，&lt;strong>利用数组存储二叉树&lt;/strong>即节省空间，又&lt;strong>方便索引&lt;/strong>（若根结点的序号为1，那么对于树中任意节点i，其左子节点序号为 &lt;code>2*i&lt;/code>，右子节点序号为 &lt;code>2*i+1&lt;/code>）。&lt;/li>
&lt;li>为了&lt;strong>方便存储&lt;/strong>和&lt;strong>索引&lt;/strong>，&lt;strong>（二叉）堆&lt;/strong>可以用&lt;strong>完全二叉树&lt;/strong>的形式进行存储。存储的方式如下图所示
&lt;img src="img/ly-20241212141846083.png" alt="ly-20241212141846083" />&lt;/li>
&lt;/ul>
&lt;h1 id="堆的操作">
 堆的操作
 &lt;a class="anchor" href="#%e5%a0%86%e7%9a%84%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>堆的更新操作主要包括两种：&lt;strong>插入元素&lt;/strong>和&lt;strong>删除堆顶元素&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>堆是一个公平的公司，&lt;strong>有能力的人&lt;/strong>自然会走到与他能力所匹配的位置&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="插入元素">
 插入元素
 &lt;a class="anchor" href="#%e6%8f%92%e5%85%a5%e5%85%83%e7%b4%a0">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>将要插入的元素放到&lt;strong>最后&lt;/strong>
&lt;img src="img/ly-20241212141846259.png" alt="ly-20241212141846259" />&lt;/li>
&lt;li>从底向上，如果&lt;strong>父节点&lt;/strong>比&lt;strong>该元素小&lt;/strong>，则该节点和父节点交换（其实就是一棵树有3个（最多）节点，与树上最大的节点比较）
直到无法交换（已经与根节点比较过）
&lt;img src="img/ly-20241212141846433.png" alt="ly-20241212141846433" />
&lt;img src="img/ly-20241212141846614.png" alt="ly-20241212141846614" />&lt;/li>
&lt;/ol>
&lt;h2 id="删除堆顶元素">
 删除堆顶元素
 &lt;a class="anchor" href="#%e5%88%a0%e9%99%a4%e5%a0%86%e9%a1%b6%e5%85%83%e7%b4%a0">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>根据堆的性质可知，&lt;strong>最大堆&lt;/strong>的堆盯元素为所有元素中最大的，&lt;strong>最小堆&lt;/strong>的堆顶元素是所有元素中最小的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当我们需要多次查找&lt;strong>最大元素&lt;/strong>或者&lt;strong>最小元素&lt;/strong>的时候，可以利用堆来实现&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除堆顶元素后，为了保持&lt;strong>堆的性质&lt;/strong>，需要对堆的结构进行调整，我们可以将这个过程称之为&lt;strong>堆化&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>自底向上&lt;/strong>的堆化，上述的&lt;strong>插入元素&lt;/strong>所使用的，就是自顶向上的&lt;strong>堆化&lt;/strong>，元素从最底部向上移动&lt;/li>
&lt;li>&lt;strong>自顶向下&lt;/strong>的堆化，元素由&lt;strong>顶部向下&lt;/strong>移动。在讲解删除堆顶元素的方法时，我将阐述这&lt;strong>两种操作的过程&lt;/strong>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自底向上堆化&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>在堆这个公司中，会出现老大离职的现象，老大离职之后，它的位置就空出来了&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>首先删除堆顶元素，使得数组中下标为1的位置空出
&lt;img src="img/ly-20241212141846789.png" alt="ly-20241212141846789" />&lt;/p></description></item><item><title>图</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/cs_basics/data-structure/graph/</link><pubDate>Mon, 26 Dec 2022 08:47:25 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/cs_basics/data-structure/graph/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>图是一种较为复杂的&lt;strong>非线性&lt;/strong>结构&lt;/li>
&lt;li>&lt;strong>线性&lt;/strong>数据结构的元素满足唯一的线性关系，&lt;strong>每个元素&lt;/strong>（除第一个和最后一个外）只有一个&lt;strong>直接前驱&lt;/strong>和一个&lt;strong>直接后继&lt;/strong>&lt;/li>
&lt;li>&lt;strong>树形&lt;/strong>数据结构的元素之间有着明显的&lt;strong>层级关系&lt;/strong>&lt;/li>
&lt;li>&lt;strong>图形&lt;/strong>结构的元素之间的关系是任意的
&lt;ul>
&lt;li>图就是由&lt;strong>顶点&lt;/strong>的&lt;strong>有穷非空集合&lt;/strong>和顶点之间的&lt;strong>边&lt;/strong>组成的集合，通常表示为：&lt;strong>G（V，E）&lt;/strong>，其中，G表示一个图，V表示顶点的集合，E表示边的集合&lt;/li>
&lt;li>下面显示的即&lt;strong>图&lt;/strong>这种数据结构，而且还是一张&lt;strong>有向图&lt;/strong>
&lt;img src="img/ly-20241212141841748.png" alt="ly-20241212141841748" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="图的基本概念">
 图的基本概念
 &lt;a class="anchor" href="#%e5%9b%be%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%a6%82%e5%bf%b5">#&lt;/a>
&lt;/h1>
&lt;h2 id="顶点">
 顶点
 &lt;a class="anchor" href="#%e9%a1%b6%e7%82%b9">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>图中的&lt;strong>数据元素&lt;/strong>，我们称之为&lt;strong>顶点&lt;/strong>，图至少有一个&lt;strong>顶点&lt;/strong>（&lt;strong>有穷非空&lt;/strong>集合）&lt;/li>
&lt;li>对应到好友关系图，&lt;strong>每一个用户&lt;/strong>就代表&lt;strong>一个顶点&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="边">
 边
 &lt;a class="anchor" href="#%e8%be%b9">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>顶点之间的&lt;strong>关系&lt;/strong>用&lt;strong>边&lt;/strong>表示&lt;/li>
&lt;li>对应到好友关系图，两个用户是好友的话，那两者之间就存在一条&lt;strong>边&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="度">
 度
 &lt;a class="anchor" href="#%e5%ba%a6">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>度表示一个顶点包含多少条边&lt;/li>
&lt;li>有向图中，分为&lt;strong>出度&lt;/strong>和&lt;strong>入度&lt;/strong>，出度表示&lt;strong>从该顶点出去的边&lt;/strong>的条数，入度表示&lt;strong>从进入该顶点的边&lt;/strong>的条数&lt;/li>
&lt;li>对应到好友关系图，度就代表了某个人的&lt;strong>好友数量&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="无向图和有向图">
 无向图和有向图
 &lt;a class="anchor" href="#%e6%97%a0%e5%90%91%e5%9b%be%e5%92%8c%e6%9c%89%e5%90%91%e5%9b%be">#&lt;/a>
&lt;/h2>
&lt;p>边表示的是顶点之间的关系，有的关系是双向的，比如同学关系，A是B的同学，那么B也肯定是A的同学，那么在表示A和B的关系时，就不用关注方向，用&lt;strong>不带箭头的边&lt;/strong>表示，这样的图就是&lt;strong>无向图&lt;/strong>。&lt;/p>
&lt;p>有的关系是有方向的，比如父子关系，师生关系，微博的关注关系，A是B的爸爸，但B肯定不是A的爸爸，A关注B，B不一定关注A。在这种情况下，我们就用&lt;strong>带箭头的边&lt;/strong>表示二者的关系，这样的图就是&lt;strong>有向图&lt;/strong>。&lt;/p>
&lt;h2 id="无权图和带权图">
 无权图和带权图
 &lt;a class="anchor" href="#%e6%97%a0%e6%9d%83%e5%9b%be%e5%92%8c%e5%b8%a6%e6%9d%83%e5%9b%be">#&lt;/a>
&lt;/h2>
&lt;p>对于一个关系，如果我们只关心关系的有无，而&lt;strong>不关心关系有多强&lt;/strong>，那么就可以用&lt;strong>无权图&lt;/strong>表示二者的关系。&lt;/p>
&lt;p>对于一个关系，如果我们既&lt;strong>关心关系的有无&lt;/strong>，也关心&lt;strong>关系的强度&lt;/strong>，比如描述地图上&lt;strong>两个城市的关系&lt;/strong>，需要用到&lt;strong>距离&lt;/strong>，那么就用&lt;strong>带权图&lt;/strong>来表示，&lt;strong>带权图中的每一条边一个数值表示权值&lt;/strong>，代表&lt;strong>关系的强度&lt;/strong>。&lt;/p>
&lt;p>下图就是一个&lt;strong>带权有向图&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141842057.png" alt="ly-20241212141842057" />&lt;/p>
&lt;h1 id="图的存储">
 图的存储
 &lt;a class="anchor" href="#%e5%9b%be%e7%9a%84%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h1>
&lt;h2 id="邻接矩阵存储">
 邻接矩阵存储
 &lt;a class="anchor" href="#%e9%82%bb%e6%8e%a5%e7%9f%a9%e9%98%b5%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>邻接矩阵将图用&lt;strong>二维矩阵&lt;/strong>存储，是一种比较&lt;strong>直观&lt;/strong>的表示方式&lt;/li>
&lt;li>如果第i个顶点和第j个顶点&lt;strong>有关系&lt;/strong>，且&lt;strong>关系权值&lt;/strong>为n，则A[i] [j] = n&lt;/li>
&lt;li>在无向图中，我们只关心关系的有无，所以当&lt;strong>顶点i&lt;/strong>和&lt;strong>顶点j&lt;/strong>有关系时，A[i] [j]=1 ; 当顶点i和顶点j没有关系时，A[i] [j] = 0 ，如下图所示&lt;br>
&lt;img src="img/ly-20241212141842233.png" alt="ly-20241212141842233" />
无向图的邻接矩阵是一个&lt;strong>对称&lt;/strong>矩阵，因为在无向图中，&lt;strong>顶点i&lt;/strong>和&lt;strong>顶点j&lt;/strong>有关系，则&lt;strong>顶点j&lt;/strong>和&lt;strong>顶点i&lt;/strong>必有关系&lt;/li>
&lt;li>有向图的邻接矩阵存储
&lt;img src="img/ly-20241212141842414.png" alt="ly-20241212141842414" />
邻接矩阵存储的方式优点是&lt;strong>简单直接（直接使用一个二维数组即可）&lt;/strong>，并且在获取两个顶点之间的关系的时候也非常高效*直接获取指定位置的&lt;strong>数组&lt;/strong>元素。但是这种存储方式的确定啊也比较明显&lt;strong>即 比较浪费空间&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h2 id="邻接表存储">
 邻接表存储
 &lt;a class="anchor" href="#%e9%82%bb%e6%8e%a5%e8%a1%a8%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>针对上面邻接矩阵比较浪费内存空间的问题，诞生了图的另一种存储方法&amp;ndash;&lt;strong>邻接表&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>邻接链表使用一个&lt;strong>链表&lt;/strong>来存储某个顶点的&lt;strong>所有后继相邻顶点&lt;/strong>。对于图中每个顶点Vi ，把所有邻接于Vi 的顶点Vj 链接成一个&lt;strong>单链表&lt;/strong>&lt;/p></description></item><item><title>线性数据结构</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/cs_basics/data-structure/linear-data-structure/</link><pubDate>Tue, 20 Dec 2022 13:34:59 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/cs_basics/data-structure/linear-data-structure/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="数组">
 数组
 &lt;a class="anchor" href="#%e6%95%b0%e7%bb%84">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>数组（Array）是一种常见数据结构，由&lt;strong>相同类型的元素（element）&lt;strong>组成，并且是使用一块&lt;/strong>连续的内存&lt;/strong>来存储&lt;/li>
&lt;li>直接可以利用元素的**索引（index）**可以计算出该元素对应的存储地址&lt;/li>
&lt;li>数组的特点是：提供&lt;strong>随机访问&lt;/strong>并且&lt;strong>容量有限&lt;/strong>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>假设数组长度为n：&lt;br>
访问：O(1) //访问特定位置的元素&lt;/p>
&lt;p>插入：O(n) //最坏的情况插入在数组的&lt;strong>首部&lt;/strong>并需要&lt;strong>移动所有元素&lt;/strong>时&lt;/p>
&lt;p>删除：O(n) //最坏的情况发生在删除数组的&lt;strong>开头&lt;/strong>并需要移动&lt;strong>第一元素&lt;/strong>后面所有的元素时&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="img/ly-20241212141849981.png" alt="ly-20241212141849981" />&lt;/p>
&lt;h1 id="链表">
 链表
 &lt;a class="anchor" href="#%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h1>
&lt;h2 id="链表简介">
 链表简介
 &lt;a class="anchor" href="#%e9%93%be%e8%a1%a8%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>链表（LinkedList）虽然是一种&lt;strong>线性表&lt;/strong>，但是并&lt;strong>不会按线性&lt;/strong>的顺序&lt;strong>存储&lt;/strong>数据，使用的&lt;strong>不是&lt;/strong>连续的内存空间来&lt;strong>存储数据&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>链表的&lt;strong>插入&lt;/strong>和&lt;strong>删除&lt;/strong>操作的复杂度为O(1)，只需要直到目标位置元素的&lt;strong>上一个元素&lt;/strong>即可。但是，在&lt;strong>查找一个节点&lt;/strong>或者&lt;strong>访问特定位置&lt;/strong>的节点的时候复杂度为&lt;strong>O(n)&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用链表结构可以&lt;strong>克服数组需要预先知道数据大小&lt;/strong>的缺点，链表结构可以充分利用&lt;strong>计算机内存空间&lt;/strong>，实现灵活的&lt;strong>内存动态管理&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>但链表&lt;strong>不会节省空间&lt;/strong>，相比于数组会&lt;strong>占用&lt;/strong>更多空间，因为链表中&lt;strong>每个节点&lt;/strong>存放的还有&lt;strong>指向其他节点&lt;/strong>的指针。除此之外，链表不具有&lt;strong>数组随机读取&lt;/strong>的优点&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="链表分类">
 链表分类
 &lt;a class="anchor" href="#%e9%93%be%e8%a1%a8%e5%88%86%e7%b1%bb">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>单链表&lt;/strong>、&lt;strong>双向链表&lt;/strong>、&lt;strong>循环链表&lt;/strong>、&lt;strong>双向循环链表&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>假设链表中有&lt;strong>n个元素&lt;/strong>&lt;br>
访问：O(n) //访问特地给位置的元素&lt;/p>
&lt;p>插入删除：O(1) //必须要知道插入元素的位置&lt;/p>
&lt;/blockquote>
&lt;h3 id="单链表">
 单链表
 &lt;a class="anchor" href="#%e5%8d%95%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>单链表&lt;/strong>只有一个方向，结点&lt;strong>只有一个后继指针next&lt;/strong>指向后面的节点。因此，链表这种数据结构通常在&lt;strong>物理内存&lt;/strong>上是&lt;strong>不连续&lt;/strong>的&lt;/li>
&lt;li>我们习惯性地把&lt;strong>第一个结点&lt;/strong>叫做&lt;strong>头结点&lt;/strong>，链表通常有一个&lt;strong>不保存任何值的head节点&lt;/strong>（头结点），通过头结点我们可以&lt;strong>遍历整个链表&lt;/strong>，尾结点通常&lt;strong>指向null&lt;/strong>&lt;/li>
&lt;li>如下图
&lt;img src="img/ly-20241212141850281.png" alt="ly-20241212141850281" />&lt;/li>
&lt;/ul>
&lt;h3 id="循环链表">
 循环链表
 &lt;a class="anchor" href="#%e5%be%aa%e7%8e%af%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>循环链表是一种&lt;strong>特殊的单链表&lt;/strong>，和单链表不同的是&lt;strong>循环链表的尾结点&lt;/strong>不是指向null，而是&lt;strong>指向链表的头结点&lt;/strong>&lt;/li>
&lt;li>如图
&lt;img src="img/ly-20241212141850545.png" alt="ly-20241212141850545" />&lt;/li>
&lt;/ul>
&lt;h3 id="双向链表">
 双向链表
 &lt;a class="anchor" href="#%e5%8f%8c%e5%90%91%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>双向链表包含&lt;strong>两个指针&lt;/strong>，一个&lt;strong>prev&lt;/strong>指向&lt;strong>前一个节点&lt;/strong>，另一个&lt;strong>next&lt;/strong>指向&lt;/li>
&lt;li>如图
&lt;img src="img/ly-20241212141850726.png" alt="ly-20241212141850726" />&lt;/li>
&lt;/ul>
&lt;h3 id="双向循环链表">
 双向循环链表
 &lt;a class="anchor" href="#%e5%8f%8c%e5%90%91%e5%be%aa%e7%8e%af%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;p>双向循环链表的&lt;strong>最后一个节点的next&lt;/strong>指向head，而head的&lt;strong>prev&lt;/strong>指向最后一个节点，构成一个环&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141850919.png" alt="ly-20241212141850919" />&lt;/p>
&lt;h2 id="应用场景">
 应用场景
 &lt;a class="anchor" href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>如果需要支持&lt;strong>随机访问&lt;/strong>的话，链表无法做到&lt;/li>
&lt;li>如果需要&lt;strong>存储的数据元素个数不确定&lt;/strong>，并且需要经常&lt;strong>添加&lt;/strong>和&lt;strong>删除&lt;/strong>数据的话，使用&lt;strong>链表&lt;/strong>比较合适&lt;/li>
&lt;li>如果需要&lt;strong>存储的数据元素&lt;/strong>的个数确定，并且不需要&lt;strong>经常添加&lt;/strong>和&lt;strong>删除&lt;/strong>数据的话，使用数组比较合适&lt;/li>
&lt;/ul>
&lt;h2 id="数组-vs-链表">
 数组 vs 链表
 &lt;a class="anchor" href="#%e6%95%b0%e7%bb%84-vs-%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>数组支持&lt;strong>随机访问&lt;/strong>，链表不支持&lt;/li>
&lt;li>数组使用的是&lt;strong>连续内存空间&lt;/strong> &lt;strong>对CPU缓存机制&lt;/strong>友好，链表则&lt;strong>相反&lt;/strong>&lt;/li>
&lt;li>数组的&lt;strong>大小固定&lt;/strong>，而链表则&lt;strong>天然支持动态扩容&lt;/strong>。如果生命的数组过小，需要另外申请一个&lt;strong>更大的内存空间&lt;/strong>存放数组元素，然后将&lt;strong>原数组拷贝进去&lt;/strong>，这个操作比较耗时&lt;/li>
&lt;/ul>
&lt;h1 id="栈">
 栈
 &lt;a class="anchor" href="#%e6%a0%88">#&lt;/a>
&lt;/h1>
&lt;h2 id="栈简介">
 栈简介
 &lt;a class="anchor" href="#%e6%a0%88%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>栈（stack）只允许在&lt;strong>有序的线性数据集合&lt;/strong>的&lt;strong>一端&lt;/strong>（称为栈顶top）进行&lt;strong>加入数据（push）&lt;strong>和&lt;/strong>移除数据（pop）&lt;/strong>。因而按照**后进先出（LIFO，Last In First Out）**的原理运作。&lt;/li>
&lt;li>栈中，&lt;strong>push&lt;/strong>和&lt;strong>pop&lt;/strong>的操作都发生在栈顶&lt;/li>
&lt;li>栈常用&lt;strong>一维数组&lt;/strong>或&lt;strong>链表&lt;/strong>来实现，用数组实现的叫&lt;strong>顺序栈&lt;/strong>，用链表实现的叫做&lt;strong>链式栈&lt;/strong>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>假设堆栈中有n个元素。
访问：O（n）//最坏情况
插入删除：O（1）//顶端插入和删除元素&lt;/p></description></item><item><title>数据库基础</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/ly0501lybasis/</link><pubDate>Tue, 20 Dec 2022 11:19:14 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/database/ly0501lybasis/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>这部分内容由于涉及太多概念性内容，所以参考了维基百科和百度百科相应的介绍。&lt;/p>
&lt;/blockquote>
&lt;h1 id="什么是数据库数据库管理系统数据库系统数据库管理员">
 什么是数据库，数据库管理系统，数据库系统，数据库管理员
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%95%b0%e6%8d%ae%e5%ba%93%e6%95%b0%e6%8d%ae%e5%ba%93%e7%ae%a1%e7%90%86%e7%b3%bb%e7%bb%9f%e6%95%b0%e6%8d%ae%e5%ba%93%e7%b3%bb%e7%bb%9f%e6%95%b0%e6%8d%ae%e5%ba%93%e7%ae%a1%e7%90%86%e5%91%98">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>数据库&lt;/strong>：数据库（&lt;strong>DataBase 简称DB&lt;/strong>）就是&lt;strong>信息的集合&lt;/strong>或者说&lt;strong>数据库管理系统管理的数据的集合&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>数据库管理系统&lt;/strong>：数据库管理系统（&lt;strong>Database Management System 简称DBMS&lt;/strong>）是一种&lt;strong>操纵和管理数据库&lt;/strong>的大型软件，通常用于建立、使用和维护 &lt;strong>数据库&lt;/strong>。&lt;/li>
&lt;li>&lt;strong>数据库系统（范围最大）&lt;/strong>：数据库系统（Data Base System，简称DBS）通常由**软件、数据和数据管理员（DBA）**组成。&lt;/li>
&lt;li>&lt;strong>数据库管理员&lt;/strong>：数据库管理员（Database Adminitrator，简称DBA）负责全面&lt;strong>管理和控制&lt;/strong>数据库系统 &lt;strong>(是一个人)&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>数据库系统基本构成&lt;/strong>如下图所示&lt;br>
&lt;img src="img/ly-20241212141854630.png" alt="ly-20241212141854630" />&lt;/p>
&lt;h1 id="什么是元组码候选码主码外码主属性非主属性">
 什么是元组，码，候选码，主码，外码，主属性，非主属性
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%85%83%e7%bb%84%e7%a0%81%e5%80%99%e9%80%89%e7%a0%81%e4%b8%bb%e7%a0%81%e5%a4%96%e7%a0%81%e4%b8%bb%e5%b1%9e%e6%80%a7%e9%9d%9e%e4%b8%bb%e5%b1%9e%e6%80%a7">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>元组&lt;/strong>：元组（tuple）是&lt;strong>关系数据库&lt;/strong>中的&lt;strong>基本概念&lt;/strong>，&lt;strong>关系&lt;/strong>是一张表，表中的&lt;strong>每行&lt;/strong>（即数据库中的每条&lt;strong>记录&lt;/strong>）就是一个元组，每列就是一个属性。在&lt;strong>二维表&lt;/strong>里，元组也成为&lt;strong>行&lt;/strong>&lt;/li>
&lt;li>&lt;strong>码&lt;/strong>：码就是能&lt;strong>唯一标识实体&lt;/strong>的属性，对应表中的&lt;strong>列&lt;/strong>&lt;/li>
&lt;li>&lt;strong>候选码&lt;/strong>：若关系中的&lt;strong>某一属性&lt;/strong>或&lt;strong>属性组的值&lt;/strong>能&lt;strong>唯一的标识一个元组&lt;/strong>，而&lt;strong>其任何、子集都不能再标识&lt;/strong>，则称该&lt;strong>属性组&lt;/strong>为&lt;strong>候选码&lt;/strong>。例如：在学生实体中，&lt;strong>“学号”&lt;strong>是能唯一的区分学生实体的，同时又假设&lt;/strong>“姓名”、“班级”的属性组合&lt;/strong>足以区分学生实体，那么**{学号}&lt;strong>和&lt;/strong>{姓名，班级}&lt;strong>都是&lt;/strong>候选码**。&lt;/li>
&lt;li>&lt;strong>主码&lt;/strong>：主码也叫&lt;strong>主键&lt;/strong>，主码是&lt;strong>从候选码&lt;/strong>中选出来的。一个实体集中只能有&lt;strong>一个主码&lt;/strong>，但可以有&lt;strong>多个候选码&lt;/strong>&lt;/li>
&lt;li>&lt;strong>外码&lt;/strong>：外码也叫&lt;strong>外键&lt;/strong>。如果&lt;strong>一个关系中的一个属性&lt;/strong>是&lt;strong>另外一个关系中的主码&lt;/strong>则这个属性为外码。&lt;/li>
&lt;li>&lt;strong>主属性&lt;/strong> ： &lt;strong>候选码中出现过的属性&lt;/strong>称为主属性(&lt;strong>这里强调单个&lt;/strong>）。比如关系 工人（工号，身份证号，姓名，性别，部门）. 显然&lt;strong>工号和身份证号&lt;/strong>都能够唯一标示这个关系，所以都是候选码。&lt;strong>工号、身份证号这两个属性就是主属性&lt;/strong>。如果主码是一个属性组，那么属性组中的属性都是主属性。&lt;/li>
&lt;li>&lt;strong>非主属性：&lt;/strong> &lt;strong>不包含在任何一个候选码中的属性&lt;/strong>称为非主属性。比如在关系——学生（学号，姓名，年龄，性别，班级）中，主码是“学号”，那么其他的“姓名”、“年龄”、“性别”、“班级”就都可以称为非主属性。&lt;/li>
&lt;/ul>
&lt;h1 id="主键和外键有什么区别">
 主键和外键有什么区别
 &lt;a class="anchor" href="#%e4%b8%bb%e9%94%ae%e5%92%8c%e5%a4%96%e9%94%ae%e6%9c%89%e4%bb%80%e4%b9%88%e5%8c%ba%e5%88%ab">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;strong>主键(主码)&lt;/strong> ：主键用于&lt;strong>唯一标识一个元组&lt;/strong>，不能有重复，不允许为空。一个表只能有一个主键。&lt;/li>
&lt;li>&lt;strong>外键(外码)&lt;/strong> ：外键用来和其他表建立联系用，&lt;strong>外键是另一表的主键&lt;/strong>，外键是可以有重复的，可以是空值。一个表可以有多个外键&lt;/li>
&lt;/ul>
&lt;h1 id="为什么不推荐使用外键与级联">
 为什么不推荐使用外键与级联
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e4%b8%8d%e6%8e%a8%e8%8d%90%e4%bd%bf%e7%94%a8%e5%a4%96%e9%94%ae%e4%b8%8e%e7%ba%a7%e8%81%94">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>对于外键和级联，阿里巴巴开发手册这样说道&lt;/p>
&lt;blockquote>
&lt;p>【强制】不得使用外键与级联，一切&lt;strong>外键概念&lt;/strong>必须在应用层解决。&lt;/p>
&lt;p>说明: 以学生和成绩的关系为例，学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，即为级联更新。&lt;/p>
&lt;p>缺点： &lt;strong>外键与级联更新适用于单机低并发，不适合分布式、高并发集群; 级联更新是强阻塞，存在数据库更新风暴的风 险; 外键影响数据库的插入速度&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>为什么不要使用外键&lt;/p>
&lt;ol>
&lt;li>
&lt;p>增加了复杂性&lt;/p>
&lt;blockquote>
&lt;p>a. 每次做DELETE 或者UPDATE都必须考虑外键约束，会导致开发的时候很痛苦, &lt;strong>测试数据极为不方便&lt;/strong>; b. 外键的主从关系是定的，假如那天需求有变化，&lt;strong>数据库中的这个字段根本不需要和其他表有关联的话就会增加很多麻烦&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>增加了额外操作&lt;/p></description></item><item><title>jvm监控和故障处理工具 总结</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0408lyjdk-monitoring-and-troubleshooting-tools/</link><pubDate>Mon, 19 Dec 2022 16:04:34 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0408lyjdk-monitoring-and-troubleshooting-tools/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="jdk-命令行工具">
 JDK 命令行工具
 &lt;a class="anchor" href="#jdk-%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h1>
&lt;p>这些命令在 JDK 安装目录下的 bin 目录下：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>jps&lt;/code>&lt;/strong> (JVM Process Status）: 类似 UNIX 的 &lt;code>ps&lt;/code> 命令。用于查看所有 Java 进程的启动类、传入参数和 Java 虚拟机参数等信息；&lt;/li>
&lt;li>&lt;strong>&lt;code>jstat&lt;/code>&lt;/strong>（JVM Statistics Monitoring Tool）: 用于收集 HotSpot 虚拟机各方面的运行数据;&lt;/li>
&lt;li>&lt;strong>&lt;code>jinfo&lt;/code>&lt;/strong> (Configuration Info for Java) : Configuration Info for Java,显示虚拟机配置信息;&lt;/li>
&lt;li>&lt;strong>&lt;code>jmap&lt;/code>&lt;/strong> (Memory Map for Java) : 生成堆转储快照;&lt;/li>
&lt;li>&lt;strong>&lt;code>jhat&lt;/code>&lt;/strong> (JVM Heap Dump Browser) : 用于分析 heapdump 文件，它会建立一个 HTTP/HTML 服务器，让用户可以在浏览器上查看分析结果;&lt;/li>
&lt;li>&lt;strong>&lt;code>jstack&lt;/code>&lt;/strong> (Stack Trace for Java) : 生成虚拟机当前时刻的线程快照，线程快照就是当前虚拟机内每一条线程正在执行的方法堆栈的集合。&lt;/li>
&lt;/ul>
&lt;h2 id="jps-查看所有-java-进程">
 jps: 查看所有 Java 进程
 &lt;a class="anchor" href="#jps-%e6%9f%a5%e7%9c%8b%e6%89%80%e6%9c%89-java-%e8%bf%9b%e7%a8%8b">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>jps&lt;/code>(JVM Process Status) 命令类似 UNIX 的 &lt;code>ps&lt;/code> 命令。&lt;/p></description></item><item><title>jvm参数</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0406lyjvm-params/</link><pubDate>Mon, 19 Dec 2022 15:24:01 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0406lyjvm-params/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>本文由 JavaGuide 翻译自 
&lt;a target="_blank" href="https://www.baeldung.com/jvm-parameters">https://www.baeldung.com/jvm-parametersopen in new window&lt;/a>，并对文章进行了大量的完善补充。翻译不易，如需转载请注明出处，作者：
&lt;a target="_blank" href="https://www.baeldung.com/author/baeldung/">baeldungopen in new window&lt;/a> 。&lt;/p>
&lt;/blockquote>
&lt;h1 id="概述">
 概述
 &lt;a class="anchor" href="#%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h1>
&lt;p>本篇文章中，将掌握最常用的&lt;strong>JVM参数配置&lt;/strong>。下面提到了一些概念，&lt;strong>堆&lt;/strong>、&lt;strong>方法区&lt;/strong>、&lt;strong>垃圾回收&lt;/strong>等。&lt;/p>
&lt;h1 id="堆内存相关">
 堆内存相关
 &lt;a class="anchor" href="#%e5%a0%86%e5%86%85%e5%ad%98%e7%9b%b8%e5%85%b3">#&lt;/a>
&lt;/h1>
&lt;p>Java 虚拟机所管理的&lt;strong>内存中最大的一块&lt;/strong>，&lt;strong>Java 堆&lt;/strong>是&lt;strong>所有线程共享的一块内存区域&lt;/strong>，在虚拟机&lt;strong>启动时创建&lt;/strong>。此内存区域的&lt;strong>唯一目的就是存放对象实例&lt;/strong>，&lt;strong>几乎&lt;/strong> &lt;strong>所有的对象实例&lt;/strong>以及&lt;strong>数组&lt;/strong>都在这里分配内存。&lt;br>
&lt;img src="img/ly-20241212142002639.png" alt="ly-20241212142002639" />&lt;/p>
&lt;h2 id="显式指定堆内存-xms和-xmx">
 显式指定堆内存-Xms和-Xmx
 &lt;a class="anchor" href="#%e6%98%be%e5%bc%8f%e6%8c%87%e5%ae%9a%e5%a0%86%e5%86%85%e5%ad%98-xms%e5%92%8c-xmx">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>与&lt;strong>性能相关&lt;/strong>的最常见实践之一是根据应用程序要求&lt;strong>初始化堆内存&lt;/strong>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果我们需要指定&lt;strong>最小&lt;/strong>和&lt;strong>最大堆&lt;/strong>大小（推荐显示指定大小）：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>-Xms&amp;lt;heap size&amp;gt;&lt;span style="color:#f92672">[&lt;/span>unit&lt;span style="color:#f92672">]&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Xmx&amp;lt;heap size&amp;gt;&lt;span style="color:#f92672">[&lt;/span>unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>heap size&lt;/strong> 表示要初始化内存的具体大小。&lt;/li>
&lt;li>&lt;strong>unit&lt;/strong> 表示要初始化内存的单位。单位为***“ g”*** (GB) 、&lt;em>&lt;strong>“ m”&lt;/strong>&lt;/em>（MB）、&lt;em>&lt;strong>“ k”&lt;/strong>&lt;/em>（KB）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>举例，为JVM分配最小2GB和最大5GB的堆内存大小&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>-Xms2G -Xmx5G
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="显示新生代内存young-generation">
 显示新生代内存（Young Generation）
 &lt;a class="anchor" href="#%e6%98%be%e7%a4%ba%e6%96%b0%e7%94%9f%e4%bb%a3%e5%86%85%e5%ad%98young-generation">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>在堆总可用内存配置完成之后，第二大影响因素是为 &lt;strong>&lt;code>Young Generation&lt;/code>&lt;/strong> 在堆内存所占的比例。默认情况下，&lt;strong>YG 的最小大小为 1310 &lt;em>MB&lt;/em>&lt;/strong>，最大大小为&lt;em>无限制&lt;/em>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>两种指定 &lt;strong>新生代内存(Young Generation)&lt;/strong> 大小的方法&lt;/p>
&lt;ol>
&lt;li>
&lt;p>通过 &lt;code>-XX:NewSize&lt;/code> 和 &lt;code>-XX:MaxNewSize &lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-&lt;/span>XX:NewSize&lt;span style="color:#f92672">=&amp;lt;&lt;/span>young size&lt;span style="color:#f92672">&amp;gt;[&lt;/span>unit&lt;span style="color:#f92672">]&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">-&lt;/span>XX:MaxNewSize&lt;span style="color:#f92672">=&amp;lt;&lt;/span>young size&lt;span style="color:#f92672">&amp;gt;[&lt;/span>unit&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如，为新生代分配&lt;strong>最小256m&lt;/strong>的内存，&lt;strong>最大1024m&lt;/strong>的内存我们的参数为：&lt;/p></description></item><item><title>类文件结构</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0403lyclass-structure/</link><pubDate>Sun, 18 Dec 2022 08:24:36 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0403lyclass-structure/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="概述">
 概述
 &lt;a class="anchor" href="#%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>Java中，JVM可以理解的代码就叫做&lt;strong>字节码&lt;/strong>（即扩展名为.class的文件），它不面向任何特定的处理器，只&lt;strong>面向虚拟机&lt;/strong>&lt;/li>
&lt;li>Java语言通过&lt;strong>字节码&lt;/strong>的方式，在一定程度上解决了&lt;strong>传统解释型语言执行效率低&lt;/strong>的问题，同时又保留了&lt;strong>解释型语言&lt;/strong>可移植的特点。所以Java程序运行时&lt;strong>效率极高&lt;/strong>，且由于字节码并不针对一种特定的&lt;strong>机器&lt;/strong>。因此，Java程序无需重新编译便可在&lt;strong>多种不通操作系统的计算机&lt;/strong>运行&lt;/li>
&lt;li>Clojure（Lisp 语言的一种方言）、Groovy、Scala 等语言都是运行在 Java 虚拟机之上。下图展示了&lt;strong>不同的语言被不同的编译器&lt;/strong>编译&lt;strong>成&lt;code>.class&lt;/code>&lt;strong>文件&lt;/strong>最终运行在 Java 虚拟机&lt;/strong>之上。&lt;strong>&lt;code>.class&lt;/code>文件的二进制格式&lt;/strong>可以使用 
&lt;a target="_blank" href="https://www.x-ways.net/winhex/">WinHexopen in new window&lt;/a> 查看。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="img/ly-20241212141957797.png" alt="ly-20241212141957797" />&lt;/p>
&lt;p>.class文件是不同语言在&lt;strong>Java虚拟机&lt;/strong>之间的重要桥梁，同时也是&lt;strong>支持Java跨平台&lt;/strong>很重要的一个原因&lt;/p>
&lt;h1 id="class文件结构总结">
 Class文件结构总结
 &lt;a class="anchor" href="#class%e6%96%87%e4%bb%b6%e7%bb%93%e6%9e%84%e6%80%bb%e7%bb%93">#&lt;/a>
&lt;/h1>
&lt;p>根据Java虚拟机规范，Class文件通过&lt;strong>ClassFile&lt;/strong>定义，有点类似C语言的&lt;strong>结构体&lt;/strong>&lt;/p>
&lt;p>ClassFile的结构如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ClassFile {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u4 magic; &lt;span style="color:#75715e">//Class 文件的标志&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 minor_version;&lt;span style="color:#75715e">//Class 的小版本号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 major_version;&lt;span style="color:#75715e">//Class 的大版本号&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 constant_pool_count;&lt;span style="color:#75715e">//常量池的数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cp_info constant_pool&lt;span style="color:#f92672">[&lt;/span>constant_pool_count&lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">]&lt;/span>;&lt;span style="color:#75715e">//常量池&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 access_flags;&lt;span style="color:#75715e">//Class 的访问标记&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 this_class;&lt;span style="color:#75715e">//当前类&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 super_class;&lt;span style="color:#75715e">//父类&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 interfaces_count;&lt;span style="color:#75715e">//接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 interfaces&lt;span style="color:#f92672">[&lt;/span>interfaces_count&lt;span style="color:#f92672">]&lt;/span>;&lt;span style="color:#75715e">//一个类可以实现多个接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 fields_count;&lt;span style="color:#75715e">//Class 文件的字段属性&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> field_info fields&lt;span style="color:#f92672">[&lt;/span>fields_count&lt;span style="color:#f92672">]&lt;/span>;&lt;span style="color:#75715e">//一个类可以有多个字段&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 methods_count;&lt;span style="color:#75715e">//Class 文件的方法数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> method_info methods&lt;span style="color:#f92672">[&lt;/span>methods_count&lt;span style="color:#f92672">]&lt;/span>;&lt;span style="color:#75715e">//一个类可以有个多个方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> u2 attributes_count;&lt;span style="color:#75715e">//此类的属性表中的属性数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> attribute_info attributes&lt;span style="color:#f92672">[&lt;/span>attributes_count&lt;span style="color:#f92672">]&lt;/span>;&lt;span style="color:#75715e">//属性表集合&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212141958065.png" alt="ly-20241212141958065" />&lt;/p></description></item><item><title>类加载器详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0405lyclassloader-detail/</link><pubDate>Sat, 17 Dec 2022 22:39:21 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0405lyclassloader-detail/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="回顾一下类加载过程">
 回顾一下类加载过程
 &lt;a class="anchor" href="#%e5%9b%9e%e9%a1%be%e4%b8%80%e4%b8%8b%e7%b1%bb%e5%8a%a0%e8%bd%bd%e8%bf%87%e7%a8%8b">#&lt;/a>
&lt;/h2>
&lt;p>开始介绍类加载器和双亲委派模型之前，简单回顾一下类加载过程。&lt;/p>
&lt;ul>
&lt;li>类加载过程：&lt;strong>加载-&amp;gt;连接-&amp;gt;初始化&lt;/strong>。&lt;/li>
&lt;li>连接过程又可分为三步：&lt;strong>验证-&amp;gt;准备-&amp;gt;解析&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>[&lt;img src="img/ly-20241212142001796.jpg" alt="类加载过程" />&lt;/p>
&lt;p>加载是类加载过程的第一步，主要完成下面 3 件事情：&lt;/p>
&lt;ol>
&lt;li>通过&lt;strong>全类名&lt;/strong>获取定义此类的&lt;strong>二进制字节流&lt;/strong>&lt;/li>
&lt;li>将字节流所代表的静态存储结构&lt;strong>转换为方法区的运行时数据结构&lt;/strong>&lt;/li>
&lt;li>在&lt;strong>内存&lt;/strong>中生成一个代表该类的 &lt;strong>&lt;code>Class&lt;/code> 对象&lt;/strong>，作为&lt;strong>方法区这些数据的访问入口&lt;/strong>&lt;/li>
&lt;/ol>
&lt;h2 id="类加载器">
 类加载器
 &lt;a class="anchor" href="#%e7%b1%bb%e5%8a%a0%e8%bd%bd%e5%99%a8">#&lt;/a>
&lt;/h2>
&lt;h3 id="类加载器介绍">
 类加载器介绍
 &lt;a class="anchor" href="#%e7%b1%bb%e5%8a%a0%e8%bd%bd%e5%99%a8%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h3>
&lt;p>类加载器从 JDK 1.0 就出现了，最初只是为了满足 Java Applet（已经被淘汰） 的需要。后来，慢慢成为 Java 程序中的一个重要组成部分，赋予了 &lt;strong>Java 类可以被动态加载到 JVM&lt;/strong> 中并执行的能力。&lt;/p>
&lt;p>根据官方 API 文档的介绍：&lt;/p>
&lt;blockquote>
&lt;p>A class loader is an object that is responsible for loading classes. The class ClassLoader is an abstract class. Given the binary name of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &amp;ldquo;class file&amp;rdquo; of that name from a file system.&lt;/p></description></item><item><title>类加载过程</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0404lyclassloader-process/</link><pubDate>Fri, 16 Dec 2022 10:06:50 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0404lyclassloader-process/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="类的声明周期">
 类的声明周期
 &lt;a class="anchor" href="#%e7%b1%bb%e7%9a%84%e5%a3%b0%e6%98%8e%e5%91%a8%e6%9c%9f">#&lt;/a>
&lt;/h1>
&lt;p>&lt;img src="img/ly-20241212141959924.png" alt="ly-20241212141959924" />&lt;/p>
&lt;h1 id="类加载过程">
 类加载过程
 &lt;a class="anchor" href="#%e7%b1%bb%e5%8a%a0%e8%bd%bd%e8%bf%87%e7%a8%8b">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>Class文件，需要&lt;strong>加载到虚拟机中&lt;/strong>之后才能运行和使用，那么虚拟机是&lt;strong>如何加载&lt;/strong>这些Class文件呢&lt;/li>
&lt;li>系统加载Class类文件需要三步：&lt;strong>加载&lt;/strong>-&amp;gt;&lt;strong>连接&lt;/strong>-&amp;gt;&lt;strong>初始化&lt;/strong>。连接过程又分为三步：&lt;strong>验证&lt;/strong>-&amp;gt;&lt;strong>准备&lt;/strong>-&amp;gt;&lt;strong>解析&lt;/strong>&lt;br>
&lt;img src="img/ly-20241212142000194.png" alt="ly-20241212142000194" />&lt;/li>
&lt;/ul>
&lt;h2 id="加载">
 加载
 &lt;a class="anchor" href="#%e5%8a%a0%e8%bd%bd">#&lt;/a>
&lt;/h2>
&lt;p>类加载的第一步，主要完成3件事情&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>构造与类相关联的方法表&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>&lt;strong>通过全类名&lt;/strong>获取定义此类的&lt;strong>二进制字节流&lt;/strong>&lt;/li>
&lt;li>将&lt;strong>字节流&lt;/strong>所代表的&lt;strong>静态存储结构&lt;/strong>，转换为&lt;strong>方法区&lt;/strong>的&lt;strong>运行时数据结构&lt;/strong>&lt;/li>
&lt;li>在内存中生成一个该类的&lt;strong>Class对象&lt;/strong>，作为&lt;strong>方法区&lt;/strong>这些数据的访问入口&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>虚拟机规范对上面3点不具体，比较灵活&lt;/p>
&lt;ol>
&lt;li>对于1 没有具体指明从哪里获取、怎样获取。可以从ZIP包读取 （JAR/EAR/WAR格式的基础）、其他文件生成（JSP）等&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;ul>
&lt;li>非数组类的加载阶段（加载阶段&lt;strong>获取类的二进制字节流&lt;/strong>的动作）是可控性最强的阶段，这一步我们可以去完成还可以&lt;strong>自定义类加载器&lt;/strong>去&lt;strong>控制字节流&lt;/strong>的获取方式（重写一个类加载器的**loadClass()**方法&lt;/li>
&lt;li>数组类型&lt;strong>不通过&lt;/strong>类加载器创建，它由&lt;strong>Java虚拟机&lt;/strong>直接创建&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>加载阶段&lt;/strong>和&lt;strong>连接阶段&lt;/strong>的部分内容是&lt;strong>交叉执行&lt;/strong>的，即加载阶段尚未结束，连接阶段就可能已经开始了&lt;/p>
&lt;h2 id="验证">
 验证
 &lt;a class="anchor" href="#%e9%aa%8c%e8%af%81">#&lt;/a>
&lt;/h2>
&lt;p>验证是连接阶段的第一步，这一阶段的目的是确保 Class 文件的&lt;strong>字节流&lt;/strong>中包含的信息&lt;strong>符合《Java 虚拟机规范》&lt;strong>的全部约束要求，保证这些信息被当作代码运行后&lt;/strong>不会危害虚拟机自身的安全&lt;/strong>。&lt;/p>
&lt;p>验证阶段主要由&lt;strong>四个&lt;/strong>检验阶段组成：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>文件格式&lt;/strong>验证（Class 文件格式检查）&lt;/li>
&lt;li>&lt;strong>元数据&lt;/strong>验证（字节码语义检查）&lt;/li>
&lt;li>&lt;strong>字节码&lt;/strong>验证（程序语义检查）&lt;/li>
&lt;li>&lt;strong>符号引用&lt;/strong>验证（类的正确性检查）&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="img/ly-20241212142000337.png" alt="ly-20241212142000337" />&lt;/p>
&lt;h2 id="准备">
 准备
 &lt;a class="anchor" href="#%e5%87%86%e5%a4%87">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>准备阶段是正式&lt;strong>为类变量分配内存&lt;/strong>并&lt;strong>设置类变量初始值&lt;/strong>的阶段，这些内存都将在&lt;strong>方法区&lt;/strong>中分配，注意：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>这时候进行内存分配的&lt;strong>仅&lt;/strong>包括&lt;strong>类变量&lt;/strong>（&lt;strong>ClassVariables&lt;/strong>，即&lt;strong>静态变量&lt;/strong>：被&lt;code>static&lt;/code>关键字修饰的变量，&lt;strong>只与类相关&lt;/strong>，因此被称为&lt;strong>类变量&lt;/strong>），而&lt;strong>不包括&lt;/strong>实例变量。&lt;/p>
&lt;blockquote>
&lt;p>实例变量会在&lt;strong>对象实例化&lt;/strong>时，随着对象一块分配到&lt;strong>Java堆&lt;/strong>中&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>从概念上讲，类变量所使用的内存都应当在 &lt;strong>方法区&lt;/strong> 中进行分配。不过有一点需要注意的是：JDK 7 之前，HotSpot 使用永久代来实现方法区的时候，实现是完全符合这种逻辑概念的。 而在 &lt;strong>JDK 7 及之后&lt;/strong>，HotSpot 已经把&lt;strong>原本放在永久代&lt;/strong>的&lt;strong>字符串常量池&lt;/strong>、&lt;strong>静态变量&lt;/strong>等移动到&lt;strong>堆&lt;/strong>中，这个时候&lt;strong>类变量&lt;/strong>则会随着 **Class 对象（上面有提到，内存区生成Class对象）**一起存放在 Java 堆中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>这里所设置的初始值**&amp;ldquo;通常情况&amp;rdquo;&lt;strong>下是&lt;/strong>数据类型默认的零值（如 0、0L、null、false 等**），比如我们定义了**&lt;code>public static int value=111&lt;/code>** ，那么 value 变量在准备阶段的&lt;strong>初始值就是 0 而不是 111&lt;/strong>（&lt;strong>初始化&lt;/strong>阶段才会赋值）。&lt;strong>特殊情况&lt;/strong>：比如给 &lt;strong>value 变量加上了 final&lt;/strong> 关键字&lt;code>public static final int value=111&lt;/code> ，那么准备阶段 value 的值就被赋值为 111&lt;/p></description></item><item><title>java垃圾回收</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0402lygarbage-collection/</link><pubDate>Mon, 12 Dec 2022 15:58:48 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0402lygarbage-collection/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="前言">
 前言
 &lt;a class="anchor" href="#%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h1>
&lt;p>当&lt;strong>需要排查各种内存溢出问题&lt;/strong>、当&lt;strong>垃圾收集&lt;/strong>成为系统达到更高并发的瓶颈时，我们就需要对这些**“自动化”&lt;strong>的技术实施必要的&lt;/strong>监控&lt;strong>和&lt;/strong>调节**&lt;/p>
&lt;h1 id="堆空间的基本结构">
 堆空间的基本结构
 &lt;a class="anchor" href="#%e5%a0%86%e7%a9%ba%e9%97%b4%e7%9a%84%e5%9f%ba%e6%9c%ac%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>Java的&lt;strong>自动内存管理&lt;/strong>主要是针对对象内存的&lt;strong>回收&lt;/strong>和对象内存的&lt;strong>分配&lt;/strong>。且Java自动内存管理最核心的功能是&lt;strong>堆&lt;/strong>内存中的对象&lt;strong>分配&lt;/strong>和&lt;strong>回收&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java堆是垃圾收集器管理的主要区域，因此也被称作&lt;strong>GC堆（Garbage Collected Heap）&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从&lt;strong>垃圾回收的角度&lt;/strong>来说，由于现在收集器基本都采用&lt;strong>分代垃圾收集算法&lt;/strong>，所以Java堆被划分为了几个不同的区域，这样我们就可以&lt;strong>根据各个区域的特点&lt;/strong>选择&lt;strong>合适的垃圾收集算法&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>JDK7版本及JDK7版本之前，堆内存被通常分为下面三部分：&lt;/p>
&lt;ol>
&lt;li>新生代内存（Young Generation）&lt;/li>
&lt;li>老生代（Old Generation）&lt;/li>
&lt;li>永久代（Permanent Generation）&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://javaguide.cn/assets/hotspot-heap-structure.41533631.png" alt="hotspot-heap-structure" />&lt;/p>
&lt;p>JDK8版本之后PermGen（永久）已被Metaspace（元空间）取代，且已经不在堆里面了，元空间使用的是&lt;strong>直接内存&lt;/strong>。&lt;/p>
&lt;h1 id="内存分配和回收原则">
 内存分配和回收原则
 &lt;a class="anchor" href="#%e5%86%85%e5%ad%98%e5%88%86%e9%85%8d%e5%92%8c%e5%9b%9e%e6%94%b6%e5%8e%9f%e5%88%99">#&lt;/a>
&lt;/h1>
&lt;h2 id="对象优先在eden区分配">
 对象优先在Eden区分配
 &lt;a class="anchor" href="#%e5%af%b9%e8%b1%a1%e4%bc%98%e5%85%88%e5%9c%a8eden%e5%8c%ba%e5%88%86%e9%85%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>多数情况下，对象在&lt;strong>新生代中Eden区&lt;/strong>分配。当Eden区没有足够空间进行分配时，会触发一次MinorGC
首先，先添加一下参数打印GC详情：&lt;code>-XX:+PrintGCDetails&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">GCTest&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> allocation1, allocation2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		allocation1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>30900&lt;span style="color:#f92672">*&lt;/span>1024&lt;span style="color:#f92672">]&lt;/span>;&lt;span style="color:#75715e">//会用掉3万多K&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行后的结果（这里应该是配过xms和xmx了，即堆内存大小）
&lt;img src="img/ly-20241212141955776.jpg" alt="img" />
如上，&lt;strong>Eden区内存几乎被分配完全&lt;/strong>（即使程序什么都不做，新生代也会使用2000多K）&lt;/p>
&lt;blockquote>
&lt;p>注： PSYoungGen 为 38400K ，= 33280K + 5120K （Survivor区总会有一个是空的，所以只加了一个5120K ）&lt;/p>
&lt;/blockquote>
&lt;p>假如我们再为allocation2分配内存会怎么样(不处理的话，年轻代会溢出)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>allocation2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>900 &lt;span style="color:#f92672">*&lt;/span> 1024&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212141956049.jpg" alt="img" />
在给allocation2分配内存之前，Eden区内存几乎已经被分配完。所以当&lt;strong>Eden区没有足够空间进行分配时&lt;/strong>，虚拟机将发起一次MinorGC。GC期间虚拟机又发现&lt;strong>allocation1无法存入空间&lt;/strong>，所以只好通过&lt;strong>分配担保机制&lt;/strong>，把&lt;strong>新生代的对象&lt;/strong>，&lt;strong>提前转移到老年代&lt;/strong>去，老年代的空间足够存放allocation1，&lt;strong>所以不会出现Full GC（这里可能是之前的说法，可能只是要表达老年代的GC，而不是Full GC(整堆GC) ）&lt;/strong>　　&lt;/p>
&lt;p>执行MinorGC后，&lt;strong>后面分配的对象如果能够存在Eden区&lt;/strong>的话，还是会在Eden区分配内存&lt;br>
执行如下代码验证：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">GCTest&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> allocation1, allocation2,allocation3,allocation4,allocation5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		allocation1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>32000&lt;span style="color:#f92672">*&lt;/span>1024&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		allocation2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>1000&lt;span style="color:#f92672">*&lt;/span>1024&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		allocation3 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>1000&lt;span style="color:#f92672">*&lt;/span>1024&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		allocation4 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>1000&lt;span style="color:#f92672">*&lt;/span>1024&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		allocation5 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>1000&lt;span style="color:#f92672">*&lt;/span>1024&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="大对象直接进入老年代">
 大对象直接进入老年代
 &lt;a class="anchor" href="#%e5%a4%a7%e5%af%b9%e8%b1%a1%e7%9b%b4%e6%8e%a5%e8%bf%9b%e5%85%a5%e8%80%81%e5%b9%b4%e4%bb%a3">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>大对象就是需要连续空间的对象（&lt;strong>字符串&lt;/strong>、&lt;strong>数组&lt;/strong>等）&lt;/li>
&lt;li>大对象直接进入老年代，主要是为了避免为&lt;strong>大对象分配内存时&lt;/strong>，由于&lt;strong>分配担保机制(这好像跟分配担保机制没有太大关系)&lt;strong>带来的复制而&lt;/strong>降低效率&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>假设大对象最后会晋升老年代，而新生代是基于复制算法来回收垃圾的，由两个Survivor区域配合完成复制算法，如果新生代中出现大对象且能屡次躲过GC，那这个对象就会在两个Survivor区域中来回复制，直至最后升入老年代，而大对象在内存里来回复制移动，就会消耗更多的时间。&lt;/p></description></item><item><title>jvm-intro</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0407lyjvm-intro/</link><pubDate>Fri, 09 Dec 2022 08:48:22 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0407lyjvm-intro/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide（添加小部分笔记）感谢作者!&lt;/p>
&lt;p>原文地址： 
&lt;a target="_blank" href="https://juejin.im/post/5e1505d0f265da5d5d744050#heading-28">https://juejin.im/post/5e1505d0f265da5d5d744050#heading-28&lt;/a> 感谢原作者分享！！&lt;/p>
&lt;/blockquote>
&lt;h1 id="jvm的基本介绍">
 JVM的基本介绍
 &lt;a class="anchor" href="#jvm%e7%9a%84%e5%9f%ba%e6%9c%ac%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>JVM，JavaVirtualMachine的缩写，虚拟出来的计算机，通过在实际的计算机上&lt;strong>仿真模拟&lt;/strong>各类计算机功能实现&lt;/li>
&lt;li>JVM类似一台小电脑，运行在windows或者linux这些&lt;strong>真实操作系统环境下&lt;/strong>，&lt;strong>直接&lt;/strong>和操作系统交互，&lt;strong>与硬件不直接交互&lt;/strong>，操作系统帮我们完成和硬件交互的工作&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="img/ly-20241212142002924.png" alt="img" />&lt;/p>
&lt;h2 id="java文件是如何运行的">
 Java文件是如何运行的
 &lt;a class="anchor" href="#java%e6%96%87%e4%bb%b6%e6%98%af%e5%a6%82%e4%bd%95%e8%bf%90%e8%a1%8c%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;p>场景假设：我们写了一个HelloWorld.java，这是一个文本文件。JVM不认识文本文件，所以&lt;strong>需要一个编译&lt;/strong>，让其(xxx.java)成为一个&lt;strong>JVM会读的二进制文件&amp;mdash;&amp;gt; HelloWorld.class&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>类加载器
如果JVM想要执行这个.class文件，需要将其**(这里应该指的二进制文件)&lt;strong>装进&lt;/strong>类加载器**中，它就像一个搬运工一样，会把所有的.class文件全部搬进JVM里面
&lt;img src="img/ly-20241212142003190.png" alt="img" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>方法区&lt;/p>
&lt;blockquote>
&lt;p>类加载器将.class文件搬过来，就是先丢到这一块上&lt;/p>
&lt;/blockquote>
&lt;p>方法区是用于&lt;strong>存放类似于元数据信息方面的数据&lt;/strong>的，比如&lt;strong>类信息&lt;/strong>、&lt;strong>常量&lt;/strong>、&lt;strong>静态变量&lt;/strong>、&lt;strong>编译后代码&lt;/strong>&amp;hellip;等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>堆
堆主要放一些&lt;strong>存储的数据&lt;/strong>，比如&lt;strong>对象实例&lt;/strong>、&lt;strong>数组&lt;/strong>&amp;hellip;等，它和&lt;strong>方法区&lt;/strong>都同属于&lt;strong>线程共享区域&lt;/strong>，即它们都是&lt;strong>线程不安全&lt;/strong>的&lt;/p>
&lt;/li>
&lt;li>
&lt;p>栈&lt;/p>
&lt;p>线程独享&lt;br>
栈是我们&lt;strong>代码运行空间&lt;/strong>，我们编写的&lt;strong>每一个方法&lt;/strong>都会放到&lt;strong>栈&lt;/strong>里面运行。&lt;br>
名词：&lt;strong>本地方法栈&lt;/strong>或&lt;strong>本地方法接口&lt;/strong>，不过我们基本不会涉及这两块内容，这&lt;strong>两底层使用C&lt;/strong>进行工作，&lt;strong>和Java没有太大关系&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>程序计数器
主要就是完成一个加载工作，类似于一个指针一样的，&lt;strong>指向下一行我们需要执行的代码&lt;/strong>。和栈一样，都是&lt;strong>线程独享&lt;/strong>的，就是&lt;strong>每一个线程都会自己对应的一块区域&lt;/strong>而不会存在并发和多线程问题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>小总结
&lt;img src="img/ly-20241212142003329.png" alt="img" />&lt;/p>
&lt;ol>
&lt;li>Java文件经过编译后编程.class字节码文件&lt;/li>
&lt;li>字节码文件通过类加载器被搬运到 JVM虚拟机中&lt;/li>
&lt;li>虚拟机主要的5大块：&lt;strong>方法区、堆&lt;/strong> 都为&lt;strong>线程共享&lt;/strong>区域，有线程安全问题；&lt;strong>栈&lt;/strong>和&lt;strong>本地方法栈&lt;/strong>和&lt;strong>计数器&lt;/strong>都是&lt;strong>独享&lt;/strong>区域，不存在线程安全问题，而JVM的调优主要就是围绕&lt;strong>堆&lt;/strong>、&lt;strong>栈&lt;/strong>两大块进行&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="简单的代码例子">
 简单的代码例子
 &lt;a class="anchor" href="#%e7%ae%80%e5%8d%95%e7%9a%84%e4%bb%a3%e7%a0%81%e4%be%8b%e5%ad%90">#&lt;/a>
&lt;/h2>
&lt;p>一个简单的学生类及main方法:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Student&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Student&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">sayName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;student&amp;#39;s name is : &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>main方法：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">App&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Student student &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Student(&lt;span style="color:#e6db74">&amp;#34;tellUrDream&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> student.&lt;span style="color:#a6e22e">sayName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>★★ 执行main方法的步骤如下&lt;/p></description></item><item><title>memory-area</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0401lymemory-area/</link><pubDate>Wed, 07 Dec 2022 13:49:39 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/JVM/ly0401lymemory-area/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;p>如果没有特殊说明，针对的都是HotSpot虚拟机&lt;/p>
&lt;/blockquote>
&lt;h1 id="前言">
 前言
 &lt;a class="anchor" href="#%e5%89%8d%e8%a8%80">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>对于Java程序员，虚拟机自动管理机制，不需要像C/C++程序员为每一个new 操作去写对应的delete/free 操作，不容易出现&lt;strong>内存泄漏&lt;/strong> 和 &lt;strong>内存溢出&lt;/strong>问题&lt;/li>
&lt;li>但由于内存控制权交给Java虚拟机，一旦出现&lt;strong>内存泄漏和溢出&lt;/strong>方面问题，如果不了解虚拟机是怎么样使用内存，那么很难&lt;strong>排查任务&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h1 id="运行时数据区域">
 运行时数据区域
 &lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c%e6%97%b6%e6%95%b0%e6%8d%ae%e5%8c%ba%e5%9f%9f">#&lt;/a>
&lt;/h1>
&lt;p>&lt;strong>Java虚拟机&lt;/strong>在执行Java程序的过程中，会把它管理的内存，&lt;strong>划分成若干个&lt;/strong>不同的数据区域&lt;/p>
&lt;p>JDK1.8之前：&lt;/p>
&lt;ol>
&lt;li>线程共享
堆，方法区【永久代】(包括运行时常量池)&lt;/li>
&lt;li>线程私有
虚拟机栈、本地方法栈、程序计数器&lt;/li>
&lt;li>本地内存(包括直接内存)&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="img/ly-20241212141952681.png" alt="ly-20241212141952681" />&lt;/p>
&lt;p>JDK1.8之后：&lt;br>
&lt;img src="img/ly-20241212141952951.png" alt="Java 运行时数据区域（JDK1.8 之后）" />
1.8之后整个永久代改名叫&amp;quot;元空间&amp;quot;，且移到了本地内存中&lt;/p>
&lt;p>规范（概括）：&lt;br>
&lt;strong>线程私有&lt;/strong>：程序计数器，虚拟机栈，本地方法栈&lt;/p>
&lt;p>&lt;strong>线程共享&lt;/strong>：堆，方法区，直接内存（非运行时数据区的一部分）&lt;/p>
&lt;blockquote>
&lt;p>Java虚拟机规范对于运行时数据区域的规定是相当宽松的，以堆为例：&lt;/p>
&lt;ol>
&lt;li>堆可以是连续，也可以不连续&lt;/li>
&lt;li>大小可以固定，也可以运行时按需扩展&lt;/li>
&lt;li>虚拟机实现者可以使用任何&lt;strong>垃圾回收算法管理堆&lt;/strong>，设置不进行垃圾收集&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h2 id="程序计数器">
 程序计数器
 &lt;a class="anchor" href="#%e7%a8%8b%e5%ba%8f%e8%ae%a1%e6%95%b0%e5%99%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>是一块较小内存空间，看作是&lt;strong>当前线程所执行的字节码&lt;/strong>的&lt;strong>行号指示器&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>java程序流程&lt;br>
&lt;img src="img/ly-20241212141953092.png" alt="ly-20241212141953092" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>字节码解释器，工作时通过&lt;strong>改变这个计数器的值&lt;/strong>来选取下一条需要执行的&lt;strong>字节码指令&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>分支、循环、跳转、异常处理、线程恢复等功能都需要依赖这个计数器&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>而且，为了&lt;strong>线程切换后恢复到正确执行位置&lt;/strong>，每条线程需要一个独立程序计数器，各线程计数器互不影响，独立存储，我们称这类内存区域为**&amp;ldquo;线程私有&amp;rdquo;**的内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>总结，&lt;strong>程序计数器&lt;/strong>的作用&lt;/p>
&lt;ul>
&lt;li>字节码解释器通过&lt;strong>改变程序计数器来依次读取指令&lt;/strong>，从而实现代码的流程控制&lt;/li>
&lt;li>多线程情况下，&lt;strong>程序计数器用于记录当前线程执行的位置&lt;/strong>，从而当线程被切回来的时候能够知道该线程上次运行到哪&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>程序计数器是唯一一个不会出现OutOfMemoryError的内存区域，它的生命周期随线程创建而创建，线程结束而死亡&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="java虚拟机栈">
 Java虚拟机栈
 &lt;a class="anchor" href="#java%e8%99%9a%e6%8b%9f%e6%9c%ba%e6%a0%88">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Java虚拟机栈，&lt;strong>简称&amp;quot;栈&amp;quot;&lt;/strong>，也是线程私有的，生命周期和线程相同，随线程创建而创建，线程死亡而死亡&lt;/li>
&lt;li>除了&lt;strong>Native方法&lt;/strong>调用的是&lt;strong>通过本地方法栈实现&lt;/strong>的，其他所有的Java方法调用都是通过&lt;strong>栈&lt;/strong>来实现的（需要和其他运行时数据区域比如&lt;strong>程序计数器&lt;/strong>配合）&lt;/li>
&lt;li>&lt;strong>方法调用的数据&lt;/strong>需要通过栈进行&lt;strong>传递&lt;/strong>，&lt;strong>每一次方法调用&lt;/strong>都会有一个对应的&lt;strong>栈帧被压入栈&lt;/strong>，每一个&lt;strong>方法调用结束后&lt;/strong>，都会有一个&lt;strong>栈帧被弹出&lt;/strong>。&lt;/li>
&lt;li>栈由一个个&lt;strong>栈帧&lt;/strong>组成，每个栈帧包括&lt;strong>局部变量表&lt;/strong>、&lt;strong>操作数栈&lt;/strong>、&lt;strong>动态链接&lt;/strong>、&lt;strong>方法返回地址&lt;/strong>。
栈为&lt;strong>先进后出&lt;/strong>，且只支持&lt;strong>出栈&lt;/strong>和&lt;strong>入栈&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="img/ly-20241212141953237.png" alt="Java 虚拟机栈" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>局部变量表：存放&lt;strong>编译器可知&lt;/strong>的各种&lt;strong>数据类型&lt;/strong>(boolean、byte、char、short、int、float、long、double)、对象引用(reference 类型，不同于对象本身，可能是一个指向对象起始地址的引用指针，也可能是一个&lt;strong>指向一个代表对象的句柄或其他与此对象相关的位置&lt;/strong>)
&lt;img src="img/ly-20241212141953378.png" alt="局部变量表" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>操作数栈 作为方法调用的&lt;strong>中转站&lt;/strong>使用，用于存放方法执行过程中产生的&lt;strong>中间计算结果&lt;/strong>。计算过程中产生的临时变量也放在操作数栈中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>动态链接 主要服务&lt;strong>一个方法需要调用其他方法&lt;/strong>的场景。&lt;/p>
&lt;blockquote>
&lt;p>在 Java 源文件被编译成字节码文件时，所有的变量和方法引用都作为符号引用（Symbilic Reference）保存在 Class 文件的常量池里。当一个方法要调用其他方法，需要将常量池中指向方法的符号引用转化为其在内存地址中的直接引用。动态链接的作用就是为了&lt;strong>将符号引用转换为调用方法的直接引用&lt;/strong>。&lt;/p></description></item><item><title>completablefuture-intro</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0311lycompletablefuture-intro/</link><pubDate>Tue, 06 Dec 2022 17:13:41 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0311lycompletablefuture-intro/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>Java8被引入的一个非常有用的用于异步编程的类【&lt;strong>没看&lt;/strong>】&lt;/p>
&lt;h1 id="简单介绍">
 简单介绍
 &lt;a class="anchor" href="#%e7%ae%80%e5%8d%95%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h1>
&lt;p>CompletableFuture同时实现了&lt;strong>Future&lt;/strong>和&lt;strong>CompletionStage&lt;/strong>接口&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CompletableFuture&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Future&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span>, CompletionStage&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>CompletableFuture&lt;/code> 除了提供了更为好用和强大的 &lt;code>Future&lt;/code> 特性之外，还提供了函数式编程的能力。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141948027.png" alt="img" />&lt;/p>
&lt;p>Future接口有5个方法：&lt;/p>
&lt;ul>
&lt;li>&lt;code>boolean cancel(boolean mayInterruptIfRunning)&lt;/code> ：尝试取消执行任务。&lt;/li>
&lt;li>&lt;code>boolean isCancelled()&lt;/code> ：判断任务是否被取消。&lt;/li>
&lt;li>&lt;code>boolean isDone()&lt;/code> ： 判断任务是否已经被执行完成。&lt;/li>
&lt;li>&lt;code>get()&lt;/code> ：等待任务执行完成并获取运算结果。&lt;/li>
&lt;li>&lt;code>get(long timeout, TimeUnit unit)&lt;/code> ：多了一个超时时间。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="img/ly-20241212141948313.png" alt="img" />&lt;/p>
&lt;p>&lt;code>CompletionStage&amp;lt;T&amp;gt; &lt;/code>接口中的方法比较多，CompoletableFuture的函数式能力就是这个接口赋予的，大量使用&lt;strong>Java8引入的函数式编程&lt;/strong>&lt;/p>
&lt;h1 id="常见操作">
 常见操作
 &lt;a class="anchor" href="#%e5%b8%b8%e8%a7%81%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;h2 id="创建completablefuture">
 创建CompletableFuture
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%bacompletablefuture">#&lt;/a>
&lt;/h2>
&lt;p>两种方法：new关键字或 CompletableFuture自带的静态工厂方法 &lt;code>runAysnc()&lt;/code>或&lt;code>supplyAsync()&lt;/code>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>通过new关键字
这个方式，可以看作是将&lt;strong>CompletableFuture当作Future&lt;/strong>来使用，如下：&lt;/p>
&lt;blockquote>
&lt;p>我们通过创建了一个结果值类型为 &lt;code>RpcResponse&amp;lt;Object&amp;gt;&lt;/code> 的 &lt;code>CompletableFuture&lt;/code>，你可以把 &lt;code>resultFuture&lt;/code> 看作是异步运算结果的载体&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>CompletableFuture&lt;span style="color:#f92672">&amp;lt;&lt;/span>RpcResponse&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> resultFuture &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CompletableFuture&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;p>如果后面某个时刻，得到了最终结果，可以调用complete()方法传入结果，表示resultFuture已经被完成：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// complete() 方法只能调用一次，后续调用将被忽略。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>resultFuture.&lt;span style="color:#a6e22e">complete&lt;/span>(rpcResponse);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通过isDone()检查是否完成：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isDone&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>获取异步结果，使用get() ，调用get()方法的线程会阻塞 直到CompletableFuture完成运算：
&lt;code>rpcResponse = completableFuture.get();&lt;/code>&lt;/p></description></item><item><title>ThreadLocal详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0310lythreadlocal/</link><pubDate>Mon, 05 Dec 2022 17:31:52 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0310lythreadlocal/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;p>本文来自一枝花算不算浪漫投稿， 原文地址：
&lt;a target="_blank" href="https://juejin.cn/post/6844904151567040519">https://juejin.cn/post/6844904151567040519open in new window&lt;/a>。 感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>思维导图&lt;br>
&lt;img src="img/ly-20241212141945045.png" alt="img" />&lt;/p>
&lt;h1 id="目录">
 目录
 &lt;a class="anchor" href="#%e7%9b%ae%e5%bd%95">#&lt;/a>
&lt;/h1>
&lt;h1 id="threadlocal代码演示">
 ThreadLocal代码演示
 &lt;a class="anchor" href="#threadlocal%e4%bb%a3%e7%a0%81%e6%bc%94%e7%a4%ba">#&lt;/a>
&lt;/h1>
&lt;p>&lt;strong>简单使用&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ThreadLocalTest&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> messages &lt;span style="color:#f92672">=&lt;/span> Lists.&lt;span style="color:#a6e22e">newArrayList&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> ThreadLocal&lt;span style="color:#f92672">&amp;lt;&lt;/span>ThreadLocalTest&lt;span style="color:#f92672">&amp;gt;&lt;/span> holder &lt;span style="color:#f92672">=&lt;/span> ThreadLocal.&lt;span style="color:#a6e22e">withInitial&lt;/span>(ThreadLocalTest::&lt;span style="color:#66d9ef">new&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(String message) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> holder.&lt;span style="color:#a6e22e">get&lt;/span>().&lt;span style="color:#a6e22e">messages&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">clear&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> messages &lt;span style="color:#f92672">=&lt;/span> holder.&lt;span style="color:#a6e22e">get&lt;/span>().&lt;span style="color:#a6e22e">messages&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> holder.&lt;span style="color:#a6e22e">remove&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;size: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> holder.&lt;span style="color:#a6e22e">get&lt;/span>().&lt;span style="color:#a6e22e">messages&lt;/span>.&lt;span style="color:#a6e22e">size&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> messages;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ThreadLocalTest.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;一枝花算不算浪漫&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(holder.&lt;span style="color:#a6e22e">get&lt;/span>().&lt;span style="color:#a6e22e">messages&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ThreadLocalTest.&lt;span style="color:#a6e22e">clear&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* 结果 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">[一枝花算不算浪漫]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">size: 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>简单使用2&lt;/strong>&lt;/p></description></item><item><title>Atomic原子类介绍</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0309lyatomic-classes/</link><pubDate>Mon, 05 Dec 2022 09:24:36 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0309lyatomic-classes/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>文章开头先用例子介绍几种类型的api使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> com.aqs;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> lombok.*;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.util.concurrent.atomic.*;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Data&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Getter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Setter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@AllArgsConstructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@ToString&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">User&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//如果要为atomicReferenceFieldUpdater服务,必须加上volatile修饰&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">volatile&lt;/span> Integer age;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AtomicTest&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;原子更新数值---------------&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AtomicInteger atomicInteger &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> AtomicInteger();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i1 &lt;span style="color:#f92672">=&lt;/span> atomicInteger.&lt;span style="color:#a6e22e">incrementAndGet&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;原子增加后为&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> i1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;原子更新数组---------------&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[&lt;/span>3&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AtomicIntegerArray atomicIntegerArray &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> AtomicIntegerArray(a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> atomicIntegerArray.&lt;span style="color:#a6e22e">addAndGet&lt;/span>(1, 3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;数组元素[&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> 1 &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;]增加后为&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;数组为&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> atomicIntegerArray);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;原子更新对象---------------&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly1&amp;#34;&lt;/span>, 10);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly2&amp;#34;&lt;/span>, 20);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user3 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly3&amp;#34;&lt;/span>, 30);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AtomicReference&lt;span style="color:#f92672">&amp;lt;&lt;/span>User&lt;span style="color:#f92672">&amp;gt;&lt;/span> atomicReference &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> AtomicReference&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(user1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b &lt;span style="color:#f92672">=&lt;/span> atomicReference.&lt;span style="color:#a6e22e">compareAndSet&lt;/span>(user2, user3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> (b &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>atomicReference.&lt;span style="color:#a6e22e">get&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b1 &lt;span style="color:#f92672">=&lt;/span> atomicReference.&lt;span style="color:#a6e22e">compareAndSet&lt;/span>(user1, user3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> (b1 &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span> : &lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>atomicReference.&lt;span style="color:#a6e22e">get&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;原子更新对象属性---------------&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user4&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly4&amp;#34;&lt;/span>,40);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AtomicReferenceFieldUpdater&lt;span style="color:#f92672">&amp;lt;&lt;/span>User, Integer&lt;span style="color:#f92672">&amp;gt;&lt;/span> atomicReferenceFieldUpdater &lt;span style="color:#f92672">=&lt;/span> AtomicReferenceFieldUpdater.&lt;span style="color:#a6e22e">newUpdater&lt;/span>(User.&lt;span style="color:#a6e22e">class&lt;/span>, Integer.&lt;span style="color:#a6e22e">class&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b2 &lt;span style="color:#f92672">=&lt;/span> atomicReferenceFieldUpdater.&lt;span style="color:#a6e22e">compareAndSet&lt;/span>(user4, 41, 400);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>(b2&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里user4值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>atomicReferenceFieldUpdater.&lt;span style="color:#a6e22e">get&lt;/span>(user4));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b3 &lt;span style="color:#f92672">=&lt;/span> atomicReferenceFieldUpdater.&lt;span style="color:#a6e22e">compareAndSet&lt;/span>(user4, 40, 400);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>(b3&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里user4值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>atomicReferenceFieldUpdater.&lt;span style="color:#a6e22e">get&lt;/span>(user4));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;其他使用---------------&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user5&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly5&amp;#34;&lt;/span>,50);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user6&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly6&amp;#34;&lt;/span>,60);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user7&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly7&amp;#34;&lt;/span>,70);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AtomicMarkableReference&lt;span style="color:#f92672">&amp;lt;&lt;/span>User&lt;span style="color:#f92672">&amp;gt;&lt;/span> userAtomicMarkableReference&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> AtomicMarkableReference&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(user5,&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b4 &lt;span style="color:#f92672">=&lt;/span> userAtomicMarkableReference.&lt;span style="color:#a6e22e">weakCompareAndSet&lt;/span>(user6, user7, &lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>(b4&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>userAtomicMarkableReference.&lt;span style="color:#a6e22e">getReference&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b5 &lt;span style="color:#f92672">=&lt;/span> userAtomicMarkableReference.&lt;span style="color:#a6e22e">weakCompareAndSet&lt;/span>(user5, user7, &lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>(b5&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>userAtomicMarkableReference.&lt;span style="color:#a6e22e">getReference&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b6 &lt;span style="color:#f92672">=&lt;/span> userAtomicMarkableReference.&lt;span style="color:#a6e22e">weakCompareAndSet&lt;/span>(user5, user7, &lt;span style="color:#66d9ef">true&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>(b6&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>userAtomicMarkableReference.&lt;span style="color:#a6e22e">getReference&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;AtomicStampedReference使用---------------&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user80&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly8&amp;#34;&lt;/span>,80);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user90&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly9&amp;#34;&lt;/span>,90);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user100&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> User(&lt;span style="color:#e6db74">&amp;#34;ly10&amp;#34;&lt;/span>,100);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AtomicStampedReference&lt;span style="color:#f92672">&amp;lt;&lt;/span>User&lt;span style="color:#f92672">&amp;gt;&lt;/span> userAtomicStampedReference&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> AtomicStampedReference&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(user80,80);&lt;span style="color:#75715e">//版本80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//...每次更改stamp都加1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//这里假设中途被改成81了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b7 &lt;span style="color:#f92672">=&lt;/span> userAtomicStampedReference.&lt;span style="color:#a6e22e">compareAndSet&lt;/span>(user80, user100,81,90);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>(b7&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>userAtomicStampedReference.&lt;span style="color:#a6e22e">getReference&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b8 &lt;span style="color:#f92672">=&lt;/span> userAtomicStampedReference.&lt;span style="color:#a6e22e">compareAndSet&lt;/span>(user80, user100,80,90);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;更新&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>(b8&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#e6db74">&amp;#34;成功&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;失败&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;引用里值为&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>userAtomicStampedReference.&lt;span style="color:#a6e22e">getReference&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">原子更新数值---------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">原子增加后为1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">原子更新数组---------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">数组元素[1]增加后为3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">数组为[0, 3, 0]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">原子更新对象---------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新失败
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里值为User(name=ly1, age=10)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新成功
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里值为User(name=ly3, age=30)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">原子更新对象属性---------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新失败
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里user4值为40
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新成功
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里user4值为400
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">其他使用---------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新失败
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里值为User(name=ly5, age=50)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新失败
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里值为User(name=ly5, age=50)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新成功
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里值为User(name=ly7, age=70)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">AtomicStampedReference使用---------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新失败
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里值为User(name=ly8, age=80)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">更新成功
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">引用里值为User(name=ly10, age=100)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">Process finished with exit code 0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="原子类介绍">
 原子类介绍
 &lt;a class="anchor" href="#%e5%8e%9f%e5%ad%90%e7%b1%bb%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>在化学上，原子是构成一般物质的最小单位，化学反应中是不可分割的，Atomic指&lt;strong>一个操作是不可中断的&lt;/strong>，即使在多个线程一起执行时，一个操作一旦开始就&lt;strong>不会被其他线程干扰&lt;/strong>&lt;/li>
&lt;li>原子类&amp;ndash;&amp;gt;具有原子/原子操作特征的类&lt;/li>
&lt;li>并发包java.util.concurrent 的原子类都放着&lt;code>java.util.concurrent.atomic&lt;/code>中
&lt;img src="img/ly-20241212141944757.png" alt="ly-20241212141944757" />&lt;/li>
&lt;li>根据操作的数据类型，可以将JUC包中的原子类分为4类（基本类型、数组类型、引用类型、对象的属性修改类型）
&lt;ul>
&lt;li>
&lt;p>基本类型
使用原子方式更新基本类型，包括&lt;strong>AtomicInteger 整型原子类&lt;/strong>，&lt;strong>AtomicLong 长整型原子类&lt;/strong>，AtomicBoolean 布尔型原子类&lt;/p></description></item><item><title>aqs详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0308lyaqs-details/</link><pubDate>Wed, 30 Nov 2022 14:48:01 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0308lyaqs-details/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>Semaphore [ˈseməfɔː(r)]&lt;/code>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>何为 AQS？AQS 原理了解吗？&lt;/li>
&lt;li>&lt;code>CountDownLatch&lt;/code> 和 &lt;code>CyclicBarrier&lt;/code> 了解吗？两者的区别是什么？&lt;/li>
&lt;li>用过 &lt;code>Semaphore&lt;/code> 吗？应用场景了解吗？&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="aqs简单介绍">
 AQS简单介绍
 &lt;a class="anchor" href="#aqs%e7%ae%80%e5%8d%95%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h1>
&lt;p>AQS,AbstractQueueSyschronizer，即抽象队列同步器，这个类在java.util.concurrent.locks包下面&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141944167.png" alt="ly-20241212141944167" />&lt;/p>
&lt;p>AQS是一个抽象类，主要用来构建&lt;strong>锁&lt;/strong>和&lt;strong>同步器&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">abstract&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">AbstractQueuedSynchronizer&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> AbstractOwnableSynchronizer &lt;span style="color:#66d9ef">implements&lt;/span> java.&lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">Serializable&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>AQS &lt;strong>为构建锁和同步器提供了一些通用功能&lt;/strong>的实现，因此，使用 AQS 能简单且高效地&lt;strong>构造出应用广泛的大量的同步器&lt;/strong>，比如我们提到的 &lt;strong>&lt;code>ReentrantLock&lt;/code>&lt;/strong>，&lt;strong>&lt;code>Semaphore&lt;/code>&lt;/strong>，其他的诸如 &lt;code>ReentrantReadWriteLock&lt;/code>，&lt;code>SynchronousQueue&lt;/code>，&lt;code>FutureTask&lt;/code>(jdk1.7) 等等皆是基于 AQS 的。&lt;/p>
&lt;h1 id="aqs原理">
 AQS原理
 &lt;a class="anchor" href="#aqs%e5%8e%9f%e7%90%86">#&lt;/a>
&lt;/h1>
&lt;h2 id="aqs核心思想">
 AQS核心思想
 &lt;a class="anchor" href="#aqs%e6%a0%b8%e5%bf%83%e6%80%9d%e6%83%b3">#&lt;/a>
&lt;/h2>
&lt;p>&lt;strong>面试不是背题，大家一定要加入自己的思想，即使加入不了自己的思想也要保证自己能够通俗的讲出来而不是背出来&lt;/strong>&lt;/p>
&lt;p>AQS 核心思想是，如果被请求的&lt;strong>共享资源（AQS内部）&lt;strong>空闲，则将&lt;/strong>当前请求资源的线程&lt;/strong>设置为&lt;strong>有效&lt;/strong>的工作线程，并且将&lt;strong>共享资源&lt;/strong>设置为&lt;strong>锁定&lt;/strong>状态。如果被请求的共享资源&lt;strong>被占用&lt;/strong>，那么就需要一套&lt;strong>线程阻塞等待&lt;/strong>以及&lt;strong>被唤醒时锁分配&lt;/strong>的机制，这个机制 AQS 是用 &lt;strong>CLH 队列锁&lt;/strong>实现的，即&lt;strong>将暂时获取不到锁的线程加入到队列&lt;/strong>中。&lt;/p>
&lt;blockquote>
&lt;p>CLH(Craig,Landin and Hagersten)队列是一个&lt;strong>虚拟的双向队列&lt;/strong>（虚拟的双向队列即&lt;strong>不存在队列实例&lt;/strong>，仅存在结点之间的关联关系）。AQS 是&lt;strong>将每条请求共享资源的线程封装成一个 CLH 锁队列的一个结点&lt;/strong>（Node）来实现锁的分配。&lt;br>
[ 搜索了一下，CLH好像是人名 ]
在 CLH 同步队列中，一个节点表示一个线程，它保存着&lt;strong>线程的引用&lt;/strong>（thread）、 当前节点在&lt;strong>队列中的状态&lt;/strong>（waitStatus）、&lt;strong>前驱节点&lt;/strong>（prev）、&lt;strong>后继节点&lt;/strong>（next）。&lt;br>
CLH队列结构&lt;br>
&lt;img src="img/ly-20241212141944445.png" alt="ly-20241212141944445" />&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>AQS（AbstractQueuedSynchronized）原理图&lt;br>
&lt;img src="img/ly-20241212141944597.png" alt="ly-20241212141944597" />&lt;/p>
&lt;p>AQS使用一个&lt;strong>int成员变量来表示同步状态&lt;/strong>，通过内置的&lt;strong>线程等待队列&lt;/strong>来获取资源线程的排队工作。&lt;br>
&lt;code>state&lt;/code> 变量由 &lt;code>volatile&lt;/code> 修饰，用于展示&lt;strong>当前临界资源的获锁&lt;/strong>情况。&lt;/p></description></item><item><title>java常见并发容器</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0307lyconcurrent-collections/</link><pubDate>Tue, 29 Nov 2022 16:58:59 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0307lyconcurrent-collections/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>JDK提供的容器，大部分在java.util.concurrent包中&lt;/p>
&lt;ul>
&lt;li>ConcurrentHashMap：线程安全的&lt;strong>HashMap&lt;/strong>&lt;/li>
&lt;li>CopyOnWriteArrayList：线程安全的&lt;strong>List&lt;/strong>，在读多写少的场合性能非常好，远好于Vector&lt;/li>
&lt;li>&lt;strong>ConcurrentLinkedQueue&lt;/strong>：高效的&lt;strong>并发队列&lt;/strong>，使用&lt;strong>链表&lt;/strong>实现，可以看作一个&lt;strong>线程安全的LinkedList&lt;/strong>，是一个&lt;strong>非阻塞队列&lt;/strong>&lt;/li>
&lt;li>&lt;strong>BlockingQueue&lt;/strong>：这是一个接口，JDK内部通过链表、数组等方式实现了该接口。表示&lt;strong>阻塞队列&lt;/strong>，非常适合用于作为数据共享的通道&lt;/li>
&lt;li>ConcorrentSkipListMap：&lt;strong>跳表&lt;/strong>的实现，是一个Map，使用&lt;strong>跳表的数据结构进行快速查找&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h1 id="concurrenthashmap">
 ConcurrentHashMap
 &lt;a class="anchor" href="#concurrenthashmap">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>HashMap是线程不安全的，并发场景下要保证线程安全，可以使用Collections.synchronizedMap()方法来包装HashMap，但这是通过&lt;strong>使用一个全局的锁&lt;/strong>来&lt;strong>同步不同线程间的并发访问&lt;/strong>，因此会带来性能问题&lt;/li>
&lt;li>建议使用ConcurrentHashMap，&lt;strong>不论是读操作还是写操作&lt;/strong>都能保证高性能：读操作（几乎）不需要加锁，而写操作时通过&lt;strong>锁分段(这里说的是JDK1.7？)&lt;strong>技术，只对&lt;/strong>所操作的段加锁&lt;/strong>而不影响客户端对其他段的访问&lt;/li>
&lt;/ul>
&lt;h1 id="copyonwritearraylist">
 CopyOnWriteArrayList
 &lt;a class="anchor" href="#copyonwritearraylist">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//源码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CopyOnWriteArrayList&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">extends&lt;/span> Object
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">implements&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span>, RandomAccess, Cloneable, Serializable
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>在很多应用场景中，&lt;strong>读操作可能会远远大于写操作&lt;/strong>&lt;/li>
&lt;li>我们应该允许&lt;strong>多个线程同时访问List内部数据&lt;/strong>（针对读）&lt;/li>
&lt;li>与ReentrantReadWriteLock读写锁思想非常类似，即&lt;strong>读读共享&lt;/strong>、&lt;strong>写写互斥&lt;/strong>、&lt;strong>读写互斥&lt;/strong>、&lt;strong>写读互斥&lt;/strong>&lt;/li>
&lt;li>不一样的是，CopyOnWriteArrayList&lt;strong>读取时完全不需要加锁&lt;/strong>，且&lt;strong>写入也不会阻塞读取操作&lt;/strong>，只有&lt;strong>写入和写入之间需要同步等待&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;h2 id="copyonwritearraylist是如何做到的">
 CopyOnWriteArrayList是如何做到的
 &lt;a class="anchor" href="#copyonwritearraylist%e6%98%af%e5%a6%82%e4%bd%95%e5%81%9a%e5%88%b0%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;code>CopyOnWriteArrayList&lt;/code> 类的&lt;strong>所有可变操作（add，set 等等）都是通过创建底层数组的新副本&lt;/strong>来实现的。当 List 需要被修改的时候，并不修改原有内容，而是&lt;strong>对原有数据进行一次复制，将修改的内容写入副本。写完之后，再将修改完的副本替换原来的数据&lt;/strong>，这样就可以保证写操作不会影响读操作了。&lt;/li>
&lt;li>从 &lt;code>CopyOnWriteArrayList&lt;/code> 的名字就能看出 &lt;code>CopyOnWriteArrayList&lt;/code> 是满足 &lt;strong>&lt;code>CopyOnWrite&lt;/code>&lt;/strong> 的&lt;/li>
&lt;li>在计算机，如果你想要对一块内存进行修改时，我们不在原有内存块中进行写操作，而是将内存拷贝一份，在新的内存中进行写操作，写完之后呢，就&lt;strong>将指向原来内存指针指向新的内存(注意，是指向，而不是重新拷贝★重要★)&lt;/strong>，原来的内存就可以被回收掉了&lt;/li>
&lt;/ul>
&lt;h2 id="copyonwritearraylist-读取和写入源码简单分析">
 CopyOnWriteArrayList 读取和写入源码简单分析
 &lt;a class="anchor" href="#copyonwritearraylist-%e8%af%bb%e5%8f%96%e5%92%8c%e5%86%99%e5%85%a5%e6%ba%90%e7%a0%81%e7%ae%80%e5%8d%95%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>CopyOnWriteArrayList读取操作的实现
&lt;strong>读取操作没有任何同步控制&lt;/strong>和&lt;strong>锁&lt;/strong>操作，理由就是内部数组array不会发生修改，只会&lt;strong>被另一个array替换&lt;/strong>，因此可以保证数据安全&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/** The array, accessed only via getArray/setArray. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">transient&lt;/span> &lt;span style="color:#66d9ef">volatile&lt;/span> Object&lt;span style="color:#f92672">[]&lt;/span> array;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> E &lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> index) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> get(getArray(), index);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@SuppressWarnings&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;unchecked&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> E &lt;span style="color:#a6e22e">get&lt;/span>(Object&lt;span style="color:#f92672">[]&lt;/span> a, &lt;span style="color:#66d9ef">int&lt;/span> index) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (E) a&lt;span style="color:#f92672">[&lt;/span>index&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> Object&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">getArray&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> array;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>CopyOnWriteArrayList写入操作的实现
在添加集合的时候加了锁，保证同步，&lt;strong>避免多线程写的时候会copy出多个副本&lt;/strong>&lt;/p></description></item><item><title>线程池最佳实践</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0306lythread-pool-best/</link><pubDate>Tue, 29 Nov 2022 11:31:20 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0306lythread-pool-best/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="线程池知识回顾">
 线程池知识回顾
 &lt;a class="anchor" href="#%e7%ba%bf%e7%a8%8b%e6%b1%a0%e7%9f%a5%e8%af%86%e5%9b%9e%e9%a1%be">#&lt;/a>
&lt;/h2>
&lt;h3 id="1-为什么要使用线程池">
 1. 为什么要使用线程池
 &lt;a class="anchor" href="#1-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e4%bd%bf%e7%94%a8%e7%ba%bf%e7%a8%8b%e6%b1%a0">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>池化技术的思想，主要是为了&lt;strong>减少每次获取资源（线程资源）的消耗&lt;/strong>，提高对资源的利用率&lt;/li>
&lt;li>线程池提供了一种&lt;strong>限制&lt;/strong>和&lt;strong>管理资源&lt;/strong>（包括执行一个任务）的方法，每个线程池还维护一些&lt;strong>基本统计&lt;/strong>信息，例如已完成任务的数量&lt;/li>
&lt;/ul>
&lt;p>好处：&lt;/p>
&lt;ol>
&lt;li>降低资源消耗&lt;/li>
&lt;li>提高响应速度&lt;/li>
&lt;li>提高线程的可管理性&lt;/li>
&lt;/ol>
&lt;h3 id="2-线程池在实际项目的使用场景">
 2. 线程池在实际项目的使用场景
 &lt;a class="anchor" href="#2-%e7%ba%bf%e7%a8%8b%e6%b1%a0%e5%9c%a8%e5%ae%9e%e9%99%85%e9%a1%b9%e7%9b%ae%e7%9a%84%e4%bd%bf%e7%94%a8%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;p>线程池一般用于执行&lt;strong>多个不相关联的耗时任务&lt;/strong>，没有多线程的情况下，任务顺序执行，使用了线程池的话可让多个不相关联的任务&lt;strong>同时执行&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141942375.png" alt="ly-20241212141942375" />&lt;/p>
&lt;h3 id="3-如何使用线程池">
 3. 如何使用线程池
 &lt;a class="anchor" href="#3-%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8%e7%ba%bf%e7%a8%8b%e6%b1%a0">#&lt;/a>
&lt;/h3>
&lt;p>一般是通过 &lt;code>ThreadPoolExecutor&lt;/code> 的构造函数来创建线程池，然后提交任务给线程池执行就可以了。构造函数如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 用给定的初始参数创建一个新的ThreadPoolExecutor。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ThreadPoolExecutor&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> corePoolSize,&lt;span style="color:#75715e">//线程池的核心线程数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> maximumPoolSize,&lt;span style="color:#75715e">//线程池的最大线程数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> keepAliveTime,&lt;span style="color:#75715e">//当线程数大于核心线程数时，多余的空闲线程存活的最长时间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TimeUnit unit,&lt;span style="color:#75715e">//时间单位&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BlockingQueue&lt;span style="color:#f92672">&amp;lt;&lt;/span>Runnable&lt;span style="color:#f92672">&amp;gt;&lt;/span> workQueue,&lt;span style="color:#75715e">//任务队列，用来储存等待执行任务的队列&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ThreadFactory threadFactory,&lt;span style="color:#75715e">//线程工厂，用来创建线程，一般默认即可&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RejectedExecutionHandler handler&lt;span style="color:#75715e">//拒绝策略，当提交的任务过多而不能及时处理时，我们可以定制策略来处理任务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (corePoolSize &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0 &lt;span style="color:#f92672">||&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maximumPoolSize &lt;span style="color:#f92672">&amp;lt;=&lt;/span> 0 &lt;span style="color:#f92672">||&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> maximumPoolSize &lt;span style="color:#f92672">&amp;lt;&lt;/span> corePoolSize &lt;span style="color:#f92672">||&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keepAliveTime &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (workQueue &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">||&lt;/span> threadFactory &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">||&lt;/span> handler &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> NullPointerException();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">corePoolSize&lt;/span> &lt;span style="color:#f92672">=&lt;/span> corePoolSize;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">maximumPoolSize&lt;/span> &lt;span style="color:#f92672">=&lt;/span> maximumPoolSize;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">workQueue&lt;/span> &lt;span style="color:#f92672">=&lt;/span> workQueue;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">keepAliveTime&lt;/span> &lt;span style="color:#f92672">=&lt;/span> unit.&lt;span style="color:#a6e22e">toNanos&lt;/span>(keepAliveTime);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">threadFactory&lt;/span> &lt;span style="color:#f92672">=&lt;/span> threadFactory;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">handler&lt;/span> &lt;span style="color:#f92672">=&lt;/span> handler;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用代码：&lt;/p></description></item><item><title>java线程池详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0305lyjava-thread-pool/</link><pubDate>Wed, 23 Nov 2022 14:40:41 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0305lyjava-thread-pool/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="一-使用线程池的好处">
 一 使用线程池的好处
 &lt;a class="anchor" href="#%e4%b8%80-%e4%bd%bf%e7%94%a8%e7%ba%bf%e7%a8%8b%e6%b1%a0%e7%9a%84%e5%a5%bd%e5%a4%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>池化技术：减少每次获取资源的消耗，提高对资源的利用率&lt;/li>
&lt;li>线程池提供一种&lt;strong>限制&lt;/strong>和&lt;strong>管理资源（包括执行一个任务）&lt;strong>的方式，每个线程池还维护一些基本统计信息，例如&lt;/strong>已完成任务&lt;/strong>的数量&lt;/li>
&lt;li>线程池的好处
&lt;ul>
&lt;li>降低&lt;strong>资源消耗&lt;/strong>（重复利用，降低&lt;strong>线程创建和销毁&lt;/strong>造成的消耗）&lt;/li>
&lt;li>提高&lt;strong>响应速度&lt;/strong>（任务到达直接执行，&lt;strong>无需等待线程创建&lt;/strong>）&lt;/li>
&lt;li>提高线程&lt;strong>可管理性&lt;/strong>（&lt;strong>避免无休止创建&lt;/strong>，使用线程池统一&lt;strong>分配&lt;/strong>、&lt;strong>调优&lt;/strong>、&lt;strong>监控&lt;/strong>）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="二-executor框架">
 二 Executor框架
 &lt;a class="anchor" href="#%e4%ba%8c-executor%e6%a1%86%e6%9e%b6">#&lt;/a>
&lt;/h2>
&lt;p>Java5之后，通过Executor启动线程，比使用Thread的start方法更好，更&lt;strong>易于管理&lt;/strong>，&lt;strong>效率高&lt;/strong>，还能有助于避免this逃逸的问题&lt;/p>
&lt;blockquote>
&lt;p>this逃逸，指的是&lt;strong>构造函数返回之前&lt;/strong>，&lt;strong>其他线程就持有该对象的引用&lt;/strong>，会导致调用尚未构造完全的对象&lt;br>
例子：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ThisEscape&lt;/span> { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ThisEscape&lt;/span>() { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(&lt;span style="color:#66d9ef">new&lt;/span> EscapeRunnable()).&lt;span style="color:#a6e22e">start&lt;/span>(); 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ... &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EscapeRunnable&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Runnable { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 通过ThisEscape.this就可以引用外围类对象, 但是此时外围类对象可能还没有构造完成, 即发生了外围类的this引用的逃逸 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>处理办法 &lt;strong>//不要在构造函数中运行线程&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ThisEscape&lt;/span> { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Thread t; 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ThisEscape&lt;/span>() { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(&lt;span style="color:#66d9ef">new&lt;/span> EscapeRunnable()); 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ... &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>() { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//也就是说对象没有构造完成前，不要调用ThisEscape.this即可&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t.&lt;span style="color:#a6e22e">start&lt;/span>(); 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">EscapeRunnable&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Runnable { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 通过ThisEscape.this就可以引用外围类对象, 此时可以保证外围类对象已经构造完成 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/blockquote>
&lt;p>Executor框架不仅包括&lt;strong>线程池的管理&lt;/strong>，提供&lt;strong>线程工厂&lt;/strong>、&lt;strong>队列&lt;/strong>以及&lt;strong>拒绝策略&lt;/strong>。&lt;/p></description></item><item><title>java内存模型</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0304lyjmm/</link><pubDate>Mon, 21 Nov 2022 10:57:24 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0304lyjmm/</guid><description>&lt;blockquote>
&lt;p>引用自https://github.com/Snailclimb/JavaGuide&lt;/p>
&lt;/blockquote>
&lt;h2 id="从cpu缓存模型说起">
 从CPU缓存模型说起
 &lt;a class="anchor" href="#%e4%bb%8ecpu%e7%bc%93%e5%ad%98%e6%a8%a1%e5%9e%8b%e8%af%b4%e8%b5%b7">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>redis是为了解决&lt;strong>程序处理速度和访问常规关系型数据库速度不对等&lt;/strong>的问题，&lt;strong>CPU缓存则是为了解决CPU处理速度和内存处理速度不对等的问题&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>我们把内存看作外存的高速缓存，程序运行时把外存的数据复制到内存，由于&lt;strong>内存的处理速度远高于外存&lt;/strong>，这样提高了处理速度&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>总结，&lt;strong>CPU Cache缓存的是内存数据&lt;/strong>，用于解决&lt;strong>CPU处理速度和内存不匹配&lt;/strong>的问题，&lt;strong>内存缓存的是硬盘数据&lt;/strong>用于解决硬盘访问速度过慢的问题
CPU Cache示意图：&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141939038.png" alt="ly-20241212141939038" />
CPU Cache通常分为三层，分别叫L1，L2，L3 Cache
工作方式： &lt;strong>先复制一份数据到CPUCache中，当CPU需要用的时候就可以从CPUCache中读取数据，运算完成后，将运算得到的数据，写回MainMemory中&lt;/strong>，此时，会出现&lt;strong>内存缓存不一致的问题&lt;/strong>，例子：执行了i++，如果两个线程同时执行，假设两个线程从CPUCach中读取的i=1，两个线程做了1++运算完之后再写回MainMemory，此时i=2 而正确结果为3&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CPU为了解决&lt;strong>内存缓存不一致&lt;/strong>问题，可以通过制定&lt;strong>缓存一致协议（比如MESI协议）或其他手段&lt;/strong>。这个&lt;strong>缓存一致协议&lt;/strong>，指的是在 &lt;strong>CPU 高速缓存与主内存交互的时候需要遵守的原则和规范&lt;/strong>
&lt;img src="img/ly-20241212141939314.png" alt="ly-20241212141939314" />
操作系统，通过&lt;strong>内存模型MemoryModel&lt;/strong>定义一系列规范来解决这个问题&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="java内存模型">
 Java内存模型
 &lt;a class="anchor" href="#java%e5%86%85%e5%ad%98%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212141939466.png" alt="ly-20241212141939466" />&lt;/p>
&lt;h2 id="指令重排序">
 指令重排序
 &lt;a class="anchor" href="#%e6%8c%87%e4%bb%a4%e9%87%8d%e6%8e%92%e5%ba%8f">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>什么是指令重排序？&lt;/strong> 简单来说就是系统在&lt;strong>执行代码的时候并不一定是按照你写的代码的顺序&lt;/strong>依次执行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>指令重排有下面2种&lt;/p>
&lt;ul>
&lt;li>&lt;strong>编译器优化重排&lt;/strong>：编译器（包括 JVM、JIT 编译器等）在不改变&lt;strong>单线程程序语义&lt;/strong>的前提下，重新安排语句的执行顺序。&lt;/li>
&lt;li>&lt;strong>指令并行重排&lt;/strong>：现代处理器采用了&lt;strong>指令级并行技术(Instruction-Level Parallelism，ILP)来将多条指令重叠执行&lt;/strong>。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>另外，&lt;strong>内存系统&lt;/strong>也会有“重排序”，但又不是真正意义上的重排序。在 JMM 里表现为&lt;strong>主存和本地内存的内容可能不一致&lt;/strong>，进而&lt;strong>导致程序在多线程下执行可能出现问题&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;p>即Java源代码会经历 &lt;strong>编译器优化重排&lt;/strong>&amp;mdash;&amp;gt;&lt;strong>指令并行重排&lt;/strong>&amp;mdash;&amp;gt;&lt;strong>内存系统重排&lt;/strong>，最终&lt;strong>编程&lt;/strong>操作系统可执行的&lt;strong>指令序列&lt;/strong>&lt;/p>
&lt;p>极其重要★：指令重排序可以&lt;strong>保证串行语义一致&lt;/strong>，但是&lt;strong>没有义务保证多线程间的语义也一致&lt;/strong>，所以在多线程下&lt;strong>指令重排&lt;/strong>可能导致一些问题&lt;/p>
&lt;blockquote>
&lt;p>编译器和处理器的指令重排序的处理方式不一样。对于&lt;strong>编译器&lt;/strong>，通过&lt;strong>禁止特定类型的编译器重排序&lt;/strong>的方式来禁止重排序。对于&lt;strong>处理器&lt;/strong>，通过&lt;strong>插入内存屏障（Memory Barrier，或有时叫做内存栅栏，Memory Fence）&lt;strong>的方式来禁止特定类型的处理器重排序。&lt;strong>指令并行重&lt;/strong>排和&lt;/strong>内存系统重排&lt;/strong>都属于是&lt;strong>处理器级别的指令重排序&lt;/strong>。&lt;/p>
&lt;p>内存屏障（Memory Barrier，或有时叫做内存栅栏，Memory Fence）是一种 &lt;strong>CPU 指令&lt;/strong>，用来&lt;strong>禁止处理器指令发生重排序&lt;/strong>（像屏障一样），从而保障指令执行的有序性。另外，为了达到屏障的效果，它也会使&lt;strong>处理器写入、读取值之前&lt;/strong>，将&lt;strong>主内存的值写入高速缓存&lt;/strong>，&lt;strong>清空无效队列&lt;/strong>，从而保障变量的可见性。&lt;/p>
&lt;/blockquote>
&lt;h2 id="jmmjavamemorymode">
 JMM（JavaMemoryMode）
 &lt;a class="anchor" href="#jmmjavamemorymode">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是-jmm为什么需要-jmm">
 什么是 JMM？为什么需要 JMM？
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af-jmm%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81-jmm">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>一般来说，编程语言也可以直接复用操作系统层面的内存模型。不过，不同的操作系统内存模型不同。&lt;strong>如果直接复用操作系统层面的内存模型，就可能会导致同样一套代码换了一个操作系统就无法执行了&lt;/strong>。&lt;strong>Java 语言是跨平台的，它需要自己提供一套内存模型以屏蔽系统差异。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>实际上，对于Java来说，可以&lt;strong>把JMM看作是Java定义的并发编程相关的一组规范&lt;/strong>，除了抽象了线程和主内存之间的关系之外，还规定了&lt;strong>从Java源代码到CPU可执行指令的转化过程&lt;/strong>要遵守哪些和并发相关的原则和规范，主要目的是为了&lt;strong>简化多线程编程&lt;/strong>，&lt;strong>增强程序可移植性&lt;/strong>。&lt;/p>
&lt;p>为什么要遵守这些并发相关的原则和规范呢？因为在&lt;strong>并发编程&lt;/strong>下，CPU多级缓存和指令重排这类设计会导致程序运行出问题，比如&lt;strong>指令重排&lt;/strong>，为此JMM抽象了&lt;strong>happens-before&lt;/strong>原则&lt;/p>
&lt;blockquote>
&lt;p>JMM 说白了就是定义了一些规范来解决这些问题，开发者可以利用这些规范更方便地开发多线程程序。对于 Java 开发者说，你&lt;strong>不需要了解底层原理&lt;/strong>，&lt;strong>直接使用并发相关的一些关键字&lt;/strong>和&lt;strong>类&lt;/strong>（比如 &lt;code>volatile&lt;/code>、&lt;code>synchronized&lt;/code>、各种 &lt;code>Lock&lt;/code>）即可开发出并发安全的程序。&lt;/p></description></item><item><title>并发03</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0303lyconcurrent-03/</link><pubDate>Mon, 07 Nov 2022 16:04:33 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0303lyconcurrent-03/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="线程池">
 线程池
 &lt;a class="anchor" href="#%e7%ba%bf%e7%a8%8b%e6%b1%a0">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>为什么要使用线程池&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>池化技术：&lt;strong>线程池&lt;/strong>、&lt;strong>数据库连接池&lt;/strong>、&lt;strong>Http连接池&lt;/strong>&lt;/li>
&lt;li>池化技术思想意义：为了减少每次&lt;strong>获取资源&lt;/strong>的&lt;strong>消耗&lt;/strong>，提高对&lt;strong>资源的利用率&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>线程池提供了&lt;strong>限制&lt;/strong>和&lt;strong>管理&lt;/strong> &lt;strong>资源&lt;/strong>(包括执行一个任务)的方式&lt;/li>
&lt;li>每个线程池还维护&lt;strong>基本统计信息&lt;/strong>，例如&lt;strong>已完成&lt;/strong>任务的数量&lt;/li>
&lt;li>好处：
&lt;ol>
&lt;li>&lt;strong>降低资源消耗&lt;/strong> &lt;strong>重复利用已创建线程&lt;/strong>降低&lt;strong>线程创建&lt;/strong>和&lt;strong>销毁&lt;/strong>造成的消耗&lt;/li>
&lt;li>提高响应速度 任务到达时，任务可以&lt;strong>不需等到线程创建&lt;/strong>就能继续执行&lt;/li>
&lt;li>提高线程的&lt;strong>可管理性&lt;/strong> 线程是稀缺资源，如果无限制创建，不仅&lt;strong>消耗系统资源&lt;/strong>，还会&lt;strong>降低系统的稳定性&lt;/strong>，使用线程池统一&lt;strong>管理分配&lt;/strong>、&lt;strong>调优&lt;/strong>和&lt;strong>监控&lt;/strong>。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>实现Runnable接口和Callable接口的区别&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//Callable的用法 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">TestLy&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//如果加上volatile,就能保证可见性，线程1 才能停止&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> stop &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;&lt;span style="color:#75715e">//对象属性&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) &lt;span style="color:#66d9ef">throws&lt;/span> InterruptedException, ExecutionException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FutureTask&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> futureTask&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> FutureTask&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> Callable&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">call&lt;/span>() &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;等3s再把结果给你&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TimeUnit.&lt;span style="color:#a6e22e">SECONDS&lt;/span>.&lt;span style="color:#a6e22e">sleep&lt;/span>(3);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(futureTask).&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String s &lt;span style="color:#f92672">=&lt;/span> futureTask.&lt;span style="color:#a6e22e">get&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;3s后获取到了结果&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>s);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(&lt;span style="color:#66d9ef">new&lt;/span> Runnable() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;abc&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }).&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">等3s再把结果给你
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">3s后获取到了结果hello world
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">abc
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>Runnable接口不会返回结果或抛出检查异常，Callable接口可以&lt;/p></description></item><item><title>锁升级</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly03122lylock_escalation/</link><pubDate>Sun, 06 Nov 2022 12:31:02 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly03122lylock_escalation/</guid><description>&lt;blockquote>
&lt;p>以下内容均转自 
&lt;a target="_blank" href="https://www.cnblogs.com/wuqinglong/p/9945618.html">https://www.cnblogs.com/wuqinglong/p/9945618.html&lt;/a>，部分疑惑参考自另一作者 
&lt;a target="_blank" href="https://github.com/farmerjohngit/myblog/issues/12">https://github.com/farmerjohngit/myblog/issues/12&lt;/a> ，感谢原作者。&lt;/p>
&lt;p>【&lt;strong>目前还是存有部分疑虑（轻量级锁那块）&lt;/strong>，可能需要详细看源码才能释疑】&lt;/p>
&lt;/blockquote>
&lt;h2 id="概述">
 概述
 &lt;a class="anchor" href="#%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h2>
&lt;p>传统的synchronized为重量级锁（&lt;strong>使用操作系统互斥量（&lt;code>mutex&lt;/code>）来实现的传统锁&lt;/strong>），但是随着JavaSE1.6对synchronized优化后，部分情况下他就没有那么重了。本文介绍了JavaSE1.6为了减少获得锁和释放锁带来的性能消耗而引入的&lt;strong>偏向锁&lt;/strong>和&lt;strong>轻量级锁&lt;/strong>，以及&lt;strong>锁结构&lt;/strong>、及&lt;strong>锁升级&lt;/strong>过程&lt;/p>
&lt;h2 id="实现同步的基础">
 实现同步的基础
 &lt;a class="anchor" href="#%e5%ae%9e%e7%8e%b0%e5%90%8c%e6%ad%a5%e7%9a%84%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;p>Java中&lt;strong>每个对象&lt;/strong>都可以&lt;strong>作为锁&lt;/strong>，具体变现形式&lt;/p>
&lt;ol>
&lt;li>对于&lt;strong>普通同步&lt;/strong>方法，锁是&lt;strong>当前实例对象&lt;/strong>&lt;/li>
&lt;li>对于&lt;strong>静态同步&lt;/strong>方法，锁是&lt;strong>当前类的Class对象&lt;/strong>&lt;/li>
&lt;li>对于&lt;strong>同步方法块&lt;/strong>，锁是&lt;strong>synchronized括号里配置的对象&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>一个线程试图访问同步代码块时，必须&lt;strong>获取锁&lt;/strong>；在&lt;strong>退出&lt;/strong>或者&lt;strong>抛出异常&lt;/strong>时，必须&lt;strong>释放锁&lt;/strong>&lt;/p>
&lt;h2 id="实现方式">
 实现方式
 &lt;a class="anchor" href="#%e5%ae%9e%e7%8e%b0%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;p>JVM 基于&lt;strong>进入和退出 Monitor 对象&lt;/strong>来实现&lt;strong>方法同步&lt;/strong>和&lt;strong>代码块同步&lt;/strong>，但是两者的&lt;strong>实现细节不一样&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>代码块同步&lt;/strong>：通过使用 &lt;strong>monitorenter&lt;/strong> 和 &lt;strong>monitorexit&lt;/strong> 指令实现的&lt;/li>
&lt;li>同步方法：&lt;strong>ACC_SYNCHRONIZED&lt;/strong> 修饰&lt;/li>
&lt;/ol>
&lt;p>monitorenter 指令是在&lt;strong>编译后插入到同步代码块的开始位置&lt;/strong>，而 monitorexit 指令是在&lt;strong>编译后插入到同步代码块的结束处或异常处&lt;/strong>&lt;/p>
&lt;p>对于同步方法，&lt;strong>进入方法前&lt;/strong>添加一个 monitorenter 指令，&lt;strong>退出方法后&lt;/strong>添加一个 monitorexit 指令。&lt;/p>
&lt;p>demo：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Demo&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">f1&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">synchronized&lt;/span> (Demo.&lt;span style="color:#a6e22e">class&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello World.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">f2&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello World.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译之后的字节码（使用 javap )&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">f1&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> descriptor: ()V
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flags: ACC_PUBLIC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Code:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack&lt;span style="color:#f92672">=&lt;/span>2, locals&lt;span style="color:#f92672">=&lt;/span>3, args_size&lt;span style="color:#f92672">=&lt;/span>1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0: ldc &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>2 &lt;span style="color:#75715e">// class me/snail/base/Demo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2: dup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3: astore_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 4: monitorenter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 5: getstatic &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>3 &lt;span style="color:#75715e">// Field java/lang/System.out:Ljava/io/PrintStream;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 8: ldc &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>4 &lt;span style="color:#75715e">// String Hello World.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 10: invokevirtual &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>5 &lt;span style="color:#75715e">// Method java/io/PrintStream.println:(Ljava/lang/String;)V&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 13: aload_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 14: monitorexit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 15: &lt;span style="color:#66d9ef">goto&lt;/span> 23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 18: astore_2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 19: aload_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 20: monitorexit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 21: aload_2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 22: athrow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 23: &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Exception table:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from to target type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 5 15 18 any
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 18 21 18 any
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LineNumberTable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 6: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 7: 5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 8: 13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 9: 23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StackMapTable: number_of_entries &lt;span style="color:#f92672">=&lt;/span> 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> frame_type &lt;span style="color:#f92672">=&lt;/span> 255 &lt;span style="color:#75715e">/* full_frame */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offset_delta &lt;span style="color:#f92672">=&lt;/span> 18
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> locals &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">me&lt;/span>&lt;span style="color:#f92672">/&lt;/span>snail&lt;span style="color:#f92672">/&lt;/span>base&lt;span style="color:#f92672">/&lt;/span>Demo, &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">/&lt;/span>lang&lt;span style="color:#f92672">/&lt;/span>Object &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">/&lt;/span>lang&lt;span style="color:#f92672">/&lt;/span>Throwable &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> frame_type &lt;span style="color:#f92672">=&lt;/span> 250 &lt;span style="color:#75715e">/* chop */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offset_delta &lt;span style="color:#f92672">=&lt;/span> 4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">f2&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> descriptor: ()V
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flags: ACC_PUBLIC, ACC_SYNCHRONIZED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Code:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack&lt;span style="color:#f92672">=&lt;/span>2, locals&lt;span style="color:#f92672">=&lt;/span>1, args_size&lt;span style="color:#f92672">=&lt;/span>1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0: getstatic &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>3 &lt;span style="color:#75715e">// Field java/lang/System.out:Ljava/io/PrintStream;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3: ldc &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>4 &lt;span style="color:#75715e">// String Hello World.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 5: invokevirtual &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>5 &lt;span style="color:#75715e">// Method java/io/PrintStream.println:(Ljava/lang/String;)V&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 8: &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LineNumberTable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 12: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 13: 8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>先说 &lt;strong>f1() 方法&lt;/strong>，发现其中&lt;strong>一个 monitorenter 对应了两个 monitorexit&lt;/strong>，这是不对的。&lt;strong>但是&lt;/strong>仔细看 #15: goto 语句，直接跳转到了 #23: return 处，再看 #22: athrow 语句发现，原来&lt;strong>第二个 monitorexit&lt;/strong> 是&lt;strong>保证同步代码块抛出异常&lt;/strong>时锁能&lt;strong>得到正确的释放&lt;/strong>而存在的，这就理解了。&lt;/p></description></item><item><title>(该文弃用)锁升级</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/lock_escalation_deprecated2/</link><pubDate>Thu, 03 Nov 2022 11:08:59 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/lock_escalation_deprecated2/</guid><description>&lt;p>本文主要讲解synchronized原理和偏向锁、轻量级锁、重量级锁的升级过程，基本都转自&lt;/p>
&lt;p>
&lt;a target="_blank" href="https://blog.csdn.net/MariaOzawa/article/details/107665689">https://blog.csdn.net/MariaOzawa/article/details/107665689&lt;/a> 原作者:
&lt;a target="_blank" href="https://blog.csdn.net/MariaOzawa">MariaOzawa&lt;/a>&lt;/p>
&lt;h2 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>为什么需要锁&lt;br>
并发编程中，多个线程访问同一共享资源时，必须考虑如何维护数据的&lt;strong>原子性&lt;/strong>&lt;/li>
&lt;li>历史
&lt;ul>
&lt;li>JDK1.5之前，Java依靠Synchronized关键字实现锁功能，Synchronized是&lt;strong>Jvm&lt;/strong>实现的&lt;strong>内置锁&lt;/strong>，锁的&lt;strong>获取与释放&lt;/strong>由JVM隐式实现&lt;/li>
&lt;li>JDK1.5，并发包新增Lock接口实现锁功能，提供同步功能，使用时&lt;strong>显式获取和释放锁&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>区别
&lt;ul>
&lt;li>Lock同步锁基于Java实现，Synchronized基于底层操作系统的MutexLock实现
&lt;code>/ˈmjuːtɛks/ &lt;/code>，每次&lt;strong>获取和释放锁&lt;/strong>都会带来&lt;strong>用户态和内核态的切换&lt;/strong>，从而&lt;strong>增加系统性能开销&lt;/strong>，性能糟糕，又称&lt;strong>重量级锁&lt;/strong>&lt;/li>
&lt;li>JDK1.6之后，对&lt;strong>Synchronized同步锁&lt;/strong>做了&lt;strong>充分优化&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="synchronized同步锁实现原理">
 Synchronized同步锁实现原理
 &lt;a class="anchor" href="#synchronized%e5%90%8c%e6%ad%a5%e9%94%81%e5%ae%9e%e7%8e%b0%e5%8e%9f%e7%90%86">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Synchronized实现同步锁的两种方式：修饰方法；修饰方法块&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 关键字在实例方法上，锁为当前实例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">method1&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 关键字在代码块上，锁为括号里面的对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">method2&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object o &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Object();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">synchronized&lt;/span> (o) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里使用编译&amp;ndash;及javap 打印字节文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>javac -encoding UTF-8 SyncTest.java //先运行编译class文件命令
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>javap -v SyncTest.class //再通过javap打印出字节文件
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>结果如下，Synchronized修饰代码块时，由monitorenter和monitorexist指令实现同步。进入monitorenter指令后线程持有Monitor对象；退出monitorenter指令后，线程释放该Monitor对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">method2&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> descriptor: ()V
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flags: ACC_PUBLIC
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Code:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack&lt;span style="color:#f92672">=&lt;/span>2, locals&lt;span style="color:#f92672">=&lt;/span>4, args_size&lt;span style="color:#f92672">=&lt;/span>1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 0: &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>2 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3: dup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 4: invokespecial &lt;span style="color:#960050;background-color:#1e0010">#&lt;/span>1 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 7: astore_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 8: aload_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 9: dup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 10: astore_2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 11: monitorenter &lt;span style="color:#75715e">//monitorenter 指令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 12: aload_2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 13: monitorexit &lt;span style="color:#75715e">//monitorexit 指令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 14: &lt;span style="color:#66d9ef">goto&lt;/span> 22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 17: astore_3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 18: aload_2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 19: monitorexit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 20: aload_3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 21: athrow
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 22: &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Exception table:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from to target type
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 12 14 17 any
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 17 20 17 any
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LineNumberTable:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 18: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 19: 8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 21: 12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line 22: 22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StackMapTable: number_of_entries &lt;span style="color:#f92672">=&lt;/span> 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> frame_type &lt;span style="color:#f92672">=&lt;/span> 255 &lt;span style="color:#75715e">/* full_frame */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offset_delta &lt;span style="color:#f92672">=&lt;/span> 17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> locals &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">com&lt;/span>&lt;span style="color:#f92672">/&lt;/span>demo&lt;span style="color:#f92672">/&lt;/span>io&lt;span style="color:#f92672">/&lt;/span>SyncTest, &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">/&lt;/span>lang&lt;span style="color:#f92672">/&lt;/span>Object, &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">/&lt;/span>lang&lt;span style="color:#f92672">/&lt;/span>Object &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stack &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">/&lt;/span>lang&lt;span style="color:#f92672">/&lt;/span>Throwable &lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> frame_type &lt;span style="color:#f92672">=&lt;/span> 250 &lt;span style="color:#75715e">/* chop */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offset_delta &lt;span style="color:#f92672">=&lt;/span> 4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果Synchronized修饰同步方法，代替monitorenter和monitorexit的是 &lt;code>ACC_SYNCHRONIZED&lt;/code>标志，即：JVM使用该访问标志区分方法是否为同步方法。方法调用时，调用指令检查是否设置ACC_SYNCHRONIZED标志，如有，则执行线程&lt;strong>先持有&lt;/strong>该Monitor对象，再执行该方法；&lt;strong>运行期间&lt;/strong>，&lt;strong>其他线程无法获取到该Monitor&lt;/strong>对象；方法&lt;strong>执行完成&lt;/strong>后，&lt;strong>释放该Monitor&lt;/strong>对象
javap -v xx.class 字节文件查看&lt;/p></description></item><item><title>(该文弃用)锁升级</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/lock_escalation_deprecated/</link><pubDate>Mon, 31 Oct 2022 11:08:59 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/lock_escalation_deprecated/</guid><description>&lt;h2 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;p>无锁 =&amp;gt; 偏向锁 =&amp;gt; 轻量锁 =&amp;gt; 重量锁&lt;/p>
&lt;p>复习Class类锁和实例对象锁，说明Class类锁和实例对象锁不是同一把锁，互相不影响&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) &lt;span style="color:#66d9ef">throws&lt;/span> InterruptedException { 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object object&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> Object();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(()&lt;span style="color:#f92672">-&amp;gt;&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">synchronized&lt;/span> (Customer.&lt;span style="color:#a6e22e">class&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>()&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Object.class类锁&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TimeUnit.&lt;span style="color:#a6e22e">SECONDS&lt;/span>.&lt;span style="color:#a6e22e">sleep&lt;/span>(5);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InterruptedException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>()&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;结束并释放锁&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },&lt;span style="color:#e6db74">&amp;#34;线程1&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//保证线程1已经获得类锁&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TimeUnit.&lt;span style="color:#a6e22e">SECONDS&lt;/span>.&lt;span style="color:#a6e22e">sleep&lt;/span>(2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InterruptedException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(()&lt;span style="color:#f92672">-&amp;gt;&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">synchronized&lt;/span> (object){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>()&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;获得object实例对象锁&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>()&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;结束并释放锁&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },&lt;span style="color:#e6db74">&amp;#34;线程2&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/* 输出
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">线程1Object.class类锁
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">线程2获得object实例对象锁
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">线程2结束并释放锁
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">线程1结束并释放锁
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>总结图 , 00 , 01 , 10 ，没有11&lt;/p></description></item><item><title>对象内存布局和对象头</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly03121lyobject-concurrent/</link><pubDate>Sun, 30 Oct 2022 16:56:16 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly03121lyobject-concurrent/</guid><description>&lt;h2 id="对象布局">
 对象布局
 &lt;a class="anchor" href="#%e5%af%b9%e8%b1%a1%e5%b8%83%e5%b1%80">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>heap&lt;/strong> （&lt;strong>where&lt;/strong>）: &lt;strong>new (eden ,s0 ,s1) ,old, metaspace&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对象的构成元素（what）
HotSpot虚拟机里，对象在&lt;strong>堆内存中的存储布局&lt;/strong>分为三个部分
&lt;img src="img/ly-20241212141948626.png" alt="ly-20241212141948626" />&lt;/p>
&lt;ul>
&lt;li>对象头（Header）
&lt;ul>
&lt;li>&lt;strong>对象标记 MarkWord&lt;/strong>&lt;/li>
&lt;li>&lt;strong>类元信息&lt;/strong>（类型指针 Class Pointer，指向方法区的地址）&lt;/li>
&lt;li>对象头多大 &lt;strong>length&lt;/strong>（数组才有）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>实例数据（Instance Data）&lt;/li>
&lt;li>对其填充（Padding，保证整个对象大小，是8个字节的倍数）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="对象头">
 对象头
 &lt;a class="anchor" href="#%e5%af%b9%e8%b1%a1%e5%a4%b4">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>对象标记&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>Object o= new Object(); //new一个对象，占内存多少&lt;/li>
&lt;li>o.hashCode() //hashCode存在对象哪个地方&lt;/li>
&lt;li>synchronized(o){ } //对象被锁了多少次（可重入锁）&lt;/li>
&lt;li>System.gc(); //躲过了几次gc（次数）&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>上面这些，&lt;strong>哈希码&lt;/strong>、&lt;strong>gc标记&lt;/strong>、&lt;strong>gc次数&lt;/strong>、&lt;strong>同步锁标记&lt;/strong>、&lt;strong>偏向锁持有者&lt;/strong>，都保存在&lt;strong>对象标记&lt;/strong>里面
&lt;img src="img/ly-20241212141948895.png" alt="ly-20241212141948895" />&lt;/p>
&lt;ol>
&lt;li>如果在64位系统中，对象头中，**mark word（对象标记）**占用8个字节（64位）；**class pointer（类元信息）**占用8个字节，总共16字节（忽略压缩指针）&lt;/li>
&lt;li>无锁的时候，
&lt;img src="img/ly-20241212141949076.png" alt="ly-20241212141949076" />&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>类型指针
注意下图，指向方法区中（模板）的地址
&lt;img src="img/ly-20241212141949249.png" alt="ly-20241212141949249" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="实例数据和对齐填充">
 实例数据和对齐填充
 &lt;a class="anchor" href="#%e5%ae%9e%e4%be%8b%e6%95%b0%e6%8d%ae%e5%92%8c%e5%af%b9%e9%bd%90%e5%a1%ab%e5%85%85">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>实例数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用来存放类的属性（Filed）数据信息，包括父类的属性信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对齐填充&lt;/p>
&lt;/li>
&lt;li>
&lt;p>填充到长度为8字节，因为虚拟机要求&lt;strong>对象起始地址必须是8字节的整数倍&lt;/strong>（对齐填充不一定存在）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>示例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Customer&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> id;&lt;span style="color:#75715e">//4字节&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> flag&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>; &lt;span style="color:#75715e">//1字节&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//Customer customer=new Customer();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//该对象大小：对象头（对象标记8+类型指针8）+实例数据（4+1）=21字节 ===&amp;gt; 为了对齐填充，则为24字节&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="源码查看">
 源码查看
 &lt;a class="anchor" href="#%e6%ba%90%e7%a0%81%e6%9f%a5%e7%9c%8b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212141949397.png" alt="ly-20241212141949397" />&lt;/p></description></item><item><title>并发02</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0302lyconcurrent-02/</link><pubDate>Fri, 28 Oct 2022 14:15:06 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0302lyconcurrent-02/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="jmmjavamemorymodel">
 JMM（JavaMemoryModel)
 &lt;a class="anchor" href="#jmmjavamemorymodel">#&lt;/a>
&lt;/h2>
&lt;p>
&lt;a target="_blank" href="https://lwmfjc.github.io/2022/11/21/review/java_guide/java/concurrent/jmm">详见-知识点&lt;/a>
&lt;img src="img/ly-20241212141935173.png" alt="Java内存模型" />&lt;/p>
&lt;h2 id="volatile关键字">
 volatile关键字
 &lt;a class="anchor" href="#volatile%e5%85%b3%e9%94%ae%e5%ad%97">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>保证变量可见性&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用volatile关键字保证变量可见性，如果将变量声明为volatile则&lt;strong>指示JVM该变量是共享且不稳定&lt;/strong>的，每次使用它都到&lt;strong>主存&lt;/strong>中读取&lt;br>
&lt;img src="img/ly-20241212141935463.png" alt="ly-20241212141935463" />&lt;/p>
&lt;blockquote>
&lt;p>volatile关键字并非Java语言特有，在C语言里也有，它最原始的意义就是&lt;strong>禁用CPU缓存&lt;/strong>。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>volatile关键字只能&lt;strong>保证数据可见性&lt;/strong>，&lt;strong>不能保证数据原子性&lt;/strong>。&lt;strong>synchronized&lt;/strong>关键字两者都能保证&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不可见的例子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> com.concurrent; 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.util.concurrent.TimeUnit;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">TestLy&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//如果加上volatile,就能保证可见性，线程1 才能停止&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> stop &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;&lt;span style="color:#75715e">//对象属性&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) &lt;span style="color:#66d9ef">throws&lt;/span> InterruptedException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TestLy atomicTest &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TestLy();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(() &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>atomicTest.&lt;span style="color:#a6e22e">stop&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//这里不能加System.out.println ,因为这个方法内部用了synchronized修饰,会导致获取主内存的值，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//就没法展示效果了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/*System.out.println(&amp;#34;1还没有停止&amp;#34;);*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>()&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;停止了&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },&lt;span style="color:#e6db74">&amp;#34;线程1&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> Thread(() &lt;span style="color:#f92672">-&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TimeUnit.&lt;span style="color:#a6e22e">SECONDS&lt;/span>.&lt;span style="color:#a6e22e">sleep&lt;/span>(1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (InterruptedException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> atomicTest.&lt;span style="color:#a6e22e">stop&lt;/span>&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getName&lt;/span>()&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;让线程1停止&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },&lt;span style="color:#e6db74">&amp;#34;线程2&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#66d9ef">true&lt;/span>){}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>如何禁止指令重排
使用&lt;strong>volatile&lt;/strong>关键字，除了可以保证&lt;strong>变量的可见性&lt;/strong>，还能&lt;strong>防止JVM指令重排&lt;/strong>。当我们对这个变量进行读写操作的时候，-会通过插入特定的&lt;strong>内存屏障&lt;/strong>来禁止指令重排&lt;/p></description></item><item><title>基础</title><link>https://lwmfjc.github.io/zh/docs/technology/springCloud/bl_zhouyang_/base/</link><pubDate>Thu, 27 Oct 2022 16:46:21 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/springCloud/bl_zhouyang_/base/</guid><description>&lt;ul>
&lt;li>springCloud涉及到的技术有哪些
&lt;img src="img/ly-20241212142201709.png" alt="ly-20241212142201709" />&lt;/li>
&lt;li>约定 &amp;gt; 配置 &amp;gt; 编码&lt;/li>
&lt;li>&lt;/li>
&lt;/ul></description></item><item><title>并发01</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0301lyconcurrent-01/</link><pubDate>Wed, 26 Oct 2022 16:46:32 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Concurrent/ly0301lyconcurrent-01/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>什么是进程和线程&lt;/p>
&lt;ul>
&lt;li>
&lt;p>进程：是程序的&lt;strong>一次执行过程&lt;/strong>，是系统运行程序的&lt;strong>基本单位&lt;/strong>
系统运行一个程序，即一个进程从&lt;strong>创建、运行到消亡&lt;/strong>的过程&lt;/p>
&lt;ul>
&lt;li>
&lt;p>启动main函数则启动了一个JVM进程，&lt;strong>main函数所在线程&lt;/strong>为进程中的一个线程，也称&lt;strong>主线程&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>以下为一个个的进程&lt;br>
&lt;img src="img/ly-20241212141934200.png" alt="ly-20241212141934200" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查看java进程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>jps -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">32&lt;/span> org.jetbrains.jps.cmdline.Launcher
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">10084&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">16244&lt;/span> com.Test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">17400&lt;/span> sun.tools.jps.Jps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>杀死进程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span> taskkill /f /pid &lt;span style="color:#ae81ff">16244&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>何为线程&lt;/p>
&lt;ul>
&lt;li>
&lt;p>线程，比进程更小的执行单位&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同类的&lt;strong>多个线程&lt;/strong>共享&lt;strong>进程&lt;/strong>的&lt;strong>堆和方法区&lt;/strong>资源，但每个线程有自己的&lt;strong>程序计数器、虚拟机栈、本地方法栈&lt;/strong>，又被称为&lt;strong>轻量级进程&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java天生就是多线程程序，如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MultiThread&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 获取 Java 线程管理 MXBean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	ThreadMXBean threadMXBean &lt;span style="color:#f92672">=&lt;/span> ManagementFactory.&lt;span style="color:#a6e22e">getThreadMXBean&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 不需要获取同步的 monitor 和 synchronizer 信息，仅获取线程和线程堆栈信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		ThreadInfo&lt;span style="color:#f92672">[]&lt;/span> threadInfos &lt;span style="color:#f92672">=&lt;/span> threadMXBean.&lt;span style="color:#a6e22e">dumpAllThreads&lt;/span>(&lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 遍历线程信息，仅打印线程 ID 和线程名称信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">for&lt;/span> (ThreadInfo threadInfo : threadInfos) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;[&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> threadInfo.&lt;span style="color:#a6e22e">getThreadId&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;] &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> threadInfo.&lt;span style="color:#a6e22e">getThreadName&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>5&lt;span style="color:#f92672">]&lt;/span> Attach Listener &lt;span style="color:#75715e">//添加事件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>4&lt;span style="color:#f92672">]&lt;/span> Signal Dispatcher &lt;span style="color:#75715e">// 分发处理给 JVM 信号的线程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>3&lt;span style="color:#f92672">]&lt;/span> Finalizer &lt;span style="color:#75715e">//调用对象 finalize 方法的线程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">]&lt;/span> Reference Handler &lt;span style="color:#75715e">//清除 reference 线程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>1&lt;span style="color:#f92672">]&lt;/span> main &lt;span style="color:#75715e">//main 线程,程序入口&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>也就是说，一个Java程序的运行，是main线程和多个其他线程同时运行&lt;/p></description></item><item><title>io模型</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/IO/ly0203lyio-model/</link><pubDate>Wed, 26 Oct 2022 14:17:58 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/IO/ly0203lyio-model/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>
&lt;a target="_blank" href="https://zhuanlan.zhihu.com/p/360878783">https://zhuanlan.zhihu.com/p/360878783&lt;/a> IO多路复用讲解，这是一个与系统底层有关的知识点，需要一些操作系统调用代码才知道IO多路复用省的时间。&lt;/p>
&lt;/blockquote>
&lt;h2 id="io">
 I/O
 &lt;a class="anchor" href="#io">#&lt;/a>
&lt;/h2>
&lt;h3 id="何为io">
 何为I/O
 &lt;a class="anchor" href="#%e4%bd%95%e4%b8%baio">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>I/O(&lt;strong>Input/Output&lt;/strong>)，即&lt;strong>输入/输出&lt;/strong>
从计算机结构的角度来解读一下I/O，根据冯诺依曼结构，计算机结构分为5大部分：&lt;strong>运算器&lt;/strong>、&lt;strong>控制器&lt;/strong>、&lt;strong>存储器&lt;/strong>、&lt;strong>输入设备&lt;/strong>、&lt;strong>输出设备&lt;/strong>
&lt;img src="img/ly-20241212141951603.png" alt="ly-20241212141951603" />
其中，输入设备：键盘；输出设备：显示器
网卡、硬盘既属于输入设备也属于输出设备&lt;/li>
&lt;li>输入设备&lt;strong>向计算机输入（内存）&lt;strong>数据，输出设备&lt;/strong>接收计算机（内存）&lt;strong>输出的数据，即I/O描述了&lt;/strong>计算机系统&lt;/strong>与&lt;strong>外部设备&lt;/strong>之间&lt;strong>通信&lt;/strong>的过程&lt;/li>
&lt;li>从应用程序的角度解读I/O
&lt;ul>
&lt;li>为了保证系统稳定性和安全性，一个进程的地址空间划分为&lt;strong>用户空间User space&lt;/strong>和&lt;strong>内核空间Kernel space&lt;/strong> &lt;code>kernel	英[ˈkɜːnl]&lt;/code>&lt;/li>
&lt;li>平常运行的应用程序都运行在用户空间，只有&lt;strong>内核空间才能进行系统态级别&lt;/strong>的&lt;strong>资源&lt;/strong>有关操作&amp;mdash;&lt;strong>文件管理、进程通信、内存管理&lt;/strong>&lt;/li>
&lt;li>如果要进行IO操作，就得依赖&lt;strong>内核空间&lt;/strong>的能力，&lt;strong>用户空间的程序&lt;/strong>不能直接访问&lt;strong>内核空间&lt;/strong>&lt;/li>
&lt;li>用户进程要想执行IO操作，必须通过&lt;strong>系统调用&lt;/strong>来间接访问内核空间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>对于&lt;strong>磁盘IO（读写文件）&lt;strong>和&lt;/strong>网络IO（网络请求和响应）&lt;/strong>，从应用程序视角来看，&lt;strong>应用程序&lt;/strong>对操作系统的&lt;strong>内核&lt;/strong>发起&lt;strong>IO调用（系统调用）&lt;/strong>，操作系统负责的&lt;strong>内核&lt;/strong>执行具体&lt;strong>IO&lt;/strong>操作
&lt;ul>
&lt;li>&lt;strong>应用程序只是发起了IO操作调用&lt;/strong>，而具体的IO执行则由&lt;strong>操作系统内核&lt;/strong>完成&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>应用程序&lt;strong>发起I/O后&lt;/strong>，经历两个步骤
&lt;ul>
&lt;li>内核&lt;strong>等待I/O设备&lt;/strong>准备好数据&lt;/li>
&lt;li>内核将数据&lt;strong>从内核空间&lt;/strong>拷贝&lt;strong>到用户空间&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="有哪些常见的io模型">
 有哪些常见的IO模型
 &lt;a class="anchor" href="#%e6%9c%89%e5%93%aa%e4%ba%9b%e5%b8%b8%e8%a7%81%e7%9a%84io%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h3>
&lt;p>UNIX系统下，包括5种：&lt;strong>同步阻塞I/O&lt;/strong>，&lt;strong>同步非阻塞I/O&lt;/strong>，&lt;strong>I/O多路复用&lt;/strong>、&lt;strong>信号驱动I/O&lt;/strong>和&lt;strong>异步I/O&lt;/strong>&lt;/p>
&lt;h2 id="java中3中常见io模型">
 Java中3中常见I/O模型
 &lt;a class="anchor" href="#java%e4%b8%ad3%e4%b8%ad%e5%b8%b8%e8%a7%81io%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="bio-blocking-io-">
 BIO (Blocking I/O )
 &lt;a class="anchor" href="#bio-blocking-io-">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>应用程序发起read调用后，会一直阻塞，&lt;strong>直到内核把数据拷贝到用户空间&lt;/strong>
&lt;img src="img/ly-20241212141951883.png" alt="ly-20241212141951883" />&lt;/li>
&lt;/ul>
&lt;h3 id="nio-non-blockingnew-io">
 NIO (Non-blocking/New I/O)
 &lt;a class="anchor" href="#nio-non-blockingnew-io">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>对于java.nio包，提供了&lt;strong>Channel&lt;/strong>、&lt;strong>Selector&lt;/strong>、&lt;strong>Buffer&lt;/strong>等抽象概念，对于&lt;strong>高负载高并发&lt;/strong>，应使用NIO&lt;/li>
&lt;li>NIO是I/O多路复用模型，属于&lt;strong>同步非阻塞IO&lt;/strong>模型
&lt;ul>
&lt;li>
&lt;p>&lt;strong>一般的同步非阻塞 IO 模型&lt;/strong>中，应用程序会&lt;strong>一直发起 read&lt;/strong> 调用。&lt;br>
等待&lt;strong>数据从内核空间拷贝到用户空&lt;/strong>间的这段时间里，&lt;strong>线程依然是阻塞&lt;/strong>的**，**直到在内核把数据拷贝到用户空间。&lt;/p>
&lt;p>相比于同步阻塞 IO 模型，同步非阻塞 IO 模型确实有了很大改进。通过轮询操作，避免了一直阻塞。&lt;/p>
&lt;p>但是，这种 IO 模型同样存在问题：&lt;strong>应用程序不断进行 I/O 系统调用轮询数据是否已经准备好的过程是十分消耗 CPU 资源的。&lt;/strong>&lt;/p>
&lt;p>★★ 也就是说，【准备数据，数据就绪】是&lt;strong>不阻塞&lt;/strong>的。而【拷贝数据】是&lt;strong>阻塞&lt;/strong>的
&lt;img src="img/ly-20241212141952028.image" alt="图源：《深入拆解Tomcat &amp;amp; Jetty》" />&lt;/p></description></item><item><title>io设计模式</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/IO/ly0202lyio-design-patterns/</link><pubDate>Mon, 24 Oct 2022 23:40:53 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/IO/ly0202lyio-design-patterns/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="装饰器模式">
 装饰器模式
 &lt;a class="anchor" href="#%e8%a3%85%e9%a5%b0%e5%99%a8%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;p>​	类图：&lt;br>
​	&lt;img src="img/ly-20241212141951023.png" alt="ly-20241212141951023" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>装饰器，Decorator，装饰器模式可以在&lt;strong>不改变原有对象的情况下拓展其功能&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>★装饰器模式，&lt;strong>通过组合替代继承&lt;/strong>来扩展原始类功能，在一些&lt;strong>继承关系较复杂&lt;/strong>的场景（IO这一场景各种类的继承关系就比较复杂）下更加实用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于字节流，&lt;strong>FilterInputStream（对应输入流）和FilterOutputStream（对应输出流）&lt;strong>是&lt;/strong>装饰器模式的核心&lt;/strong>，分别用于&lt;strong>增强（继承了）InputStream&lt;/strong>和&lt;strong>OutputStream&lt;/strong>子类对象的功能
Filter （过滤的意思），中间（Closeable）下面这两条&lt;strong>虚线代表实现&lt;/strong>；最下面的&lt;strong>实线代表继承&lt;/strong>
&lt;img src="img/ly-20241212141951298.png" alt="ly-20241212141951298" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>其中BufferedInputStream（字节缓冲输入流）、DataInputStream等等都是FilterInputStream的子类，对应的BufferedOutputStream和DataOutputStream都是FilterOutputStream的子类&lt;/p>
&lt;/li>
&lt;li>
&lt;p>例子，使用BufferedInputStream（字节缓冲输入流）来增强FileInputStream功能&lt;/p>
&lt;ul>
&lt;li>
&lt;p>BufferedInputStream源码（构造函数）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> DEFAULT_BUFFER_SIZE &lt;span style="color:#f92672">=&lt;/span> 8192;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">BufferedInputStream&lt;/span>(InputStream in) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>(in, DEFAULT_BUFFER_SIZE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">BufferedInputStream&lt;/span>(InputStream in, &lt;span style="color:#66d9ef">int&lt;/span> size) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(in);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (size &lt;span style="color:#f92672">&amp;lt;=&lt;/span> 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException(&lt;span style="color:#e6db74">&amp;#34;Buffer size &amp;lt;= 0&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buf &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>size&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span> (BufferedInputStream bis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BufferedInputStream(&lt;span style="color:#66d9ef">new&lt;/span> FileInputStream(&lt;span style="color:#e6db74">&amp;#34;input.txt&amp;#34;&lt;/span>))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> content;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> skip &lt;span style="color:#f92672">=&lt;/span> bis.&lt;span style="color:#a6e22e">skip&lt;/span>(2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> ((content &lt;span style="color:#f92672">=&lt;/span> bis.&lt;span style="color:#a6e22e">read&lt;/span>()) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>((&lt;span style="color:#66d9ef">char&lt;/span>) content);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} &lt;span style="color:#66d9ef">catch&lt;/span> (IOException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ZipInputStream和ZipOutputStream还可以用来增强BufferedInputStream和BufferedOutputStream的能力&lt;/p></description></item><item><title>io基础</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/IO/ly0201lyio/</link><pubDate>Sun, 23 Oct 2022 12:21:12 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/IO/ly0201lyio/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>IO，即Input/Output，输入和输出，输入就是&lt;strong>数据输入到计算机内存&lt;/strong>；输出则是&lt;strong>输出到外部存储&lt;/strong>（如&lt;strong>数据库&lt;/strong>、&lt;strong>文件&lt;/strong>、&lt;strong>远程主机&lt;/strong>）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>根据数据处理方式，又分为&lt;strong>字节流&lt;/strong>和&lt;strong>字符流&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基类&lt;/p>
&lt;ul>
&lt;li>字节输入流 &lt;strong>InputStream&lt;/strong>，字符输入流 &lt;strong>Reader&lt;/strong>&lt;/li>
&lt;li>字节输出流 &lt;strong>OutputStream&lt;/strong>, 字符输出流 &lt;strong>Writer&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="字节流">
 字节流
 &lt;a class="anchor" href="#%e5%ad%97%e8%8a%82%e6%b5%81">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>字节输入流 InputStream
InputStream用于从源头（通常是文件）&lt;strong>读取数据（字节信息）到内存&lt;/strong>中，java.io.InputStream抽象类是&lt;strong>所有字节输入流的父类&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>常用方法&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>&lt;code>read()&lt;/code> ：返回输入流中下一个字节的数据。返回的值介于 0 到 255 之间。如果未读取任何字节，则代码返回 &lt;code>-1&lt;/code> ，表示文件结束。&lt;/li>
&lt;li>&lt;code>read(byte b[ ])&lt;/code> : 从输入流中读取一些字节存储到数组 &lt;code>b&lt;/code> 中。如果数组 &lt;code>b&lt;/code> 的长度为零，则不读取。如果没有可用字节读取，返回 &lt;code>-1&lt;/code>。如果有可用字节读取，则最多读取的字节数最多等于 &lt;code>b.length&lt;/code> ， 返回读取的字节数。这个方法等价于 &lt;code>read(b, 0, b.length)&lt;/code>。&lt;/li>
&lt;li>&lt;code>read(byte b[], int off, int len)&lt;/code> ：在&lt;code>read(byte b[ ])&lt;/code> 方法的基础上增加了 &lt;code>off&lt;/code> 参数（偏移量）和 &lt;code>len&lt;/code> 参数（要读取的最大字节数）。&lt;/li>
&lt;li>&lt;code>skip(long n)&lt;/code> ：忽略输入流中的 n 个字节 ,返回实际忽略的字节数。&lt;/li>
&lt;li>&lt;code>available()&lt;/code> ：返回输入流中可以读取的字节数。&lt;/li>
&lt;li>&lt;code>close()&lt;/code> ：关闭输入流释放相关的系统资源。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Java9 新增了多个实用方法&lt;/p></description></item><item><title>ConcurrentHashMap源码</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0105lysource-code-concurrenthashmap/</link><pubDate>Sat, 22 Oct 2022 18:26:52 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0105lysource-code-concurrenthashmap/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="总结">
 总结
 &lt;a class="anchor" href="#%e6%80%bb%e7%bb%93">#&lt;/a>
&lt;/h2>
&lt;p>Java7 中 &lt;code>ConcurrentHashMap&lt;/code> 使用的&lt;strong>分段锁&lt;/strong>，也就是&lt;strong>每一个 Segment&lt;/strong> 上同时只有一个线程可以操作，&lt;strong>每一个 &lt;code>Segment&lt;/code>&lt;/strong> 都是一个类似 &lt;code>HashMap&lt;/code> 数组的结构，每一个HashMap&lt;strong>可以扩容&lt;/strong>，它的&lt;strong>冲突会转化为链表&lt;/strong>。但是 &lt;code>Segment&lt;/code> 的个数一但初始化就不能改变。&lt;/p>
&lt;p>Java8 中的 &lt;code>ConcurrentHashMap&lt;/code> 使用的 &lt;code>Synchronized&lt;/code> 锁加 CAS 的机制。结构也由 Java7 中的 &lt;strong>&lt;code>Segment&lt;/code> 数组 + &lt;code>HashEntry&lt;/code> 数组 + 链表&lt;/strong> 进化成了 &lt;strong>Node 数组 + 链表 / 红黑树&lt;/strong>，&lt;strong>Node 是类似于一个 HashEntry 的结构&lt;/strong>。它的冲突再达到一定大小时会转化成红黑树，在冲突小于一定数量时又退回链表。&lt;/p>
&lt;h2 id="源码-略过">
 源码 （略过）
 &lt;a class="anchor" href="#%e6%ba%90%e7%a0%81-%e7%95%a5%e8%bf%87">#&lt;/a>
&lt;/h2>
&lt;h2 id="concurrenthashmap17">
 ConcurrentHashMap1.7
 &lt;a class="anchor" href="#concurrenthashmap17">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>存储结构
&lt;ul>
&lt;li>Segment数组（该数组用来加锁，每个数组元素是一个HashEntry数组（该数组可能包含链表）&lt;/li>
&lt;li>如图，ConcurrentHashMap由多个Segment组合，每一个Segment是一个类似HashMap的结构，每一个HashMap内部可以扩容，但是Segment个数初始化后不能改变，默认16个（即默认支持16个线程并发）
&lt;img src="img/ly-20241212141930985.png" alt="ly-20241212141930985" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="concurrenthashmap18">
 ConcurrentHashMap1.8
 &lt;a class="anchor" href="#concurrenthashmap18">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>存储结构
&lt;img src="img/ly-20241212141931187.png" alt="ly-20241212141931187" />
可以发现 Java8 的 ConcurrentHashMap 相对于 Java7 来说变化比较大，不再是之前的 &lt;strong>Segment 数组 + HashEntry 数组 + 链表&lt;/strong>，而是 &lt;strong>Node 数组 + 链表 / 红黑树&lt;/strong>。当冲突链表达到一定长度时，链表会转换成红黑树。&lt;/p></description></item><item><title>HashMap源码</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0106lysource-code-hashmap/</link><pubDate>Fri, 21 Oct 2022 15:30:09 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0106lysource-code-hashmap/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="hashmap简介">
 HashMap简介
 &lt;a class="anchor" href="#hashmap%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>HashMap用来存放&lt;strong>键值对&lt;/strong>，基于哈希表的Map接口实现，是&lt;strong>非线程安全&lt;/strong>的&lt;/li>
&lt;li>可以存储null的key和value，但null作为键只能有一个&lt;/li>
&lt;li>JDK8之前，HashMap由&lt;strong>数组和链表&lt;/strong>组成，链表是为了解决哈希冲突而存在；JDK8之后，当链表大于阈值（默认8），则会选择&lt;strong>转为红黑树&lt;/strong>（当数组长度大于64则进行转换，否则只是扩容），以&lt;strong>减少搜索时间&lt;/strong>&lt;/li>
&lt;li>HashMap默认初始化大小为16，每次&lt;strong>扩容为原容量2倍&lt;/strong>，且总是使用2的幂作为哈希表的大小&lt;/li>
&lt;/ul>
&lt;h2 id="底层数据结构分析">
 底层数据结构分析
 &lt;a class="anchor" href="#%e5%ba%95%e5%b1%82%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>JDK8之前，HashMap底层是&lt;strong>数组和链表&lt;/strong>，即&lt;strong>链表散列&lt;/strong>；通过key的hashCode，经过扰动函数，获得hash值，然后再通过(n-1) &amp;amp; hash 判断当前元素存放位置（n指的是数组长度），如果当前位置存在元素，就判断元素与要存入的元素的hash值以及key是否相同，相同则覆盖，否则通过&lt;strong>拉链法&lt;/strong>解决&lt;br>
&lt;img src="img/ly-20241212141931350.png" alt="ly-20241212141931350" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>扰动函数，即hash(Object key)方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//JDK1.8 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">hash&lt;/span>(Object key) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> h;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// key.hashCode()：返回散列值也就是hashcode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ^ ：按位异或&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// &amp;gt;&amp;gt;&amp;gt;:无符号右移，忽略符号位，空位都以0补齐&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (key &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) &lt;span style="color:#f92672">?&lt;/span> 0 : (h &lt;span style="color:#f92672">=&lt;/span> key.&lt;span style="color:#a6e22e">hashCode&lt;/span>()) &lt;span style="color:#f92672">^&lt;/span> (h &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 16);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>JDK1.7&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//JDK1.7 , 则扰动了4次，性能较差&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">hash&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> h) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// This function ensures that hashCodes that differ only by&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// constant multiples at each bit position have a bounded&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// number of collisions (approximately 8 at default load factor).&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> h &lt;span style="color:#f92672">^=&lt;/span> (h &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 20) &lt;span style="color:#f92672">^&lt;/span> (h &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 12);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> h &lt;span style="color:#f92672">^&lt;/span> (h &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 7) &lt;span style="color:#f92672">^&lt;/span> (h &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 4);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>JDK1.8之后，当链表长度大于阈值（默认为 8）时，会首先调用 &lt;code>treeifyBin()&lt;/code>方法。这个方法会根据 HashMap 数组来决定是否转换为红黑树。只有&lt;strong>当数组长度大于或者等于 64&lt;/strong> 的情况下，才会执行转换红黑树操作，以减少搜索时间。&lt;strong>否则，就是只是执行 &lt;code>resize()&lt;/code> 方法对数组扩容&lt;/strong>。相关源码这里就不贴了，重点关注 &lt;code>treeifyBin()&lt;/code>方法即可！&lt;/p></description></item><item><title>ArrayList源码</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0104lysource-code-ArrayList/</link><pubDate>Thu, 20 Oct 2022 17:01:47 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0104lysource-code-ArrayList/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>底层是数组队列，相当于&lt;strong>动态数组&lt;/strong>，能&lt;strong>动态增长&lt;/strong>，可以在添加大量元素前先使用&lt;strong>ensureCapacity&lt;/strong>来增加ArrayList容量，&lt;strong>减少递增式再分配的数量&lt;/strong>
源码：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">ArrayList&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> AbstractList&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">implements&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span>, RandomAccess, Cloneable, java.&lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">Serializable&lt;/span>{ }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>Random Access，标志接口，表明这个接口的List集合支持&lt;strong>快速随机访问&lt;/strong>，这里是指可&lt;strong>通过元素序号快速访问&lt;/strong>&lt;/li>
&lt;li>实现Cloneable接口，能&lt;strong>被克隆&lt;/strong>&lt;/li>
&lt;li>实现java.io.Serializable，&lt;strong>支持序列化&lt;/strong>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>ArrayList和Vector区别&lt;/p>
&lt;ul>
&lt;li>ArrayList和Vector都是List的实现类，Vector出现的比较早，底层都是Object[] 存储&lt;/li>
&lt;li>ArrayList线程不安全（适合频繁查找，线程不安全 ）&lt;/li>
&lt;li>Vector 线程安全的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>ArrayList与LinkedList区别&lt;/p>
&lt;ul>
&lt;li>
&lt;p>都是&lt;strong>不同步&lt;/strong>的，即不保证线程安全&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ArrayList底层为Object数组；LinkedList底层使用&lt;strong>双向链表数据结构&lt;/strong>(1.6之前为循环链表，1.7取消了循环)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>插入和删除是否受元素位置影响&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ArrayList采用数组存储，所以插入和删除元素的时间复杂度受元素位置影响[ 默认增加到末尾，O(1) ; 在指定位置，则O(n) , 要往后移动]&lt;/p>
&lt;/li>
&lt;li>
&lt;p>LinkedList采用链表存储，所以对于add(E e)方法，还是O(1)；如果是在指定位置插入和删除，则为O(n) 因为需要遍历将指针移动到指定位置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//LinkedList默认添加到最后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(E e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> linkLast(e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>LinkedList&lt;strong>不支持高效随机元素访问&lt;/strong>，而ArrayList支持（通过get(int index))&lt;/p>
&lt;/li>
&lt;li>
&lt;p>内存空间占用
ArrayList的空间浪费主要体现在list列表的结尾会预留一定的容量空间，而LinkedList的空间花费在，每个元素都需要比ArrayList更多空间（要存放直接前驱和直接后继以及(当前)数据)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="3-扩容机制分析--jdk8-">
 3. 扩容机制分析 ( JDK8 )
 &lt;a class="anchor" href="#3-%e6%89%a9%e5%ae%b9%e6%9c%ba%e5%88%b6%e5%88%86%e6%9e%90--jdk8-">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>ArrayList的构造函数&lt;/p>
&lt;ul>
&lt;li>三种方式初始化，构造方法源码&lt;/li>
&lt;li>空参，指定大小，指定集合 （如果集合类型非Object[].class，则使用Arrays.copyOf转为Object[].class)&lt;/li>
&lt;li>以无参构造方式创建ArrayList时，实际上初始化赋值的是空数组；当真正操作时才分配容量，即添加第一个元素时扩容为10&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 默认初始容量大小
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> DEFAULT_CAPACITY &lt;span style="color:#f92672">=&lt;/span> 10;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Object&lt;span style="color:#f92672">[]&lt;/span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA &lt;span style="color:#f92672">=&lt;/span> {};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *默认构造函数，使用初始容量10构造一个空列表(无参数构造)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ArrayList&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">elementData&lt;/span> &lt;span style="color:#f92672">=&lt;/span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 带初始容量参数的构造函数。（用户自己指定容量）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ArrayList&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> initialCapacity) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (initialCapacity &lt;span style="color:#f92672">&amp;gt;&lt;/span> 0) {&lt;span style="color:#75715e">//初始容量大于0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//创建initialCapacity大小的数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">elementData&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Object&lt;span style="color:#f92672">[&lt;/span>initialCapacity&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (initialCapacity &lt;span style="color:#f92672">==&lt;/span> 0) {&lt;span style="color:#75715e">//初始容量等于0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//创建空数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">elementData&lt;/span> &lt;span style="color:#f92672">=&lt;/span> EMPTY_ELEMENTDATA;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {&lt;span style="color:#75715e">//初始容量小于0，抛出异常&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException(&lt;span style="color:#e6db74">&amp;#34;Illegal Capacity: &amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initialCapacity);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *构造包含指定collection元素的列表，这些元素利用该集合的迭代器按顺序返回
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *如果指定的集合为null，throws NullPointerException。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">ArrayList&lt;/span>(Collection&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> E&lt;span style="color:#f92672">&amp;gt;&lt;/span> c) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> elementData &lt;span style="color:#f92672">=&lt;/span> c.&lt;span style="color:#a6e22e">toArray&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ((size &lt;span style="color:#f92672">=&lt;/span> elementData.&lt;span style="color:#a6e22e">length&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// c.toArray might (incorrectly) not return Object[] (see 6260652)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (elementData.&lt;span style="color:#a6e22e">getClass&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> Object&lt;span style="color:#f92672">[]&lt;/span>.&lt;span style="color:#a6e22e">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> elementData &lt;span style="color:#f92672">=&lt;/span> Arrays.&lt;span style="color:#a6e22e">copyOf&lt;/span>(elementData, size, Object&lt;span style="color:#f92672">[]&lt;/span>.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// replace with empty array.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">elementData&lt;/span> &lt;span style="color:#f92672">=&lt;/span> EMPTY_ELEMENTDATA;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>以无参构造参数函数为例
&lt;strong>先看下面的 add()方法扩容&lt;/strong>&lt;/p></description></item><item><title>集合使用注意事项</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0103lycollections-precautions-for-use/</link><pubDate>Wed, 19 Oct 2022 17:26:07 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0103lycollections-precautions-for-use/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="集合判空">
 集合判空
 &lt;a class="anchor" href="#%e9%9b%86%e5%90%88%e5%88%a4%e7%a9%ba">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>//阿里巴巴开发手册&lt;/p>
&lt;p>&lt;strong>判断所有集合内部的元素是否为空，使用 &lt;code>isEmpty()&lt;/code> 方法，而不是 &lt;code>size()==0&lt;/code> 的方式。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>isEmpty()可读性更好，且&lt;strong>绝大部分情况下时间复杂度为O(1)&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>有例外：ConcurrentHashMap的size()和isEmpty() 时间复杂度均不是O(1)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">size&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> n &lt;span style="color:#f92672">=&lt;/span> sumCount();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ((n &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0L) &lt;span style="color:#f92672">?&lt;/span> 0 :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (n &lt;span style="color:#f92672">&amp;gt;&lt;/span> (&lt;span style="color:#66d9ef">long&lt;/span>)Integer.&lt;span style="color:#a6e22e">MAX_VALUE&lt;/span>) &lt;span style="color:#f92672">?&lt;/span> Integer.&lt;span style="color:#a6e22e">MAX_VALUE&lt;/span> :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#66d9ef">int&lt;/span>)n);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> &lt;span style="color:#a6e22e">sumCount&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CounterCell&lt;span style="color:#f92672">[]&lt;/span> as &lt;span style="color:#f92672">=&lt;/span> counterCells; CounterCell a;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> sum &lt;span style="color:#f92672">=&lt;/span> baseCount;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (as &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> as.&lt;span style="color:#a6e22e">length&lt;/span>; &lt;span style="color:#f92672">++&lt;/span>i) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ((a &lt;span style="color:#f92672">=&lt;/span> as&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sum &lt;span style="color:#f92672">+=&lt;/span> a.&lt;span style="color:#a6e22e">value&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">isEmpty&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sumCount() &lt;span style="color:#f92672">&amp;lt;=&lt;/span> 0L; &lt;span style="color:#75715e">// ignore transient negative values&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="集合转map">
 集合转Map
 &lt;a class="anchor" href="#%e9%9b%86%e5%90%88%e8%bd%acmap">#&lt;/a>
&lt;/h2>
&lt;blockquote>
&lt;p>//阿里巴巴开发手册&lt;/p></description></item><item><title>集合_2</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0102lycollection_2/</link><pubDate>Tue, 18 Oct 2022 08:54:49 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0102lycollection_2/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="map">
 Map
 &lt;a class="anchor" href="#map">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>HashMap和Hashtable的区别&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>HashMap是非线程安全&lt;/strong>的，&lt;strong>Hashtable是线程安全&lt;/strong>的，因为Hashtable内部方法&lt;strong>都经过synchronized&lt;/strong>修饰（不过要保证线程安全&lt;strong>一般用ConcurrentHashMap&lt;/strong>）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>由于加了synchronized修饰，HashTable&lt;strong>效率&lt;/strong>没有HashMap高&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HashMap&lt;strong>可以存储null的key和value&lt;/strong>，但&lt;strong>null作为键&lt;/strong>只能有一个**；&lt;strong>HashTable&lt;/strong>不允许有null键和null值**&lt;/p>
&lt;/li>
&lt;li>
&lt;p>初始容量及每次扩容&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Hashtable默认初始大小11&lt;/strong>，之后&lt;strong>扩容为2n+1&lt;/strong>;HashMap&lt;strong>初始大小16&lt;/strong>，之后&lt;strong>扩容变为原来的2倍&lt;/strong>&lt;/li>
&lt;li>如果指定初始大小，HashTable直接使用初始大小&lt;br>
而&lt;code>HashMap&lt;/code> 会将其&lt;strong>扩充为 2 的幂次方&lt;/strong>大小（&lt;code>HashMap&lt;/code> 中的**&lt;code>tableSizeFor()&lt;/code>**方法保证，下面给出了源代码）。也就是说 &lt;code>HashMap&lt;/code> 总是使用 2 的幂作为哈希表的大小,后面会介绍到为什么是 2 的幂次方&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>底层数据结构&lt;/p>
&lt;ul>
&lt;li>JDK1.8之后&lt;strong>HashMap&lt;/strong>解决哈希冲突时，当&lt;strong>链表大于阈值（默认8）&lt;strong>时，将链表&lt;/strong>转为红黑树&lt;/strong>（转换&lt;strong>前&lt;/strong>判断，如果当前&lt;strong>数组长度小于64&lt;/strong>，则&lt;strong>先进行数组扩容&lt;/strong>，而不转成红黑树），以减少搜索时间。&lt;/li>
&lt;li>Hashtable&lt;strong>没有&lt;/strong>上面的机制&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">HashMap 中带有初始容量的构造函数：
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">HashMap&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> initialCapacity, &lt;span style="color:#66d9ef">float&lt;/span> loadFactor) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (initialCapacity &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException(&lt;span style="color:#e6db74">&amp;#34;Illegal initial capacity: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initialCapacity);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (initialCapacity &lt;span style="color:#f92672">&amp;gt;&lt;/span> MAXIMUM_CAPACITY)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initialCapacity &lt;span style="color:#f92672">=&lt;/span> MAXIMUM_CAPACITY;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (loadFactor &lt;span style="color:#f92672">&amp;lt;=&lt;/span> 0 &lt;span style="color:#f92672">||&lt;/span> Float.&lt;span style="color:#a6e22e">isNaN&lt;/span>(loadFactor))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException(&lt;span style="color:#e6db74">&amp;#34;Illegal load factor: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadFactor);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">loadFactor&lt;/span> &lt;span style="color:#f92672">=&lt;/span> loadFactor;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">threshold&lt;/span> &lt;span style="color:#f92672">=&lt;/span> tableSizeFor(initialCapacity);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">HashMap&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> initialCapacity) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>(initialCapacity, DEFAULT_LOAD_FACTOR);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/*下面这个方法保证了 HashMap 总是使用 2 的幂作为哈希表的大小。*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * Returns a power of two size for the given target capacity.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">tableSizeFor&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> cap) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> n &lt;span style="color:#f92672">=&lt;/span> cap &lt;span style="color:#f92672">-&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">|=&lt;/span> n &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">|=&lt;/span> n &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">|=&lt;/span> n &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 4;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">|=&lt;/span> n &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 8;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n &lt;span style="color:#f92672">|=&lt;/span> n &lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> 16;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (n &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0) &lt;span style="color:#f92672">?&lt;/span> 1 : (n &lt;span style="color:#f92672">&amp;gt;=&lt;/span> MAXIMUM_CAPACITY) &lt;span style="color:#f92672">?&lt;/span> MAXIMUM_CAPACITY : n &lt;span style="color:#f92672">+&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HashMap和hashSet区别&lt;/p></description></item><item><title>集合_1</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0101lycollection_1/</link><pubDate>Mon, 17 Oct 2022 08:55:24 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Collection/ly0101lycollection_1/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="集合包括collection和mapcollection-存放单一元素map-存放键值对">
 集合包括&lt;code>Collection&lt;/code>和&lt;code>Map&lt;/code>，Collection 存放单一元素。Map 存放键值对
 &lt;a class="anchor" href="#%e9%9b%86%e5%90%88%e5%8c%85%e6%8b%accollection%e5%92%8cmapcollection-%e5%ad%98%e6%94%be%e5%8d%95%e4%b8%80%e5%85%83%e7%b4%a0map-%e5%ad%98%e6%94%be%e9%94%ae%e5%80%bc%e5%af%b9">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212141928129.png" alt="ly-20241212141928129" />&lt;/p>
&lt;h2 id="listsetqueuemap区别">
 List，Set，Queue，Map区别
 &lt;a class="anchor" href="#listsetqueuemap%e5%8c%ba%e5%88%ab">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;code>List&lt;/code>(对付顺序的好帮手): 存储的元素是有序的、可重复的。&lt;/li>
&lt;li>&lt;code>Set&lt;/code>(注重独一无二的性质): 存储的元素是无序的、不可重复的。&lt;/li>
&lt;li>&lt;code>Queue&lt;/code>(实现排队功能的叫号机): 按特定的排队规则来确定先后顺序，存储的元素是有序的、可重复的。&lt;/li>
&lt;li>&lt;code>Map&lt;/code>(用 key 来搜索的专家): 使用键值对（key-value）存储，类似于数学上的函数 y=f(x)，&amp;ldquo;x&amp;rdquo; 代表 key，&amp;ldquo;y&amp;rdquo; 代表 value，key 是无序的、不可重复的，value 是无序的、可重复的，每个键最多映射到一个值。&lt;/li>
&lt;/ul>
&lt;h2 id="各种集合框架--底层数据结构">
 各种集合框架&amp;ndash;底层数据结构
 &lt;a class="anchor" href="#%e5%90%84%e7%a7%8d%e9%9b%86%e5%90%88%e6%a1%86%e6%9e%b6--%e5%ba%95%e5%b1%82%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>List
&lt;ul>
&lt;li>ArrayList、Vector &amp;mdash;-&amp;gt; Object[] 数组&lt;/li>
&lt;li>LinkedList 双向链表 (jdk 1.6 之前为循环链表, 1.7 取消了循环)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Set
&lt;ul>
&lt;li>HashSet （无序，唯一），且&lt;strong>基于HashMap&lt;/strong>&lt;/li>
&lt;li>LinkedHashSet 是HashSet的子类，基于&lt;strong>LinkedHashMap&lt;/strong>
(LinkedHashMap内部基于HashMap实现)&lt;/li>
&lt;li>TreeSet(有序，唯一) ：红黑树（自平衡的排序二叉树）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Queue (队列)
&lt;ul>
&lt;li>PriorityQueue：Object[] 数组来实现二叉堆&lt;/li>
&lt;li>ArrayQueue：Object[] 数组+ 双指针&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Map
&lt;ul>
&lt;li>
&lt;p>&lt;code>HashMap&lt;/code>： JDK1.8 之前 &lt;code>HashMap&lt;/code> 由&lt;strong>数组+链表&lt;/strong>组成的，数组是 &lt;code>HashMap&lt;/code> 的主体，链表则是主要为了解决哈希冲突而存在的（“拉链法”解决冲突）。JDK1.8 以后在解决哈希冲突时有了较大的变化，当&lt;strong>链表长度大于阈值&lt;/strong>（&lt;strong>默认为 8&lt;/strong>）（将&lt;strong>链表转换成红黑树前&lt;/strong>会判断，如果&lt;strong>当前数组的长度小于 64&lt;/strong>，那么会选择&lt;strong>先进行数组扩容&lt;/strong>，而不是转换为红黑树）时，将链表转化为红黑树，以减少搜索时间&lt;/p></description></item><item><title>语法糖</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0011lysyntactic_sugar/</link><pubDate>Wed, 12 Oct 2022 17:36:26 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0011lysyntactic_sugar/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;p>语法糖（Syntactic Sugar）也称&lt;strong>糖衣语法&lt;/strong>，指的是在计算机语言中添加的某种语法，这种语法对语言的功能并没有影响，但是更方便程序员使用，简而言之，让程序更加&lt;strong>简洁&lt;/strong>，有更高的&lt;strong>可读性&lt;/strong>&lt;/p>
&lt;h2 id="java中有哪些语法糖">
 Java中有哪些语法糖
 &lt;a class="anchor" href="#java%e4%b8%ad%e6%9c%89%e5%93%aa%e4%ba%9b%e8%af%ad%e6%b3%95%e7%b3%96">#&lt;/a>
&lt;/h2>
&lt;p>Java&lt;strong>虚拟机并不支持&lt;/strong>这些语法糖，这些语法糖在&lt;strong>编译阶段就会被还原成简单的基础语法&lt;/strong>结构，这个过程就是解语法糖&lt;/p>
&lt;ul>
&lt;li>&lt;code>javac&lt;/code>命令可以将后缀为&lt;code>.java&lt;/code>的源文件编译为后缀名为&lt;code>.class&lt;/code>的&lt;strong>可以运行于Java虚拟机的字节码&lt;/strong>。其中，&lt;code>com.sun.tools.javac.main.JavaCompiler&lt;/code>的源码中，&lt;code>compile()&lt;/code>中有一个步骤就是调用&lt;code>desugar()&lt;/code>，这个方法就是负责&lt;strong>解语法糖&lt;/strong>的实现的&lt;/li>
&lt;li>Java中的语法糖，包括 &lt;strong>泛型&lt;/strong>、&lt;strong>变长参数&lt;/strong>、&lt;strong>条件编译&lt;/strong>、&lt;strong>自动拆装箱&lt;/strong>、&lt;strong>内部类&lt;/strong>等&lt;/li>
&lt;/ul>
&lt;h3 id="switch支持string与枚举">
 switch支持String与枚举
 &lt;a class="anchor" href="#switch%e6%94%af%e6%8c%81string%e4%b8%8e%e6%9e%9a%e4%b8%be">#&lt;/a>
&lt;/h3>
&lt;p>switch本身原本只支持基本类型，如int、char&lt;br>
&lt;img src="img/ly-20241212141927344.png" alt="ly-20241212141927344" />&lt;/p>
&lt;p>int是比较数值，而char则是比较其ascii码，所以其实对于编译器来说，都是int类型(整型)，比如&lt;code>byte&lt;/code>。&lt;code>short&lt;/code>，&lt;code>char&lt;/code>(ackii 码是整型)以及&lt;code>int&lt;/code>。
&lt;img src="img/ly-20241212141927646.png" alt="ly-20241212141927646" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141927801.png" alt="ly-20241212141927801" />
而对于enum类型，&lt;br>
&lt;img src="img/ly-20241212141927960.png" alt="ly-20241212141927960" />&lt;/p>
&lt;p>对于switch中使用String，则：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">switchDemoString&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (str) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//反编译之后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">switchDemoString&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">switchDemoString&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String args&lt;span style="color:#f92672">[]&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String s;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span>((s &lt;span style="color:#f92672">=&lt;/span> str).&lt;span style="color:#a6e22e">hashCode&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> 99162322:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(s.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> 113318802:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(s.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>即switch判断是通过**equals()&lt;strong>和&lt;/strong>hashCode()**方法来实现的&lt;/p></description></item><item><title>java_spi</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0010lyjava_spi/</link><pubDate>Wed, 12 Oct 2022 10:12:52 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0010lyjava_spi/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h3 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h3>
&lt;p>为了实现在&lt;strong>模块装配&lt;/strong>的时候&lt;strong>不用再程序里面动态指明&lt;/strong>，这就需要一种&lt;strong>服务发现&lt;/strong>机制。JavaSPI就是提供了这样的一个机制：&lt;strong>为某个接口寻找服务实现&lt;/strong>的机制。有点类似IoC的思想，将装配的控制权交到了程序之外&lt;/p>
&lt;h3 id="spi介绍">
 SPI介绍
 &lt;a class="anchor" href="#spi%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h3>
&lt;p>SPI，ServiceProviderInterface
使用SPI：Spring框架、数据库加载驱动、日志接口、以及Dubbo的扩展实现&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141926732.png" alt="ly-20241212141926732" />&lt;/p>
&lt;p>感觉下面这个图不太对，被调用方应该
一般&lt;strong>模块之间&lt;/strong>都是&lt;strong>通过接口&lt;/strong>进行通讯，&lt;/p>
&lt;blockquote>
&lt;p>当&lt;strong>实现方&lt;/strong>提供了&lt;strong>接口和实现&lt;/strong>，我们可以通过&lt;strong>调用实现方的接口&lt;/strong>从而拥有&lt;strong>实现方给我们提供的能力&lt;/strong>，这就是 API ，这种&lt;strong>接口和实现&lt;/strong>都是放在实现方的。&lt;/p>
&lt;p>当接口存在于&lt;strong>调用方&lt;/strong>这边时，就是 SPI ，由接口调用方确定接口规则，然后由不同的厂商去根据这个规则对这个接口进行实现，从而提供服务。[&lt;strong>可以理解成业务方，或者说使用方。它使用了这个接口，而且制定了接口规范，但是具体实现，由被调用方实现&lt;/strong>]&lt;/p>
&lt;p>我的理解：被调用方（提供接口的人），调用方（使用接口的人），但是其实这里只把调用方&amp;ndash;&amp;gt;使用接口的人 这个关系是对的。&lt;/p>
&lt;p>也就是说，正常情况下由被调用方自己提供接口和实现，即API。而现在，由调用方（这里的调用方其实可以理解成上面的被调用方），提供了接口还使用了接口，而由被调用方进行接口实现&lt;/p>
&lt;/blockquote>
&lt;h3 id="实战演示">
 实战演示
 &lt;a class="anchor" href="#%e5%ae%9e%e6%88%98%e6%bc%94%e7%a4%ba">#&lt;/a>
&lt;/h3>
&lt;p>SLF4J只是一个日志门面（接口），但是SLF4J的具体实现可以有多种，如：Logback/Log4j/Log4j2等等&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141927020.png" alt="ly-20241212141927020" />&lt;/p>
&lt;h4 id="简易版本">
 简易版本
 &lt;a class="anchor" href="#%e7%ae%80%e6%98%93%e7%89%88%e6%9c%ac">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>ServiceProviderInterface&lt;/p>
&lt;/li>
&lt;li>
&lt;p>目录结构&lt;/p>
&lt;pre tabindex="0">&lt;code>│ service-provider-interface.iml
│
├─.idea
│ │ .gitignore
│ │ misc.xml
│ │ modules.xml
│ └─ workspace.xml
│
└─src
 └─edu
 └─jiangxuan
 └─up
 └─spi
 Logger.java
 LoggerService.java
 Main.class
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>Logger接口，即SPI 服务提供者接口，后面的服务提供者要针对这个接口进行实现&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> edu.jiangxuan.up.spi;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">Logger&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">info&lt;/span>(String msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">debug&lt;/span>(String msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>LoggerService类，主要是为服务使用者（调用方）提供特定功能，这个类是实现JavaSPI机制的关键所在&lt;/p></description></item><item><title>unsafe类</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0009lyunsafe_class/</link><pubDate>Mon, 10 Oct 2022 17:10:27 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0009lyunsafe_class/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>sun.misc.Unsafe&lt;/code>&lt;/p>
&lt;p>提供&lt;strong>执行低级别&lt;/strong>、&lt;strong>不安全操作&lt;/strong>的方法，如&lt;strong>直接访问系统内存资源&lt;/strong>、&lt;strong>自主管理内存资源&lt;/strong>等，效率快，但由于有了操作内存空间的能力，会&lt;strong>增加指针问题风险&lt;/strong>。且这些功能的实现依赖于本地方法，Java代码中只是声明方法头，具体实现规则交给本地代码
&lt;img src="img/ly-20241212141925562.png" alt="ly-20241212141925562" />&lt;/p>
&lt;h3 id="为什么要使用本地方法">
 为什么要使用本地方法
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e4%bd%bf%e7%94%a8%e6%9c%ac%e5%9c%b0%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>需要用到Java中不具备的&lt;strong>依赖于操作系统&lt;/strong>的特性，跨平台的同时要实现&lt;strong>对底层控制&lt;/strong>&lt;/li>
&lt;li>对于其他语言已经完成的现成功能，可以使用Java调用&lt;/li>
&lt;li>对&lt;strong>时间敏感/性能要求&lt;/strong>非常高，有必要使用更为底层的语言&lt;/li>
&lt;/ul>
&lt;p>对于同一本地方法，不同的操作系统可能通过不同的方式来实现的&lt;/p>
&lt;h3 id="unsafe创建">
 Unsafe创建
 &lt;a class="anchor" href="#unsafe%e5%88%9b%e5%bb%ba">#&lt;/a>
&lt;/h3>
&lt;p>sun.misc.Unsafe部分源码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Unsafe&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 单例对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Unsafe theUnsafe;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ......
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#a6e22e">Unsafe&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//Sensitive : 敏感的 英[ˈsensətɪv]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@CallerSensitive&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Unsafe &lt;span style="color:#a6e22e">getUnsafe&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class var0 &lt;span style="color:#f92672">=&lt;/span> Reflection.&lt;span style="color:#a6e22e">getCallerClass&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 仅在引导类加载器`BootstrapClassLoader`加载时才合法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>VM.&lt;span style="color:#a6e22e">isSystemDomainLoader&lt;/span>(var0.&lt;span style="color:#a6e22e">getClassLoader&lt;/span>())) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SecurityException(&lt;span style="color:#e6db74">&amp;#34;Unsafe&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> theUnsafe;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会先判断当前类是否由&lt;strong>Bootstrap classloader&lt;/strong>加载。即只有&lt;strong>启动类加载器加载的类&lt;/strong>才能够调用Unsafe类中的方法&lt;/p>
&lt;p>如何使用&lt;code>Unsafe&lt;/code>这个类&lt;/p>
&lt;ol>
&lt;li>
&lt;p>利用反射获得Unsafe类中已经实例化完成的单例对象&lt;code>theUnsafe&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Unsafe &lt;span style="color:#a6e22e">reflectGetUnsafe&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Field field &lt;span style="color:#f92672">=&lt;/span> Unsafe.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getDeclaredField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;theUnsafe&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> field.&lt;span style="color:#a6e22e">setAccessible&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (Unsafe) field.&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">error&lt;/span>(e.&lt;span style="color:#a6e22e">getMessage&lt;/span>(), e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>通过Java命令行命令&lt;code>-Xbootclasspath/a&lt;/code>把&lt;strong>调用Unsafe相关方法的类A所在jar包路径追加到默认的bootstrap路径中&lt;/strong>，使得&lt;strong>A被引导类加载器加载&lt;/strong>&lt;/p></description></item><item><title>big_decimal</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0008lybig_decimal/</link><pubDate>Mon, 10 Oct 2022 14:56:26 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0008lybig_decimal/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h3 id="精度的丢失">
 精度的丢失
 &lt;a class="anchor" href="#%e7%b2%be%e5%ba%a6%e7%9a%84%e4%b8%a2%e5%a4%b1">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">float&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> 2.&lt;span style="color:#a6e22e">0f&lt;/span> &lt;span style="color:#f92672">-&lt;/span> 1.&lt;span style="color:#a6e22e">9f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">float&lt;/span> b &lt;span style="color:#f92672">=&lt;/span> 1.&lt;span style="color:#a6e22e">8f&lt;/span> &lt;span style="color:#f92672">-&lt;/span> 1.&lt;span style="color:#a6e22e">7f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(a);&lt;span style="color:#75715e">// 0.100000024&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(b);&lt;span style="color:#75715e">// 0.099999905&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(a &lt;span style="color:#f92672">==&lt;/span> b);&lt;span style="color:#75715e">// false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>为什么会有精度丢失的风险&lt;/p>
&lt;p>这个和计算机保存浮点数的机制有很大关系。我们知道计算机是&lt;strong>二进制&lt;/strong>的，而且计算机在&lt;strong>表示一个数字时，宽度是有限&lt;/strong>的，无限循环的小数存储在计算机时，&lt;strong>只能被截断&lt;/strong>，所以就会导致&lt;strong>小数精度发生损失&lt;/strong>的情况。这也就是解释了为什么浮点数没有办法用二进制精确表示&lt;/p>
&lt;/blockquote>
&lt;p>使用BigDecimal来定义浮点数的值，然后再进行浮点数的运算操作即可&lt;/p>
&lt;h3 id="bigdecimal常见方法">
 BigDecimal常见方法
 &lt;a class="anchor" href="#bigdecimal%e5%b8%b8%e8%a7%81%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>我们在使用 &lt;code>BigDecimal&lt;/code> 时，为了防止精度丢失，推荐使用它的&lt;code>BigDecimal(String val)&lt;/code>构造方法或者 &lt;code>BigDecimal.valueOf(double val)&lt;/code> 静态方法来创建对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>加减乘除&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>BigDecimal a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BigDecimal(&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BigDecimal b &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BigDecimal(&lt;span style="color:#e6db74">&amp;#34;0.9&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(a.&lt;span style="color:#a6e22e">add&lt;/span>(b));&lt;span style="color:#75715e">// 1.9&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(a.&lt;span style="color:#a6e22e">subtract&lt;/span>(b));&lt;span style="color:#75715e">// 0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(a.&lt;span style="color:#a6e22e">multiply&lt;/span>(b));&lt;span style="color:#75715e">// 0.90&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(a.&lt;span style="color:#a6e22e">divide&lt;/span>(b));&lt;span style="color:#75715e">// 无法除尽，抛出 ArithmeticException 异常&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(a.&lt;span style="color:#a6e22e">divide&lt;/span>(b, 2, RoundingMode.&lt;span style="color:#a6e22e">HALF_UP&lt;/span>));&lt;span style="color:#75715e">// 1.11&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用divide方法的时候，尽量使用3个参数版本（roundingMode.oldMode)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>保留规则&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> RoundingMode {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 2.5 -&amp;gt; 3 , 1.6 -&amp;gt; 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// -1.6 -&amp;gt; -2 , -2.5 -&amp;gt; -3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 UP(BigDecimal.&lt;span style="color:#a6e22e">ROUND_UP&lt;/span>), &lt;span style="color:#75715e">//数轴上靠近哪个取哪个&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 2.5 -&amp;gt; 2 , 1.6 -&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// -1.6 -&amp;gt; -1 , -2.5 -&amp;gt; -2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 DOWN(BigDecimal.&lt;span style="color:#a6e22e">ROUND_DOWN&lt;/span>), &lt;span style="color:#75715e">//数轴上离哪个远取哪个&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 &lt;span style="color:#75715e">// 2.5 -&amp;gt; 3 , 1.6 -&amp;gt; 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// -1.6 -&amp;gt; -1 , -2.5 -&amp;gt; -2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 CEILING(BigDecimal.&lt;span style="color:#a6e22e">ROUND_CEILING&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 &lt;span style="color:#75715e">// 2.5 -&amp;gt; 2 , 1.6 -&amp;gt; 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// -1.6 -&amp;gt; -2 , -2.5 -&amp;gt; -3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 FLOOR(BigDecimal.&lt;span style="color:#a6e22e">ROUND_FLOOR&lt;/span>), &lt;span style="color:#75715e">////数轴上 正数：远离哪个取哪个 负数：靠近哪个取哪个&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	&lt;span style="color:#75715e">// 2.5 -&amp;gt; 3 , 1.6 -&amp;gt; 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// -1.6 -&amp;gt; -2 , -2.5 -&amp;gt; -3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 HALF_UP(BigDecimal.&lt;span style="color:#a6e22e">ROUND_HALF_UP&lt;/span>),&lt;span style="color:#75715e">// 数轴上 正数：靠近哪个取哪个 负数：远离哪个取哪个&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//......&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>大小比较&lt;br>
使用compareTo&lt;/p></description></item><item><title>Java代理模式</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0007lyproxy_pattern/</link><pubDate>Mon, 10 Oct 2022 14:30:02 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0007lyproxy_pattern/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h3 id="代理模式">
 代理模式
 &lt;a class="anchor" href="#%e4%bb%a3%e7%90%86%e6%a8%a1%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;p>使用代理对象来代替对真实对象的访问，就可以在&lt;strong>不修改原目标对象的前提下提供额外的功能操作&lt;/strong>，&lt;strong>扩展目标对象的功能&lt;/strong>，即在目标对象的&lt;strong>某个方法执行前后可以增加一些自定义的操作&lt;/strong>&lt;/p>
&lt;h3 id="静态代理">
 静态代理
 &lt;a class="anchor" href="#%e9%9d%99%e6%80%81%e4%bb%a3%e7%90%86">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>&lt;strong>静态代理中，我们对目标对象的每个方法的增强都是手动完成的（*后面会具体演示代码*），非常不灵活（*比如接口一旦新增加方法，目标对象和代理对象都要进行修改*）且麻烦(*需要对每个目标类都单独写一个代理类*）。&lt;/strong> 实际应用场景非常非常少，日常开发几乎看不到使用静态代理的场景。&lt;/p>
&lt;p>上面我们是从实现和应用角度来说的静态代理，从 JVM 层面来说， &lt;strong>静态代理在编译时就将接口、实现类、代理类这些都变成了一个个实际的 class 文件。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>定义一个接口及其实现类；&lt;/li>
&lt;li>创建一个代理类同样实现这个接口&lt;/li>
&lt;li>将目标对象注入进代理类，然后在代理类的对应方法调用目标类中的对应方法。这样的话，我们就可以通过代理类屏蔽对目标对象的访问，并且可以在目标方法执行前后做一些自己想做的事情。&lt;/li>
&lt;/ol>
&lt;p>代码:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//定义发送短信的接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">SmsService&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String &lt;span style="color:#a6e22e">send&lt;/span>(String message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//实现发送短信的接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SmsServiceImpl&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> SmsService {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">send&lt;/span>(String message) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;send message:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//创建代理类并同样实现发送短信的接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SmsProxy&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> SmsService {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> SmsService smsService;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">SmsProxy&lt;/span>(SmsService smsService) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">smsService&lt;/span> &lt;span style="color:#f92672">=&lt;/span> smsService;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">send&lt;/span>(String message) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//调用方法之前，我们可以添加自己的操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;before method send()&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smsService.&lt;span style="color:#a6e22e">send&lt;/span>(message);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//调用方法之后，我们同样可以添加自己的操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;after method send()&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//实际使用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Main&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SmsService smsService &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SmsServiceImpl();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SmsProxy smsProxy &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SmsProxy(smsService);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> smsProxy.&lt;span style="color:#a6e22e">send&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;java&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//打印结果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>before method &lt;span style="color:#a6e22e">send&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>send message:java
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>after method &lt;span style="color:#a6e22e">send&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="动态代理">
 动态代理
 &lt;a class="anchor" href="#%e5%8a%a8%e6%80%81%e4%bb%a3%e7%90%86">#&lt;/a>
&lt;/h3>
&lt;p>从JVM角度来说，动态代理是在&lt;strong>运行时动态生成类字节码&lt;/strong>，并&lt;strong>加载到JVM中的&lt;/strong>。 SpringAOP和RPC等框架都实现了动态代理&lt;/p></description></item><item><title>java-reflex</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0006lyreflex/</link><pubDate>Mon, 10 Oct 2022 11:27:04 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0006lyreflex/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h3 id="何为反射">
 何为反射
 &lt;a class="anchor" href="#%e4%bd%95%e4%b8%ba%e5%8f%8d%e5%b0%84">#&lt;/a>
&lt;/h3>
&lt;p>赋予了我们在&lt;strong>运行时分析类&lt;/strong>以及&lt;strong>执行类中方法&lt;/strong>的能力；运行中&lt;strong>获取任意一个类的所有属性&lt;/strong>和&lt;strong>方法&lt;/strong>，以及&lt;strong>调用这些方法&lt;/strong>和&lt;strong>属性&lt;/strong>&lt;/p>
&lt;h3 id="应用场景">
 应用场景
 &lt;a class="anchor" href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;p>Spring/Spring Boot 、MyBatis等框架都用了大量反射机制，以下为&lt;/p>
&lt;ul>
&lt;li>
&lt;p>JDK动态代理&lt;/p>
&lt;ul>
&lt;li>
&lt;p>接口及实现类&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">package&lt;/span> proxy;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">Car&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//实现类&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">package&lt;/span> proxy;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CarImpl&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Car{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;car running&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>代理类 及main方法使用
&lt;code>[ˌɪnvəˈkeɪʃn] 祈祷&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> proxy;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> java.lang.reflect.InvocationHandler;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">import&lt;/span> java.lang.reflect.Method;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//JDK动态代理代理类 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CarHandler&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> InvocationHandler{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//真实类的对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Object car;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//构造方法赋值给真实的类&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">CarHandler&lt;/span>(Object obj){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">car&lt;/span> &lt;span style="color:#f92672">=&lt;/span> obj;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//代理类执行方法时，调用的是这个方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Object &lt;span style="color:#a6e22e">invoke&lt;/span>(Object proxy, Method method, Object&lt;span style="color:#f92672">[]&lt;/span> args) &lt;span style="color:#66d9ef">throws&lt;/span> Throwable {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;before&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object res &lt;span style="color:#f92672">=&lt;/span> method.&lt;span style="color:#a6e22e">invoke&lt;/span>(car, args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;after&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> res;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//main方法使用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> proxy;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> java.lang.reflect.Proxy;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CarImpl carImpl &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CarImpl();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CarHandler carHandler &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CarHandler(carImpl);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Car proxy &lt;span style="color:#f92672">=&lt;/span> (Car)Proxy.&lt;span style="color:#a6e22e">newProxyInstance&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main.&lt;span style="color:#a6e22e">class&lt;/span>.&lt;span style="color:#a6e22e">getClassLoader&lt;/span>(), &lt;span style="color:#75715e">//第一个参数，获取ClassLoader&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> carImpl.&lt;span style="color:#a6e22e">getClass&lt;/span>().&lt;span style="color:#a6e22e">getInterfaces&lt;/span>(), &lt;span style="color:#75715e">//第二个参数，获取被代理类的接口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> carHandler);&lt;span style="color:#75715e">//第三个参数，一个InvocationHandler对象，表示的是当我这个动态代理对象在调用方法的时候，会关联到哪一个InvocationHandler对象上&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proxy.&lt;span style="color:#a6e22e">run&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>before
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>car running
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>after
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Cglib动态代理（没有实现接口的Car&lt;/p></description></item><item><title>Java序列化详解</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0005lyserialize/</link><pubDate>Mon, 10 Oct 2022 10:39:01 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0005lyserialize/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h3 id="什么是序列化什么是反序列化">
 什么是序列化？什么是反序列化
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%ba%8f%e5%88%97%e5%8c%96%e4%bb%80%e4%b9%88%e6%98%af%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96">#&lt;/a>
&lt;/h3>
&lt;p>当需要&lt;strong>持久化Java对象&lt;/strong>，比如&lt;strong>将Java对象保存在文件&lt;/strong>中、或者&lt;strong>在网络中传输Java对象&lt;/strong>，这些场景都需要用到序列化&lt;/p>
&lt;p>即：&lt;/p>
&lt;ul>
&lt;li>序列化：将&lt;strong>数据结构/对象&lt;/strong>，&lt;strong>转换成二进制字节流&lt;/strong>&lt;/li>
&lt;li>反序列化：将在&lt;strong>序列化过程中所生成的二进制字节流&lt;/strong>，&lt;strong>转换成数据结构或者对象&lt;/strong>的过程&lt;/li>
&lt;/ul>
&lt;p>对于Java，序列化的是对象(Object)，也就是实例化后的类(Class)&lt;/p>
&lt;p>序列化的目的，是通过网络传输对象，或者说是将对象存储到文件系统、数据库、内存中，如图：
&lt;img src="img/ly-20241212141924954.png" alt="ly-20241212141924954" />&lt;/p>
&lt;h3 id="实际场景">
 实际场景
 &lt;a class="anchor" href="#%e5%ae%9e%e9%99%85%e5%9c%ba%e6%99%af">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>对象在&lt;strong>进行网络传输（比如远程方法调用 RPC 的时候）之前&lt;/strong>需要先被序列化，&lt;strong>接收到&lt;/strong>序列化的对象&lt;strong>之后&lt;/strong>需要再进行&lt;strong>反序列化&lt;/strong>；&lt;/li>
&lt;li>将对象&lt;strong>存储到文件中&lt;/strong>的时候需要进行序列化，将对象从文件中读取出来需要进行反序列化。&lt;/li>
&lt;li>将&lt;strong>对象存储到缓存数据库（如 Redis）时需要用到序列化&lt;/strong>，将对象&lt;strong>从缓存数据库中读取&lt;/strong>出来需要反序列化&lt;/li>
&lt;/ul>
&lt;h3 id="序列化协议对于tcpip-4层模型的哪一层">
 序列化协议对于TCP/IP 4层模型的哪一层
 &lt;a class="anchor" href="#%e5%ba%8f%e5%88%97%e5%8c%96%e5%8d%8f%e8%ae%ae%e5%af%b9%e4%ba%8etcpip-4%e5%b1%82%e6%a8%a1%e5%9e%8b%e7%9a%84%e5%93%aa%e4%b8%80%e5%b1%82">#&lt;/a>
&lt;/h3>
&lt;p>4层包括，网络接口层，网络层，传输层，应用层
如下图所示：&lt;br>
&lt;img src="img/ly-20241212141925161.png" alt="ly-20241212141925161" />&lt;/p>
&lt;p>OSI七层协议模型中，表示层就是&lt;strong>对应用层的用户数据，进行处理转换成二进制流&lt;/strong>；反过来的话，就是&lt;strong>将二进制流转换成应用层的用户数据&lt;/strong>，即序列化和反序列化，&lt;br>
因为，OSI 七层协议模型中的&lt;strong>应用层、表示层和会话层&lt;/strong>对应的都是 &lt;strong>TCP/IP 四层模型&lt;/strong>中的&lt;strong>应用层&lt;/strong>，所以&lt;strong>序列化协议&lt;/strong>属于 &lt;strong>TCP/IP 协议应用层&lt;/strong>的一部分&lt;/p>
&lt;h3 id="常见序列化协议对比">
 常见序列化协议对比
 &lt;a class="anchor" href="#%e5%b8%b8%e8%a7%81%e5%ba%8f%e5%88%97%e5%8c%96%e5%8d%8f%e8%ae%ae%e5%af%b9%e6%af%94">#&lt;/a>
&lt;/h3>
&lt;p>kryo 英音 [k&amp;rsquo;rɪəʊ] ，除了JDK自带的序列化，还有&lt;strong>hessian&lt;/strong>、&lt;strong>kryo&lt;/strong>、&lt;strong>protostuff&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>JDK自带的序列化，只需要实现java.io.Serializable接口即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@AllArgsConstructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@NoArgsConstructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Getter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Builder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@ToString&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">RpcRequest&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Serializable {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> serialVersionUID &lt;span style="color:#f92672">=&lt;/span> 1905122041950251207L;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String requestId;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String interfaceName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String methodName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Object&lt;span style="color:#f92672">[]&lt;/span> parameters;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;[]&lt;/span> paramTypes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> RpcMessageTypeEnum rpcMessageTypeEnum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>serialVersionUID用于版本控制，会被写入二进制序列，反序列化如果发现和当前类不一致则会抛出InvalidClassException异常。一般不使用JDK自带序列化，1 不支持跨语言调用 2 性能差，序列化之后字节数组体积过大&lt;/p></description></item><item><title>为什么Java中只有值传递</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0004lypassbyvalue/</link><pubDate>Sun, 09 Oct 2022 11:30:05 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0004lypassbyvalue/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>形参&amp;amp;&amp;amp;实参&lt;/p>
&lt;ul>
&lt;li>
&lt;p>实参(&lt;strong>实际参数，Arguments&lt;/strong>)，用于传递给函数/方法的参数，必须有确定的值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>形参(&lt;strong>形式参数，Parameters&lt;/strong>)，用于定义函数/方法，接收实参，不需要有确定的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>String hello &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// hello 为实参&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sayHello(hello);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// str 为形参&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">sayHello&lt;/span>(String str) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(str);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>值传递&amp;amp;&amp;amp;引用传递&lt;/p>
&lt;ul>
&lt;li>程序设计将实参传递给方法的方式分为两种，值传递：方法&lt;strong>接收实参值的拷&lt;/strong>贝，会&lt;strong>创建副本&lt;/strong>；引用传递：&lt;strong>方法接受的是实参所引用的对象在堆中的地址&lt;/strong>，不会创建副本，对形参的修改将影响到实参&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Java中只有值传递&lt;/strong>，原因：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>传递基本类型参数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> num1 &lt;span style="color:#f92672">=&lt;/span> 10;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> num2 &lt;span style="color:#f92672">=&lt;/span> 20;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> swap(num1, num2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;num1 = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> num1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;num2 = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> num2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">swap&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> a, &lt;span style="color:#66d9ef">int&lt;/span> b) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> temp &lt;span style="color:#f92672">=&lt;/span> a;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &lt;span style="color:#f92672">=&lt;/span> b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b &lt;span style="color:#f92672">=&lt;/span> temp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;a = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;b = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> b);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> 20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b &lt;span style="color:#f92672">=&lt;/span> 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num1 &lt;span style="color:#f92672">=&lt;/span> 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>num2 &lt;span style="color:#f92672">=&lt;/span> 20
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>传递引用类型参数 1&lt;/p></description></item><item><title>javaGuide基础3</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0003lyjava_guide_basic_3/</link><pubDate>Sat, 08 Oct 2022 15:23:15 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0003lyjava_guide_basic_3/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="异常">
 异常
 &lt;a class="anchor" href="#%e5%bc%82%e5%b8%b8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>unchecked exceptions (运行时异常)&lt;br>
checked exceptions (非运行时异常，编译异常）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java异常类层次结构图
&lt;img src="img/ly-20241212141923567.png" alt="ly-20241212141923567" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141923848.png" alt="ly-20241212141923848" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Exception和Error有什么区别&lt;/p>
&lt;ul>
&lt;li>
&lt;p>除了RuntimeException及其子类以外，其他的Exception类及其子类都属于受检查异常&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Exception : 程序本身可以处理的异常（可通过catch捕获）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Checked Exception ，受检查异常，必须处理(&lt;strong>catch 或者 throws ，否则编译器通过不了&lt;/strong>)
IOException，ClassNotFoundException，SQLException，FileNotFoundException&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Unchecked Exception ， 不受检查异常 ， 可以不处理&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>（算数异常，类型转换异常，不合法的线程状态异常，下标超出异常，空指针异常，参数类型异常，数字格式异常，不支持操作异常）
ArithmeticException，ClassCastException，IllegalThreadStateException，IndexOutOfBoundsException&lt;/p>
&lt;pre>&lt;code> NullPointerException，IllegalArgumentException，NumberFormatException，SecurityException，UnsupportedOperationException 


 ```illegal 英[ɪˈliːɡl] 非法的``` 
 ```Arithmetic 英[əˈrɪθmətɪk] 算术```
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>
&lt;p>Error： &lt;strong>程序无法处理&lt;/strong>的错误 ，不建议通过catch 捕获，已办错误发生时JVM会选择线程终止&lt;br>
OutOfMemoryError （堆，Java heap space），VirtualMachineError，StackOverFlowError，AssertionError （断言），IOError&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Throwable类常用方法&lt;/p>
&lt;ul>
&lt;li>String getMessage() //简要描述&lt;/li>
&lt;li>String toString() //详细&lt;/li>
&lt;li>String getLocalizedMessage() //本地化信息，如果子类(Throwable的子类)没有覆盖该方法，则与gtMessage() 结果一样&lt;/li>
&lt;li>void printStackTrace() //打印Throwable对象封装的异常信息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>try-catch-finally如何使用
try后面必须要有catch或者finally；无论是否捕获异常，finally都会执行；当在 &lt;code>try&lt;/code> 块或 &lt;code>catch&lt;/code> 块中遇到 &lt;code>return&lt;/code> 语句时，&lt;code>finally&lt;/code> 语句块将在方法返回之前被执行。&lt;/p></description></item><item><title>javaGuide基础2</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0002lyjava_guide_basic_2/</link><pubDate>Thu, 29 Sep 2022 10:16:13 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0002lyjava_guide_basic_2/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="面向对象基础">
 面向对象基础
 &lt;a class="anchor" href="#%e9%9d%a2%e5%90%91%e5%af%b9%e8%b1%a1%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>区别&lt;/p>
&lt;ul>
&lt;li>面向&lt;strong>过程&lt;/strong>把解决问题的&lt;strong>过程拆成一个个方法&lt;/strong>，通过一个个方法的执行解决问题。&lt;/li>
&lt;li>面向对象会&lt;strong>先抽象出对象&lt;/strong>，然后&lt;strong>用对象执行方法&lt;/strong>的方式解决问题。&lt;/li>
&lt;li>面向对象编程 &lt;strong>易维护&lt;/strong>、&lt;strong>易复用&lt;/strong>、&lt;strong>易扩展&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>对象实例与对象引用的不同&lt;br>
new 运算符，new 创建对象实例（&lt;strong>对象实例在堆&lt;/strong>内存中），对象引用指向对象实例（&lt;strong>对象引用存放在栈&lt;/strong>内存中）。&lt;/p>
&lt;p>一个对象引用可以指向 0 个或 1 个对象（一根绳子可以不系气球，也可以系一个气球）;一个对象可以有 n 个引用指向它（可以用 n 条绳子系住一个气球）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对象的相等一般比较的是&lt;strong>内存中存放的内容&lt;/strong>是否相等；引用相等一般比较的是他们指向的&lt;strong>内存地址是否相等&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果一个类没有声明构造方法，该程序能正确执行吗?
如果我们自己添加了类的构造方法（无论是否有参），Java 就不会再添加默认的无参数的构造方法了&lt;/p>
&lt;ul>
&lt;li>构造方法特点：名字与类名相同；没有返回值但不能用void声明构造函数；生成类的对象时自动执行&lt;/li>
&lt;li>构造方法&lt;strong>不能重写&lt;/strong>(override)，但&lt;strong>能重载&lt;/strong> (overload)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>面向对象三大特征&lt;/p>
&lt;ul>
&lt;li>
&lt;p>封装&lt;br>
把一个对象的状态信息(属性)&lt;strong>隐藏在对象内部&lt;/strong>，&lt;strong>不允许直接访问&lt;/strong>，但提供可以被外界访问的方法来操作属性&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Student&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> id;&lt;span style="color:#75715e">//id属性私有化&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String name;&lt;span style="color:#75715e">//name属性私有化&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//获取id的方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">getId&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//设置id的方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setId&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> id) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">id&lt;/span> &lt;span style="color:#f92672">=&lt;/span> id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//获取name的方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">getName&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//设置name的方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">setName&lt;/span>(String name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>继承&lt;br>
不通类型的对象，相互之间有一定数量的共同点，同时每个对象定义了额外的特性使得他们与众不同。继承是&lt;strong>使用已存在的类的定义作为基础&lt;/strong>建立新类的技术&lt;/p></description></item><item><title>javaGuide基础1</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0001lyjava_guide_basic_1/</link><pubDate>Wed, 28 Sep 2022 10:51:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/java_guide/java/Basic/ly0001lyjava_guide_basic_1/</guid><description>&lt;blockquote>
&lt;p>转载自https://github.com/Snailclimb/JavaGuide （添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h2 id="基础概念及常识">
 基础概念及常识
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e6%a6%82%e5%bf%b5%e5%8f%8a%e5%b8%b8%e8%af%86">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Java语言特点&lt;/p>
&lt;ul>
&lt;li>面向对象（封装、继承、多态）&lt;/li>
&lt;li>平台无关性（Java虚拟机）&lt;/li>
&lt;li>等等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>JVM并非只有一种，只要满足JVM规范，可以开发自己专属JVM&lt;/p>
&lt;/li>
&lt;li>
&lt;p>JDK与JRE&lt;/p>
&lt;ul>
&lt;li>JDK，JavaDevelopmentKit，包含JRE，还有编译器（javac）和工具（如javadoc、jdb）。能够创建和编译程序&lt;/li>
&lt;li>JRE，Java运行时环境，包括Java虚拟机、Java类库，及Java命令等。但是不能创建新程序&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>字节码，采用字节码的好处&lt;/p>
&lt;ul>
&lt;li>Java中，JVM可以理解的代码称为字节码（.class文件)，不面向任何处理器，只面向虚拟机&lt;/li>
&lt;li>Java程序从源代码到运行的过程
&lt;img src="img/ly-20241212141922068.png" alt="ly-20241212141922068" />
&lt;ul>
&lt;li>java代码必须先编译为字节码，之后呢，.class&amp;ndash;&amp;gt;机器码，这里JVM类加载器先加载字节码文件，然后通过解释器进行解释执行（也就是字节码需要由Java解释器来解释执行）&lt;/li>
&lt;li>Java解释器是JVM的一部分&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>编译与解释并存&lt;/p>
&lt;ul>
&lt;li>编译型：通过编译器将源代码一次性翻译成可被该平台执行的机器码，执行快、开发效率低&lt;/li>
&lt;li>解释型：通过解释器一句一句的将代码解释成机器代码后执行，执行慢，开发效率高&lt;/li>
&lt;li>如图
&lt;img src="img/ly-20241212141922280.png" alt="ly-20241212141922280" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>为什么说 Java 语言“编译与解释并存”？&lt;/strong>&lt;/p>
&lt;p>这是因为 Java 语言既具有编译型语言的特征，也具有解释型语言的特征。因为 Java 程序要经过&lt;strong>先编译，后解释&lt;/strong>两个步骤，由 Java 编写的程序需要先经过编译步骤，生成字节码（&lt;code>.class&lt;/code> 文件），&lt;strong>这种字节码必须由 Java 解释器来解释执行&lt;/strong>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java与C++区别&lt;/p>
&lt;ul>
&lt;li>没学过C++，Java不提供指针直接访问内存&lt;/li>
&lt;li>Java为单继承；但是Java支持继承多接口&lt;/li>
&lt;li>Java有自动内存管理垃圾回收机制（GC），不需要程序员手动释放无用内存&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>注释分为 单行注释、多行注释、文档注释
&lt;img src="img/ly-20241212141922440.png" alt="ly-20241212141922440" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>标识符与关键字
标识符即名字，关键字则是被赋予特殊含义的标识符&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自增自减运算符
当 &lt;code>b = ++a&lt;/code> 时，先自增（自己增加 1），再赋值（赋值给 b）；当 &lt;code>b = a++&lt;/code> 时，先赋值(赋值给 b)，再自增（自己增加 1）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>continue/break/return&lt;/p>
&lt;ul>
&lt;li>&lt;code>continue&lt;/code> ：指跳出当前的这一次循环，继续下一次循环。&lt;/li>
&lt;li>&lt;code>break&lt;/code> ：指跳出整个循环体，继续执行循环下面的语句。&lt;/li>
&lt;li>&lt;code>return&lt;/code> 用于跳出所在方法，结束该方法的运行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>变量&lt;/p>
&lt;ul>
&lt;li>成员变量和局部变量
&lt;ul>
&lt;li>成员变量可以被 &lt;code>public&lt;/code>,&lt;code>private&lt;/code>,&lt;code>static&lt;/code> 等修饰符所修饰，而局部变量不能被访问控制修饰符及 &lt;code>static&lt;/code> 所修饰；但是，成员变量和局部变量都能被 &lt;code>final&lt;/code> 所修饰&lt;/li>
&lt;li>从变量在内存中的存储方式来看,如果成员变量是使用 &lt;code>static&lt;/code> 修饰的，那么这个成员变量是属于类的，如果没有使用 &lt;code>static&lt;/code> 修饰，这个成员变量是属于实例的。而对象存在于堆内存，局部变量则存在于栈内存。&lt;/li>
&lt;li>从变量在内存中的生存时间上看，成员变量是对象的一部分，它随着对象的创建而存在，而局部变量随着方法的调用而自动生成，随着方法的调用结束而消亡（即方法栈弹出后消亡）。&lt;/li>
&lt;li>final必须显示赋初始值，其他都自动以类型默认值赋值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>静态变量：被类所有实例共享&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>字符型常量与字符串常量区别&lt;/p></description></item><item><title>作用域及事务</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/ssm/scope_transaction/</link><pubDate>Fri, 23 Sep 2022 13:37:38 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/ssm/scope_transaction/</guid><description>&lt;h2 id="四种作用域">
 四种作用域
 &lt;a class="anchor" href="#%e5%9b%9b%e7%a7%8d%e4%bd%9c%e7%94%a8%e5%9f%9f">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>singleton：默认值，当IOC容器一创建就会创建bean实例，而且是单例的，每次得到的是同一个&lt;/li>
&lt;li>prototype：原型的，IOC容器创建时不再创建bean实例。每次调用getBean方法时再实例化该bean（每次都会进行实例化）&lt;/li>
&lt;li>request：每次请求会实例化一个bean&lt;/li>
&lt;li>session：在一次会话中共享一个bean&lt;/li>
&lt;/ul>
&lt;h2 id="事务">
 事务
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1">#&lt;/a>
&lt;/h2>
&lt;h3 id="事务是什么">
 事务是什么
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e6%98%af%e4%bb%80%e4%b9%88">#&lt;/a>
&lt;/h3>
&lt;p>逻辑上的一组操作，要么都执行，要么都不执行&lt;/p>
&lt;h3 id="事务的特性">
 事务的特性
 &lt;a class="anchor" href="#%e4%ba%8b%e5%8a%a1%e7%9a%84%e7%89%b9%e6%80%a7">#&lt;/a>
&lt;/h3>
&lt;p>ACID&lt;/p>
&lt;ul>
&lt;li>Atomicity &lt;code>/ˌætəˈmɪsəti/&lt;/code>原子性 , 要么全部成功，要么全部失败&lt;/li>
&lt;li>Consistency &lt;code>/kənˈsɪstənsi/&lt;/code> 一致性 , 数据库的完整性&lt;/li>
&lt;li>Isolation &lt;code>/ˌaɪsəˈleɪʃn/&lt;/code> 隔离性 , 数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致 , 这里涉及到事务隔离级别&lt;/li>
&lt;li>Durability &lt;code>/ˌdjʊərəˈbɪləti/&lt;/code> 持久性 , 事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失&lt;/li>
&lt;/ul>
&lt;h3 id="spring支持两种方式的事务管理">
 Spring支持两种方式的事务管理
 &lt;a class="anchor" href="#spring%e6%94%af%e6%8c%81%e4%b8%a4%e7%a7%8d%e6%96%b9%e5%bc%8f%e7%9a%84%e4%ba%8b%e5%8a%a1%e7%ae%a1%e7%90%86">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>编程式事务管理
&lt;code>/ˈeksɪkjuːt/&lt;/code> execute&lt;br>
使用transactionTemplate&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> TransactionTemplate transactionTemplate;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">testTransaction&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> transactionTemplate.&lt;span style="color:#a6e22e">execute&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> TransactionCallbackWithoutResult() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">protected&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">doInTransactionWithoutResult&lt;/span>(TransactionStatus transactionStatus) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// .... 业务代码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//回滚&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> transactionStatus.&lt;span style="color:#a6e22e">setRollbackOnly&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用transactionManager&lt;/p></description></item><item><title>成员变量与局部变量</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/basics/member_variables_and_local_variables/</link><pubDate>Fri, 23 Sep 2022 10:31:44 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/basics/member_variables_and_local_variables/</guid><description>&lt;h2 id="代码">
 代码
 &lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> s;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> j;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> j) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Exam5 obj1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Exam5();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Exam5 obj2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Exam5();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> obj1.&lt;span style="color:#a6e22e">test&lt;/span>(10);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> obj1.&lt;span style="color:#a6e22e">test&lt;/span>(20);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> obj2.&lt;span style="color:#a6e22e">test&lt;/span>(30);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(obj1.&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> obj1.&lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> obj1.&lt;span style="color:#a6e22e">s&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(obj2.&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> obj2.&lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;,&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> obj2.&lt;span style="color:#a6e22e">s&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行结果">
 运行结果
 &lt;a class="anchor" href="#%e8%bf%90%e8%a1%8c%e7%bb%93%e6%9e%9c">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>2,1,5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1,1,5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;h3 id="就近原则">
 就近原则
 &lt;a class="anchor" href="#%e5%b0%b1%e8%bf%91%e5%8e%9f%e5%88%99">#&lt;/a>
&lt;/h3>
&lt;p>代码中有很多修改变量的语句，下面是用就近原则+作用域分析的图
&lt;img src="img/ly-20241212141838186.png" alt="ly-20241212141838186" />&lt;/p></description></item><item><title>递归与迭代</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/basics/recursion_and_iteration/</link><pubDate>Thu, 22 Sep 2022 21:20:07 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/basics/recursion_and_iteration/</guid><description>&lt;h2 id="编程题">
 编程题
 &lt;a class="anchor" href="#%e7%bc%96%e7%a8%8b%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;p>有n步台阶，一次只能上1步或2步，共有多少种走法&lt;/p>
&lt;h3 id="分析">
 分析
 &lt;a class="anchor" href="#%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>分析&lt;br>
n = 1，1步 f(1) = 1&lt;br>
n = 2, 两个1步,2步 f(2) = 2&lt;br>
n = 3, 分两种情况： 最后1步是2级台阶/最后1步是1级台阶，
即 f(3) = f(1)+f(2)
n = 4, 分两种情况： 最后1步是2级台阶/最后1步是1级台阶，
即f(4) = f(2)+f(3)&lt;/p>
&lt;p>也就是说，不管有几(n)个台阶，总要分成两种情况：最后1步是2级台阶/最后1步是1级台阶，即 f(n)= f(n-2) + f(n-1)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="递归">
 递归
 &lt;a class="anchor" href="#%e9%80%92%e5%bd%92">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">f&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> n){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(n&lt;span style="color:#f92672">==&lt;/span>1 &lt;span style="color:#f92672">||&lt;/span> n&lt;span style="color:#f92672">==&lt;/span>2){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> n;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> f(n&lt;span style="color:#f92672">-&lt;/span>2)&lt;span style="color:#f92672">+&lt;/span>f(n&lt;span style="color:#f92672">-&lt;/span>1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(f(1)); &lt;span style="color:#75715e">//1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(f(2)); &lt;span style="color:#75715e">//2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(f(3)); &lt;span style="color:#75715e">//3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(f(4)); &lt;span style="color:#75715e">//5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(f(5)); &lt;span style="color:#75715e">//8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>debug调试
方法栈
f(4)&amp;mdash;-&amp;gt;分解成f(2)+f(3)
f(2)&amp;mdash;返回-
f(3)&amp;mdash;f(2)返回&amp;mdash;f(1)返回 【f(3)分解成f(2)和f(1)】
方法栈的个数：
&lt;img src="img/ly-20241212141840077.png" alt="ly-20241212141840077" />&lt;/li>
&lt;/ul>
&lt;h3 id="使用循环">
 使用循环
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e5%be%aa%e7%8e%af">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">loop&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> n){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (n &lt;span style="color:#f92672">&amp;lt;&lt;/span> 1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IllegalArgumentException(n &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;不能小于1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (n &lt;span style="color:#f92672">==&lt;/span> 1 &lt;span style="color:#f92672">||&lt;/span> n &lt;span style="color:#f92672">==&lt;/span> 2) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> n;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> one&lt;span style="color:#f92672">=&lt;/span>2;&lt;span style="color:#75715e">//最后只走1步，会有2种走法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> two&lt;span style="color:#f92672">=&lt;/span>1;&lt;span style="color:#75715e">//最后走2步，会有1种走法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> sum&lt;span style="color:#f92672">=&lt;/span>0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>3;i&lt;span style="color:#f92672">&amp;lt;=&lt;/span>n;i&lt;span style="color:#f92672">++&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//最后跨两级台阶+最后跨一级台阶的走法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sum&lt;span style="color:#f92672">=&lt;/span>two&lt;span style="color:#f92672">+&lt;/span>one;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> two&lt;span style="color:#f92672">=&lt;/span>one;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> one&lt;span style="color:#f92672">=&lt;/span>sum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212141840386.png" alt="ly-20241212141840386" />&lt;/p></description></item><item><title>方法的参数传递机制</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/basics/method_parameter_passing_mechanism/</link><pubDate>Thu, 22 Sep 2022 10:24:36 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/basics/method_parameter_passing_mechanism/</guid><description>&lt;h2 id="代码">
 代码
 &lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Exam4&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String str &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Integer num &lt;span style="color:#f92672">=&lt;/span> 2;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> arr &lt;span style="color:#f92672">=&lt;/span> {1, 2, 3, 4, 5};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MyData my &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> MyData();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> change(i, str, num, arr, my);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;i = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;str = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> str);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;num = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> num);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;arr = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> Arrays.&lt;span style="color:#a6e22e">toString&lt;/span>(arr));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;my.a = &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> my.&lt;span style="color:#a6e22e">a&lt;/span>); 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">change&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> j, String s, Integer n, &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> a,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MyData m) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> j&lt;span style="color:#f92672">+=&lt;/span>1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s&lt;span style="color:#f92672">+=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;world&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n&lt;span style="color:#f92672">+=&lt;/span>1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]+=&lt;/span>1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> m.&lt;span style="color:#a6e22e">a&lt;/span>&lt;span style="color:#f92672">+=&lt;/span>1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>结果&lt;/p></description></item><item><title>类、实例初始化</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/basics/class_and_instance_initialization/</link><pubDate>Thu, 22 Sep 2022 08:50:23 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/basics/class_and_instance_initialization/</guid><description>&lt;h2 id="代码">
 代码
 &lt;a class="anchor" href="#%e4%bb%a3%e7%a0%81">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Son&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Father{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>test();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> j&lt;span style="color:#f92672">=&lt;/span>method();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">static&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(6)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Son(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(7)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(8)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(9)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">method&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(10)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		Son s1&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> Son();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		Son s2&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> Son();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Father&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>test();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> j&lt;span style="color:#f92672">=&lt;/span>method();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">static&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(1)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Father(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(2)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(3)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(4)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">method&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">print&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;(5)&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> 1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>输出：&lt;/p></description></item><item><title>单例设计模式</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/basics/singleton_design_pattern/</link><pubDate>Wed, 21 Sep 2022 14:22:44 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/basics/singleton_design_pattern/</guid><description>&lt;h2 id="特点">
 特点
 &lt;a class="anchor" href="#%e7%89%b9%e7%82%b9">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>该类只有一个实例
&lt;ul>
&lt;li>构造器私有化&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>该类内部自行创建该实例
&lt;ul>
&lt;li>使用静态变量保存&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>能向外部提供这个实例
&lt;ul>
&lt;li>直接暴露&lt;/li>
&lt;li>使用静态变量的get方法获取&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="几大方法">
 几大方法
 &lt;a class="anchor" href="#%e5%87%a0%e5%a4%a7%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;h3 id="饿汉式">
 饿汉式
 &lt;a class="anchor" href="#%e9%a5%bf%e6%b1%89%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;p>随着类的加载进行初始化，不管是否需要都会直接创建实例对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Singleton1&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Singleton1 INSTANCE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> Singleton1();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#a6e22e">Singleton1&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="枚举">
 枚举
 &lt;a class="anchor" href="#%e6%9e%9a%e4%b8%be">#&lt;/a>
&lt;/h3>
&lt;p>枚举类表示该类型的对象是有限的几个&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">enum&lt;/span> Singleton2 {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	 INSTANCE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用静态代码块">
 使用静态代码块
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e9%9d%99%e6%80%81%e4%bb%a3%e7%a0%81%e5%9d%97">#&lt;/a>
&lt;/h3>
&lt;p>随着类的加载进行初始化&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Singleton2&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Singleton2 INSTANCE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">static&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		INSTANCE &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Singleton2();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#a6e22e">Singleton2&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如图，当初始化实例时需要进行复杂取值操作时，可以取代第一种方法
&lt;img src="img/ly-20241212141841430.png" alt="ly-20241212141841430" />&lt;/p>
&lt;h3 id="懒汉式">
 懒汉式
 &lt;a class="anchor" href="#%e6%87%92%e6%b1%89%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>延迟创建对象&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Singleton4&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//为了防止重排序，需要添加volatile关键字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">volatile&lt;/span> Singleton4 INSTANCE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#a6e22e">Singleton4&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">	 * double check
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">	 * @return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">	 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Singleton4 &lt;span style="color:#a6e22e">getInstance&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">//2 先判断一次,对于后面的操作(此时已经创建了对象)能减少加锁次数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> (INSTANCE &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">//如果这里不加锁会导致线程安全问题，可能刚进了判断语句之后，执行权被剥夺了又创建好了对象，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">//所以判断及创建对象必须是原子操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">synchronized&lt;/span> (Singleton4.&lt;span style="color:#a6e22e">class&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#66d9ef">if&lt;/span> (INSTANCE &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#75715e">//用来模拟多线程被剥夺执行权&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						Thread.&lt;span style="color:#a6e22e">sleep&lt;/span>(1000);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					} &lt;span style="color:#66d9ef">catch&lt;/span> (InterruptedException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>						e.&lt;span style="color:#a6e22e">printStackTrace&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#75715e">//如果这个地方不加volatile,会出现的问题是,指令重排 1,2,3是正常的,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#75715e">//会重排成1,3,2 然后别的线程去拿的时候，判断为非空，但是实际上运行的时候，发现里面的数据是空的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#75715e">//1 memory = allocate();//分配对象空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#75715e">//2 instance(memory); //初始化对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					&lt;span style="color:#75715e">//3 instance = memory; //设置instance指向刚刚分配的位置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					INSTANCE &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Singleton4();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> INSTANCE;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="使用静态内部类">
 使用静态内部类
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e9%9d%99%e6%80%81%e5%86%85%e9%83%a8%e7%b1%bb">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Singleton6&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#a6e22e">Singleton6&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Inner&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> Singleton6 INSTANCE&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> Singleton6();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Singleton6 &lt;span style="color:#a6e22e">getInstance&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> Inner.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>只有当内部类被加载和初始化的时候，才会创建INSTANCE实例对象&lt;/li>
&lt;li>静态内部类不会自动随着外部类的加载和初始化而初始化，他需要单独去加载和初始化&lt;/li>
&lt;li>又由于他是在内部类加载和初始化时，创建的，属于类加载器处理的，所以是线程安全的&lt;/li>
&lt;/ul></description></item><item><title>自增变量</title><link>https://lwmfjc.github.io/zh/docs/technology/Review/basics/self_incrementing_variable/</link><pubDate>Wed, 21 Sep 2022 10:04:34 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Review/basics/self_incrementing_variable/</guid><description>&lt;h2 id="题目">
 题目
 &lt;a class="anchor" href="#%e9%a2%98%e7%9b%ae">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		i&lt;span style="color:#f92672">=&lt;/span>i&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> j&lt;span style="color:#f92672">=&lt;/span>i&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> k &lt;span style="color:#f92672">=&lt;/span> i&lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#f92672">++&lt;/span>i &lt;span style="color:#f92672">*&lt;/span> i&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;i=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;j=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>j);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;k=&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>k);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="讲解">
 讲解
 &lt;a class="anchor" href="#%e8%ae%b2%e8%a7%a3">#&lt;/a>
&lt;/h2>
&lt;h3 id="对于操作数栈和局部变量表的理解">
 对于操作数栈和局部变量表的理解
 &lt;a class="anchor" href="#%e5%af%b9%e4%ba%8e%e6%93%8d%e4%bd%9c%e6%95%b0%e6%a0%88%e5%92%8c%e5%b1%80%e9%83%a8%e5%8f%98%e9%87%8f%e8%a1%a8%e7%9a%84%e7%90%86%e8%a7%a3">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>对于下面的代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>10;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> j&lt;span style="color:#f92672">=&lt;/span>9;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		j&lt;span style="color:#f92672">=&lt;/span>i;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>反编译之后，查看字节码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>0 bipush 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2 istore_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3 bipush 9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5 istore_2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>6 iload_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>7 istore_2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>8 &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如下图，这三行代码，是依次把10，9先放到局部变量表的1，2位置。&lt;br>
之后呢，再把局部变量表中1位置的值，放入操作数栈中&lt;br>
最后，将操作数栈弹出一个数(10)，将数值赋给局部变量表中的位置2&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141840576.png" alt="ly-20241212141840576" />
&lt;img src="img/ly-20241212141840888.png" alt="ly-20241212141840888" />
如上图，当方法为静态方法时，局部变量表0位置存储的是实参第1个数&lt;/p>
&lt;p>(当方法为非静态方法时，局部变量表0位置存储的是this引用)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于下面这段代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>10;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> j&lt;span style="color:#f92672">=&lt;/span>20;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		i&lt;span style="color:#f92672">=&lt;/span>i&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		j&lt;span style="color:#f92672">=++&lt;/span>j;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(j);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译后的字节码&lt;/p></description></item><item><title>19-26_git_尚硅谷</title><link>https://lwmfjc.github.io/zh/docs/technology/Git/git_sgg_/19-26/</link><pubDate>Sun, 24 Jul 2022 16:46:04 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Git/git_sgg_/19-26/</guid><description>&lt;h1 id="介绍">
 介绍
 &lt;a class="anchor" href="#%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h1>
&lt;p>使用代码托管中心（远程服务器）
&lt;img src="img/ly-20241212142124425.png" alt="ly-20241212142124425" />&lt;/p>
&lt;ul>
&lt;li>团队内写作
push&amp;ndash;clone&amp;ndash;push&amp;mdash;
&amp;ndash;pull
&lt;img src="img/ly-20241212142124625.png" alt="ly-20241212142124625" />&lt;/li>
&lt;li>跨团队写作
fork（到自己的远程库）&amp;mdash;clone
&lt;img src="img/ly-20241212142124707.png" alt="ly-20241212142124707" />&lt;/li>
&lt;/ul>
&lt;h1 id="创建远程库创建别名">
 创建远程库&amp;amp;创建别名
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e8%bf%9c%e7%a8%8b%e5%ba%93%e5%88%9b%e5%bb%ba%e5%88%ab%e5%90%8d">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>官网：https://github.com&lt;/li>
&lt;li>现在yuebuqun注册一个账号
创建一个远程库git-demo，创建成功
&lt;img src="img/ly-20241212142124787.png" alt="ly-20241212142124787" />&lt;/li>
&lt;li>创建远程库别名
git remote -v （查看别名）
为远程库创建别名
&lt;code>git remote add git-demo https://github.com/lwmfjc/git-demo.git&lt;/code>
别名创建成功 fetch和push都可以使用别名
&lt;img src="img/ly-20241212142124868.png" alt="ly-20241212142124868" />&lt;/li>
&lt;/ul>
&lt;h1 id="推送本地库到远程库">
 推送本地库到远程库
 &lt;a class="anchor" href="#%e6%8e%a8%e9%80%81%e6%9c%ac%e5%9c%b0%e5%ba%93%e5%88%b0%e8%bf%9c%e7%a8%8b%e5%ba%93">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>推送master分支
切换&lt;code>git checkout master&lt;/code>&lt;/li>
&lt;li>推送
git push git-demo master
&lt;img src="img/ly-20241212142124947.png" alt="ly-20241212142124947" />&lt;/li>
&lt;/ul>
&lt;h1 id="拉取远程库到本地库">
 拉取远程库到本地库
 &lt;a class="anchor" href="#%e6%8b%89%e5%8f%96%e8%bf%9c%e7%a8%8b%e5%ba%93%e5%88%b0%e6%9c%ac%e5%9c%b0%e5%ba%93">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>&lt;code>git pull git-demo master&lt;/code>
结果
&lt;img src="img/ly-20241212142125028.png" alt="ly-20241212142125028" />&lt;/li>
&lt;/ul>
&lt;h1 id="克隆远程库到本地">
 克隆远程库到本地
 &lt;a class="anchor" href="#%e5%85%8b%e9%9a%86%e8%bf%9c%e7%a8%8b%e5%ba%93%e5%88%b0%e6%9c%ac%e5%9c%b0">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>git clone xxxxxxx/git-demo.git
&lt;img src="img/ly-20241212142125111.png" alt="ly-20241212142125111" />
clone之后有默认的别名，且已经初始化了本地库&lt;/li>
&lt;/ul>
&lt;h1 id="团队内写作">
 团队内写作
 &lt;a class="anchor" href="#%e5%9b%a2%e9%98%9f%e5%86%85%e5%86%99%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>lhc修改了git-demo下的hello.txt&lt;/li>
&lt;li>之后进行git add hello.txt&lt;/li>
&lt;li>git commit -m &amp;ldquo;lhc-commit &amp;quot; hello.txt&lt;/li>
&lt;li>现在进行push
git push origin master
出错了
&lt;img src="img/ly-20241212142125194.png" alt="ly-20241212142125194" />&lt;/li>
&lt;li>使用ybq，对库进行设置，管理成员
&lt;img src="img/ly-20241212142125275.png" alt="ly-20241212142125275" />&lt;/li>
&lt;li>添加成员即可
输入账号名
&lt;img src="img/ly-20241212142125354.png" alt="ly-20241212142125354" />&lt;/li>
&lt;li>将邀请函
&lt;img src="img/ly-20241212142125433.png" alt="ly-20241212142125433" />
发送给lhc
&lt;img src="img/ly-20241212142125516.png" alt="ly-20241212142125516" />&lt;/li>
&lt;li>现在再次推送，则推送成功
&lt;img src="img/ly-20241212142125598.png" alt="ly-20241212142125598" />&lt;/li>
&lt;/ul>
&lt;h1 id="团队外合作">
 团队外合作
 &lt;a class="anchor" href="#%e5%9b%a2%e9%98%9f%e5%a4%96%e5%90%88%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>先把别人的项目fork下来
&lt;img src="img/ly-20241212142125682.png" alt="ly-20241212142125682" />&lt;/p></description></item><item><title>09-18_git_尚硅谷</title><link>https://lwmfjc.github.io/zh/docs/technology/Git/git_sgg_/09-18/</link><pubDate>Sat, 23 Jul 2022 09:39:11 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Git/git_sgg_/09-18/</guid><description>&lt;h1 id="命令">
 命令
 &lt;a class="anchor" href="#%e5%91%bd%e4%bb%a4">#&lt;/a>
&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>命令-设置用户签名&lt;/p>
&lt;ul>
&lt;li>查看
&lt;code>git config user.name&lt;/code>
&lt;code>git config user.email&lt;/code>&lt;/li>
&lt;li>设置
&lt;code>git config --global user.name ly001&lt;/code>
&lt;code>git config --global user.email xxx@xx.com&lt;/code>&lt;/li>
&lt;li>git的配置文件查看
&lt;img src="img/ly-20241212142119718.png" alt="ly-20241212142119718" />&lt;/li>
&lt;li>作用：区分不同操作者身份，跟后面登陆的账号没有关系&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>初始化本地库&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>git init &lt;/code>&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142119957.png" alt="ly-20241212142119957" />
多出一个文件夹
&lt;img src="img/ly-20241212142120049.png" alt="ly-20241212142120049" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>查看本地库状态&lt;/p>
&lt;ul>
&lt;li>&lt;code>git status&lt;/code>
&lt;img src="img/ly-20241212142120138.png" alt="ly-20241212142120138" />
默认在master分支&lt;/li>
&lt;li>新增一个文件
&lt;code>vim hello.txt&lt;/code>
&lt;img src="img/ly-20241212142120222.png" alt="ly-20241212142120222" />&lt;/li>
&lt;li>此时查看本地库的状态
&lt;img src="img/ly-20241212142120310.png" alt="ly-20241212142120310" />
untracketd files 未被追踪的文件，也就是这个文件还在工作区&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>添加暂存区&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>git add hello.txt&lt;/code>
&lt;img src="img/ly-20241212142120403.png" alt="ly-20241212142120403" />
LF 将会被替换成 CRLF，windows里面是CRLF，也就是说&lt;/p>
&lt;blockquote>
&lt;p>这个&lt;code>换行符自动转换&lt;/code>会把自动把你代码里 与你当前操作系统不相同的换行的方式 转换成当前系统的换行方式（即&lt;code>LF&lt;/code>和&lt;code>CRLF&lt;/code> 之间的转换）&lt;/p>
&lt;/blockquote>
&lt;p>这是因为这个hello.txt是使用&lt;code>vm hello.txt&lt;/code>在git bash里面添加的，如果直接在windows文件管理器添加一个文件（hello2.txt)，就会发现没有这个警告，因为他已经是CRLF了 （为了和视频保持一致，git rm &amp;ndash;cached hello2.txt 后删除这个文件）
&lt;img src="img/ly-20241212142120487.png" alt="ly-20241212142120487" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看当前状态，绿色表示git已经追踪到了这个文件&lt;/p>
&lt;p>文件已经存在于暂存区
&lt;img src="img/ly-20241212142120577.png" alt="ly-20241212142120577" />&lt;/p></description></item><item><title>01-08_git_尚硅谷</title><link>https://lwmfjc.github.io/zh/docs/technology/Git/git_sgg_/01-08/</link><pubDate>Wed, 20 Jul 2022 21:57:18 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Git/git_sgg_/01-08/</guid><description>&lt;h1 id="概述">
 概述
 &lt;a class="anchor" href="#%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h1>
&lt;h2 id="课程介绍">
 课程介绍
 &lt;a class="anchor" href="#%e8%af%be%e7%a8%8b%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>Git
- git介绍&amp;ndash;分布式版本控制+集中式版本控制
- git安装&amp;ndash;基于官网，2.31.1 windows
- 基于开发案例 详细讲解常用命令
- git分支&amp;mdash;特性、创建、转换、合并、代码合并冲突解决
- idea集成git&lt;/li>
&lt;li>Github
&lt;ul>
&lt;li>如何创建远程库&lt;/li>
&lt;li>推送 push&lt;/li>
&lt;li>拉取 pull&lt;/li>
&lt;li>克隆 clone&lt;/li>
&lt;li>ssh免密登录&lt;/li>
&lt;li>idea github集成&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Gitee码云
&lt;ul>
&lt;li>码云创建远程库&lt;/li>
&lt;li>Idea集成Gitee&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Gitlab
&lt;ul>
&lt;li>gitlab服务器的搭建和部署&lt;/li>
&lt;li>idea集成gitlab&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>课程目标：五个小时，熟练掌握git、github、gitee&lt;/li>
&lt;/ol>
&lt;h2 id="官网介绍">
 官网介绍
 &lt;a class="anchor" href="#%e5%ae%98%e7%bd%91%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>git是免费的开源的分布式版本控制系统&lt;/li>
&lt;li>廉价的本地库&lt;/li>
&lt;li>分支功能
&lt;img src="img/ly-20241212142118069.png" alt="ly-20241212142118069" />&lt;/li>
&lt;li>Everything is local&lt;/li>
&lt;/ol>
&lt;h2 id="版本控制介绍">
 版本控制介绍
 &lt;a class="anchor" href="#%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>记录文件内容变化，以便将来查阅特定版本修订记录的系统&lt;/li>
&lt;li>如果没有git
&lt;img src="img/ly-20241212142118196.png" alt="ly-20241212142118196" />&lt;/li>
&lt;li>为什么需要版本控制（从个人开发过渡到团队合作）
&lt;img src="img/ly-20241212142118292.png" alt="ly-20241212142118292" />&lt;/li>
&lt;/ol>
&lt;h2 id="分布式版本控制vs集中式版本控制">
 分布式版本控制VS集中式版本控制
 &lt;a class="anchor" href="#%e5%88%86%e5%b8%83%e5%bc%8f%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6vs%e9%9b%86%e4%b8%ad%e5%bc%8f%e7%89%88%e6%9c%ac%e6%8e%a7%e5%88%b6">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>SVN，单一的集中管理的服务器，保存所有文件的修订版本。其他人都先连到这个中央服务器上获取最新处理是否冲突
&lt;img src="img/ly-20241212142118383.png" alt="ly-20241212142118383" />&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>缺点，单点故障，如果某段时间内故障了，那么就没法提交&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>Git，每台电脑都是代码库
&lt;img src="img/ly-20241212142118467.png" alt="ly-20241212142118467" />
&lt;ul>
&lt;li>如果远程库挂了，本地还是可以做版本控制的，只不过不能做代码推送而已&lt;/li>
&lt;li>每个客户端保存的都是完整的项目（包括历史记录）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="发展历史">
 发展历史
 &lt;a class="anchor" href="#%e5%8f%91%e5%b1%95%e5%8e%86%e5%8f%b2">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>linux系统版本控制历史
&lt;ul>
&lt;li>1991-2002 手动合并&lt;/li>
&lt;li>2002 BitKeeper授权Linux社区免费使用（版本控制系统）
&lt;ul>
&lt;li>社区将其破解&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>2005 用C语言开发了一个分布式版本控制系统：Git
两周开发时间&lt;/li>
&lt;li>2008年 GitHub上线&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="工作机制和代码托管中心">
 工作机制和代码托管中心
 &lt;a class="anchor" href="#%e5%b7%a5%e4%bd%9c%e6%9c%ba%e5%88%b6%e5%92%8c%e4%bb%a3%e7%a0%81%e6%89%98%e7%ae%a1%e4%b8%ad%e5%bf%83">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142118560.png" alt="ly-20241212142118560" />&lt;/p></description></item><item><title>01-21 maven多模块管理_动力节点</title><link>https://lwmfjc.github.io/zh/docs/technology/Maven/advance_dljd_/01-21/</link><pubDate>Sun, 17 Jul 2022 09:49:30 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Maven/advance_dljd_/01-21/</guid><description>&lt;h2 id="场景介绍">
 场景介绍
 &lt;a class="anchor" href="#%e5%9c%ba%e6%99%af%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>业务依赖
&lt;img src="img/ly-20241212142142250.png" alt="ly-20241212142142250" />&lt;/li>
&lt;li>多模块管理
版本管理
&lt;img src="img/ly-20241212142142435.png" alt="ly-20241212142142435" />&lt;/li>
&lt;/ul>
&lt;h2 id="第1种方式">
 第1种方式
 &lt;a class="anchor" href="#%e7%ac%ac1%e7%a7%8d%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;h3 id="创建父工程">
 创建父工程
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e7%88%b6%e5%b7%a5%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>先创建一个空项目
&lt;img src="img/ly-20241212142142506.png" alt="ly-20241212142142506" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在这个空项目下，创建一个module当作maven父工程
&lt;img src="img/ly-20241212142142569.png" alt="ly-20241212142142569" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>结构
&lt;img src="img/ly-20241212142142631.png" alt="ly-20241212142142631" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>pom文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;project&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span style="color:#f92672">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.bjpowernode.maven&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>001-maven-parent&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> packaging 标签指定打包方式，默认为jar
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> maven父工程必须遵守以下两点要求
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> 1、packaging标签的文本内容必须设置为pom
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> 2、把src删除
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="介绍pom文件">
 介绍pom文件
 &lt;a class="anchor" href="#%e4%bb%8b%e7%bb%8dpom%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h3>
&lt;p>pom 项目对象模型，project object model，该文件可以子工程被继承
maven多模块管理，其实就是让它的子模块的pom文件来继承父工程的pom&lt;/p>
&lt;h3 id="创建maven-java子工程">
 创建maven java子工程
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%bamaven-java%e5%ad%90%e5%b7%a5%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>新建一个module&lt;/p>
&lt;p>注意路径，002在IDEA-maven的目录下
&lt;img src="img/ly-20241212142142693.png" alt="ly-20241212142142693" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查看pom文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;project&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--指向父工程的gav坐标--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;parent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>001-maven-parent&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.bjpowernode.maven&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--相对路径--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;relativePath&amp;gt;&lt;/span>../001-maven-parent/pom.xml&lt;span style="color:#f92672">&amp;lt;/relativePath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/parent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span style="color:#f92672">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>002-maven-java&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="创建maven-web子工程">
 创建maven web子工程
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%bamaven-web%e5%ad%90%e5%b7%a5%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>创建新模块
&lt;img src="img/ly-20241212142142754.png" alt="ly-20241212142142754" />&lt;/p></description></item><item><title>31-43 maven基础_动力节点</title><link>https://lwmfjc.github.io/zh/docs/technology/Maven/base_dljd_/31-43/</link><pubDate>Sat, 09 Jul 2022 18:24:30 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Maven/base_dljd_/31-43/</guid><description>&lt;h2 id="idea中设置maven">
 idea中设置maven
 &lt;a class="anchor" href="#idea%e4%b8%ad%e8%ae%be%e7%bd%aemaven">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>和idea集成maven
&lt;img src="img/ly-20241212142146614.png" alt="ly-20241212142146614" />&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;h2 id="创建普通的j2se项目">
 创建普通的j2se项目
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e6%99%ae%e9%80%9a%e7%9a%84j2se%e9%a1%b9%e7%9b%ae">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>使用idea创建空白项目
&lt;img src="img/ly-20241212142146810.png" alt="ly-20241212142146810" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>新建一个module
&lt;img src="img/ly-20241212142146873.png" alt="ly-20241212142146873" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用模板创建普通java项目
&lt;img src="img/ly-20241212142146930.png" alt="ly-20241212142146930" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>输入gav
&lt;img src="img/ly-20241212142146987.png" alt="ly-20241212142146987" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置maven信息
&lt;img src="img/ly-20241212142147048.png" alt="ly-20241212142147048" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>标准的maven工程
&lt;img src="img/ly-20241212142147103.png" alt="ly-20241212142147103" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>与创建网站有关，删掉即可&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;project&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span style="color:#f92672">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.bjpowernode&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>ch01-maven-j2se&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--设置网站，注释掉即可--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- &amp;lt;name&amp;gt;ch01-maven-j2se&amp;lt;/name&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;lt;!– FIXME change it to the project&amp;#39;s website –&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;lt;url&amp;gt;http://www.example.com&amp;lt;/url&amp;gt;--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;properties&amp;gt;&lt;/span> &lt;span style="color:#75715e">&amp;lt;!--maven常用设置--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span>UTF-8&lt;span style="color:#f92672">&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;maven.compiler.source&amp;gt;&lt;/span>1.8&lt;span style="color:#f92672">&amp;lt;/maven.compiler.source&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;maven.compiler.target&amp;gt;&lt;/span>1.8&lt;span style="color:#f92672">&amp;lt;/maven.compiler.target&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;!--单元测试--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>junit&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>junit&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>4.11&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;build&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!--插件版本的配置，无特殊指定则删除--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;pluginManagement&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugins&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-clean-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.1.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-resources-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.0.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-compiler-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.8.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-surefire-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.22.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-jar-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.0.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-install-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.5.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-deploy-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.8.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-site-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.7.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>maven-project-info-reports-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.0.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/plugins&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/pluginManagement&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/build&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="单元测试">
 单元测试
 &lt;a class="anchor" href="#%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>关于idea颜色
&lt;img src="img/ly-20241212142147158.png" alt="ly-20241212142147158" />&lt;/p></description></item><item><title>17-30 maven基础_动力节点</title><link>https://lwmfjc.github.io/zh/docs/technology/Maven/base_dljd_/17-30/</link><pubDate>Sun, 03 Jul 2022 18:24:26 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Maven/base_dljd_/17-30/</guid><description>&lt;h2 id="本地仓库的设置">
 本地仓库的设置
 &lt;a class="anchor" href="#%e6%9c%ac%e5%9c%b0%e4%bb%93%e5%ba%93%e7%9a%84%e8%ae%be%e7%bd%ae">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>远程仓库&amp;ndash;&amp;gt;本地仓库&lt;/p>
&lt;/li>
&lt;li>
&lt;p>maven仓库&lt;/p>
&lt;ul>
&lt;li>存放maven工具自己的jar包&lt;/li>
&lt;li>第三方jar，比如mysql驱动&lt;/li>
&lt;li>自己写的程序，可以打包为jar，存放到仓库&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>分类&lt;/p>
&lt;ul>
&lt;li>
&lt;p>本地仓库（本机）：位于自己计算机中，磁盘中某个目录&lt;/p>
&lt;ul>
&lt;li>
&lt;p>默认位置 登录操作系统的账号目录/.m2/repository
C:\Users\ly.m2\repository&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可修改
比如放在d盘中&lt;/p>
&lt;p>英[rɪˈpɒzətri]
D:\software\apache-maven-3.8.6\repository
备份并编辑
&lt;img src="img/ly-20241212142145669.png" alt="ly-20241212142145669" />
改成左斜杠的方式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;settings&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/SETTINGS/1.2.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- localRepository
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> | The path to the local repository maven will use to store artifacts.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> | Default: ${user.home}/.m2/repository
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &amp;lt;localRepository&amp;gt;/path/to/local/repo&amp;lt;/localRepository&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;localRepository&amp;gt;&lt;/span>D:/software/apache-maven-3.8.6/repository&lt;span style="color:#f92672">&amp;lt;/localRepository&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>把之前user下的repository的文件都拷贝到 D:/software/apache-maven-3.8.6/repository 下
然后再对Hello项目进行编译
&lt;code>mvn compile&lt;/code>
发现不会下载任何文件，且user下的repository也不会再进行下载&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下面的资源是从maven中下载，或者用maven打包的
&lt;img src="img/ly-20241212142145849.png" alt="ly-20241212142145849" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>pom.xml来说明某个项目需要怎么处理代码、项目结构&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;project&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modelVersion&amp;gt;&lt;/span>4.0.0&lt;span style="color:#f92672">&amp;lt;/modelVersion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.bjpowernode&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>ch01-maven&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.0-SNAPSHOT&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;packaging&amp;gt;&lt;/span>jar&lt;span style="color:#f92672">&amp;lt;/packaging&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		&lt;span style="color:#f92672">&amp;lt;java.version&amp;gt;&lt;/span>1.8&lt;span style="color:#f92672">&amp;lt;/java.version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		&lt;span style="color:#f92672">&amp;lt;maven.compiler.source&amp;gt;&lt;/span>1.8&lt;span style="color:#f92672">&amp;lt;/maven.compiler.source&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		&lt;span style="color:#f92672">&amp;lt;maven.compiler.target&amp;gt;&lt;/span>1.8&lt;span style="color:#f92672">&amp;lt;/maven.compiler.target&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 				&lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 				&lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 				&lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>5.1.9&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 		&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/project&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>mvn命令需要在pom.xml所在的目录下执行
&lt;img src="img/ly-20241212142145908.png" alt="ly-20241212142145908" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="仓库的工作方式">
 仓库的工作方式
 &lt;a class="anchor" href="#%e4%bb%93%e5%ba%93%e7%9a%84%e5%b7%a5%e4%bd%9c%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142145966.png" alt="ly-20241212142145966" />&lt;/p></description></item><item><title>01-16 maven基础_动力节点</title><link>https://lwmfjc.github.io/zh/docs/technology/Maven/base_dljd_/01-16/</link><pubDate>Sat, 02 Jul 2022 18:58:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Maven/base_dljd_/01-16/</guid><description>&lt;h2 id="课程介绍">
 课程介绍
 &lt;a class="anchor" href="#%e8%af%be%e7%a8%8b%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>maven 自动化构建&amp;ndash;&amp;gt;开发&amp;ndash;编译&amp;ndash;运行-测试&amp;ndash;打包&amp;ndash;部署 （m ei &amp;rsquo; ven）&lt;/li>
&lt;/ul>
&lt;h2 id="maven的作用">
 maven的作用
 &lt;a class="anchor" href="#maven%e7%9a%84%e4%bd%9c%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>软件是一个&lt;strong>工程&lt;/strong>&lt;/li>
&lt;li>软件中重复的操作（开发阶段）
&lt;ul>
&lt;li>需求分析&lt;/li>
&lt;li>设计阶段&lt;/li>
&lt;li>开发阶段（编码），编译，测试&lt;/li>
&lt;li>测试阶段（专业测试），测试报告&lt;/li>
&lt;li>项目打包，发布，给客户安装项目&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>maven
&lt;ul>
&lt;li>项目自动构建，清理、编译、测试、打包、安装、部署&lt;/li>
&lt;li>管理依赖：项目中需要使用的其他资源&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="maven中的概念">
 Maven中的概念
 &lt;a class="anchor" href="#maven%e4%b8%ad%e7%9a%84%e6%a6%82%e5%bf%b5">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>没有使用maven，管理jar，手动处理jar，以及jar之间的依赖&lt;/li>
&lt;li>maven是apache 【əˈpætʃi】基金会的开源项目，使用java语法开发&lt;/li>
&lt;li>maven是项目的自动化构建工具，管理项目依赖&lt;/li>
&lt;li>maven中的概念
&lt;ul>
&lt;li>POM&lt;/li>
&lt;li>约定的目录&lt;/li>
&lt;li>坐标&lt;/li>
&lt;li>依赖管理&lt;/li>
&lt;li>仓库管理&lt;/li>
&lt;li>生命周期&lt;/li>
&lt;li>插件和目标&lt;/li>
&lt;li>继承 （高级内容）&lt;/li>
&lt;li>聚合 （高级内容）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="maven资源的获取与安装测试">
 Maven资源的获取与安装，测试
 &lt;a class="anchor" href="#maven%e8%b5%84%e6%ba%90%e7%9a%84%e8%8e%b7%e5%8f%96%e4%b8%8e%e5%ae%89%e8%a3%85%e6%b5%8b%e8%af%95">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>
&lt;a target="_blank" href="https://maven.apache.org/index.html">https://maven.apache.org/index.html&lt;/a>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>各种内容
&lt;img src="img/ly-20241212142144318.png" alt="ly-20241212142144318" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>要求
&lt;img src="img/ly-20241212142144503.png" alt="ly-20241212142144503" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>视频用的3.6.3 ，这里下载3.8.6 （最新的，不要和电脑原配置冲突，方便学习，后续改回3.8.4）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>检查java home
&lt;img src="img/ly-20241212142144566.png" alt="ly-20241212142144566" />&lt;/p>
&lt;ul>
&lt;li>如果没有需要进行配置
&lt;img src="img/ly-20241212142144629.png" alt="ly-20241212142144629" />&lt;/li>
&lt;li>&lt;img src="img/ly-20241212142144689.png" alt="ly-20241212142144689" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>将maven的bin目录配置到path环境变量下（这里使用的是下一节的方法，视频中没有用MAVEN_HOME，而是直接将maven的bin目录路径加到path中）
&lt;img src="img/ly-20241212142144751.png" alt="ly-20241212142144751" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142144812.png" alt="ly-20241212142144812" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>maven解压后的目录结构
&lt;img src="img/ly-20241212142144869.png" alt="ly-20241212142144869" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="另一种安装方式">
 另一种安装方式
 &lt;a class="anchor" href="#%e5%8f%a6%e4%b8%80%e7%a7%8d%e5%ae%89%e8%a3%85%e6%96%b9%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>确定JAVA_HOME是否有效&lt;/li>
&lt;li>创建M2_HOME(MAVEN_HOME)，值为maven的安装目录&lt;/li>
&lt;li>在path环境中，加入%M2_HOME%\bin&lt;/li>
&lt;li>测试maven安装 mvn -v&lt;/li>
&lt;/ul>
&lt;h2 id="约定的目录结构">
 约定的目录结构
 &lt;a class="anchor" href="#%e7%ba%a6%e5%ae%9a%e7%9a%84%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>大多数人遵守的目录结构&lt;/p></description></item><item><title>52-X</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/52-x/</link><pubDate>Sun, 26 Jun 2022 14:16:17 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/52-x/</guid><description>&lt;h2 id="crond快速入门">
 crond快速入门
 &lt;a class="anchor" href="#crond%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>使用命令
crontab -e 创建一个定时任务&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>*/1 * * * * ls -l /etc/ &amp;gt; /tmp/to.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>特殊符号
，代表不连续
-破折号 表示连续
&lt;img src="img/ly-20241212142139460.png" alt="ly-20241212142139460" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>其他
&lt;img src="img/ly-20241212142139656.png" alt="ly-20241212142139656" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>定时调用脚本&lt;/p>
&lt;ul>
&lt;li>
&lt;p>编辑脚本
my.sh&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>date &amp;gt;&amp;gt; /home/mycal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date &amp;gt;&amp;gt; /home/mycal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>给脚本赋予x权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>chmod u+x my.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>crontab -e&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>*/1 * * * * my.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>数据库备份
&lt;img src="img/ly-20241212142139724.png" alt="ly-20241212142139724" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>crontab -r 删除&lt;/p>
&lt;/li>
&lt;li>
&lt;p>crontab -l 列出&lt;/p>
&lt;/li>
&lt;li>
&lt;p>crontab -e 编辑任务&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>atd 是否在运行
yum install -y atd
systemctl start atd&lt;/p>
&lt;/li>
&lt;li>
&lt;p>job队列
&lt;img src="img/ly-20241212142139792.png" alt="ly-20241212142139792" />&lt;/p></description></item><item><title>linux_韩老师_40-51</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/40-51/</link><pubDate>Sat, 25 Jun 2022 17:56:21 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/40-51/</guid><description>&lt;h2 id="组介绍">
 组介绍
 &lt;a class="anchor" href="#%e7%bb%84%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>每个用户必定属于某个组&lt;/li>
&lt;li>每个文件有几个概念：所有者、所在组、其他组
tom创建了hello.txt，则所有者为tom，默认所在组为tom组
除了所在组，就是其他组&lt;/li>
&lt;li>ls -ahl （h更友好，a隐藏，l列表）&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;h2 id="所有者">
 所有者
 &lt;a class="anchor" href="#%e6%89%80%e6%9c%89%e8%80%85">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>使用chown root helo.java 修改，效果如下
&lt;img src="img/ly-20241212142138913.png" alt="ly-20241212142138913" />&lt;/li>
&lt;/ul>
&lt;h2 id="所在组修改">
 所在组修改
 &lt;a class="anchor" href="#%e6%89%80%e5%9c%a8%e7%bb%84%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>组的创建
groupadd monster&lt;/li>
&lt;li>创建一个用户并让他属于该组
useradd -g monster fox&lt;/li>
&lt;li>注意逻辑，此时使用fox创建文件
passwd fox 给fox创建密码&lt;/li>
&lt;li>如图，创建一个文件
&lt;img src="img/ly-20241212142139110.png" alt="ly-20241212142139110" />&lt;/li>
&lt;li>使用chgrp fruit orange.txt
修改文件的所在组
&lt;img src="img/ly-20241212142139179.png" alt="ly-20241212142139179" />&lt;/li>
&lt;li>改变某个用户所在组
usermod -g fruit fox
&lt;img src="img/ly-20241212142139244.png" alt="ly-20241212142139244" />&lt;/li>
&lt;li>使用 cat /etc/group 查看所有的组&lt;/li>
&lt;li>当一个用户属于多个组的时候，groups会出现多个组名&lt;/li>
&lt;/ul>
&lt;h2 id="rwx权限">
 rwx权限
 &lt;a class="anchor" href="#rwx%e6%9d%83%e9%99%90">#&lt;/a>
&lt;/h2>
&lt;p>rwxrwxrwx
第一列有十位，第0位确认文件类型
-普通文件，l是链接；d是目录；c是字符设备文件、鼠标、键盘；b块设备
1-3表示文件所有者拥有的权限；4-6是文件所在组所拥有的权限，7-9 其他组所拥有的权限&lt;/p>
&lt;ul>
&lt;li>rwx作用到文件，r代表可读可查看，w代表可修改（如果是删除权限，则必须在该文件所在的目录有写权限，才能删除），x代表可执行&lt;/li>
&lt;li>rwx作用到目录，r表示可以读取(ls可查看目录内容)，w表示可写（可以在目录内创建、删除、重命名目录），x表示可以进入该目录&lt;/li>
&lt;li>rwx分别用数字表示，4，2，1。当拥有所有权限，则为7&lt;/li>
&lt;li>&lt;img src="img/ly-20241212142139311.png" alt="ly-20241212142139311" />
&lt;ul>
&lt;li>最后面的数字，代表连接数（或者子目录数）&lt;/li>
&lt;li>1213 文件大小（字节），如果是文件夹则显示4096&lt;/li>
&lt;li>最后abc表示文件名，蓝色表示是目录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="修改权限">
 修改权限
 &lt;a class="anchor" href="#%e4%bf%ae%e6%94%b9%e6%9d%83%e9%99%90">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>chmod 修改权限，u：所有者，g：所有组，o：其他人，a 所有（ugo总和）&lt;/li>
&lt;li>chmod u=rwx,g=rw,o=x 文件/目录名
这里等号表示直接给权限&lt;/li>
&lt;li>chmod o+w 文件/目录名
这里加表示+权限&lt;/li>
&lt;li>chmod a-x 文件/目录名&lt;/li>
&lt;li>chmod u=rwx,g=rx,o=rx abc 给文件添加执行权限（会变成绿色的）&lt;/li>
&lt;li>使用数字
&lt;ul>
&lt;li>将abc.txt文件权限修改成rwxr-xr-x使用数字实现
chmod 755 abc&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="修改所有者和所在组">
 修改所有者和所在组
 &lt;a class="anchor" href="#%e4%bf%ae%e6%94%b9%e6%89%80%e6%9c%89%e8%80%85%e5%92%8c%e6%89%80%e5%9c%a8%e7%bb%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>chown tom abc #修改文件所有者为tom&lt;/li>
&lt;li>chown -R tom abc #修改文件夹及其所有子目录所有者为tom&lt;/li>
&lt;li>chgrp -R fruit kkk #修改文件夹所在组为fruit&lt;/li>
&lt;/ul>
&lt;h2 id="权限管理应用实例">
 权限管理应用实例
 &lt;a class="anchor" href="#%e6%9d%83%e9%99%90%e7%ae%a1%e7%90%86%e5%ba%94%e7%94%a8%e5%ae%9e%e4%be%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>警察和土匪的游戏&lt;/p></description></item><item><title>mysql高阶_sgg 96-00</title><link>https://lwmfjc.github.io/zh/docs/technology/MySQL/bl_sgg_/96-00/</link><pubDate>Wed, 15 Jun 2022 21:13:03 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MySQL/bl_sgg_/96-00/</guid><description>&lt;h1 id="章节概述">
 章节概述
 &lt;a class="anchor" href="#%e7%ab%a0%e8%8a%82%e6%a6%82%e8%bf%b0">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>架构篇&lt;/p>
&lt;ul>
&lt;li>1-3
&lt;img src="img/ly-20241212142152374.png" alt="ly-20241212142152374" />&lt;/li>
&lt;li>4
&lt;img src="img/ly-20241212142152554.png" alt="ly-20241212142152554" />&lt;/li>
&lt;li>5
&lt;img src="img/ly-20241212142152607.png" alt="ly-20241212142152607" />&lt;/li>
&lt;li>6
&lt;img src="img/ly-20241212142152666.png" alt="ly-20241212142152666" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>索引及调优篇&lt;/p>
&lt;ul>
&lt;li>
&lt;p>01
&lt;img src="img/ly-20241212142152801.png" alt="ly-20241212142152801" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>02-03&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142152853.png" alt="ly-20241212142152853" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>04-05&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142152904.png" alt="ly-20241212142152904" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>06
&lt;img src="img/ly-20241212142152953.png" alt="ly-20241212142152953" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>事务篇&lt;/p>
&lt;ul>
&lt;li>01-02
&lt;img src="img/ly-20241212142153001.png" alt="ly-20241212142153001" />&lt;/li>
&lt;li>03
&lt;img src="img/ly-20241212142153044.png" alt="ly-20241212142153044" />&lt;/li>
&lt;li>04
&lt;img src="img/ly-20241212142153090.png" alt="ly-20241212142153090" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>日志与备份篇&lt;/p>
&lt;ul>
&lt;li>01
&lt;img src="img/ly-20241212142153137.png" alt="ly-20241212142153137" />&lt;/li>
&lt;li>02
&lt;img src="img/ly-20241212142153183.png" alt="ly-20241212142153183" />&lt;/li>
&lt;li>03
&lt;img src="img/ly-20241212142153231.png" alt="ly-20241212142153231" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="centos环境准备">
 CentOS环境准备
 &lt;a class="anchor" href="#centos%e7%8e%af%e5%a2%83%e5%87%86%e5%a4%87">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>这里主要是做了克隆，并没有讲到CentOS的安装，所以笔记不记录了&lt;/li>
&lt;/ul>
&lt;h1 id="mysql的卸载">
 MySQL的卸载
 &lt;a class="anchor" href="#mysql%e7%9a%84%e5%8d%b8%e8%bd%bd">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>查找当前系统已经装了哪些
&lt;code>rpm -qa |grep mysql&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查找mysql服务运行状态
&lt;code>systemctl status mysql&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>停止mysql服务
&lt;code>systemctl stop mysql&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>yum remove mysql-community-client-plugins-8.0.29-1.el7.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum remove mysql-community-common-8.0.29-1.el7.x86_64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查找带mysql名字的文件夹
&lt;code>find / -name mysql&lt;/code>&lt;/p></description></item><item><title>算法红皮书 3.2.1</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/3.2.1/</link><pubDate>Sun, 12 Jun 2022 22:09:27 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/3.2.1/</guid><description>&lt;h2 id="二叉查找树">
 二叉查找树
 &lt;a class="anchor" href="#%e4%ba%8c%e5%8f%89%e6%9f%a5%e6%89%be%e6%a0%91">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>使用每个结点含有两个链接（链表中每个结点只含有一个链接）的二叉查找树来高效地实现符号表&lt;/p>
&lt;/li>
&lt;li>
&lt;p>该数据结构由结点组成，结点包含的链接可以为空(null)或者指向其他结点&lt;/p>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>一棵二叉查找树（BST）是一棵二叉树，其中每个结点都含有一个Comparable 的键（以
及相关联的值）且每个结点的键都大于其左子树中的任意结点的键而小于右子树的任意结点的键。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="img/ly-20241212142101353.png" alt="ly-20241212142101353" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="基本实现">
 基本实现
 &lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>数据表示&lt;/p>
&lt;ul>
&lt;li>每个结点都含有一个键、一个值、一条左链接、一条右链接和一个结点计数器
左链接指向一棵由小于该结点的所有键组成的二叉查找树，右链接指向一棵由大于该节点的所有键组成的二叉查找树，变量N给出了以该结点为根的子树的结点总数&lt;/li>
&lt;li>对于任意节点总是成立
size(x)=size(x.left)+size(x.right)+1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>多棵二叉查找树表示同一组有序的键来实现构建和使用二叉查找树的高校算法
&lt;img src="img/ly-20241212142101579.png" alt="ly-20241212142101579" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查找&lt;/p>
&lt;ul>
&lt;li>在符号表中查找一个键可能得到两种结果：如果含有该键的结点存在表中，我们的查找就命中了，然后返回值；否则查找未命中（返回null)&lt;/li>
&lt;li>递归：如果树是空的，则查找未命中；如果被查找的键和根节点的键相等，查找命中，否则在适当的子树中查找：如果被查找的键较小就选择左子树，否则选择右子树&lt;/li>
&lt;li>下面的get()方法，第一个参数是一个结点（子树根节点），第二个参数是被查找的键，代码会保证只有该结点所表示的子树才会含有和被查找的键相等的结点&lt;/li>
&lt;li>从根结点开始，在每个结点中查找的进程都会递归地在它的一个子结点上展开，因此一次查找也就定义了树的一条路径。对于命中的查找，路径在含有被查找的键的结点处结束。对于未命中的查找，路径的终点是一个空链接
&lt;img src="img/ly-20241212142101684.png" alt="ly-20241212142101684" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>基于二叉查找树的符号表&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BST&lt;/span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>Key &lt;span style="color:#66d9ef">extends&lt;/span> Comparable&lt;span style="color:#f92672">&amp;lt;&lt;/span>Key&lt;span style="color:#f92672">&amp;gt;&lt;/span>, Value&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> Node root;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 二叉查找树的根结点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">private&lt;/span> Key key;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 键&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">private&lt;/span> Value val;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">private&lt;/span> Node left, right;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 指向子树的链接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> N;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 以该结点为根的子树中的结点总数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Node&lt;/span>(Key key, Value val, &lt;span style="color:#66d9ef">int&lt;/span> N)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">key&lt;/span> &lt;span style="color:#f92672">=&lt;/span> key;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">val&lt;/span> &lt;span style="color:#f92672">=&lt;/span> val;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">N&lt;/span> &lt;span style="color:#f92672">=&lt;/span> N;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">size&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> size(root);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">size&lt;/span>(Node x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> (x &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) &lt;span style="color:#66d9ef">return&lt;/span> 0; &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> x.&lt;span style="color:#a6e22e">N&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> Value &lt;span style="color:#a6e22e">get&lt;/span>(Key key)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 请见算法3.3（续1）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">put&lt;/span>(Key key, Value val)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// 请见算法3.3（续1）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// max()、min()、floor()、ceiling()方法请见算法3.3（续2）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// select()、rank()方法请见算法3.3（续3）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// delete()、deleteMin()、deleteMax()方法请见算法3.3（续4）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// keys()方法请见算法3.3（续5）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>每个Node 对象都是一棵含有N 个结点的子树的根结点，它的左链接指向一棵由小于该结点的所有键组成的二叉查找树，右链接指向一棵由大于该结点的所有键组成的二叉查找
树。root 变量指向二叉查找树的根结点Node 对象（这棵树包含了符号表中的所有键值对）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>二叉查找树的查找和排序方法的实现&lt;/p></description></item><item><title>mybatis-plus-sgg-40-57</title><link>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/bl_sgg_/40-57/</link><pubDate>Sat, 04 Jun 2022 11:49:54 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/bl_sgg_/40-57/</guid><description>&lt;h2 id="lambdaxxxwrapper">
 LambdaXxxWrapper
 &lt;a class="anchor" href="#lambdaxxxwrapper">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>LambdaQueryWrapper主要是为了防止字段名写错&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">test11&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String username&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;abc&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Integer ageBegin&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Integer ageEnd&lt;span style="color:#f92672">=&lt;/span>30;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LambdaQueryWrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>User&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> LambdaQueryWrapper&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queryWrapper.&lt;span style="color:#a6e22e">like&lt;/span>(StringUtils.&lt;span style="color:#a6e22e">isNotBlank&lt;/span>(username),User::getUserName,username)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">ge&lt;/span>(ageBegin&lt;span style="color:#f92672">!=&lt;/span>&lt;span style="color:#66d9ef">null&lt;/span>,User::getAge,ageBegin);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> userMapper.&lt;span style="color:#a6e22e">selectList&lt;/span>(queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>sql日志打印&lt;/p>
&lt;pre tabindex="0">&lt;code>==&amp;gt; Preparing: SELECT uid AS id,name AS userName,age,email,is_deleted_ly FROM t_user WHERE is_deleted_ly=0 AND (name LIKE ?)
==&amp;gt; Parameters: %abc%(String)
&amp;lt;== Total: 0
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>LambdaUpdateWrapper&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">test12&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//(age&amp;gt;23且用户名包含a) 或 (邮箱为null)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LambdaUpdateWrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>User&lt;span style="color:#f92672">&amp;gt;&lt;/span> updateWrapper &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> LambdaUpdateWrapper&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> updateWrapper.&lt;span style="color:#a6e22e">like&lt;/span>(User::getUserName, &lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">and&lt;/span>(userUpdateWrapper &lt;span style="color:#f92672">-&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> userUpdateWrapper.&lt;span style="color:#a6e22e">gt&lt;/span>(User::getAge, 23).&lt;span style="color:#a6e22e">or&lt;/span>().&lt;span style="color:#a6e22e">isNotNull&lt;/span>(User::getEmail));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> updateWrapper.&lt;span style="color:#a6e22e">set&lt;/span>(User::getUserName, &lt;span style="color:#e6db74">&amp;#34;小黑&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">set&lt;/span>(User::getEmail, &lt;span style="color:#e6db74">&amp;#34;abc@ly.com&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> userMapper.&lt;span style="color:#a6e22e">update&lt;/span>(&lt;span style="color:#66d9ef">null&lt;/span>, updateWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>sql日志打印&lt;/p></description></item><item><title>mybatis-plus-sgg-19-39</title><link>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/bl_sgg_/19-39/</link><pubDate>Fri, 03 Jun 2022 11:54:42 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/bl_sgg_/19-39/</guid><description>&lt;h2 id="通用service应用">
 通用Service应用
 &lt;a class="anchor" href="#%e9%80%9a%e7%94%a8service%e5%ba%94%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>这里会出现 publicKey is now allowed ，在数据库连接语句后面加上这句话即可
allowPublicKeyRetrieval=true&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spring&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#配置数据源&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">datasource&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#配置数据源类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">type&lt;/span>: &lt;span style="color:#ae81ff">com.zaxxer.hikari.HikariDataSource&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#配置数据源各个信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">driver-class-name&lt;/span>: &lt;span style="color:#ae81ff">com.mysql.cj.jdbc.Driver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">url&lt;/span>: &lt;span style="color:#ae81ff">jdbc:mysql://localhost:3306/mybatis_plus?characterEncoding=utf-8&amp;amp;&amp;amp;useSSL=false&amp;amp;&amp;amp;allowPublicKeyRetrieval=true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">username&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">123456&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查询&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">testList&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//List&amp;lt;User&amp;gt; list = userService.list();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> count &lt;span style="color:#f92672">=&lt;/span> userService.&lt;span style="color:#a6e22e">count&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;总条数：&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>count);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>SQL执行语句&lt;/p>
&lt;pre tabindex="0">&lt;code>==&amp;gt; Preparing: SELECT COUNT( * ) FROM user
==&amp;gt; Parameters: 
&amp;lt;== Columns: COUNT( * )
&amp;lt;== Row: 5
&amp;lt;== Total: 1
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>批量添加&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">batchInsert&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>User&lt;span style="color:#f92672">&amp;gt;&lt;/span> users&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> ArrayList&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> i&lt;span style="color:#f92672">=&lt;/span>0;i&lt;span style="color:#f92672">&amp;lt;&lt;/span>10;i&lt;span style="color:#f92672">++&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User user&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> User();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user.&lt;span style="color:#a6e22e">setName&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user.&lt;span style="color:#a6e22e">setEmail&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;email&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> users.&lt;span style="color:#a6e22e">add&lt;/span>(user);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> b &lt;span style="color:#f92672">=&lt;/span> userService.&lt;span style="color:#a6e22e">saveBatch&lt;/span>(users);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;result:&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>b);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>sql日志输出&lt;/p></description></item><item><title>mybatis-plus-sgg-12-18</title><link>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/bl_sgg_/12-18/</link><pubDate>Fri, 03 Jun 2022 08:15:52 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/bl_sgg_/12-18/</guid><description>&lt;h2 id="basemapper">
 BaseMapper
 &lt;a class="anchor" href="#basemapper">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>注：使用 &lt;code>mvn dependency:resolve -Dclassifier=sources&lt;/code> 来获得mapper源码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一些接口介绍&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 插入一条记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param entity 实体对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">insert&lt;/span>(T entity);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 ID 删除
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param id 主键ID
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">deleteById&lt;/span>(Serializable id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据实体(ID)删除
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param entity 实体对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @since 3.4.4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">deleteById&lt;/span>(T entity);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 columnMap 条件，删除记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param columnMap 表字段 map 对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">deleteByMap&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">COLUMN_MAP&lt;/span>) Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> columnMap);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 entity 条件，删除记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">delete&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 删除（根据ID或实体 批量删除）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param idList 主键ID列表或实体列表(不能为 null 以及 empty)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">deleteBatchIds&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">COLLECTION&lt;/span>) Collection&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> idList);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 ID 修改
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param entity 实体对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">updateById&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">ENTITY&lt;/span>) T entity);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 whereEntity 条件，更新记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param entity 实体对象 (set 条件值,可以为 null)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param updateWrapper 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">update&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">ENTITY&lt;/span>) T entity, &lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> updateWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 ID 查询
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param id 主键ID
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> T &lt;span style="color:#a6e22e">selectById&lt;/span>(Serializable id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 查询（根据ID 批量查询）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param idList 主键ID列表(不能为 null 以及 empty)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">selectBatchIds&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">COLLECTION&lt;/span>) Collection&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> Serializable&lt;span style="color:#f92672">&amp;gt;&lt;/span> idList);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 查询（根据 columnMap 条件）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param columnMap 表字段 map 对象
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">selectByMap&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">COLUMN_MAP&lt;/span>) Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> columnMap);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 entity 条件，查询一条记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * &amp;lt;p&amp;gt;查询一条记录，例如 qw.last(&amp;#34;limit 1&amp;#34;) 限制取一条记录, 注意：多条数据会报异常&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类（可以为 null）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span> T &lt;span style="color:#a6e22e">selectOne&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> ts &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">selectList&lt;/span>(queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (CollectionUtils.&lt;span style="color:#a6e22e">isNotEmpty&lt;/span>(ts)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ts.&lt;span style="color:#a6e22e">size&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> 1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ExceptionUtils.&lt;span style="color:#a6e22e">mpe&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;One record is expected, but the query result is multiple records&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> ts.&lt;span style="color:#a6e22e">get&lt;/span>(0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 Wrapper 条件，判断是否存在记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">exists&lt;/span>(Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Long count &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">selectCount&lt;/span>(queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> count &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> count &lt;span style="color:#f92672">&amp;gt;&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 Wrapper 条件，查询总记录数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类（可以为 null）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Long &lt;span style="color:#a6e22e">selectCount&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 entity 条件，查询全部记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类（可以为 null）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">selectList&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 Wrapper 条件，查询全部记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类（可以为 null）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">selectMaps&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 Wrapper 条件，查询全部记录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * &amp;lt;p&amp;gt;注意： 只返回第一个字段的值&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类（可以为 null）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">selectObjs&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 entity 条件，查询全部记录（并翻页）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param page 分页查询条件（可以为 RowBounds.DEFAULT）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类（可以为 null）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>P &lt;span style="color:#66d9ef">extends&lt;/span> IPage&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&amp;gt;&lt;/span> P &lt;span style="color:#a6e22e">selectPage&lt;/span>(P page, &lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 根据 Wrapper 条件，查询全部记录（并翻页）
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param page 分页查询条件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param queryWrapper 实体对象封装操作类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>P &lt;span style="color:#66d9ef">extends&lt;/span> IPage&lt;span style="color:#f92672">&amp;lt;&lt;/span>Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&amp;gt;&amp;gt;&lt;/span> P &lt;span style="color:#a6e22e">selectMapsPage&lt;/span>(P page, &lt;span style="color:#a6e22e">@Param&lt;/span>(Constants.&lt;span style="color:#a6e22e">WRAPPER&lt;/span>) Wrapper&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> queryWrapper);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>BaseMapper测试&lt;/p></description></item><item><title>mybatis-plus-sgg-01-11</title><link>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/bl_sgg_/01-11/</link><pubDate>Fri, 03 Jun 2022 06:47:06 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/bl_sgg_/01-11/</guid><description>&lt;h2 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>MyBatis-Plus是一个MyBatis的&lt;strong>增强工具&lt;/strong>，在MyBatis的基础上&lt;strong>只做增强不做改变&lt;/strong>，为&lt;strong>简化开发、提高效率&lt;/strong>而生&lt;/li>
&lt;li>这里以MySQL数据库为案例，以Idea作为IDE，使用Maven作为构建工具，使用SpringBoot完成各种功能&lt;/li>
&lt;li>课程主要内容
&lt;img src="img/ly-20241212142149716.png" alt="ly-20241212142149716" />&lt;/li>
&lt;li>特性 润物无声、效率至上、丰富功能&lt;/li>
&lt;li>支持的数据库
&lt;img src="img/ly-20241212142149893.png" alt="ly-20241212142149893" />&lt;/li>
&lt;li>框架结构
&lt;img src="img/ly-20241212142149948.png" alt="ly-20241212142149948" />
&lt;ul>
&lt;li>左边：扫描实体，从实体抽取属性猜测数据库字段&lt;/li>
&lt;li>通过默认提供的方法使用sql语句，然后注入mybatis容器&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="开发环境">
 开发环境
 &lt;a class="anchor" href="#%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142150006.png" alt="ly-20241212142150006" />&lt;/p>
&lt;h2 id="测试数据库和表">
 测试数据库和表
 &lt;a class="anchor" href="#%e6%b5%8b%e8%af%95%e6%95%b0%e6%8d%ae%e5%ba%93%e5%92%8c%e8%a1%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>这里创建数据库mybatis_plus&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后创建表user&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#66d9ef">BIGINT&lt;/span>(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> COMMENT &lt;span style="color:#e6db74">&amp;#39;主键ID&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#66d9ef">VARCHAR&lt;/span>(&lt;span style="color:#ae81ff">30&lt;/span>) &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> COMMENT &lt;span style="color:#e6db74">&amp;#39;姓名&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> age &lt;span style="color:#66d9ef">INT&lt;/span>(&lt;span style="color:#ae81ff">11&lt;/span>) &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> COMMENT &lt;span style="color:#e6db74">&amp;#39;年龄&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email &lt;span style="color:#66d9ef">VARCHAR&lt;/span>(&lt;span style="color:#ae81ff">50&lt;/span>) &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> COMMENT &lt;span style="color:#e6db74">&amp;#39;邮箱&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span> (id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>插入默认数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DELETE&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span> (id, name, age, email) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Jone&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">18&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test1@baomidou.com&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Jack&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test2@baomidou.com&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Tom&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">28&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test3@baomidou.com&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Sandy&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">21&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test4@baomidou.com&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Billie&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">24&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test5@baomidou.com&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="spring-boot工程">
 Spring Boot工程
 &lt;a class="anchor" href="#spring-boot%e5%b7%a5%e7%a8%8b">#&lt;/a>
&lt;/h2>
&lt;p>添加依赖，并install Lombok 插件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;parent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-parent&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.7.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;relativePath/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/parent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-test&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.baomidou&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mybatis-plus-boot-starter&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.5.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>8.0.29&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.projectlombok&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>lombok&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.18.24&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>provided&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-generator --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.baomidou&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mybatis-plus-generator&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.5.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="基础配置">
 基础配置
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>创建spring boot启动类&lt;/p></description></item><item><title>算法红皮书 3.1.1-3.1.7</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/3.1.1-3.1.7/</link><pubDate>Tue, 31 May 2022 23:52:57 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/3.1.1-3.1.7/</guid><description>&lt;h1 id="查找">
 查找
 &lt;a class="anchor" href="#%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>经典查找算法&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用&lt;strong>符号表&lt;/strong>这个词来描述抽象的表格，将信息（值）存储在其中，然后按照指定的&lt;strong>键&lt;/strong>来获取这些信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>符号表也被称为&lt;strong>字典&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>在英语字典里，键就是单词，值就是单词对应的定义、发音和词源&lt;/li>
&lt;li>符号表有时又叫索引&lt;/li>
&lt;li>在一本书的索引中，键就是术语，而值就是书中该术语出现的所有页码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>下面学习三种经典的数据类型：二叉查找树、红黑树和散列表&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="符号表">
 符号表
 &lt;a class="anchor" href="#%e7%ac%a6%e5%8f%b7%e8%a1%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>符号表最主要的目的是将&lt;strong>键&lt;/strong>和&lt;strong>值&lt;/strong>联系起来&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用例能够将一个键值对插入符号表并希望在之后能够从符号表的所有键值对中按照键直接找到相对应的值&lt;/p>
&lt;/li>
&lt;li>
&lt;blockquote>
&lt;p>符号表是一种存储键值对的数据结构，支持两种操作：&lt;strong>插入&lt;/strong>(put)，即将一组新的键值对存入表中；查找(get)，即根据给定的键得到相应的值&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>典型的符号表应用
&lt;img src="img/ly-20241212142100034.png" alt="ly-20241212142100034" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="api">
 API
 &lt;a class="anchor" href="#api">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>符号表是一种&lt;strong>典型的数据类型&lt;/strong> ：代表着一组定义清晰的值及相应的操作。使用应用程序编程接口（API）来精确地定义这些操作
一种简单的泛型符号表API ST(Symbol Table)
&lt;img src="img/ly-20241212142100261.png" alt="ly-20241212142100261" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>泛型
对于符号表，我们通过明确地指定查找时键和值的类型来区分它们的不同角色【key和value】&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重复的键&lt;/p>
&lt;ul>
&lt;li>这里假设每个键只对应着一个值（表中不允许重复值）&lt;/li>
&lt;li>当用例代码向表中存入的键值对和表中已有的键（及关联的值）冲突时，新的值会替代旧的值&lt;/li>
&lt;li>上述定义了关联数组的抽象形式，可以将符号表想象成数组，键即索引，值即数组中的值&lt;/li>
&lt;li>在一个关联数组中，键可以是任意类型，但我们仍然可以用它来快速访问数组的值&lt;/li>
&lt;li>非Java使用st[key]来替代st.get(key)，用st[key]=val来替代st.put(key,val)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>键不能为空&lt;/p>
&lt;/li>
&lt;li>
&lt;p>值不能为空（因为规定当键不存在时get()返回空）
当值为空表示删除&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除操作&lt;/p>
&lt;ul>
&lt;li>
&lt;p>延时删除，先将键对应的值置空，之后在某个时刻删除所有值为空的键&lt;/p>
&lt;/li>
&lt;li>
&lt;p>即时删除，立即从表中删除指定的键
put实现的开头：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>(val &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete(key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>便捷方法
&lt;img src="img/ly-20241212142100362.png" alt="ly-20241212142100362" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>迭代
在API第一行加上&lt;code>implements Iterable&amp;lt;Key&amp;gt;&lt;/code> ，所有实现都包含iterator()方法来实现hasNext()和next()方法的迭代器；这里采用另一种方式：定义keys返回一个&lt;code>Iterable&amp;lt;Key&amp;gt;&lt;/code>对象以方便便利所有的键，且允许遍历一部分&lt;/p>
&lt;/li>
&lt;li>
&lt;p>键的等价性
自定义的键需要重写equals()方法；且最好使用不可变数据类型作为键&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="有序符号表">
 有序符号表
 &lt;a class="anchor" href="#%e6%9c%89%e5%ba%8f%e7%ac%a6%e5%8f%b7%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>一种有序的泛型符号表的API
&lt;img src="img/ly-20241212142100464.png" alt="ly-20241212142100464" />&lt;/li>
&lt;li>最大值和最小值、向下取整和向上取整、排名和选择&lt;/li>
&lt;li>对于0到size()-1的所有i都有i==rank(select(i))，且所有的键都满足key == select(rank(key))&lt;/li>
&lt;li>范围查找&lt;/li>
&lt;li>例外情况
当一个方法需要返回一个键但表中没有合适的键可以返回时，我们约定抛出一个异常&lt;/li>
&lt;li>有序符号表中冗余有序性方法的默认实现
&lt;img src="img/ly-20241212142100610.png" alt="ly-20241212142100610" />&lt;/li>
&lt;li>所有Comparable类型中compareTo()方法和equals()方法的一致性&lt;/li>
&lt;li>★★成本模型
在学习符号表的实现时，我们会统计&lt;strong>比较的次数&lt;/strong>（等价性测试或是键的相互比较），在内循环**不进行比较（极少）**的情况下，我们会统计数组的访问次数&lt;/li>
&lt;/ul>
&lt;h3 id="用例举例">
 用例举例
 &lt;a class="anchor" href="#%e7%94%a8%e4%be%8b%e4%b8%be%e4%be%8b">#&lt;/a>
&lt;/h3>
&lt;p>如何使用&lt;/p></description></item><item><title>算法红皮书 2.5</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/2.5/</link><pubDate>Sun, 29 May 2022 22:20:39 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/2.5/</guid><description>&lt;ul>
&lt;li>排序如此有用的原因是，在有序的数组中查找一个元素，要比在一个无序的数组中查找简单得多&lt;/li>
&lt;li>通用排序算法是最重要的&lt;/li>
&lt;li>算法思想虽然简单，但是适用领域广泛&lt;/li>
&lt;/ul>
&lt;h2 id="将各种数据排序">
 将各种数据排序
 &lt;a class="anchor" href="#%e5%b0%86%e5%90%84%e7%a7%8d%e6%95%b0%e6%8d%ae%e6%8e%92%e5%ba%8f">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Java的约定使得我们能够利用Java的回调机制将任意实现Comparable接口的数据类型排序&lt;/p>
&lt;ul>
&lt;li>我们的代码直接能够将String、Integer、Double 和一些其他例如File 和URL 类型的数组排序，因为它们都实现了Comparable 接口&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>交易事务
商业数据的处理，设想一家互联网商业公司为每笔交易记录都保存了所有的相关信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">compareTo&lt;/span>(Transaction that)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">when&lt;/span>.&lt;span style="color:#a6e22e">compareTo&lt;/span>(that.&lt;span style="color:#a6e22e">when&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>指针排序
我们使用的方法在经典教材中被称为&lt;strong>指针排序&lt;/strong>，因为我们只处理元素的引用而不移动数据本身&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不可变的键
用不可变的数据类型作为键，比如String、Integer、Double和File等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>廉价的交换&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用引用的另一个好处是不必移动整个元素对于几乎任意大小的元素，使用引用使得在一般情况下交换的成本和比较的成本几乎相同（代价是需要额外的空间存储这些引用）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>研究将数字排序的算法性能的一种方法就是观察其所需的比较和交换总数，因为这里隐式地假设了比较和交换的成本是相同的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>多种排序方法&lt;/p>
&lt;ul>
&lt;li>根据情况将一组对象按照不同的方式排序。Java 的Comparator 接口允许我们在一个类之中实现多种排序方法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>多键数组&lt;/p>
&lt;ul>
&lt;li>
&lt;p>一个元素的多种属性都可能被用作排序的键&lt;/p>
&lt;ul>
&lt;li>我们可以定义多种比较器，要将Transaction 对象的数组按照时间排序可以调用：
Insertion.sort(a, new Transaction.WhenOrder())
或者这样来按照金额排序：
Insertion.sort(a, new Transaction.HowMuchOrder())&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>使用Comparator的插入排序&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">sort&lt;/span>(Object&lt;span style="color:#f92672">[]&lt;/span> a, Comparator c)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">int&lt;/span> N &lt;span style="color:#f92672">=&lt;/span> a.&lt;span style="color:#a6e22e">length&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 1; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> N; i&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> j &lt;span style="color:#f92672">=&lt;/span> i; j &lt;span style="color:#f92672">&amp;gt;&lt;/span> 0 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> less(Comparator, a&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span>, a&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">]&lt;/span>); j&lt;span style="color:#f92672">--&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	exch(a, j, j&lt;span style="color:#f92672">-&lt;/span>1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Boolean &lt;span style="color:#a6e22e">less&lt;/span>(Comparator c, Object v, Object w)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">return&lt;/span> c.&lt;span style="color:#a6e22e">compare&lt;/span>(v, w) &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">exch&lt;/span>(Object&lt;span style="color:#f92672">[]&lt;/span> a, &lt;span style="color:#66d9ef">int&lt;/span> i, &lt;span style="color:#66d9ef">int&lt;/span> j)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Object t &lt;span style="color:#f92672">=&lt;/span> a&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	a&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> a&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	a&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> t;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用比较器实现优先队列&lt;/p></description></item><item><title>算法红皮书 2.4</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/2.4/</link><pubDate>Fri, 27 May 2022 22:43:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/2.4/</guid><description>&lt;h1 id="优先队列">
 优先队列
 &lt;a class="anchor" href="#%e4%bc%98%e5%85%88%e9%98%9f%e5%88%97">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>有些情况下，不需要要求处理的元素全部有序，只要求每次都处理键值最大的元素，然后再收集更多的元素，然后再处理键值最大的元素&lt;/li>
&lt;li>需要一种数据结构，支持操作：删除最大元素和插入元素，这种数据类型叫做优先队列&lt;/li>
&lt;li>优先队列的基本表现形式：其一或两种操作都能在线性时间内完成&lt;/li>
&lt;li>基于&lt;strong>二叉堆数据结构&lt;/strong>的优先队列，用数组保存元素并按照一定条件排序，以实现高效的删除最大元素和插入元素&lt;/li>
&lt;/ul>
&lt;h2 id="api">
 API
 &lt;a class="anchor" href="#api">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>抽象数据类型，最重要的操作是删除最大元素和插入元素 delMax()和insert()&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用“最大元素”代替“最大键值”或是“键值最大的元素”&lt;/p>
&lt;/li>
&lt;li>
&lt;p>泛型优先队列的API
&lt;img src="img/ly-20241212142058095.png" alt="ly-20241212142058095" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>优先队列的调用示例
从N各输入中找到最大的M各元素所需成本
&lt;img src="img/ly-20241212142058324.png" alt="ly-20241212142058324" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>优先队列的用例
pq里面最多放5个，当大于5个的时候，就从中剔除1个&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">TopM&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 打印输入流中最大的M行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> M &lt;span style="color:#f92672">=&lt;/span> Integer.&lt;span style="color:#a6e22e">parseint&lt;/span>(args&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		MinPQ&lt;span style="color:#f92672">&amp;lt;&lt;/span>Transaction&lt;span style="color:#f92672">&amp;gt;&lt;/span> pq &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> MinPQ&lt;span style="color:#f92672">&amp;lt;&lt;/span>Transaction&lt;span style="color:#f92672">&amp;gt;&lt;/span>(M&lt;span style="color:#f92672">+&lt;/span>1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">while&lt;/span> (StdIn.&lt;span style="color:#a6e22e">hasNextLine&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">// 为下一行输入创建一个元素并放入优先队列中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			pq.&lt;span style="color:#a6e22e">insert&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> Transaction(StdIn.&lt;span style="color:#a6e22e">readLine&lt;/span>()));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">if&lt;/span> (pq.&lt;span style="color:#a6e22e">size&lt;/span>() &lt;span style="color:#f92672">&amp;gt;&lt;/span> M)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 pq.&lt;span style="color:#a6e22e">delMin&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">// 如果优先队列中存在M+1个元素则删除其中最小的元素&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 最大的M个元素都在优先队列中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		Stack&lt;span style="color:#f92672">&amp;lt;&lt;/span>Transaction&lt;span style="color:#f92672">&amp;gt;&lt;/span> stack &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Stack&lt;span style="color:#f92672">&amp;lt;&lt;/span>Transaction&lt;span style="color:#f92672">&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>pq.&lt;span style="color:#a6e22e">isEmpty&lt;/span>()) stack.&lt;span style="color:#a6e22e">push&lt;/span>(pq.&lt;span style="color:#a6e22e">delMin&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">for&lt;/span> (Transaction t : stack) StdOut.&lt;span style="color:#a6e22e">println&lt;/span>(t);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>应用
&lt;img src="img/ly-20241212142058429.png" alt="ly-20241212142058429" />&lt;/p></description></item><item><title>zsx_flowable_design01</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/zsx_design/01/</link><pubDate>Mon, 23 May 2022 17:17:04 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/zsx_design/01/</guid><description>&lt;ul>
&lt;li>
&lt;p>模型设计完后，下面三个表有变化&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142116933.png" alt="ly-20241212142116933" />&lt;/p>
&lt;ul>
&lt;li>act_cio_model
&lt;img src="img/ly-20241212142117063.png" alt="ly-20241212142117063" />&lt;/li>
&lt;li>act_cio_model_module_rel
&lt;img src="img/ly-20241212142117162.png" alt="ly-20241212142117162" />&lt;/li>
&lt;li>act_ge_bytearray
&lt;img src="img/ly-20241212142117254.png" alt="ly-20241212142117254" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>部署之后，四个表有变化
&lt;img src="img/ly-20241212142117340.png" alt="ly-20241212142117340" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>act_cio_deployment
多了39条记录
&lt;img src="img/ly-20241212142117428.png" alt="ly-20241212142117428" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142117516.png" alt="ly-20241212142117516" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>act_ge_bytearray
多了两条记录
&lt;img src="img/ly-20241212142117610.png" alt="ly-20241212142117610" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>act_re_deployment
多了一条记录
&lt;img src="img/ly-20241212142117704.png" alt="ly-20241212142117704" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>act_re_procdef
多了一条记录
&lt;img src="img/ly-20241212142117795.png" alt="ly-20241212142117795" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>流程开始运行&lt;/p>
&lt;ul>
&lt;li>下面只写上主要的几个表&lt;/li>
&lt;li>送审时这个结点只能选一个
&lt;img src="img/ly-20241212142117883.png" alt="ly-20241212142117883" />&lt;/li>
&lt;li>流程运行时变量表
&lt;img src="img/ly-20241212142117970.png" alt="ly-20241212142117970" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>linux_韩老师_28-39</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/28-39/</link><pubDate>Sun, 22 May 2022 22:14:00 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/28-39/</guid><description>&lt;h2 id="文件目录">
 文件目录
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e7%9b%ae%e5%bd%95">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>用来定位绝对路径或相对路径
cd ~ 用来定位家目录
cd .. 返回上一级
cd - 返回上一次目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>mkdir 用于创建目录
mkdir -p hello/l1/l2 多级目录创建&lt;/p>
&lt;/li>
&lt;li>
&lt;p>recursion 递归
rm -rf 要删除的目录 #递归删除&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用cp进行复制，加上 -r 进行递归复制&lt;/p>
&lt;/li>
&lt;li>
&lt;p>rm 删除某个文件（带提示）&lt;/p>
&lt;ul>
&lt;li>rm -f 删除文件（不带提示）&lt;/li>
&lt;li>rm -rf 强制删除递归文件（夹）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>mv 用来重命名（移动到同一目录下）、（或者移动文件）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>注意，下面的命令，是将hello移动到hello2下，并改名为a（而不是hello2下的a目录）
&lt;code>mv Hello.java hello2/a&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>mv Hello.java hello2/a/&lt;/code> 移动到hello2下的a目录下(最后有一个斜杠)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>移动目录&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>mv hello2 hello1/AB&lt;/code>
或者
&lt;code>mv hello2/ hello1/AB&lt;/code>&lt;/p>
&lt;p>或者
&lt;code>mv hello2/ hello1/AB/&lt;/code>&lt;/p>
&lt;p>会把整个hello2文件夹（包括hello2）移动到AB下&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同样是上面的指令，如果AB不存在，那么就会将hello2移动到hello1下，并将hello2文件夹，改名为AB&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>cat 指令&lt;/p>
&lt;ul>
&lt;li>cat -p /etc/profile 浏览并显示文件&lt;/li>
&lt;li>管道命令
cat -p /etc/profile | more
把前面的结果再交给more处理
（输入enter查看下一行，空格查看下一页）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>less指令&lt;/p></description></item><item><title>linux_韩老师_21-33</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/21-27/</link><pubDate>Sun, 22 May 2022 13:04:55 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/21-27/</guid><description>&lt;h2 id="用户管理">
 用户管理
 &lt;a class="anchor" href="#%e7%94%a8%e6%88%b7%e7%ae%a1%e7%90%86">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>使用&lt;code>ssh root@192.168.200.201&lt;/code>进行服务器连接
&lt;img src="img/ly-20241212142135612.png" alt="ly-20241212142135612" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>xshell中 ctr+shift+r 用来重新连接&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户解释图
&lt;img src="img/ly-20241212142135812.png" alt="ly-20241212142135812" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>添加一个用户milan，会自动创建该用户的家目录milan&lt;/p>
&lt;ul>
&lt;li>当登录该用户时，会自动切换到家目录下
&lt;img src="img/ly-20241212142135882.png" alt="ly-20241212142135882" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>指定家目录
&lt;img src="img/ly-20241212142135954.png" alt="ly-20241212142135954" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>指定密码
&lt;img src="img/ly-20241212142136024.png" alt="ly-20241212142136024" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用milan登录，自动切换到/home/milan
pwd:显示当前用户所在的目录&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142136094.png" alt="ly-20241212142136094" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户删除&lt;/p>
&lt;ul>
&lt;li>删除用户但保留家目录
&lt;ul>
&lt;li>需要用超级管理员才能删除
&lt;img src="img/ly-20241212142136163.png" alt="ly-20241212142136163" />
使用&lt;code>su -u root&lt;/code>切换到超级管理员&lt;/li>
&lt;li>先logout然后再删除
&lt;img src="img/ly-20241212142136235.png" alt="ly-20241212142136235" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>删除用户及家目录
&lt;code>userdel -r milan&lt;/code>&lt;/li>
&lt;li>建议保留家目录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>查询root用户信息&lt;/p>
&lt;ul>
&lt;li>使用&lt;code>id xx&lt;/code> 查询
&lt;img src="img/ly-20241212142136305.png" alt="ly-20241212142136305" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>切换用户 &lt;code>su - xx&lt;/code>&lt;/p>
&lt;ul>
&lt;li>从权限高切换到权限低的用户不需要密码；反之需要
&lt;img src="img/ly-20241212142136377.png" alt="ly-20241212142136377" />&lt;/li>
&lt;li>使用logout（exit也行），从root用户回到jack&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>查看当前用户
&lt;code>who am i &lt;/code>
&lt;img src="img/ly-20241212142136445.png" alt="ly-20241212142136445" />
即使切换了用户，返回的还是root（第一次登录时的用户)
&lt;img src="img/ly-20241212142136517.png" alt="ly-20241212142136517" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户组（角色）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>增加、删除组&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>groupadd wudang
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>groupdel wudang
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果添加用户的时候没有指定组，那么会创建一个跟用户名一样的名字的组
&lt;img src="img/ly-20241212142136586.png" alt="ly-20241212142136586" />
id是1002，组为king&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142136655.png" alt="ly-20241212142136655" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>添加用户zwj，添加组wudang，并将zwj添加到wudang组里面&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>groupadd wudang
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>useradd -g wudang zwj
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212142136719.png" alt="ly-20241212142136719" />&lt;/p></description></item><item><title>官方的hello-world</title><link>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/official/hello/</link><pubDate>Fri, 20 May 2022 17:16:29 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/MyBatis-Plus/official/hello/</guid><description>&lt;h2 id="简介">
 简介
 &lt;a class="anchor" href="#%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>MyBatis-Plus (opens new window)（简称 MP）是一个 MyBatis (opens new window)的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。&lt;/li>
&lt;/ul>
&lt;h2 id="快速开始">
 快速开始
 &lt;a class="anchor" href="#%e5%bf%ab%e9%80%9f%e5%bc%80%e5%a7%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>数据库的Schema脚本 resources/db/schema-mysql.sql&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DROP&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">IF&lt;/span> &lt;span style="color:#66d9ef">EXISTS&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">CREATE&lt;/span> &lt;span style="color:#66d9ef">TABLE&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#66d9ef">BIGINT&lt;/span>(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#66d9ef">NOT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> COMMENT &lt;span style="color:#e6db74">&amp;#39;主键ID&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#66d9ef">VARCHAR&lt;/span>(&lt;span style="color:#ae81ff">30&lt;/span>) &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> COMMENT &lt;span style="color:#e6db74">&amp;#39;姓名&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> age &lt;span style="color:#66d9ef">INT&lt;/span>(&lt;span style="color:#ae81ff">11&lt;/span>) &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> COMMENT &lt;span style="color:#e6db74">&amp;#39;年龄&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> email &lt;span style="color:#66d9ef">VARCHAR&lt;/span>(&lt;span style="color:#ae81ff">50&lt;/span>) &lt;span style="color:#66d9ef">NULL&lt;/span> &lt;span style="color:#66d9ef">DEFAULT&lt;/span> &lt;span style="color:#66d9ef">NULL&lt;/span> COMMENT &lt;span style="color:#e6db74">&amp;#39;邮箱&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">PRIMARY&lt;/span> &lt;span style="color:#66d9ef">KEY&lt;/span> (id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>数据库Data脚本 resources/db/data-mysql.sql&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">DELETE&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">INSERT&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> &lt;span style="color:#66d9ef">user&lt;/span> (id, name, age, email) &lt;span style="color:#66d9ef">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">1&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Jone&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">18&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test1@baomidou.com&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">2&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Jack&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">20&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test2@baomidou.com&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">3&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Tom&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">28&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test3@baomidou.com&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">4&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Sandy&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">21&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test4@baomidou.com&amp;#39;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">5&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Billie&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">24&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;test5@baomidou.com&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>创建一个spring boot工程（使用maven）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>父工程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;parent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-parent&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.7.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;relativePath/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/parent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>springboot 相关仓库及mybatis-plus、mysql、Lombok相关仓库引入&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-test&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.baomidou&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mybatis-plus-boot-starter&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>3.5.1&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-web&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.h2database&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>h2&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>runtime&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>8.0.29&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.projectlombok&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>lombok&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.18.24&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>provided&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>配置resources/application.yml文件&lt;/p></description></item><item><title>boge-03-其他</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/03-others/</link><pubDate>Thu, 19 May 2022 16:13:44 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/03-others/</guid><description>&lt;h2 id="会签">
 会签
 &lt;a class="anchor" href="#%e4%bc%9a%e7%ad%be">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>流程图绘制
&lt;img src="img/ly-20241212142115466.png" alt="ly-20241212142115466" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>注意上面几个参数&lt;/p>
&lt;ul>
&lt;li>多实例类型用来判断串行并行&lt;/li>
&lt;li>基数（有几个用户处理）&lt;/li>
&lt;li>元素变量&lt;/li>
&lt;li>集合（集合变量）&lt;/li>
&lt;li>完成条件&amp;ndash;这里填的是 ${nrOfCompletedInstances &amp;gt; 1 }&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>在任务监听器
&lt;img src="img/ly-20241212142115672.png" alt="ly-20241212142115672" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> org.flowable.listener;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.engine.ProcessEngine;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.engine.ProcessEngines;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.engine.TaskService;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.engine.delegate.TaskListener;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.task.api.Task;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.task.service.delegate.DelegateTask;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MultiInstanceTaskListener&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> TaskListener {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">notify&lt;/span>(DelegateTask delegateTask) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;处理aaaa&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>(delegateTask.&lt;span style="color:#a6e22e">getEventName&lt;/span>().&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;create&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;任务id&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> delegateTask.&lt;span style="color:#a6e22e">getId&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;哪些人需要会签&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> delegateTask.&lt;span style="color:#a6e22e">getVariable&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;persons&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;任务处理人&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> delegateTask.&lt;span style="color:#a6e22e">getVariable&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;person&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ProcessEngine engine &lt;span style="color:#f92672">=&lt;/span> ProcessEngines.&lt;span style="color:#a6e22e">getDefaultProcessEngine&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TaskService taskService &lt;span style="color:#f92672">=&lt;/span> engine.&lt;span style="color:#a6e22e">getTaskService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Task task &lt;span style="color:#f92672">=&lt;/span> taskService.&lt;span style="color:#a6e22e">createTaskQuery&lt;/span>().&lt;span style="color:#a6e22e">taskId&lt;/span>(delegateTask.&lt;span style="color:#a6e22e">getId&lt;/span>()).&lt;span style="color:#a6e22e">singleResult&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> task.&lt;span style="color:#a6e22e">setAssignee&lt;/span>(delegateTask.&lt;span style="color:#a6e22e">getVariable&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;person&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> taskService.&lt;span style="color:#a6e22e">saveTask&lt;/span>(task);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>
&lt;p>xml&lt;/p></description></item><item><title>boge-02-flowable进阶_6</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_6/</link><pubDate>Sun, 15 May 2022 16:57:08 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_6/</guid><description>&lt;h2 id="任务回退-串行回退">
 任务回退-串行回退
 &lt;a class="anchor" href="#%e4%bb%bb%e5%8a%a1%e5%9b%9e%e9%80%80-%e4%b8%b2%e8%a1%8c%e5%9b%9e%e9%80%80">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>流程图绘制
&lt;img src="img/ly-20241212142114607.png" alt="ly-20241212142114607" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>xml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>xml version&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span> encoding&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>definitions xmlns&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/BPMN/20100524/MODEL&amp;#34;&lt;/span> xmlns:xsi&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span> xmlns:xsd&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span> xmlns:flowable&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/bpmn&amp;#34;&lt;/span> xmlns:bpmndi&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/BPMN/20100524/DI&amp;#34;&lt;/span> xmlns:omgdc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/DD/20100524/DC&amp;#34;&lt;/span> xmlns:omgdi&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/DD/20100524/DI&amp;#34;&lt;/span> typeLanguage&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span> expressionLanguage&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/1999/XPath&amp;#34;&lt;/span> targetNamespace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.flowable.org/processdef&amp;#34;&lt;/span> exporter&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Flowable Open Source Modeler&amp;#34;&lt;/span> exporterVersion&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6.7.2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>process id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;reback-key&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;回退处理&amp;#34;&lt;/span> isExecutable&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>documentation&lt;span style="color:#f92672">&amp;gt;&lt;/span>reback&lt;span style="color:#f92672">-&lt;/span>desc&lt;span style="color:#f92672">&amp;lt;/&lt;/span>documentation&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>startEvent id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> flowable:formFieldValidation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>startEvent&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>userTask id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-D380E41A-48EE-4C08-AD01-1D509C512543&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;用户1&amp;#34;&lt;/span> flowable:assignee&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user1&amp;#34;&lt;/span> flowable:formFieldValidation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete xmlns:modeler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;![&lt;/span>CDATA&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">]]&amp;gt;&amp;lt;/&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>userTask&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-E2423FC5-F954-43D3-B57C-8460057CB7D6&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-D380E41A-48EE-4C08-AD01-1D509C512543&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>sequenceFlow&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>userTask id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-AF50E3D0-2014-4308-A717-D76586837D70&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;用户2&amp;#34;&lt;/span> flowable:assignee&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user2&amp;#34;&lt;/span> flowable:formFieldValidation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete xmlns:modeler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;![&lt;/span>CDATA&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">]]&amp;gt;&amp;lt;/&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>userTask&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-7C8750DC-E1C1-4AB2-B18C-2C103B61A5E5&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-D380E41A-48EE-4C08-AD01-1D509C512543&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-AF50E3D0-2014-4308-A717-D76586837D70&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>sequenceFlow&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>userTask id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-F4CE7565-5977-4B9C-A603-AB3B817B8C8C&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;用户3&amp;#34;&lt;/span> flowable:assignee&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user3&amp;#34;&lt;/span> flowable:formFieldValidation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete xmlns:modeler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;![&lt;/span>CDATA&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">]]&amp;gt;&amp;lt;/&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>userTask&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-F91582FE-D110-48C9-9407-605E503E42B2&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-AF50E3D0-2014-4308-A717-D76586837D70&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-F4CE7565-5977-4B9C-A603-AB3B817B8C8C&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>sequenceFlow&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>userTask id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-727C1235-F9C1-4CC5-BC6C-E56ABCA105B0&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;用户4&amp;#34;&lt;/span> flowable:assignee&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user4&amp;#34;&lt;/span> flowable:formFieldValidation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete xmlns:modeler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;![&lt;/span>CDATA&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">]]&amp;gt;&amp;lt;/&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>userTask&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-6D998C20-2A97-44B5-92D0-118E5CB05795&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-F4CE7565-5977-4B9C-A603-AB3B817B8C8C&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-727C1235-F9C1-4CC5-BC6C-E56ABCA105B0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>sequenceFlow&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>endEvent id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-6E5F5037-1979-4150-8408-D0BFD0315BCA&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>endEvent&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-3ECF3E34-6C07-4AE6-997B-583BF8868AC8&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-727C1235-F9C1-4CC5-BC6C-E56ABCA105B0&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-6E5F5037-1979-4150-8408-D0BFD0315BCA&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>sequenceFlow&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>process&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNDiagram id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNDiagram_reback-key&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNPlane bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;reback-key&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNPlane_reback-key&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_startEvent1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;163.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-D380E41A-48EE-4C08-AD01-1D509C512543&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-D380E41A-48EE-4C08-AD01-1D509C512543&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;165.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;135.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-AF50E3D0-2014-4308-A717-D76586837D70&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-AF50E3D0-2014-4308-A717-D76586837D70&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;320.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;138.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-F4CE7565-5977-4B9C-A603-AB3B817B8C8C&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-F4CE7565-5977-4B9C-A603-AB3B817B8C8C&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;465.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;138.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-727C1235-F9C1-4CC5-BC6C-E56ABCA105B0&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-727C1235-F9C1-4CC5-BC6C-E56ABCA105B0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;610.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;138.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-6E5F5037-1979-4150-8408-D0BFD0315BCA&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-6E5F5037-1979-4150-8408-D0BFD0315BCA&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;28.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;28.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;755.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;164.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNEdge bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-6D998C20-2A97-44B5-92D0-118E5CB05795&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-6D998C20-2A97-44B5-92D0-118E5CB05795&amp;#34;&lt;/span> flowable:sourceDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:sourceDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> flowable:targetDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:targetDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;564.9499999999907&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;178.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;609.9999999999807&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;178.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNEdge&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNEdge bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-7C8750DC-E1C1-4AB2-B18C-2C103B61A5E5&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-7C8750DC-E1C1-4AB2-B18C-2C103B61A5E5&amp;#34;&lt;/span> flowable:sourceDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:sourceDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> flowable:targetDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:targetDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;264.9499999999882&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;175.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;292.5&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;175.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;292.5&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;178.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;319.9999999999603&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;178.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNEdge&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNEdge bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-3ECF3E34-6C07-4AE6-997B-583BF8868AC8&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-3ECF3E34-6C07-4AE6-997B-583BF8868AC8&amp;#34;&lt;/span> flowable:sourceDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:sourceDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> flowable:targetDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;14.0&amp;#34;&lt;/span> flowable:targetDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;14.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;709.9499999999999&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;178.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;755.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;178.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNEdge&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNEdge bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-E2423FC5-F954-43D3-B57C-8460057CB7D6&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-E2423FC5-F954-43D3-B57C-8460057CB7D6&amp;#34;&lt;/span> flowable:sourceDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;15.0&amp;#34;&lt;/span> flowable:sourceDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;15.0&amp;#34;&lt;/span> flowable:targetDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:targetDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;129.94340692927761&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;177.55019845363262&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;164.99999999999906&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;176.4985&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNEdge&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNEdge bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-F91582FE-D110-48C9-9407-605E503E42B2&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-F91582FE-D110-48C9-9407-605E503E42B2&amp;#34;&lt;/span> flowable:sourceDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:sourceDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> flowable:targetDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:targetDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;419.94999999999067&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;178.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;464.9999999999807&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;178.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNEdge&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNPlane&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNDiagram&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/&lt;/span>definitions&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>部署并运行&lt;/p></description></item><item><title>boge-02-flowable进阶_5</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_5/</link><pubDate>Sun, 15 May 2022 15:51:40 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_5/</guid><description>&lt;h2 id="网关">
 网关
 &lt;a class="anchor" href="#%e7%bd%91%e5%85%b3">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142112823.png" alt="ly-20241212142112823" />&lt;/p>
&lt;h3 id="排他网关">
 排他网关
 &lt;a class="anchor" href="#%e6%8e%92%e4%bb%96%e7%bd%91%e5%85%b3">#&lt;/a>
&lt;/h3>
&lt;p>会按照所有出口顺序流定义的顺序对它们进行计算，选择第一个条件计算为true的顺序流（&lt;strong>当没有设置条件时，认为顺序流为true&lt;/strong>）继续流程&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142113034.png" alt="ly-20241212142113034" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>排他网关的绘制
&lt;img src="img/ly-20241212142113127.png" alt="ly-20241212142113127" />
xml文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;definitions&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/BPMN/20100524/MODEL&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:xsd=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:flowable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/bpmn&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:bpmndi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/BPMN/20100524/DI&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:omgdc=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/DD/20100524/DC&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">xmlns:omgdi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/DD/20100524/DI&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">typeLanguage=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">expressionLanguage=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/1999/XPath&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">targetNamespace=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.flowable.org/processdef&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">exporter=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Flowable Open Source Modeler&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">exporterVersion=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6.7.2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;process&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;holiday-exclusive&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;请假流程-排他网关&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">isExecutable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;startEvent&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:formFieldValidation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/startEvent&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;userTask&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-3D5ED4D4-97F5-4FFD-B160-F00566ECC55E&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;创建请假单&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:assignee=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;zhangsan&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:formFieldValidation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;extensionElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modeler:initiator-can-complete&lt;/span> &lt;span style="color:#a6e22e">xmlns:modeler=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;![CDATA[false]]&amp;gt;&lt;/span>&lt;span style="color:#f92672">&amp;lt;/modeler:initiator-can-complete&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/extensionElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/userTask&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;sequenceFlow&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-33A73370-751D-413F-9306-39DEAA674DB6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">sourceRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">targetRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-3D5ED4D4-97F5-4FFD-B160-F00566ECC55E&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/sequenceFlow&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;exclusiveGateway&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5B2117E6-D341-49F2-85B2-336CA836C7D8&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/exclusiveGateway&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;sequenceFlow&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-D1B1F6E0-EA7F-4FF7-AD0C-5D43DBCEBFD2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">sourceRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-3D5ED4D4-97F5-4FFD-B160-F00566ECC55E&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">targetRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5B2117E6-D341-49F2-85B2-336CA836C7D8&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/sequenceFlow&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;userTask&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-08A6CB64-C9BB-4342-852D-444A75315BDE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;总经理审批&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:assignee=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;wangwu&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:formFieldValidation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;extensionElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modeler:initiator-can-complete&lt;/span> &lt;span style="color:#a6e22e">xmlns:modeler=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;![CDATA[false]]&amp;gt;&lt;/span>&lt;span style="color:#f92672">&amp;lt;/modeler:initiator-can-complete&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/extensionElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/userTask&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;userTask&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-EA98D0C3-E41D-4DEB-8933-91A1B7301ABE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;部门经理审批&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:assignee=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;lisi&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:formFieldValidation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;extensionElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modeler:initiator-can-complete&lt;/span> &lt;span style="color:#a6e22e">xmlns:modeler=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;![CDATA[false]]&amp;gt;&lt;/span>&lt;span style="color:#f92672">&amp;lt;/modeler:initiator-can-complete&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/extensionElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/userTask&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;userTask&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-24F73F7F-EB61-484F-A494-686E194D0118&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;人事审批&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:assignee=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;zhaoliu&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:formFieldValidation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;extensionElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;modeler:initiator-can-complete&lt;/span> &lt;span style="color:#a6e22e">xmlns:modeler=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;![CDATA[false]]&amp;gt;&lt;/span>&lt;span style="color:#f92672">&amp;lt;/modeler:initiator-can-complete&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/extensionElements&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/userTask&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;sequenceFlow&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-8BA0B88C-BA4F-446D-B5E7-6BF0830B1DC8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">sourceRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-EA98D0C3-E41D-4DEB-8933-91A1B7301ABE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">targetRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-24F73F7F-EB61-484F-A494-686E194D0118&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/sequenceFlow&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;sequenceFlow&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-E748F81F-B0B2-4C34-B993-FBAA2BCD0995&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">sourceRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-08A6CB64-C9BB-4342-852D-444A75315BDE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">targetRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-24F73F7F-EB61-484F-A494-686E194D0118&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/sequenceFlow&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;sequenceFlow&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-928C6C6F-57F1-40F2-BE0F-1A9FF3E6E9E4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">sourceRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5B2117E6-D341-49F2-85B2-336CA836C7D8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">targetRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-08A6CB64-C9BB-4342-852D-444A75315BDE&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;conditionExpression&lt;/span> &lt;span style="color:#a6e22e">xsi:type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tFormalExpression&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;![CDATA[${num&amp;gt;3}]]&amp;gt;&lt;/span>&lt;span style="color:#f92672">&amp;lt;/conditionExpression&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/sequenceFlow&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;sequenceFlow&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-4DB25720-11C8-401E-BB4C-83BB25510B2E&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">sourceRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5B2117E6-D341-49F2-85B2-336CA836C7D8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">targetRef=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-EA98D0C3-E41D-4DEB-8933-91A1B7301ABE&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;conditionExpression&lt;/span> &lt;span style="color:#a6e22e">xsi:type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tFormalExpression&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#75715e">&amp;lt;![CDATA[${num&amp;lt;3}]]&amp;gt;&lt;/span>&lt;span style="color:#f92672">&amp;lt;/conditionExpression&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/sequenceFlow&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/process&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNDiagram&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNDiagram_holiday-exclusive&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNPlane&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;holiday-exclusive&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNPlane_holiday-exclusive&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNShape&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_startEvent1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdc:Bounds&lt;/span> &lt;span style="color:#a6e22e">height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;163.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdc:Bounds&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNShape&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-3D5ED4D4-97F5-4FFD-B160-F00566ECC55E&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-3D5ED4D4-97F5-4FFD-B160-F00566ECC55E&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdc:Bounds&lt;/span> &lt;span style="color:#a6e22e">height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;150.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;135.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdc:Bounds&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNShape&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5B2117E6-D341-49F2-85B2-336CA836C7D8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-5B2117E6-D341-49F2-85B2-336CA836C7D8&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdc:Bounds&lt;/span> &lt;span style="color:#a6e22e">height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;315.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;155.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdc:Bounds&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNShape&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-08A6CB64-C9BB-4342-852D-444A75315BDE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-08A6CB64-C9BB-4342-852D-444A75315BDE&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdc:Bounds&lt;/span> &lt;span style="color:#a6e22e">height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;420.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;225.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdc:Bounds&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNShape&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-EA98D0C3-E41D-4DEB-8933-91A1B7301ABE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-EA98D0C3-E41D-4DEB-8933-91A1B7301ABE&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdc:Bounds&lt;/span> &lt;span style="color:#a6e22e">height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;405.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdc:Bounds&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNShape&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-24F73F7F-EB61-484F-A494-686E194D0118&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-24F73F7F-EB61-484F-A494-686E194D0118&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdc:Bounds&lt;/span> &lt;span style="color:#a6e22e">height=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">width=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;630.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;225.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdc:Bounds&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNShape&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNEdge&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-8BA0B88C-BA4F-446D-B5E7-6BF0830B1DC8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-8BA0B88C-BA4F-446D-B5E7-6BF0830B1DC8&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;504.95000000000005&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;70.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;680.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;70.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;680.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;225.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNEdge&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-4DB25720-11C8-401E-BB4C-83BB25510B2E&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-4DB25720-11C8-401E-BB4C-83BB25510B2E&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;335.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;155.5&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;335.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;70.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;404.99999999996083&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;70.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNEdge&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-33A73370-751D-413F-9306-39DEAA674DB6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-33A73370-751D-413F-9306-39DEAA674DB6&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;15.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;15.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;59.94725673598754&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;177.70973069236373&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;150.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;175.96677419354836&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNEdge&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-D1B1F6E0-EA7F-4FF7-AD0C-5D43DBCEBFD2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-D1B1F6E0-EA7F-4FF7-AD0C-5D43DBCEBFD2&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20.5&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;249.95000000000002&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;175.18431734317343&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;315.42592592592536&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;175.42592592592592&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNEdge&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-E748F81F-B0B2-4C34-B993-FBAA2BCD0995&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-E748F81F-B0B2-4C34-B993-FBAA2BCD0995&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;519.95&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;265.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;629.9999999998776&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;265.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bpmndi:BPMNEdge&lt;/span> &lt;span style="color:#a6e22e">bpmnElement=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-928C6C6F-57F1-40F2-BE0F-1A9FF3E6E9E4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-928C6C6F-57F1-40F2-BE0F-1A9FF3E6E9E4&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:sourceDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;20.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerX=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">flowable:targetDockerY=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;335.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;194.43942522321433&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;335.5&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;265.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;omgdi:waypoint&lt;/span> &lt;span style="color:#a6e22e">x=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;420.0&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">y=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;265.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/omgdi:waypoint&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNEdge&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNPlane&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bpmndi:BPMNDiagram&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/definitions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>部署&lt;/p></description></item><item><title>boge-02-flowable进阶_4</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_4/</link><pubDate>Sun, 15 May 2022 13:10:43 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_4/</guid><description>&lt;h2 id="候选人">
 候选人
 &lt;a class="anchor" href="#%e5%80%99%e9%80%89%e4%ba%ba">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>流程图设计&lt;/p>
&lt;ul>
&lt;li>总体
&lt;img src="img/ly-20241212142111000.png" alt="ly-20241212142111000" />&lt;/li>
&lt;li>具体
&lt;img src="img/ly-20241212142111216.png" alt="ly-20241212142111216" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>部署并启动流程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">deploy&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ProcessEngine processEngine&lt;span style="color:#f92672">=&lt;/span> ProcessEngines.&lt;span style="color:#a6e22e">getDefaultProcessEngine&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RepositoryService repositoryService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getRepositoryService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Deployment deploy &lt;span style="color:#f92672">=&lt;/span> repositoryService.&lt;span style="color:#a6e22e">createDeployment&lt;/span>().&lt;span style="color:#a6e22e">name&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly画的请假流程-候选人&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">addClasspathResource&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;请假流程-候选人.bpmn20.xml&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">deploy&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Test&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">runProcess&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//设置候选人&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String,Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> variables&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> variables.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;candidate1&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;张三&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> variables.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;candidate2&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;李四&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> variables.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;candidate3&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;王五&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ProcessEngine engine&lt;span style="color:#f92672">=&lt;/span>ProcessEngines.&lt;span style="color:#a6e22e">getDefaultProcessEngine&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//获取流程运行服务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RuntimeService runtimeService &lt;span style="color:#f92672">=&lt;/span> engine.&lt;span style="color:#a6e22e">getRuntimeService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//运行流程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ProcessInstance processInstance &lt;span style="color:#f92672">=&lt;/span> runtimeService.&lt;span style="color:#a6e22e">startProcessInstanceById&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;holiday-candidate:1:4&amp;#34;&lt;/span>,variables);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;processInstance--&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>processInstance);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看数据库表数据&lt;/p>
&lt;ul>
&lt;li>处理人为空
&lt;img src="img/ly-20241212142111312.png" alt="ly-20241212142111312" />&lt;/li>
&lt;li>变量
&lt;img src="img/ly-20241212142111408.png" alt="ly-20241212142111408" />&lt;/li>
&lt;li>图解
&lt;img src="img/ly-20241212142111504.png" alt="ly-20241212142111504" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>实际，作为登录用户如果是张三/李四或者王五，那它可以查看它自己是候选人的任务&lt;/p></description></item><item><title>boge-02-flowable进阶_3</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_3/</link><pubDate>Sun, 15 May 2022 10:04:08 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_3/</guid><description>&lt;h2 id="任务分配-uel表达式">
 任务分配-uel表达式
 &lt;a class="anchor" href="#%e4%bb%bb%e5%8a%a1%e5%88%86%e9%85%8d-uel%e8%a1%a8%e8%be%be%e5%bc%8f">#&lt;/a>
&lt;/h2>
&lt;p>通过变量指定来进行分配&lt;/p>
&lt;ul>
&lt;li>
&lt;p>首先绘制流程图（定义）
&lt;img src="img/ly-20241212142108250.png" alt="ly-20241212142108250" />&lt;/p>
&lt;ul>
&lt;li>变量处理
&lt;img src="img/ly-20241212142108471.png" alt="ly-20241212142108471" />
&lt;img src="img/ly-20241212142108572.png" alt="ly-20241212142108572" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>之后将xml文件导出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>xml version&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span> encoding&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>definitions xmlns&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/BPMN/20100524/MODEL&amp;#34;&lt;/span> xmlns:xsi&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span> xmlns:xsd&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span> xmlns:flowable&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/bpmn&amp;#34;&lt;/span> xmlns:bpmndi&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/BPMN/20100524/DI&amp;#34;&lt;/span> xmlns:omgdc&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/DD/20100524/DC&amp;#34;&lt;/span> xmlns:omgdi&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/DD/20100524/DI&amp;#34;&lt;/span> typeLanguage&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema&amp;#34;&lt;/span> expressionLanguage&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/1999/XPath&amp;#34;&lt;/span> targetNamespace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.flowable.org/processdef&amp;#34;&lt;/span> exporter&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Flowable Open Source Modeler&amp;#34;&lt;/span> exporterVersion&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;6.7.2&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>process id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;holiday-new&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;新请假流程&amp;#34;&lt;/span> isExecutable&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>documentation&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#66d9ef">new&lt;/span>&lt;span style="color:#f92672">-&lt;/span>description&lt;span style="color:#f92672">&amp;lt;/&lt;/span>documentation&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>startEvent id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> flowable:formFieldValidation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>startEvent&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>userTask id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-8D901410-5BD7-4EED-B988-5E40D12298C7&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;创建请假流程&amp;#34;&lt;/span> flowable:assignee&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${assignee0}&amp;#34;&lt;/span> flowable:formFieldValidation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete xmlns:modeler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;![&lt;/span>CDATA&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">]]&amp;gt;&amp;lt;/&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>userTask&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>userTask id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5EB8F68B-7876-42AF-98E1-FCA27F99D8CE&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;审批请假流程&amp;#34;&lt;/span> flowable:assignee&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${assignee1}&amp;#34;&lt;/span> flowable:formFieldValidation&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete xmlns:modeler&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/modeler&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;![&lt;/span>CDATA&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">]]&amp;gt;&amp;lt;/&lt;/span>modeler:initiator&lt;span style="color:#f92672">-&lt;/span>can&lt;span style="color:#f92672">-&lt;/span>complete&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>extensionElements&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>userTask&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-631EFFB0-795A-4777-B49E-CF7D015BFF15&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-8D901410-5BD7-4EED-B988-5E40D12298C7&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5EB8F68B-7876-42AF-98E1-FCA27F99D8CE&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>sequenceFlow&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>endEvent id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-15CAD0D3-7F8B-404C-9346-A8D2A456D47B&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>endEvent&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-001CA567-6169-4F8A-A0E5-010721D52508&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5EB8F68B-7876-42AF-98E1-FCA27F99D8CE&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-15CAD0D3-7F8B-404C-9346-A8D2A456D47B&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>sequenceFlow&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-0A4A52F2-ECF6-44B2-AA41-F926AA7F5932&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-8D901410-5BD7-4EED-B988-5E40D12298C7&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>sequenceFlow&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>process&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNDiagram id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNDiagram_holiday-new&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNPlane bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;holiday-new&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNPlane_holiday-new&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;startEvent1&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_startEvent1&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;145.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-8D901410-5BD7-4EED-B988-5E40D12298C7&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-8D901410-5BD7-4EED-B988-5E40D12298C7&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;225.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;120.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-5EB8F68B-7876-42AF-98E1-FCA27F99D8CE&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-5EB8F68B-7876-42AF-98E1-FCA27F99D8CE&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;80.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;100.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;370.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;120.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNShape bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-15CAD0D3-7F8B-404C-9346-A8D2A456D47B&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNShape_sid-15CAD0D3-7F8B-404C-9346-A8D2A456D47B&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdc:Bounds height&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;28.0&amp;#34;&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;28.0&amp;#34;&lt;/span> x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;555.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;146.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdc:Bounds&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNShape&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNEdge bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-001CA567-6169-4F8A-A0E5-010721D52508&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-001CA567-6169-4F8A-A0E5-010721D52508&amp;#34;&lt;/span> flowable:sourceDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:sourceDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> flowable:targetDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;14.0&amp;#34;&lt;/span> flowable:targetDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;14.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;469.94999999997356&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;160.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;555.0&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;160.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNEdge&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNEdge bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-0A4A52F2-ECF6-44B2-AA41-F926AA7F5932&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-0A4A52F2-ECF6-44B2-AA41-F926AA7F5932&amp;#34;&lt;/span> flowable:sourceDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;15.0&amp;#34;&lt;/span> flowable:sourceDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;15.0&amp;#34;&lt;/span> flowable:targetDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:targetDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;129.94999928606217&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;160.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;224.99999999995185&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;160.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNEdge&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bpmndi:BPMNEdge bpmnElement&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sid-631EFFB0-795A-4777-B49E-CF7D015BFF15&amp;#34;&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;BPMNEdge_sid-631EFFB0-795A-4777-B49E-CF7D015BFF15&amp;#34;&lt;/span> flowable:sourceDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:sourceDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span> flowable:targetDockerX&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;50.0&amp;#34;&lt;/span> flowable:targetDockerY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;40.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;324.9499999999907&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;160.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>omgdi:waypoint x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;369.9999999999807&amp;#34;&lt;/span> y&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;160.0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/&lt;/span>omgdi:waypoint&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNEdge&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNPlane&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>bpmndi:BPMNDiagram&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/&lt;/span>definitions&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>流程定义的部署&lt;/p></description></item><item><title>boge-02-flowable进阶_2</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_2/</link><pubDate>Sat, 14 May 2022 23:31:13 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_2/</guid><description>&lt;h2 id="service服务接口">
 Service服务接口
 &lt;a class="anchor" href="#service%e6%9c%8d%e5%8a%a1%e6%8e%a5%e5%8f%a3">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142104630.png" alt="ly-20241212142104630" />&lt;/p>
&lt;ul>
&lt;li>各个Service类
RepositoryService 资源管理类，流程定义、部署、文件
RuntimeService 流程运行管理类，运行过程中（执行）
TaskService 任务管理类
HistoryService 历史管理类
ManagerService 引擎管理类&lt;/li>
&lt;/ul>
&lt;h2 id="flowable图标">
 Flowable图标
 &lt;a class="anchor" href="#flowable%e5%9b%be%e6%a0%87">#&lt;/a>
&lt;/h2>
&lt;p>BPMN2.0定义的一些图标&lt;/p>
&lt;ul>
&lt;li>时间&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="img/ly-20241212142104849.png" alt="ly-20241212142104849" />&lt;/p>
&lt;ul>
&lt;li>活动
&lt;img src="img/ly-20241212142104949.png" alt="ly-20241212142104949" />&lt;/li>
&lt;li>网关
&lt;img src="img/ly-20241212142105051.png" alt="ly-20241212142105051" />&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;h2 id="流程部署深入解析">
 流程部署深入解析
 &lt;a class="anchor" href="#%e6%b5%81%e7%a8%8b%e9%83%a8%e7%bd%b2%e6%b7%b1%e5%85%a5%e8%a7%a3%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>使用eclipse打包部署(没有eclipse环境，所以这里只有截图)
将两个流程，打包为bar文件，然后放到项目resources文件夹中
&lt;img src="img/ly-20241212142105247.png" alt="ly-20241212142105247" />
&lt;img src="img/ly-20241212142105148.png" alt="ly-20241212142105148" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>这里是为了测试一次部署多个流程（定义，图）
代码如下
&lt;img src="img/ly-20241212142105345.png" alt="ly-20241212142105345" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>部署完成后查看表结构&lt;/p>
&lt;ul>
&lt;li>
&lt;p>act_re_procdef&lt;/p>
&lt;p>部署id一样
&lt;img src="img/ly-20241212142105443.png" alt="ly-20241212142105443" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>act_re_deployment
&lt;img src="img/ly-20241212142105547.png" alt="ly-20241212142105547" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>结论：部署和定义是1对多的关系&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>每次部署所涉及到的资源文件
&lt;img src="img/ly-20241212142105649.png" alt="ly-20241212142105649" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>涉及到的三张表&lt;/p>
&lt;ul>
&lt;li>
&lt;p>act_ge_bytearray
&lt;img src="img/ly-20241212142105747.png" alt="ly-20241212142105747" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>act_re_procdef
category&amp;ndash;&amp;gt;xml中的namespace
name&amp;ndash;&amp;gt;定义时起的名称
key_&amp;mdash;&amp;gt;xml中定义的id
resource_name&amp;mdash;&amp;gt;xml文件名称
dgrm_resource_name&amp;ndash;&amp;gt;生成图片名称
suspension_state &amp;ndash;&amp;gt; 是否被挂起&lt;/p>
&lt;p>tenant_id &amp;ndash; &amp;gt;谁部署的流程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>act_re_deployment
name_部署名&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>代码
&lt;img src="img/ly-20241212142105845.png" alt="ly-20241212142105845" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>主要源码
DeployCmd.class
&lt;img src="img/ly-20241212142105941.png" alt="ly-20241212142105941" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DeploymentEntityManagerImpl.java
&lt;img src="img/ly-20241212142106041.png" alt="ly-20241212142106041" />&lt;/p></description></item><item><title>boge-02-flowable进阶_1</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_1/</link><pubDate>Sat, 14 May 2022 21:59:40 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/02-advance_1/</guid><description>&lt;h2 id="表结构">
 表结构
 &lt;a class="anchor" href="#%e8%a1%a8%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>尽量通过API动数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ACT_RE：repository，包含流程定义和流程静态资源&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ACT_RU: runtime，包含流程实例、任务、变量等，流程结束会删除&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ACT_HI: history，包含历史数据，比如历史流程实例、变量、任务等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ACT_GE: general，通用数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ACT_ID: identity，组织机构。包含标识的信息，如用户、用户组等等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>具体的&lt;/p>
&lt;ul>
&lt;li>
&lt;p>流程历史记录&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142103886.png" alt="ly-20241212142103886" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>流程定义表
&lt;img src="img/ly-20241212142104111.png" alt="ly-20241212142104111" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行实例表
&lt;img src="img/ly-20241212142104209.png" alt="ly-20241212142104209" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用户用户组表&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142104309.png" alt="ly-20241212142104309" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>源码中的体现
&lt;img src="img/ly-20241212142104410.png" alt="ly-20241212142104410" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="默认的配置文件加载">
 默认的配置文件加载
 &lt;a class="anchor" href="#%e9%bb%98%e8%ae%a4%e7%9a%84%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e5%8a%a0%e8%bd%bd">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>对于&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ProcessEngine defaultProcessEngine &lt;span style="color:#f92672">=&lt;/span> ProcessEngines.&lt;span style="color:#a6e22e">getDefaultProcessEngine&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> ProcessEngine &lt;span style="color:#a6e22e">getDefaultProcessEngine&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> getProcessEngine(NAME_DEFAULT); &lt;span style="color:#75715e">//NAME_DEFAULT = &amp;#34;default&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> ProcessEngine &lt;span style="color:#a6e22e">getProcessEngine&lt;/span>(String processEngineName) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>isInitialized()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> init();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> processEngines.&lt;span style="color:#a6e22e">get&lt;/span>(processEngineName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//--&amp;gt;部分&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * Initializes all process engines that can be found on the classpath for resources &amp;lt;code&amp;gt;flowable.cfg.xml&amp;lt;/code&amp;gt; (plain Flowable style configuration) and for resources
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * &amp;lt;code&amp;gt;flowable-context.xml&amp;lt;/code&amp;gt; (Spring style configuration).
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">synchronized&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>isInitialized()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (processEngines &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Create new map to store process-engines if current map is null&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processEngines &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ClassLoader classLoader &lt;span style="color:#f92672">=&lt;/span> ReflectUtil.&lt;span style="color:#a6e22e">getClassLoader&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Enumeration&lt;span style="color:#f92672">&amp;lt;&lt;/span>URL&lt;span style="color:#f92672">&amp;gt;&lt;/span> resources &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resources &lt;span style="color:#f92672">=&lt;/span> classLoader.&lt;span style="color:#a6e22e">getResources&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;flowable.cfg.xml&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (IOException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> FlowableIllegalArgumentException(&lt;span style="color:#e6db74">&amp;#34;problem retrieving flowable.cfg.xml resources on the classpath: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> System.&lt;span style="color:#a6e22e">getProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;java.class.path&amp;#34;&lt;/span>), e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//后面还有，每帖出来&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>注意这行&lt;code>classLoader.getResources(&amp;quot;flowable.cfg.xml&amp;quot;);&lt;/code>
需要在resources根目录下放这么一个文件&lt;/p></description></item><item><title>boge-01-flowable基础</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/01-base/</link><pubDate>Sat, 14 May 2022 07:29:14 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/boge_blbl_/01-base/</guid><description>&lt;h2 id="flowable介绍">
 Flowable介绍
 &lt;a class="anchor" href="#flowable%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>flowable的历史&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142101999.png" alt="ly-20241212142101999" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>flowable是BPNM的一个基于java的软件实现，不仅包括BPMN，还有DMN决策表和CMMNCase管理引擎，并且有自己的用户管理、微服务API等&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="获取engine对象">
 获取Engine对象
 &lt;a class="anchor" href="#%e8%8e%b7%e5%8f%96engine%e5%af%b9%e8%b1%a1">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>maven依赖&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>8.0.29&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/org.flowable/flowable-engine --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.flowable&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>flowable-engine&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>6.7.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/junit/junit --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>junit&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>junit&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>4.13.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>配置并获取ProcessEngine&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ProcessEngineConfiguration configuration&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">new&lt;/span> StandaloneProcessEngineConfiguration();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//配置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">setJdbcDriver&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mysql.cj.jdbc.Driver&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">setJdbcUsername&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">setJdbcPassword&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//nullCatalogMeansCurrent=true 设置为只查当前连接的schema库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">setJdbcUrl&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;jdbc:mysql://localhost:3306/flowable-learn?&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;useUnicode=true&amp;amp;characterEncoding=utf-8&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;amp;allowMultiQueries=true&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;amp;nullCatalogMeansCurrent=true&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//如果数据库中表结构不存在则新建&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">setDatabaseSchemaUpdate&lt;/span>(ProcessEngineConfiguration.&lt;span style="color:#a6e22e">DB_SCHEMA_UPDATE_TRUE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//构建ProcessEngine&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ProcessEngine processEngine&lt;span style="color:#f92672">=&lt;/span>configuration.&lt;span style="color:#a6e22e">buildProcessEngine&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="日志和表结构介绍">
 日志和表结构介绍
 &lt;a class="anchor" href="#%e6%97%a5%e5%bf%97%e5%92%8c%e8%a1%a8%e7%bb%93%e6%9e%84%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>添加slf4j依赖&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-reload4j --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>slf4j-reload4j&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.7.36&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;scope&amp;gt;&lt;/span>test&lt;span style="color:#f92672">&amp;lt;/scope&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.logging.log4j&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>log4j-api&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.17.2&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>添加log配置文件&lt;/p></description></item><item><title>linux_韩老师_12-20</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/12-20/</link><pubDate>Tue, 10 May 2022 21:18:22 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/12-20/</guid><description>&lt;h2 id="目录结构">
 目录结构
 &lt;a class="anchor" href="#%e7%9b%ae%e5%bd%95%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>目录结构很重要&lt;/p>
&lt;ul>
&lt;li>
&lt;p>windows下
&lt;img src="img/ly-20241212142133607.png" alt="ly-20241212142133607" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>linux下，从根目录开始分支
/，/root （root用户），/home （创建的用户的目录），/bin（常用的指令），/etc（环境配置）&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142133807.png" alt="ly-20241212142133807" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在linux世界里，一切皆文件&lt;/p>
&lt;ul>
&lt;li>
&lt;p>cpu被映射成文件&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142133880.png" alt="ly-20241212142133880" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>硬盘
&lt;img src="img/ly-20241212142133952.png" alt="ly-20241212142133952" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>具体的目录结构&lt;/p>
&lt;ul>
&lt;li>
&lt;p>/bin 常用，binary的缩写，存放常用的命令
(/usr/bin、/usr/local/bin)
&lt;img src="img/ly-20241212142134025.png" alt="ly-20241212142134025" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/sbin （/usr/sbin、/usr/local/sbin）
SuperUser，存放的是系统管理员使用的系统管理程序&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/home 存放普通用户的主目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>useradd jack
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>之后看该目录
&lt;img src="img/ly-20241212142134097.png" alt="ly-20241212142134097" />&lt;/li>
&lt;li>删掉 &lt;code>userdel -r jack&lt;/code>
目录消失&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>/root 该目录为系统管理员，也称超级管理员的用户的主目录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/lib 系统开机所需要的最基本的动态连接共享库，其作用类似于windows里的DLL，几乎所有的应用程序都需要用到这些共享库&lt;/p>
&lt;/li>
&lt;li>
&lt;p>lost+found 一般为空，非法关机后会存放文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/etc 系统管理所需要的配置文件和子目录，比如mysql的my.conf&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/usr 用户的应用程序和文件，类似windows的program files&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/boot 启动Linux时使用的核心文件（破坏则无法启动）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>/proc （不能动）&lt;/strong> 虚拟目录，系统内存的映射，访问这个目录获取系统信息&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>/srv （不能动）&lt;/strong> service的缩写，存放服务启动之后需要提取的数据&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>/sys （不能动）&lt;/strong> 安装了2.6内核中新出现的文件系统 sysfs&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/tmp 这个目录用来存放一些临时文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/dev 类似windows设备管理器，将硬件映射成文件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/media linux系统会自动识别一些设备，u盘、光驱，将识别的设备映射到该目录下&lt;/p>
&lt;/li>
&lt;li>
&lt;p>/mnt 为了让用户挂载别的文件系统，比如将外部的存储&lt;em>挂载&lt;/em>到该目录
&lt;img src="img/ly-20241212142134167.png" alt="ly-20241212142134167" />
&lt;img src="img/ly-20241212142134238.png" alt="ly-20241212142134238" />&lt;/p></description></item><item><title>linux_韩老师_07-11</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/07-11/</link><pubDate>Tue, 10 May 2022 20:42:32 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/07-11/</guid><description>&lt;h2 id="网络连接">
 网络连接
 &lt;a class="anchor" href="#%e7%bd%91%e7%bb%9c%e8%bf%9e%e6%8e%a5">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>网络连接的三种模式
同一个教室的三个主机
&lt;img src="img/ly-20241212142132441.png" alt="ly-20241212142132441" />
此时三个同学可以正常通讯
&lt;ul>
&lt;li>桥接模式
&lt;img src="img/ly-20241212142132642.png" alt="ly-20241212142132642" />
这是张三的虚拟机和外部互通；但是如果这样设置，ip会不够用；&lt;/li>
&lt;li>NAT模式
&lt;img src="img/ly-20241212142132718.png" alt="ly-20241212142132718" />
如图，虚拟机可以跟虚拟的网卡(192.168.100.99)互通，且通过这个虚拟网卡，及（192.168.0.50代理），与外界(192.168.0.X)互通
&lt;strong>NAT模式，网络地址转换模式&lt;/strong>，虚拟系统和外部系统通讯，不造成IP冲突
&lt;img src="img/ly-20241212142132796.png" alt="ly-20241212142132796" />
注意，这里外部其他主机(除0.50和100.99)是访问不到100.88的&lt;/li>
&lt;li>主机模式：独立的系统&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="虚拟机克隆">
 虚拟机克隆
 &lt;a class="anchor" href="#%e8%99%9a%e6%8b%9f%e6%9c%ba%e5%85%8b%e9%9a%86">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>方式1，直接拷贝整个文件夹
&lt;img src="img/ly-20241212142132865.png" alt="ly-20241212142132865" />&lt;/li>
&lt;li>方式2，使用VMWare
克隆前先把克隆目标关闭
克隆虚拟机当前状态&amp;ndash;创建完整克隆&lt;/li>
&lt;/ul>
&lt;h2 id="虚拟机快照">
 虚拟机快照
 &lt;a class="anchor" href="#%e8%99%9a%e6%8b%9f%e6%9c%ba%e5%bf%ab%e7%85%a7">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>为什么需要虚拟机快照
&lt;img src="img/ly-20241212142132937.png" alt="ly-20241212142132937" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>快照a
&lt;img src="img/ly-20241212142133013.png" alt="ly-20241212142133013" />
之后创建了文件夹hello
然后拍摄快照b
之后创建了文件夹hello2
然后拍摄快照c&lt;/p>
&lt;/li>
&lt;li>
&lt;p>目前
&lt;img src="img/ly-20241212142133086.png" alt="" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142133161.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>回到快照A
&lt;img src="img/ly-20241212142133231.png" alt="ly-20241212142133231" />
之后会重启，效果（两个文件夹都没有了)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果恢复到B，然后再创建一个快照，就会变成
&lt;img src="img/ly-20241212142133305.png" alt="ly-20241212142133305" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="虚拟机迁移">
 虚拟机迁移
 &lt;a class="anchor" href="#%e8%99%9a%e6%8b%9f%e6%9c%ba%e8%bf%81%e7%a7%bb">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>直接剪切、删除，即可
&lt;img src="img/ly-20241212142133375.png" alt="ly-20241212142133375" />&lt;/li>
&lt;/ul>
&lt;h2 id="vmtools工具">
 vmtools工具
 &lt;a class="anchor" href="#vmtools%e5%b7%a5%e5%85%b7">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>如下步骤，注意，这里只是在有界面的情况下进行安装
&lt;img src="img/ly-20241212142133446.png" alt="ly-20241212142133446" />&lt;/li>
&lt;li>安装完毕后
&lt;ul>
&lt;li>在vm上面设置
&lt;img src="img/ly-20241212142133522.png" alt="ly-20241212142133522" />&lt;/li>
&lt;li>共享文件夹在linux中的路径 /mnt/hgfs/myshare&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Flowable-05-spring-boot</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/05/</link><pubDate>Fri, 29 Apr 2022 15:31:15 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/05/</guid><description>&lt;h3 id="入门">
 入门
 &lt;a class="anchor" href="#%e5%85%a5%e9%97%a8">#&lt;/a>
&lt;/h3>
&lt;p>需要两个依赖&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;flowable.version&amp;gt;&lt;/span>6.7.2&lt;span style="color:#f92672">&amp;lt;/flowable.version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.flowable&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>flowable-spring-boot-starter&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>${flowable.version}&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- https://mvnrepository.com/artifact/com.h2database/h2 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.h2database&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>h2&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>2.1.212&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>结合Spring：&lt;/p>
&lt;p>只需将依赖项添加到类路径并使用*@SpringBootApplication*注释，幕后就会发生很多事情：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>自动创建内存数据源（因为 H2 驱动程序位于类路径中）并传递给 Flowable 流程引擎配置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>已创建并公开了 Flowable ProcessEngine、CmmnEngine、DmnEngine、FormEngine、ContentEngine 和 IdmEngine bean&lt;/p>
&lt;/li>
&lt;li>
&lt;p>所有 Flowable 服务都暴露为 Spring bean&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Spring Job Executor 已创建&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将自动部署&lt;em>流程&lt;/em>文件夹中的任何 BPMN 2.0 流程定义。创建一个文件夹&lt;em>processes&lt;/em>并将一个虚拟进程定义（名为&lt;em>one-task-process.bpmn20.xml&lt;/em>）添加到此文件夹。该文件的内容如下所示。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>xml version&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;1.0&amp;#34;&lt;/span> encoding&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span style="color:#f92672">?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>definitions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.omg.org/spec/BPMN/20100524/MODEL&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> xmlns:flowable&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://flowable.org/bpmn&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> targetNamespace&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Examples&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>process id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;oneTaskProcess&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;The One Task Process&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>startEvent id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;theStart&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;flow1&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;theStart&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;theTask&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>userTask id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;theTask&amp;#34;&lt;/span> name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;my task&amp;#34;&lt;/span> flowable:assignee&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;kermit&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>sequenceFlow id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;flow2&amp;#34;&lt;/span> sourceRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;theTask&amp;#34;&lt;/span> targetRef&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;theEnd&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>endEvent id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;theEnd&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/&lt;/span>process&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/&lt;/span>definitions&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;em>案例&lt;/em>文件夹中的任何 CMMN 1.1 案例定义都将自动部署。&lt;/p></description></item><item><title>Flowable-04-spring</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/04/</link><pubDate>Fri, 29 Apr 2022 14:57:32 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/04/</guid><description>&lt;h3 id="processenginefactorybean">
 ProcessEngineFactoryBean
 &lt;a class="anchor" href="#processenginefactorybean">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>将ProcessEngine配置为常规的SpringBean&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngineConfiguration&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.flowable.spring.SpringProcessEngineConfiguration&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngine&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.flowable.spring.ProcessEngineFactoryBean&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngineConfiguration&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngineConfiguration&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用transaction&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:context=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:tx=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/tx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/beans/spring-beans.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/context
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/context/spring-context-2.5.xsd
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/tx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> http://www.springframework.org/schema/tx/spring-tx-3.0.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.jdbc.datasource.SimpleDriverDataSource&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;driverClass&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.h2.Driver&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbc:h2:mem:flowable;DB_CLOSE_DELAY=1000&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sa&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.springframework.jdbc.datasource.DataSourceTransactionManager&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngineConfiguration&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.flowable.spring.SpringProcessEngineConfiguration&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dataSource&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;databaseSchemaUpdate&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;asyncExecutorActivate&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngine&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.flowable.spring.ProcessEngineFactoryBean&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngineConfiguration&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">ref=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngineConfiguration&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;repositoryService&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-bean=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngine&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;getRepositoryService&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;runtimeService&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-bean=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngine&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;getRuntimeService&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;taskService&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-bean=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngine&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;getTaskService&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;historyService&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-bean=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngine&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;getHistoryService&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;managementService&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-bean=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngine&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">factory-method=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;getManagementService&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>还包括了其他的一些bean&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;&lt;/span>beans&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>tx:annotation&lt;span style="color:#f92672">-&lt;/span>driven transaction&lt;span style="color:#f92672">-&lt;/span>manager&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;transactionManager&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>bean id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;userBean&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">=&amp;#34;&lt;/span>&lt;span style="color:#a6e22e">org&lt;/span>.&lt;span style="color:#a6e22e">flowable&lt;/span>.&lt;span style="color:#a6e22e">spring&lt;/span>.&lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">UserBean&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;property name=&amp;#34;&lt;/span>runtimeService&lt;span style="color:#e6db74">&amp;#34; ref=&amp;#34;&lt;/span>runtimeService&lt;span style="color:#e6db74">&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;/bean&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &amp;lt;bean id=&amp;#34;&lt;/span>printer&lt;span style="color:#e6db74">&amp;#34; class=&amp;#34;&lt;/span>org.&lt;span style="color:#a6e22e">flowable&lt;/span>.&lt;span style="color:#a6e22e">spring&lt;/span>.&lt;span style="color:#a6e22e">test&lt;/span>.&lt;span style="color:#a6e22e">Printer&lt;/span>&lt;span style="color:#e6db74">&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;lt;/beans&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用&lt;/p></description></item><item><title>Flowable-03-api</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/03/</link><pubDate>Fri, 29 Apr 2022 09:57:47 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/03/</guid><description>&lt;h3 id="流程引擎api和服务">
 流程引擎API和服务
 &lt;a class="anchor" href="#%e6%b5%81%e7%a8%8b%e5%bc%95%e6%93%8eapi%e5%92%8c%e6%9c%8d%e5%8a%a1">#&lt;/a>
&lt;/h3>
&lt;p>引擎API是与Flowable交互的常见方式，主要起点是ProcessEngine，可以通过配置（Configuration章节）中描述的多种方式创建。&lt;/p>
&lt;p>从ProcessEngine获取包含工作流/BPM方法的各种服务。ProcessEngine和服务对象是线程安全的&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142116684.png" alt="ly-20241212142116684" />&lt;/p>
&lt;p>下面是通过processEngine获取各种服务的方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ProcessEngine processEngine &lt;span style="color:#f92672">=&lt;/span> ProcessEngines.&lt;span style="color:#a6e22e">getDefaultProcessEngine&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RuntimeService runtimeService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getRuntimeService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RepositoryService repositoryService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getRepositoryService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TaskService taskService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getTaskService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ManagementService managementService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getManagementService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>IdentityService identityService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getIdentityService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HistoryService historyService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getHistoryService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FormService formService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getFormService&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DynamicBpmnService dynamicBpmnService &lt;span style="color:#f92672">=&lt;/span> processEngine.&lt;span style="color:#a6e22e">getDynamicBpmnService&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ProcessEngines.getDefaultProcessEngine()在第一次调用时初始化并构建流程引擎，然后返回相同的流程引擎&lt;/p>
&lt;p>ProcessEngines类将扫描所有flowable.cfg.xml和flowable-context.xml文件。&lt;/p>
&lt;blockquote>
&lt;p>对于所有 flowable.cfg.xml 文件，流程引擎将以典型的 Flowable 方式构建：ProcessEngineConfiguration.createProcessEngineConfigurationFromInputStream(inputStream).buildProcessEngine()。&lt;/p>
&lt;p>对于所有 flowable-context.xml 文件，流程引擎将以 Spring 方式构建：首先创建 Spring 应用程序上下文，然后从该应用程序上下文中获取流程引擎。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>The &lt;strong>RepositoryService&lt;/strong> is probably the first service needed when working with the Flowable engine.&lt;/p>
&lt;/blockquote>
&lt;p>该服务**(RepositoryService)&lt;strong>提供用于管理和操作部署&lt;/strong>deployments**和流程定义的操作&lt;/p>
&lt;ul>
&lt;li>查询引擎已知的部署和流程定义&lt;/li>
&lt;li>暂停和激活作为一个整体或特定流程定义的部署。挂起意味着不能对它们执行进一步的操作，而激活则相反并再次启用操作&lt;/li>
&lt;li>检索各种资源，例如引擎自动生成的部署或流程图中包含的文件&lt;/li>
&lt;li>检索流程定义的 POJO 版本，该版本可用于使用 Java 而不是 XML 来内省流程&lt;/li>
&lt;/ul>
&lt;p>RepositoryService主要是关于静态信息（不会改变的数据，或者至少不会改变太多），而RuntimeService处理启动流程定义的&lt;em>新流程实例&lt;/em>&lt;/p></description></item><item><title>Flowable-02-Configuration</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/02/</link><pubDate>Fri, 29 Apr 2022 09:37:24 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/02/</guid><description>&lt;h3 id="创建流程引擎">
 创建流程引擎
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e6%b5%81%e7%a8%8b%e5%bc%95%e6%93%8e">#&lt;/a>
&lt;/h3>
&lt;p>Flowable 流程引擎通过一个名为 flowable.cfg.xml 的 XML 文件进行配置&lt;/p>
&lt;ul>
&lt;li>
&lt;p>现在类路径下放置floable.cfg.xml文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;beans&lt;/span> &lt;span style="color:#a6e22e">xmlns=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xmlns:xsi=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">xsi:schemaLocation=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;bean&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;processEngineConfiguration&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.flowable.engine.impl.cfg.StandaloneProcessEngineConfiguration&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbcUrl&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbc:h2:mem:flowable;DB_CLOSE_DELAY=1000&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbcDriver&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;org.h2.Driver&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbcUsername&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sa&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbcPassword&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;databaseSchemaUpdate&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;asyncExecutorActivate&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mailServerHost&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mail.my-corp.com&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mailServerPort&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;5025&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/bean&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/beans&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>然后使用静态方法进行获取ProcessEngine&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>ProcessEngine processEngine &lt;span style="color:#f92672">=&lt;/span> ProcessEngines.&lt;span style="color:#a6e22e">getDefaultProcessEngine&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>还有其他配置，这里不一一列举，详见文档地址

&lt;a target="_blank" href="https://www.flowable.com/open-source/docs/bpmn/ch03-Configuration">https://www.flowable.com/open-source/docs/bpmn/ch03-Configuration&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>大致目录如下
&lt;img src="img/ly-20241212142116369.png" alt="ly-20241212142116369" />
&lt;img src="img/ly-20241212142116576.png" alt="ly-20241212142116576" />&lt;/p>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ul></description></item><item><title>Flowable-01-GettingStarted</title><link>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/01/</link><pubDate>Wed, 27 Apr 2022 22:32:24 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Flowable/offical/01/</guid><description>&lt;h2 id="入门">
 入门
 &lt;a class="anchor" href="#%e5%85%a5%e9%97%a8">#&lt;/a>
&lt;/h2>
&lt;h3 id="什么是流动性">
 什么是流动性
 &lt;a class="anchor" href="#%e4%bb%80%e4%b9%88%e6%98%af%e6%b5%81%e5%8a%a8%e6%80%a7">#&lt;/a>
&lt;/h3>
&lt;blockquote>
&lt;p>Flowable 是一个用 Java 编写的轻量级业务流程引擎。Flowable 流程引擎允许您部署 BPMN 2.0 流程定义（用于定义流程的行业 XML 标准）、创建这些流程定义的流程实例、运行查询、访问活动或历史流程实例和相关数据等等。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>可以使用 Flowable REST API 通过 HTTP 进行通信。还有几个 Flowable 应用程序（Flowable Modeler、Flowable Admin、Flowable IDM 和 Flowable Task）提供开箱即用的示例 UI，用于处理流程和任务。&lt;/p>
&lt;/blockquote>
&lt;h3 id="flowable和activiti">
 Flowable和Activiti
 &lt;a class="anchor" href="#flowable%e5%92%8cactiviti">#&lt;/a>
&lt;/h3>
&lt;p>Flowable是Activiti的一个分支&lt;/p>
&lt;h3 id="构建命令行命令">
 构建命令行命令
 &lt;a class="anchor" href="#%e6%9e%84%e5%bb%ba%e5%91%bd%e4%bb%a4%e8%a1%8c%e5%91%bd%e4%bb%a4">#&lt;/a>
&lt;/h3>
&lt;h4 id="创建流程引擎">
 创建流程引擎
 &lt;a class="anchor" href="#%e5%88%9b%e5%bb%ba%e6%b5%81%e7%a8%8b%e5%bc%95%e6%93%8e">#&lt;/a>
&lt;/h4>
&lt;p>请假流程如下&lt;/p>
&lt;ul>
&lt;li>员工要求休假数次&lt;/li>
&lt;li>经理批准或拒绝请求&lt;/li>
&lt;li>之后将模拟再某个外部系统中注册请求，并向员工发送一封包含结果的邮件&lt;/li>
&lt;/ul>
&lt;p>创建一个空的Mave项目，并添加依赖&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.flowable&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>flowable-engine&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>6.6.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.h2database&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>h2&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>1.3.176&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>mysql&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>mysql-connector-java&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>8.0.29&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span> &lt;span style="color:#75715e">&amp;lt;!--当版本号&amp;gt;=8.0.22时会报date转字符串的错误--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>添加一个带有Main方法的类&lt;/p>
&lt;p>这里实例化一个&lt;strong>ProcessEngine&lt;/strong>实例，一般只需要实例化一次，是通过&lt;strong>ProcessEngineConfiguration&lt;/strong>创建的，用来配置和调整流程引擎的配置&lt;/p>
&lt;ul>
&lt;li>&lt;em>ProcessEngineConfiguration&lt;/em>也可以使用配置 XML 文件创建&lt;/li>
&lt;li>&lt;em>ProcessEngineConfiguration&lt;/em>需要的最低配置是与数据库的 JDBC 连接&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> org.flowable;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.engine.ProcessEngine;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.engine.ProcessEngineConfiguration;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> org.flowable.engine.impl.cfg.StandaloneProcessEngineConfiguration;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">HolidayRequest&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//这里改用mysql，注意后面的nullCatalogMeansCurrent=true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//注意，pom需要添加mysql驱动依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ProcessEngineConfiguration cfg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> StandaloneProcessEngineConfiguration()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">setJdbcUrl&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;jdbc:mysql://localhost:3306/flowable_official?useUnicode=true&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;amp;characterEncoding=utf-8&amp;amp;serverTimezone=Asia/Shanghai&amp;amp;allowMultiQueries=true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;amp;nullCatalogMeansCurrent=true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">setJdbcUsername&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">setJdbcPassword&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">setJdbcDriver&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.mysql.cj.jdbc.Driver&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">setDatabaseSchemaUpdate&lt;/span>(ProcessEngineConfiguration.&lt;span style="color:#a6e22e">DB_SCHEMA_UPDATE_TRUE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* //这是官网，用的h2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> ProcessEngineConfiguration cfg = new StandaloneProcessEngineConfiguration()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> .setJdbcUrl(&amp;#34;jdbc:h2:mem:flowable;DB_CLOSE_DELAY=-1&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> .setJdbcUsername(&amp;#34;sa&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> .setJdbcPassword(&amp;#34;&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> .setJdbcDriver(&amp;#34;org.h2.Driver&amp;#34;)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> .setDatabaseSchemaUpdate(ProcessEngineConfiguration.DB_SCHEMA_UPDATE_TRUE);*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ProcessEngine processEngine &lt;span style="color:#f92672">=&lt;/span> cfg.&lt;span style="color:#a6e22e">buildProcessEngine&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行后会出现slf4j的警告，添加依赖并编写配置文件即可&lt;/p></description></item><item><title>算法红皮书 2.1.2-2.1.3</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/2.1.2-2.1.3/</link><pubDate>Sat, 23 Apr 2022 15:54:21 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/2.1.2-2.1.3/</guid><description>&lt;h1 id="排序">
 排序
 &lt;a class="anchor" href="#%e6%8e%92%e5%ba%8f">#&lt;/a>
&lt;/h1>
&lt;h2 id="初级排序算法">
 初级排序算法
 &lt;a class="anchor" href="#%e5%88%9d%e7%ba%a7%e6%8e%92%e5%ba%8f%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;h3 id="选择排序">
 选择排序
 &lt;a class="anchor" href="#%e9%80%89%e6%8b%a9%e6%8e%92%e5%ba%8f">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>命题A。对于长度为N 的数组，选择排序需要大约 N^2/2 次比较和N 次交换。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Selection&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">sort&lt;/span>(Comparable&lt;span style="color:#f92672">[]&lt;/span> a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 将a[]按升序排列&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span> N &lt;span style="color:#f92672">=&lt;/span> a.&lt;span style="color:#a6e22e">length&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 数组长度&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> N; i&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">// 将a[i]和a[i+1..N]中最小的元素交换&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">int&lt;/span> min &lt;span style="color:#f92672">=&lt;/span> i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">// 最小元素的索引&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> j &lt;span style="color:#f92672">=&lt;/span> i&lt;span style="color:#f92672">+&lt;/span>1; j &lt;span style="color:#f92672">&amp;lt;&lt;/span> N; j&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">if&lt;/span> (less(a&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span>, a&lt;span style="color:#f92672">[&lt;/span>min&lt;span style="color:#f92672">]&lt;/span>)) min &lt;span style="color:#f92672">=&lt;/span> j;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			exch(a, i, min);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">// less()、exch()、isSorted()和main()方法见“排序算法类模板”&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>特点&lt;/p>
&lt;ul>
&lt;li>运行时间与输入无关，即输入数据的初始状态（比如是否已排序好等等）不影响排序时间&lt;/li>
&lt;li>数据移动是最少的（只使用了N次交换，交换次数和数组的大小是线性关系&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="插入排序">
 插入排序
 &lt;a class="anchor" href="#%e6%8f%92%e5%85%a5%e6%8e%92%e5%ba%8f">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>命题B。对于随机排列的长度为N 且主键不重复的数组，平均情况下插入排序需要～ N&lt;sup>2/4 次比较以及～ N&lt;/sup>2/4 次交换。最坏情况下需要～ N&lt;sup>2/2 次比较和～ N&lt;/sup>2/2 次交换，最好情况下需要N-1次比较和0 次交换。&lt;/p></description></item><item><title>算法红皮书 2.1.1</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/2.1.1/</link><pubDate>Wed, 13 Apr 2022 22:43:21 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/2.1.1/</guid><description>&lt;h1 id="排序">
 排序
 &lt;a class="anchor" href="#%e6%8e%92%e5%ba%8f">#&lt;/a>
&lt;/h1>
&lt;p>排序就是将一组对象按照某种逻辑顺序重新排序的过程&lt;/p>
&lt;ul>
&lt;li>对排序算法的分析有助于理解本书中比较算法性能的方法&lt;/li>
&lt;li>类似技术能解决其他类型问题&lt;/li>
&lt;li>排序算法常常是我们解决其他问题的第一步&lt;/li>
&lt;/ul>
&lt;h2 id="初级排序算法">
 初级排序算法
 &lt;a class="anchor" href="#%e5%88%9d%e7%ba%a7%e6%8e%92%e5%ba%8f%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>熟悉术语及技巧&lt;/li>
&lt;li>某些情况下初级算法更有效&lt;/li>
&lt;li>有助于改进复杂算法的效率&lt;/li>
&lt;/ul>
&lt;h3 id="游戏规则">
 游戏规则
 &lt;a class="anchor" href="#%e6%b8%b8%e6%88%8f%e8%a7%84%e5%88%99">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>主要关注重新排序&lt;strong>数组元素&lt;/strong>的算法，每个元素都会有一个&lt;strong>主键&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>排序后索引较大的主键大于索引较小的主键&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一般情况下排序算法通过两个方法操作数据，less()进行比较，exch()进行交换&lt;/p>
&lt;/li>
&lt;li>
&lt;p>排序算法类的模板&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">sort&lt;/span>(Comparable&lt;span style="color:#f92672">[]&lt;/span> a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">/* 请见算法2.1、算法2.2、算法2.3、算法2.4、算法2.5或算法2.7*/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Boolean &lt;span style="color:#a6e22e">less&lt;/span>(Comparable v, Comparable w)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> v.&lt;span style="color:#a6e22e">compareTo&lt;/span>(w) &lt;span style="color:#f92672">&amp;lt;&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">exch&lt;/span>(Comparable&lt;span style="color:#f92672">[]&lt;/span> a, &lt;span style="color:#66d9ef">int&lt;/span> i, &lt;span style="color:#66d9ef">int&lt;/span> j)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		Comparable t &lt;span style="color:#f92672">=&lt;/span> a&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		a&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> a&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		a&lt;span style="color:#f92672">[&lt;/span>j&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> t;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">show&lt;/span>(Comparable&lt;span style="color:#f92672">[]&lt;/span> a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 在单行中打印数组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> a.&lt;span style="color:#a6e22e">length&lt;/span>; i&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		StdOut.&lt;span style="color:#a6e22e">print&lt;/span>(a&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		StdOut.&lt;span style="color:#a6e22e">println&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Boolean &lt;span style="color:#a6e22e">isSorted&lt;/span>(Comparable&lt;span style="color:#f92672">[]&lt;/span> a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 测试数组元素是否有序&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 1; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> a.&lt;span style="color:#a6e22e">length&lt;/span>; i&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">if&lt;/span> (less(a&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span>, a&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">-&lt;/span>1&lt;span style="color:#f92672">]&lt;/span>)) &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// 从标准输入读取字符串，将它们排序并输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		String&lt;span style="color:#f92672">[]&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> In.&lt;span style="color:#a6e22e">readStrings&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		sort(a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">assert&lt;/span> isSorted(a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		show(a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>使用&lt;/p></description></item><item><title>05高级功能</title><link>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/05advance/</link><pubDate>Sat, 09 Apr 2022 09:20:04 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/05advance/</guid><description>&lt;blockquote>
&lt;p>学习来源 
&lt;a target="_blank" href="https://www.bilibili.com/video/BV1L4411y7mn">https://www.bilibili.com/video/BV1L4411y7mn&lt;/a>（添加小部分笔记）感谢作者！&lt;/p>
&lt;/blockquote>
&lt;h1 id="消息存储">
 消息存储
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e5%ad%98%e5%82%a8">#&lt;/a>
&lt;/h1>
&lt;h2 id="流程">
 流程
 &lt;a class="anchor" href="#%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142201154.png" alt="ly-20241212142201154" />&lt;/p>
&lt;h2 id="存储介质">
 存储介质
 &lt;a class="anchor" href="#%e5%ad%98%e5%82%a8%e4%bb%8b%e8%b4%a8">#&lt;/a>
&lt;/h2>
&lt;h3 id="关系型数据库db">
 关系型数据库DB
 &lt;a class="anchor" href="#%e5%85%b3%e7%b3%bb%e5%9e%8b%e6%95%b0%e6%8d%ae%e5%ba%93db">#&lt;/a>
&lt;/h3>
&lt;p>适合数据量不够大，比如&lt;strong>ActiveMQ&lt;/strong>可选用JDBC方式作为消息持久化&lt;/p>
&lt;h3 id="文件系统">
 文件系统
 &lt;a class="anchor" href="#%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>关系型数据库最终也是要存到文件系统中的，不如直接存到文件系统，绕过关系型数据库&lt;/li>
&lt;li>常见的RocketMQ/RabbitMQ/Kafka都是采用消息刷盘到计算机的文件系统来做持久化(&lt;strong>同步刷盘&lt;/strong>/&lt;strong>异步刷盘&lt;/strong>)&lt;/li>
&lt;/ol>
&lt;h2 id="消息发送">
 消息发送
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e5%8f%91%e9%80%81">#&lt;/a>
&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>顺序写：600MB/s，随机写：100KB/s&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>系统运行一段时间后，我们对文件的增删改会导致磁盘上数据无法连续，非常的分散。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>顺序读也只是逻辑上的顺序，也就是按照当前文件的相对偏移量顺序读取，并非磁盘上连续空间读取&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对于磁盘的读写分为两种模式，&lt;strong>顺序IO&lt;/strong>和&lt;strong>随机IO&lt;/strong>。 随机IO存在一个寻址的过程，所以效率比较低。而顺序IO，相当于有一个&lt;strong>物理索引&lt;/strong>，在读取的时候不需要寻找地址，效率很高。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>来源： 
&lt;a target="_blank" href="https://www.cnblogs.com/liuche/p/15455808.html">https://www.cnblogs.com/liuche/p/15455808.html&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>数据网络传输&lt;/p>
&lt;p>零拷贝技术&lt;strong>MappedByteBuffer&lt;/strong>，省去了用户态，由&lt;strong>内核态&lt;/strong>直接拷贝到&lt;strong>网络驱动内核&lt;/strong>。 &lt;br>
RocketMQ默认设置单个CommitLog日志数据文件为1G&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142201208.png" alt="ly-20241212142201208" />&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="消息存储-1">
 消息存储
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e5%ad%98%e5%82%a8-1">#&lt;/a>
&lt;/h2>
&lt;p>三个概念：commitLog、ConsumerQueue、index&lt;/p>
&lt;h3 id="commitlog">
 CommitLog
 &lt;a class="anchor" href="#commitlog">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>默认大小1G&lt;br>
&lt;img src="img/ly-20241212142201240.png" alt="ly-20241212142201240" />&lt;/li>
&lt;li>存储消息的元数据，包括了Topic、QueueId、Message&lt;/li>
&lt;li>还存储了ConsumerQueue相关信息，所以ConsumerQueue丢了也没事&lt;/li>
&lt;/ol>
&lt;h3 id="consumerqueue">
 ConsumerQueue
 &lt;a class="anchor" href="#consumerqueue">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>存储了消息在CommitLog的索引（几百K，Linux会事先加载到内存中）&lt;/li>
&lt;li>包括最小/最大偏移量、已经消费的偏移量&lt;/li>
&lt;li>一个Topic多个队列，每个队列对应一个ConsumerQueue&lt;br>
&lt;img src="img/ly-20241212142201276.png" alt="ly-20241212142201276" />&lt;/li>
&lt;/ol>
&lt;h3 id="index">
 Index
 &lt;a class="anchor" href="#index">#&lt;/a>
&lt;/h3>
&lt;p>也是索引文件，为消息查询服务，通过key或时间区间查询消息&lt;/p>
&lt;h3 id="总结">
 总结
 &lt;a class="anchor" href="#%e6%80%bb%e7%bb%93">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212142201312.png" alt="ly-20241212142201312" />&lt;/p>
&lt;h2 id="刷盘机制">
 刷盘机制
 &lt;a class="anchor" href="#%e5%88%b7%e7%9b%98%e6%9c%ba%e5%88%b6">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142201340.png" alt="ly-20241212142201340" />&lt;/p>
&lt;ol>
&lt;li>同步刷盘&lt;/li>
&lt;li>异步刷盘&lt;/li>
&lt;/ol>
&lt;h1 id="高可用性机制">
 高可用性机制
 &lt;a class="anchor" href="#%e9%ab%98%e5%8f%af%e7%94%a8%e6%80%a7%e6%9c%ba%e5%88%b6">#&lt;/a>
&lt;/h1>
&lt;h2 id="消费高可用及发送高可用">
 消费高可用及发送高可用
 &lt;a class="anchor" href="#%e6%b6%88%e8%b4%b9%e9%ab%98%e5%8f%af%e7%94%a8%e5%8f%8a%e5%8f%91%e9%80%81%e9%ab%98%e5%8f%af%e7%94%a8">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142201372.png" alt="ly-20241212142201372" />&lt;/p></description></item><item><title>算法红皮书 1.5.1-1.5.3</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.5.1-1.5.3/</link><pubDate>Sat, 09 Apr 2022 08:01:47 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.5.1-1.5.3/</guid><description>&lt;h2 id="案例研究union-find-算法">
 案例研究：union-find 算法
 &lt;a class="anchor" href="#%e6%a1%88%e4%be%8b%e7%a0%94%e7%a9%b6union-find-%e7%ae%97%e6%b3%95">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>设计和分析算法的基本方法
&lt;ul>
&lt;li>优秀的算法能解决实际问题&lt;/li>
&lt;li>高效的算法也可以很简单&lt;/li>
&lt;li>理解某个实现的性能特点是一项有趣的挑战&lt;/li>
&lt;li>在解决同一个问题的多种算法间选择，科学方法是一种重要工具&lt;/li>
&lt;li>迭代式改进能让算法效率越来越高&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="动态连通性">
 动态连通性
 &lt;a class="anchor" href="#%e5%8a%a8%e6%80%81%e8%bf%9e%e9%80%9a%e6%80%a7">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>从输入中读取整数对p q，如果已知的所有整数对都不能说明p,q相连，就打印出pq&lt;/li>
&lt;li>网络：整个程序能够判定是否需要在pq之间架设一条新的连接才能进行通信&lt;/li>
&lt;li>变量名等价性（即指向同一个对象的多个引用）&lt;/li>
&lt;li>数学集合：在处理一个整数对pq时，我们是在判断它们是否属于相同的集合&lt;/li>
&lt;li>本节中，将对象称为&lt;strong>触点&lt;/strong>，整数对称为&lt;strong>连接&lt;/strong>，等价类称为&lt;strong>连通分量&lt;/strong>或是&lt;strong>简称分量&lt;/strong>&lt;/li>
&lt;li>连通性 问题只要求我们的程序能够判别给定的整数对pq是否相连，并没有要求给两者之间的通路上的所有连接&lt;/li>
&lt;li>union-find算法的API&lt;br>
&lt;img src="img/ly-20241212142056628.png" alt="ly-20241212142056628" />&lt;/li>
&lt;li>数据结构和算法的设计影响到算法的效率&lt;/li>
&lt;/ul>
&lt;h3 id="实现">
 实现
 &lt;a class="anchor" href="#%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">UF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span>	id;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">/* 分量id（以触点作为索引） */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>	count;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">/* 分量数量 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">UF&lt;/span>( &lt;span style="color:#66d9ef">int&lt;/span> N )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">/* 初始化分量id数组 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		count	&lt;span style="color:#f92672">=&lt;/span> N;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		id	&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[&lt;/span>N&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">for&lt;/span> ( &lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> N; i&lt;span style="color:#f92672">++&lt;/span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>					id&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">count&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span>(count);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> Boolean &lt;span style="color:#a6e22e">connected&lt;/span>( &lt;span style="color:#66d9ef">int&lt;/span> p, &lt;span style="color:#66d9ef">int&lt;/span> q )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">return&lt;/span>(find( p ) &lt;span style="color:#f92672">==&lt;/span> find( q ) );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">find&lt;/span>( &lt;span style="color:#66d9ef">int&lt;/span> p )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">union&lt;/span>( &lt;span style="color:#66d9ef">int&lt;/span> p, &lt;span style="color:#66d9ef">int&lt;/span> q )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">/* 请见1.5.2.1节用例（quick-find）、1.5.2.3节用例（quick-union）和算法1.5（加权quick-union） */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>( String&lt;span style="color:#f92672">[]&lt;/span> args )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">/* 解决由StdIn得到的动态连通性问题 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">int&lt;/span>	N	&lt;span style="color:#f92672">=&lt;/span> StdIn.&lt;span style="color:#a6e22e">readint&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">/* 读取触点数量 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		UF	uf	&lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> UF( N );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">/* 初始化N个分量 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">while&lt;/span> ( &lt;span style="color:#f92672">!&lt;/span>StdIn.&lt;span style="color:#a6e22e">isEmpty&lt;/span>() )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">int&lt;/span>	p	&lt;span style="color:#f92672">=&lt;/span> StdIn.&lt;span style="color:#a6e22e">readint&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">int&lt;/span>	q	&lt;span style="color:#f92672">=&lt;/span> StdIn.&lt;span style="color:#a6e22e">readint&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">/* 读取整数对 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">if&lt;/span> ( uf.&lt;span style="color:#a6e22e">connected&lt;/span>( p, q ) )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>							&lt;span style="color:#66d9ef">continue&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">/* 如果已经连通则忽略 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			uf.&lt;span style="color:#a6e22e">union&lt;/span>( p, q );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">/* 归并分量 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			StdOut.&lt;span style="color:#a6e22e">println&lt;/span>( p &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> q );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#75715e">/* 打印连接 */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		StdOut.&lt;span style="color:#a6e22e">println&lt;/span>( uf.&lt;span style="color:#a6e22e">count&lt;/span>() &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;components&amp;#34;&lt;/span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>union-find的成本模型：union-find API的各种算法，统计的是&lt;strong>数组的访问次数&lt;/strong>，不论读写&lt;/p></description></item><item><title>04案例</title><link>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/04case/</link><pubDate>Fri, 08 Apr 2022 11:00:03 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/04case/</guid><description>&lt;blockquote>
&lt;p>学习来源 
&lt;a target="_blank" href="https://www.bilibili.com/video/BV1L4411y7mn">https://www.bilibili.com/video/BV1L4411y7mn&lt;/a>（添加小部分笔记）感谢作者!基本架构&lt;/p>
&lt;/blockquote>
&lt;h2 id="架构">
 架构
 &lt;a class="anchor" href="#%e6%9e%b6%e6%9e%84">#&lt;/a>
&lt;/h2>
&lt;p>&lt;img src="img/ly-20241212142200977.png" alt="ly-20241212142200977" />&lt;/p>
&lt;h2 id="流程图">
 流程图
 &lt;a class="anchor" href="#%e6%b5%81%e7%a8%8b%e5%9b%be">#&lt;/a>
&lt;/h2>
&lt;h3 id="下单流程">
 下单流程
 &lt;a class="anchor" href="#%e4%b8%8b%e5%8d%95%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212142201029.png" alt="ly-20241212142201029" />&lt;/p>
&lt;h3 id="支付流程">
 支付流程
 &lt;a class="anchor" href="#%e6%94%af%e4%bb%98%e6%b5%81%e7%a8%8b">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212142201068.png" alt="ly-20241212142201068" />&lt;/p>
&lt;h1 id="springboot整合rocketmq">
 SpringBoot整合RocketMQ
 &lt;a class="anchor" href="#springboot%e6%95%b4%e5%90%88rocketmq">#&lt;/a>
&lt;/h1>
&lt;h2 id="依赖包">
 依赖包
 &lt;a class="anchor" href="#%e4%be%9d%e8%b5%96%e5%8c%85">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>	 &lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.rocketmq&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>rocketmq-spring-boot-starter&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="生产者">
 生产者
 &lt;a class="anchor" href="#%e7%94%9f%e4%ba%a7%e8%80%85">#&lt;/a>
&lt;/h2>
&lt;h3 id="yaml">
 yaml
 &lt;a class="anchor" href="#yaml">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">rocketmq&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name-server&lt;/span>: &lt;span style="color:#ae81ff">192.168.1.135&lt;/span>:&lt;span style="color:#ae81ff">9876&lt;/span>&lt;span style="color:#ae81ff">;192.168.1.138:9876&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">producer&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">my-group&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用">
 使用
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> RocketMQTemplate template;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@RequestMapping&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;rocketmq&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">rocketmq&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">info&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;我被调用了-rocketmq&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//主题+内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template.&lt;span style="color:#a6e22e">convertAndSend&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;mytopic-ly&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;hello1231&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span>&lt;span style="color:#f92672">+&lt;/span>serverPort;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="消费者">
 消费者
 &lt;a class="anchor" href="#%e6%b6%88%e8%b4%b9%e8%80%85">#&lt;/a>
&lt;/h2>
&lt;h3 id="yaml-1">
 yaml
 &lt;a class="anchor" href="#yaml-1">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">rocketmq&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name-server&lt;/span>: &lt;span style="color:#ae81ff">192.168.1.135&lt;/span>:&lt;span style="color:#ae81ff">9876&lt;/span>&lt;span style="color:#ae81ff">;192.168.1.138:9876&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">consumer&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">group&lt;/span>: &lt;span style="color:#ae81ff">my-group2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用-1">
 使用
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8-1">#&lt;/a>
&lt;/h3>
&lt;p>创建监听器&lt;/p></description></item><item><title>03收发消息</title><link>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/03messagetype/</link><pubDate>Thu, 07 Apr 2022 14:31:59 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/03messagetype/</guid><description>&lt;blockquote>
&lt;p>学习来源 
&lt;a target="_blank" href="https://www.bilibili.com/video/BV1L4411y7mn">https://www.bilibili.com/video/BV1L4411y7mn&lt;/a>（添加小部分笔记）感谢作者!前提&lt;/p>
&lt;/blockquote>
&lt;h2 id="依赖包">
 依赖包
 &lt;a class="anchor" href="#%e4%be%9d%e8%b5%96%e5%8c%85">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.apache.rocketmq&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>rocketmq-client&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>4.4.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="消息生产者步骤">
 消息生产者步骤
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e7%94%9f%e4%ba%a7%e8%80%85%e6%ad%a5%e9%aa%a4">#&lt;/a>
&lt;/h2>
&lt;p>创建生产者，生产者组名&amp;ndash;&amp;gt;指定nameserver地址&amp;ndash;&amp;gt;启动producer&amp;ndash;&amp;gt;&lt;/p>
&lt;p>创建消息对象(Topic、Tag、消息体)&lt;/p>
&lt;p>发送消息、关闭生产者producer&lt;/p>
&lt;h2 id="消息消费者步骤">
 消息消费者步骤
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e6%b6%88%e8%b4%b9%e8%80%85%e6%ad%a5%e9%aa%a4">#&lt;/a>
&lt;/h2>
&lt;p>创建消费者，制定消费者组名&amp;ndash;&amp;gt;指定nameserver地址&lt;/p>
&lt;p>订阅Topic和Tag，设置回调函数处理消息&lt;/p>
&lt;p>启动消费者consumer&lt;/p>
&lt;h1 id="消息发送">
 消息发送
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e5%8f%91%e9%80%81">#&lt;/a>
&lt;/h1>
&lt;h2 id="同步消息">
 同步消息
 &lt;a class="anchor" href="#%e5%90%8c%e6%ad%a5%e6%b6%88%e6%81%af">#&lt;/a>
&lt;/h2>
&lt;p>发送消息后客户端会进行阻塞，直到得到结果后，客户端才会继续执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) &lt;span style="color:#66d9ef">throws&lt;/span> MQClientException, MQBrokerException, RemotingException, InterruptedException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//创建Producer，并指定生产者组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DefaultMQProducer producer &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DefaultMQProducer(&lt;span style="color:#e6db74">&amp;#34;group1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> producer.&lt;span style="color:#a6e22e">setNamesrvAddr&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;192.168.1.135:9876;192.168.1.138:9876&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> producer.&lt;span style="color:#a6e22e">start&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> 10; i&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Message msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Message();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg.&lt;span style="color:#a6e22e">setTopic&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;base&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg.&lt;span style="color:#a6e22e">setTags&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Tag1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg.&lt;span style="color:#a6e22e">setBody&lt;/span>((&lt;span style="color:#e6db74">&amp;#34;hello world&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> i).&lt;span style="color:#a6e22e">getBytes&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//发送消息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SendResult result &lt;span style="color:#f92672">=&lt;/span> producer.&lt;span style="color:#a6e22e">send&lt;/span>(msg);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//发送状态&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SendStatus sendStatus &lt;span style="color:#f92672">=&lt;/span> result.&lt;span style="color:#a6e22e">getSendStatus&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//消息id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String msgId &lt;span style="color:#f92672">=&lt;/span> result.&lt;span style="color:#a6e22e">getMsgId&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//消息接收队列id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MessageQueue messageQueue &lt;span style="color:#f92672">=&lt;/span> result.&lt;span style="color:#a6e22e">getMessageQueue&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> queueId &lt;span style="color:#f92672">=&lt;/span> messageQueue.&lt;span style="color:#a6e22e">getQueueId&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">info&lt;/span>(result.&lt;span style="color:#a6e22e">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">info&lt;/span>(messageQueue.&lt;span style="color:#a6e22e">toString&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">info&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;status:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> sendStatus &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;msgId:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> msgId &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;queueId&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> queueId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TimeUnit.&lt;span style="color:#a6e22e">SECONDS&lt;/span>.&lt;span style="color:#a6e22e">sleep&lt;/span>(1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> log.&lt;span style="color:#a6e22e">info&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;发送结束===================&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> producer.&lt;span style="color:#a6e22e">shutdown&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="异步消息">
 异步消息
 &lt;a class="anchor" href="#%e5%bc%82%e6%ad%a5%e6%b6%88%e6%81%af">#&lt;/a>
&lt;/h2>
&lt;p>发送消息后不会导致阻塞，当broker返回结果时，会调用回调函数进行处理&lt;/p></description></item><item><title>算法红皮书 1.4.1-1.4.10</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.4.1-1.4.10/</link><pubDate>Thu, 07 Apr 2022 11:00:21 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.4.1-1.4.10/</guid><description>&lt;h2 id="算法分析">
 算法分析
 &lt;a class="anchor" href="#%e7%ae%97%e6%b3%95%e5%88%86%e6%9e%90">#&lt;/a>
&lt;/h2>
&lt;p>使用&lt;strong>数学分析&lt;/strong>为算法成本建立简洁的模型，并使用实验数据验证这些模型&lt;/p>
&lt;h3 id="科学方法">
 科学方法
 &lt;a class="anchor" href="#%e7%a7%91%e5%ad%a6%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>观察、假设、预测、观察并核实预测、反复确认预测和观察&lt;/li>
&lt;li>原则：实验可重现&lt;/li>
&lt;/ul>
&lt;h3 id="观察">
 观察
 &lt;a class="anchor" href="#%e8%a7%82%e5%af%9f">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>计算性任务的困难程度可以用&lt;strong>问题的规模&lt;/strong>来衡量&lt;/p>
&lt;/li>
&lt;li>
&lt;p>问题规模可以是输入的大小或某个命令行参数的值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>研究问题规模和运行时间的关系&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用计时器得到大概的运行时间
&lt;img src="img/ly-20241212142054451.png" alt="ly-20241212142054451" />&lt;/p>
&lt;ul>
&lt;li>
&lt;p>典型用例&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> N &lt;span style="color:#f92672">=&lt;/span> Integer.&lt;span style="color:#a6e22e">parseInt&lt;/span>(args&lt;span style="color:#f92672">[&lt;/span>0&lt;span style="color:#f92672">]&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> a &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>&lt;span style="color:#f92672">[&lt;/span>N&lt;span style="color:#f92672">]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0; i &lt;span style="color:#f92672">&amp;lt;&lt;/span> N; i&lt;span style="color:#f92672">++&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> StdRandom.&lt;span style="color:#a6e22e">uniform&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>1000000, 1000000);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Stopwatch timer &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Stopwatch();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> cnt &lt;span style="color:#f92672">=&lt;/span> ThreeSum.&lt;span style="color:#a6e22e">count&lt;/span>(a);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">double&lt;/span> time &lt;span style="color:#f92672">=&lt;/span> timer.&lt;span style="color:#a6e22e">elapsedTime&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StdOut.&lt;span style="color:#a6e22e">println&lt;/span>(cnt &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; triples &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> time &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34; seconds&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用方法
&lt;img src="img/ly-20241212142054686.png" alt="ly-20241212142054686" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据类型的实现&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Stopwatch&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">final&lt;/span> &lt;span style="color:#66d9ef">long&lt;/span> start;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Stopwatch&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> start &lt;span style="color:#f92672">=&lt;/span> System.&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">double&lt;/span> &lt;span style="color:#a6e22e">elapsedTime&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">long&lt;/span> now &lt;span style="color:#f92672">=&lt;/span> System.&lt;span style="color:#a6e22e">currentTimeMillis&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (now &lt;span style="color:#f92672">-&lt;/span> start) &lt;span style="color:#f92672">/&lt;/span> 1000.&lt;span style="color:#a6e22e">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="数学模型">
 数学模型
 &lt;a class="anchor" href="#%e6%95%b0%e5%ad%a6%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>程序运行的总时间主要和两点有关：执行每条语句的耗时；执行每条语句的频率&lt;/p></description></item><item><title>算法红皮书1.3.3.1-1.3.4</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.3.3.1-1.3.4/</link><pubDate>Wed, 06 Apr 2022 23:00:44 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.3.3.1-1.3.4/</guid><description>&lt;h2 id="背包队列和栈">
 背包、队列和栈
 &lt;a class="anchor" href="#%e8%83%8c%e5%8c%85%e9%98%9f%e5%88%97%e5%92%8c%e6%a0%88">#&lt;/a>
&lt;/h2>
&lt;h3 id="链表">
 链表
 &lt;a class="anchor" href="#%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>链表是一种递归的数据结构，它或者为空(null)，或者是一个指向一个结点（node）的引用，该节点含有一个泛型的元素和一个指向另一条链表的引用。&lt;/li>
&lt;/ul>
&lt;h4 id="结点记录">
 结点记录
 &lt;a class="anchor" href="#%e7%bb%93%e7%82%b9%e8%ae%b0%e5%bd%95">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>使用嵌套类定义结点的抽象数据类型&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Node&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Item item;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	Node next;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>该类没有其它任何方法，且会在代码中直接引用实例变量，这种类型的变量称为记录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="构造链表">
 构造链表
 &lt;a class="anchor" href="#%e6%9e%84%e9%80%a0%e9%93%be%e8%a1%a8">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>需要一个Node类型的变量，保证它的值是null或者指向另一个Node对象的next域指向了另一个链表&lt;/li>
&lt;li>如下图
&lt;img src="img/ly-20241212142053630.png" alt="ly-20241212142053630" />&lt;/li>
&lt;li>链表表示的是一列元素&lt;/li>
&lt;li>链式结构在本书中的可视化表示
长方形表示对象；实例变量的值写在长方形中；用指向被引用对象的箭头表示引用关系&lt;/li>
&lt;li>术语&lt;strong>链接&lt;/strong>表示对结点的引用&lt;/li>
&lt;/ul>
&lt;h4 id="在表头插入结点">
 在表头插入结点
 &lt;a class="anchor" href="#%e5%9c%a8%e8%a1%a8%e5%a4%b4%e6%8f%92%e5%85%a5%e7%bb%93%e7%82%b9">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>在首结点为first 的给定链表开头插入字符串not，我们先将first 保存在oldfirst 中，
然后将一个新结点赋予first，并将它的item 域设为not，next 域设为oldfirst&lt;/p>
&lt;/li>
&lt;li>
&lt;p>时间复杂度为O(1)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如图
&lt;img src="img/ly-20241212142053870.png" alt="ly-20241212142053870" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="从表头删除结点">
 从表头删除结点
 &lt;a class="anchor" href="#%e4%bb%8e%e8%a1%a8%e5%a4%b4%e5%88%a0%e9%99%a4%e7%bb%93%e7%82%b9">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>将first指向first.next&lt;/p>
&lt;/li>
&lt;li>
&lt;p>原先的结点称为孤儿，Java的内存管理系统最终将回收它所占用的内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如图
&lt;img src="img/ly-20241212142053982.png" alt="ly-20241212142053982" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="在表尾插入结点">
 在表尾插入结点
 &lt;a class="anchor" href="#%e5%9c%a8%e8%a1%a8%e5%b0%be%e6%8f%92%e5%85%a5%e7%bb%93%e7%82%b9">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>每个修改链表的操作都需要增加检查是否要修改该变量（以及做出相应修改）的代码&lt;/p>
&lt;/li>
&lt;li>
&lt;p>例如，当删除链表首结点时可能改变指向链表的尾结点的引用，因为链表中只有一个结点时它既是首结点又是尾结点&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如图
&lt;img src="img/ly-20241212142054097.png" alt="ly-20241212142054097" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="其他位置的插入和删除操作">
 其他位置的插入和删除操作
 &lt;a class="anchor" href="#%e5%85%b6%e4%bb%96%e4%bd%8d%e7%bd%ae%e7%9a%84%e6%8f%92%e5%85%a5%e5%92%8c%e5%88%a0%e9%99%a4%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h4>
&lt;p>删除指定结点；在指定节点插入新结点&lt;/p>
&lt;ul>
&lt;li>需要将链表尾结点的前一个节点中的链接（它指向的是last）值改为null&lt;/li>
&lt;li>为了找到指向last的结点，需要遍历链表，时间复杂度为O(n)&lt;/li>
&lt;li>实现任意插入和删除操作的标准解决方案是&lt;strong>双向链表&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h4 id="遍历">
 遍历
 &lt;a class="anchor" href="#%e9%81%8d%e5%8e%86">#&lt;/a>
&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>将x初始化为链表首结点，然后通过x.item访问和x相关联的元素，并将x设为x.next来访问链表中的下一个结点，知道x=null(没有下一个结点了，到达链表结尾)&lt;/p></description></item><item><title>02双主双从集群搭建</title><link>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/02buildcluster/</link><pubDate>Wed, 06 Apr 2022 10:55:23 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/02buildcluster/</guid><description>&lt;blockquote>
&lt;p>学习来源 
&lt;a target="_blank" href="https://www.bilibili.com/video/BV1L4411y7mn">https://www.bilibili.com/video/BV1L4411y7mn&lt;/a>（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="服务器信息修改">
 服务器信息修改
 &lt;a class="anchor" href="#%e6%9c%8d%e5%8a%a1%e5%99%a8%e4%bf%a1%e6%81%af%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h1>
&lt;p>在.135和.138均进行下面的操作&lt;/p>
&lt;h2 id="解压">
 解压
 &lt;a class="anchor" href="#%e8%a7%a3%e5%8e%8b">#&lt;/a>
&lt;/h2>
&lt;p>rocketmq解压到/usr/local/rocketmq目录下&lt;/p>
&lt;h2 id="host添加">
 host添加
 &lt;a class="anchor" href="#host%e6%b7%bb%e5%8a%a0">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#添加host&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /etc/hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##添加内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.135 rocketmq-nameserver1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.138 rocketmq-nameserver2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.135 rocketmq-master1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.135 rocketmq-slave2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.138 rocketmq-master2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.138 rocketmq-slave1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 保存后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl restart network
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="防火墙">
 防火墙
 &lt;a class="anchor" href="#%e9%98%b2%e7%81%ab%e5%a2%99">#&lt;/a>
&lt;/h2>
&lt;h3 id="直接关闭">
 直接关闭
 &lt;a class="anchor" href="#%e7%9b%b4%e6%8e%a5%e5%85%b3%e9%97%ad">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 防火墙关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl stop firewalld.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 防火墙状态查看&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>firewall-cmd --state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">##禁止开机启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl disable firewalld.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="或者直接关闭对应端口即可">
 或者直接关闭对应端口即可
 &lt;a class="anchor" href="#%e6%88%96%e8%80%85%e7%9b%b4%e6%8e%a5%e5%85%b3%e9%97%ad%e5%af%b9%e5%ba%94%e7%ab%af%e5%8f%a3%e5%8d%b3%e5%8f%af">#&lt;/a>
&lt;/h3>
&lt;p>&lt;img src="img/ly-20241212142200796.png" alt="ly-20241212142200796" />&lt;/p>
&lt;h2 id="环境变量配置">
 环境变量配置
 &lt;a class="anchor" href="#%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f%e9%85%8d%e7%bd%ae">#&lt;/a>
&lt;/h2>
&lt;p>为了执行rocketmq命令方便&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#添加环境变量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /etc/profile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#添加&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ROCKETMQ_HOME&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/rocketmq-all-4.4.0-bin-release
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PATH&lt;span style="color:#f92672">=&lt;/span>$PATH:$ROCKETMQ_HOME/bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export ROCKETMQ_HOME PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#使配置生效&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source /etc/profile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="消息存储路径创建">
 消息存储路径创建
 &lt;a class="anchor" href="#%e6%b6%88%e6%81%af%e5%ad%98%e5%82%a8%e8%b7%af%e5%be%84%e5%88%9b%e5%bb%ba">#&lt;/a>
&lt;/h2>
&lt;h3 id="a">
 a
 &lt;a class="anchor" href="#a">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mkdir /usr/local/rocketmq/store-a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /usr/local/rocketmq/store-a/commitlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /usr/local/rocketmq/store-a/consumequeue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /usr/local/rocketmq/store-a/index
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="b">
 b
 &lt;a class="anchor" href="#b">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mkdir /usr/local/rocketmq/store-b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /usr/local/rocketmq/store-b/commitlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /usr/local/rocketmq/store-b/consumequeue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir /usr/local/rocketmq/store-b/index
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="双主双从配置文件的修改">
 双主双从配置文件的修改
 &lt;a class="anchor" href="#%e5%8f%8c%e4%b8%bb%e5%8f%8c%e4%bb%8e%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6%e7%9a%84%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h1>
&lt;h2 id="master-a">
 master-a
 &lt;a class="anchor" href="#master-a">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#所属集群名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerClusterName&lt;span style="color:#f92672">=&lt;/span>rocketmq-cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#broker名字，注意此处不同的配置文件填写的不一样&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerName&lt;span style="color:#f92672">=&lt;/span>broker-a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#0 表示 Master，&amp;gt;0 表示 Slave&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerId&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#nameServer地址，分号分割&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>namesrvAddr&lt;span style="color:#f92672">=&lt;/span>rocketmq-nameserver1:9876;rocketmq-nameserver2:9876
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>defaultTopicQueueNums&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoCreateTopicEnable&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoCreateSubscriptionGroup&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Broker 对外服务的监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>listenPort&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10911&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#删除文件时间点，默认凌晨 4点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deleteWhen&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">04&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#文件保留时间，默认 48 小时&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fileReservedTime&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">120&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#commitLog每个文件的大小默认1G&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mapedFileSizeCommitLog&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1073741824&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ConsumeQueue每个文件默认存30W条，根据业务情况调整&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mapedFileSizeConsumeQueue&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">300000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#destroyMapedFileIntervalForcibly=120000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#redeleteHangedFileInterval=120000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#检测物理文件磁盘空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diskMaxUsedSpaceRatio&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">88&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathRootDir&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#commitLog 存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathCommitLog&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/commitlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#消费队列存储路径存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathConsumeQueue&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/consumequeue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#消息索引存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathIndex&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#checkpoint 文件存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storeCheckpoint&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/checkpoint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#abort 文件存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>abortFile&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/abort
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#限制的消息大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>maxMessageSize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">65536&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushCommitLogLeastPages=4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushConsumeQueueLeastPages=2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushCommitLogThoroughInterval=10000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushConsumeQueueThoroughInterval=60000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Broker 的角色&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- ASYNC_MASTER 异步复制Master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SYNC_MASTER 同步双写Master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SLAVE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerRole&lt;span style="color:#f92672">=&lt;/span>SYNC_MASTER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#刷盘方式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- ASYNC_FLUSH 异步刷盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SYNC_FLUSH 同步刷盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flushDiskType&lt;span style="color:#f92672">=&lt;/span>SYNC_FLUSH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#checkTransactionMessageEnable=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#发消息线程池数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#sendMessageThreadPoolNums=128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#拉消息线程池数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#pullMessageThreadPoolNums=128&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="slave-b">
 slave-b
 &lt;a class="anchor" href="#slave-b">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#所属集群名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerClusterName&lt;span style="color:#f92672">=&lt;/span>rocketmq-cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#broker名字，注意此处不同的配置文件填写的不一样&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerName&lt;span style="color:#f92672">=&lt;/span>broker-b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#0 表示 Master，&amp;gt;0 表示 Slave&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerId&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#nameServer地址，分号分割&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>namesrvAddr&lt;span style="color:#f92672">=&lt;/span>rocketmq-nameserver1:9876;rocketmq-nameserver2:9876
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>defaultTopicQueueNums&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoCreateTopicEnable&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoCreateSubscriptionGroup&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Broker 对外服务的监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>listenPort&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">11011&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#删除文件时间点，默认凌晨 4点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deleteWhen&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">04&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#文件保留时间，默认 48 小时&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fileReservedTime&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">120&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#commitLog每个文件的大小默认1G&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mapedFileSizeCommitLog&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1073741824&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ConsumeQueue每个文件默认存30W条，根据业务情况调整&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mapedFileSizeConsumeQueue&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">300000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#destroyMapedFileIntervalForcibly=120000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#redeleteHangedFileInterval=120000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#检测物理文件磁盘空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diskMaxUsedSpaceRatio&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">88&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathRootDir&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#commitLog 存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathCommitLog&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/commitlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#消费队列存储路径存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathConsumeQueue&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/consumequeue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#消息索引存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathIndex&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#checkpoint 文件存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storeCheckpoint&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/checkpoint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#abort 文件存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>abortFile&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/abort
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#限制的消息大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>maxMessageSize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">65536&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushCommitLogLeastPages=4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushConsumeQueueLeastPages=2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushCommitLogThoroughInterval=10000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushConsumeQueueThoroughInterval=60000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Broker 的角色&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- ASYNC_MASTER 异步复制Master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SYNC_MASTER 同步双写Master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SLAVE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerRole&lt;span style="color:#f92672">=&lt;/span>SLAVE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#刷盘方式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- ASYNC_FLUSH 异步刷盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SYNC_FLUSH 同步刷盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flushDiskType&lt;span style="color:#f92672">=&lt;/span>ASYNC_FLUSH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#checkTransactionMessageEnable=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#发消息线程池数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#sendMessageThreadPoolNums=128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#拉消息线程池数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#pullMessageThreadPoolNums=128&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="master-b">
 master-b
 &lt;a class="anchor" href="#master-b">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#所属集群名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerClusterName&lt;span style="color:#f92672">=&lt;/span>rocketmq-cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#broker名字，注意此处不同的配置文件填写的不一样&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerName&lt;span style="color:#f92672">=&lt;/span>broker-b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#0 表示 Master，&amp;gt;0 表示 Slave&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerId&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#nameServer地址，分号分割&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>namesrvAddr&lt;span style="color:#f92672">=&lt;/span>rocketmq-nameserver1:9876;rocketmq-nameserver2:9876
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>defaultTopicQueueNums&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoCreateTopicEnable&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoCreateSubscriptionGroup&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Broker 对外服务的监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>listenPort&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10911&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#删除文件时间点，默认凌晨 4点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deleteWhen&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">04&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#文件保留时间，默认 48 小时&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fileReservedTime&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">120&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#commitLog每个文件的大小默认1G&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mapedFileSizeCommitLog&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1073741824&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ConsumeQueue每个文件默认存30W条，根据业务情况调整&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mapedFileSizeConsumeQueue&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">300000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#destroyMapedFileIntervalForcibly=120000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#redeleteHangedFileInterval=120000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#检测物理文件磁盘空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diskMaxUsedSpaceRatio&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">88&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathRootDir&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#commitLog 存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathCommitLog&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/commitlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#消费队列存储路径存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathConsumeQueue&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/consumequeue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#消息索引存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathIndex&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#checkpoint 文件存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storeCheckpoint&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/checkpoint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#abort 文件存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>abortFile&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-b/abort
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#限制的消息大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>maxMessageSize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">65536&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushCommitLogLeastPages=4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushConsumeQueueLeastPages=2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushCommitLogThoroughInterval=10000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushConsumeQueueThoroughInterval=60000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Broker 的角色&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- ASYNC_MASTER 异步复制Master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SYNC_MASTER 同步双写Master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SLAVE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerRole&lt;span style="color:#f92672">=&lt;/span>SYNC_MASTER
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#刷盘方式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- ASYNC_FLUSH 异步刷盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SYNC_FLUSH 同步刷盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flushDiskType&lt;span style="color:#f92672">=&lt;/span>SYNC_FLUSH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#checkTransactionMessageEnable=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#发消息线程池数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#sendMessageThreadPoolNums=128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#拉消息线程池数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#pullMessageThreadPoolNums=128&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="slave-a">
 slave-a
 &lt;a class="anchor" href="#slave-a">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#所属集群名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerClusterName&lt;span style="color:#f92672">=&lt;/span>rocketmq-cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#broker名字，注意此处不同的配置文件填写的不一样&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerName&lt;span style="color:#f92672">=&lt;/span>broker-a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#0 表示 Master，&amp;gt;0 表示 Slave&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerId&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#nameServer地址，分号分割&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>namesrvAddr&lt;span style="color:#f92672">=&lt;/span>rocketmq-nameserver1:9876;rocketmq-nameserver2:9876
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>defaultTopicQueueNums&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoCreateTopicEnable&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>autoCreateSubscriptionGroup&lt;span style="color:#f92672">=&lt;/span>true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Broker 对外服务的监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>listenPort&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">11011&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#删除文件时间点，默认凌晨 4点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deleteWhen&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">04&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#文件保留时间，默认 48 小时&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fileReservedTime&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">120&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#commitLog每个文件的大小默认1G&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mapedFileSizeCommitLog&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1073741824&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#ConsumeQueue每个文件默认存30W条，根据业务情况调整&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mapedFileSizeConsumeQueue&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">300000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#destroyMapedFileIntervalForcibly=120000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#redeleteHangedFileInterval=120000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#检测物理文件磁盘空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diskMaxUsedSpaceRatio&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">88&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathRootDir&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#commitLog 存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathCommitLog&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/commitlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#消费队列存储路径存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathConsumeQueue&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/consumequeue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#消息索引存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storePathIndex&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#checkpoint 文件存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>storeCheckpoint&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/checkpoint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#abort 文件存储路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>abortFile&lt;span style="color:#f92672">=&lt;/span>/usr/local/rocketmq/store-a/abort
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#限制的消息大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>maxMessageSize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">65536&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushCommitLogLeastPages=4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushConsumeQueueLeastPages=2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushCommitLogThoroughInterval=10000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#flushConsumeQueueThoroughInterval=60000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Broker 的角色&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- ASYNC_MASTER 异步复制Master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SYNC_MASTER 同步双写Master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SLAVE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brokerRole&lt;span style="color:#f92672">=&lt;/span>SLAVE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#刷盘方式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- ASYNC_FLUSH 异步刷盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#- SYNC_FLUSH 同步刷盘&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flushDiskType&lt;span style="color:#f92672">=&lt;/span>ASYNC_FLUSH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#checkTransactionMessageEnable=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#发消息线程池数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#sendMessageThreadPoolNums=128&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#拉消息线程池数量&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#pullMessageThreadPoolNums=128&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="修改两台主机的runserversh及runbrokersh修改">
 修改两台主机的runserver.sh及runbroker.sh修改
 &lt;a class="anchor" href="#%e4%bf%ae%e6%94%b9%e4%b8%a4%e5%8f%b0%e4%b8%bb%e6%9c%ba%e7%9a%84runserversh%e5%8f%8arunbrokersh%e4%bf%ae%e6%94%b9">#&lt;/a>
&lt;/h1>
&lt;h2 id="修改runbrokersh">
 修改runbroker.sh
 &lt;a class="anchor" href="#%e4%bf%ae%e6%94%b9runbrokersh">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>JAVA_OPT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>JAVA_OPT&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> -server -Xms256m -Xmx256m -Xmn128m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="修改runserversh">
 修改runserver.sh
 &lt;a class="anchor" href="#%e4%bf%ae%e6%94%b9runserversh">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>JAVA_OPT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>JAVA_OPT&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="两台主机分别启动nameserver和brocker">
 两台主机分别启动nameserver和Brocker
 &lt;a class="anchor" href="#%e4%b8%a4%e5%8f%b0%e4%b8%bb%e6%9c%ba%e5%88%86%e5%88%ab%e5%90%af%e5%8a%a8nameserver%e5%92%8cbrocker">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## 在两台主机分别启动nameserver &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup sh mqnamesrv &amp;amp;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#135启动master1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup sh mqbroker -c /usr/local/rocketmq/rocketmq-all-4.4.0-bin-release/conf/2m-2s-sync/broker-a.properties &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#135启动slave2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup sh mqbroker -c /usr/local/rocketmq/rocketmq-all-4.4.0-bin-release/conf/2m-2s-sync/broker-b-s.properties &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#查看&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3478&lt;/span> Jps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3366&lt;/span> BrokerStartup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3446&lt;/span> BrokerStartup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3334&lt;/span> NamesrvStartup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#138启动master2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup sh mqbroker -c /usr/local/rocketmq/rocketmq-all-4.4.0-bin-release/conf/2m-2s-sync/broker-b.properties &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#135启动slave1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup sh mqbroker -c /usr/local/rocketmq/rocketmq-all-4.4.0-bin-release/conf/2m-2s-sync/broker-a-s.properties &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#查看&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>jps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3376&lt;/span> Jps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3360&lt;/span> BrokerStartup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3251&lt;/span> NamesrvStartup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">3295&lt;/span> BrokerStartup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>双主双从集群搭建完毕！&lt;/strong>&lt;/p></description></item><item><title>01rocketmq学习</title><link>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/01base/</link><pubDate>Wed, 06 Apr 2022 00:11:58 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/RocketMQ/heima_/01base/</guid><description>&lt;blockquote>
&lt;p>学习来源 
&lt;a target="_blank" href="https://www.bilibili.com/video/BV1L4411y7mn">https://www.bilibili.com/video/BV1L4411y7mn&lt;/a>（添加小部分笔记）感谢作者!&lt;/p>
&lt;/blockquote>
&lt;h1 id="基本操作">
 基本操作
 &lt;a class="anchor" href="#%e5%9f%ba%e6%9c%ac%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h1>
&lt;h2 id="下载">
 下载
 &lt;a class="anchor" href="#%e4%b8%8b%e8%bd%bd">#&lt;/a>
&lt;/h2>
&lt;p>
&lt;a target="_blank" href="https://rocketmq.apache.org/download/">https://rocketmq.apache.org/download/&lt;/a> 选择Binary下载即可，放到Linux主机中&lt;/p>
&lt;h2 id="前提java运行环境">
 前提java运行环境
 &lt;a class="anchor" href="#%e5%89%8d%e6%8f%90java%e8%bf%90%e8%a1%8c%e7%8e%af%e5%a2%83">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>yum search java | grep jdk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum install -y java-1.8.0-openjdk-devel.x86_64
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># java -version 正常&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># javac -version 正常&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="启动">
 启动
 &lt;a class="anchor" href="#%e5%90%af%e5%8a%a8">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#nameserver启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup sh bin/mqnamesrv &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#nameserver日志查看&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tail -f ~/logs/rocketmqlogs/namesrv.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#输出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:08:34 INFO main - tls.client.certPath &lt;span style="color:#f92672">=&lt;/span> null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:08:34 INFO main - tls.client.authServer &lt;span style="color:#f92672">=&lt;/span> false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:08:34 INFO main - tls.client.trustCertPath &lt;span style="color:#f92672">=&lt;/span> null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:08:35 INFO main - Using OpenSSL provider
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:08:35 INFO main - SSLContext created &lt;span style="color:#66d9ef">for&lt;/span> server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:08:36 INFO NettyEventExecutor - NettyEventExecutor service started
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:08:36 INFO main - The Name Server boot success. serializeType&lt;span style="color:#f92672">=&lt;/span>JSON
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:08:36 INFO FileWatchService - FileWatchService service started
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:09:35 INFO NSScheduledThread1 - --------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-04-06 00:09:35 INFO NSScheduledThread1 - configTable SIZE: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#broker启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup sh bin/mqbroker -n localhost:9876 &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#查看broker日志&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tail -f ~/logs/rocketmqlogs/broker.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#日志如下&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tail: 无法打开&lt;span style="color:#e6db74">&amp;#34;/root/logs/rocketmqlogs/broker.log&amp;#34;&lt;/span> 读取数据: 没有那个文件或目录
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tail: 没有剩余文件
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>👇
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#jps查看&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2465&lt;/span> Jps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2430&lt;/span> NamesrvStartup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#说明没有启动成功,因为默认配置的虚拟机内存较大&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim bin/runbroker.sh 以及 vim runserver.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#修改 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JAVA_OPT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>JAVA_OPT&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> -server -Xms8g -Xmx8g -Xmn4g&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#修改为&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JAVA_OPT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>JAVA_OPT&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#修改完毕后启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#先关闭namesrv后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#按上述启动namesrv以及broker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sh bin/mqshutdown namesrv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># jsp命令查看进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2612&lt;/span> Jps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2551&lt;/span> BrokerStartup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2524&lt;/span> NamesrvStartup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="测试">
 测试
 &lt;a class="anchor" href="#%e6%b5%8b%e8%af%95">#&lt;/a>
&lt;/h2>
&lt;p>同一台机器上，两个cmd窗口&lt;/p></description></item><item><title>算法红皮书 1.3.1.1-1.3.2.5</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.3.1.1-1.3.2.5/</link><pubDate>Tue, 22 Mar 2022 13:51:26 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.3.1.1-1.3.2.5/</guid><description>&lt;h2 id="背包队列和栈">
 背包、队列和栈
 &lt;a class="anchor" href="#%e8%83%8c%e5%8c%85%e9%98%9f%e5%88%97%e5%92%8c%e6%a0%88">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>数据类型的值就是一组对象的集合，所有操作都是关于添加、删除或是访问集合中的对象&lt;/li>
&lt;li>本章将学习三种数据类型：背包Bag、队列Queue、栈Stack
&lt;ul>
&lt;li>对集合中的对象的表示方式直接影响各种操作的效率&lt;/li>
&lt;li>介绍泛型和迭代&lt;/li>
&lt;li>介绍并说明链式数据结构的重要性(链表)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="api">
 API
 &lt;a class="anchor" href="#api">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>泛型可迭代的基础集合数据类型的API&lt;/p>
&lt;ul>
&lt;li>背包&lt;br>
&lt;img src="img/ly-20241212142051025.png" alt="ly-20241212142051025" />&lt;/li>
&lt;li>队列(先进先出FIFO)&lt;br>
&lt;img src="img/ly-20241212142051259.png" alt="ly-20241212142051259" />&lt;/li>
&lt;li>下压(后进先出,LIFO)栈
&lt;img src="img/ly-20241212142051367.png" alt="ly-20241212142051367" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>泛型&lt;/p>
&lt;ul>
&lt;li>泛型，参数化类型&lt;/li>
&lt;li>在每份API 中，类名后的&lt;code>&amp;lt;Item&amp;gt; &lt;/code>记号将Item 定义为一个类型参数，它是一个象征性的占位符，表示的是用例将会使用的某种具体数据类型&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>自动装箱&lt;/p>
&lt;ul>
&lt;li>用来处理原始类型&lt;/li>
&lt;li>Boolean、Byte、Character、Double、Float、Integer、Long 和Short 分别对应着boolean、byte、char、double、float、int、long 和short&lt;/li>
&lt;li>自动将一个原始数据类型转换为一个封装类型称为自动装箱，自动将一个封装类型转换为一个原始数据类型被称为自动拆箱&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>可迭代的集合类型&lt;/p>
&lt;ul>
&lt;li>迭代访问集合中的所有元素&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>背包是一种不支持从中删除元素的集合数据类型&amp;ndash;帮助用例收集元素并迭代遍历所有收集到的元素（&lt;strong>无序遍历&lt;/strong>）&lt;/p>
&lt;ul>
&lt;li>典型用例，计算标准差&lt;br>
&lt;img src="./1.3.1.1-1.3.2.5/1648014765406.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>先进先出队列&lt;/p>
&lt;ul>
&lt;li>是一种基于先进先出(FIFO)策略的集合类型&lt;/li>
&lt;li>使用队列的主要原因：集合保存元素的同时保存它们的相对顺序&lt;/li>
&lt;li>如图&lt;br>
&lt;img src="img/ly-20241212142051478.png" alt="ly-20241212142051478" />&lt;/li>
&lt;li>Queue用例(先进先出) &lt;br>
&lt;img src="img/ly-20241212142051591.png" alt="ly-20241212142051591" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>下压栈&lt;/p>
&lt;ul>
&lt;li>简称栈，是一种基于后进先出LIFO策略的集合类型&lt;/li>
&lt;li>比如，收邮件等，如图&lt;br>
&lt;img src="img/ly-20241212142051703.png" alt="ly-20241212142051703" />&lt;/li>
&lt;li>Stack的用例&lt;br>
&lt;img src="img/ly-20241212142051815.png" alt="ly-20241212142051815" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>用栈解决算数表达式的问题&lt;br>
（双栈算数表达式求值算法）&lt;br>
&lt;img src="img/ly-20241212142051919.png" alt="ly-20241212142051919" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="集合类数据类型的实现">
 集合类数据类型的实现
 &lt;a class="anchor" href="#%e9%9b%86%e5%90%88%e7%b1%bb%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e7%9a%84%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>定容栈，表示容量固定的字符串栈的抽象数据类型&lt;/p>
&lt;ul>
&lt;li>
&lt;p>只能处理String值，支持push和pop&lt;/p>
&lt;/li>
&lt;li>
&lt;p>抽象数据类型&lt;br>
&lt;img src="img/ly-20241212142052029.png" alt="ly-20241212142052029" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>测试用例&lt;/p>
&lt;p>&lt;img src="img/ly-20241212142052135.png" alt="ly-20241212142052135" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用方法&lt;br>
&lt;img src="img/ly-20241212142052243.png" alt="ly-20241212142052243" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>数据类型的实现&lt;br>
&lt;img src="img/ly-20241212142052353.png" alt="ly-20241212142052353" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>泛型&lt;/p>
&lt;ul>
&lt;li>&lt;code>public class FixedCapacityStack&amp;lt;Item&amp;gt;&lt;/code>&lt;/li>
&lt;li>由于不允许直接创建泛型数组，所以 &lt;del>a =new Item[cap]&lt;/del> 不允许，应该改为&lt;br>
a=(Item[])new Object[cap];&lt;/li>
&lt;li>泛型定容栈的抽象数据类型&lt;br>
&lt;img src="img/ly-20241212142052474.png" alt="ly-20241212142052474" />&lt;/li>
&lt;li>测试用例&lt;br>
&lt;img src="img/ly-20241212142052593.png" alt="ly-20241212142052593" />&lt;/li>
&lt;li>使用方法&lt;br>
&lt;img src="img/ly-20241212142052746.png" alt="ly-20241212142052746" />&lt;/li>
&lt;li>数据类型的实现&lt;br>
&lt;img src="img/ly-20241212142052865.png" alt="ly-20241212142052865" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>调整数组大小&lt;/p></description></item><item><title>算法红皮书 1.2.1-1.2.5</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.2.1-1.2.5/</link><pubDate>Tue, 22 Feb 2022 13:49:50 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.2.1-1.2.5/</guid><description>&lt;h2 id="数据抽象">
 数据抽象
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e6%8a%bd%e8%b1%a1">#&lt;/a>
&lt;/h2>
&lt;p>&lt;em>&lt;strong>数据类型&lt;/strong>&lt;/em>指的是一组值和一组对这些值的操作的集合&lt;/p>
&lt;ul>
&lt;li>定义和使用数据类型的过程，也被称为数据抽象&lt;/li>
&lt;li>Java编程的基础是使用class关键字构造被称为&lt;em>&lt;strong>引用类型&lt;/strong>&lt;/em>的数据类型，也称面向对象编程&lt;/li>
&lt;li>定义自己的数据类型来抽象任意对象&lt;/li>
&lt;li>抽象数据类型（ADT）是一种能够对使用者隐藏数据表示的数据类型&lt;/li>
&lt;li>抽象数据类型将数据和函数的实现相关联，将数据的表示方式隐藏起来&lt;/li>
&lt;li>抽象数据类型使用时，关注API描述的操作上而不会去关心数据的表示；实现抽象数据类型时，关注数据本身并将实现对数据的各种操作&lt;/li>
&lt;li>研究同一个问题的不同算法的主要原因是他们的性能不同&lt;/li>
&lt;/ul>
&lt;h3 id="使用抽象数据类型">
 使用抽象数据类型
 &lt;a class="anchor" href="#%e4%bd%bf%e7%94%a8%e6%8a%bd%e8%b1%a1%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>使用一种数据类型并不一定非得知道它是如何实现的&lt;/li>
&lt;li>使用Counter(计数器)的简单数据类型的程序，操作有
&lt;ul>
&lt;li>创建对象并初始化为0&lt;/li>
&lt;li>当前值加1&lt;/li>
&lt;li>获取当前值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>场景，用于电子计票&lt;/li>
&lt;li>抽象数据类型的API(应用程序编程接口)
&lt;ul>
&lt;li>API用来说明抽象数据类型的行为&lt;/li>
&lt;li>将列出所有构造函数和实例方法(即操作)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>计算器的API&lt;br>
&lt;img src="img/ly-20241212142048962.png" alt="" />&lt;/li>
&lt;li>继承的方法
&lt;ul>
&lt;li>所有数据类型都会继承toString()方法&lt;/li>
&lt;li>Java会在用+运算符将任意数据类型的值和String值连接时调用toString()&lt;/li>
&lt;li>默认实现：返回该数据类型值的内存地址&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>用例代码
&lt;ul>
&lt;li>可以在用例代码中，声明变量、创建对象来保存数据类型的值并允许通过实例方法来操作它们&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>对象
&lt;ul>
&lt;li>对象是能够承载数据类型的值的实体&lt;/li>
&lt;li>对象三大特性：状态、标识和行为
&lt;ul>
&lt;li>状态：数据类型中的值&lt;/li>
&lt;li>标识：在内存中的地址&lt;/li>
&lt;li>行为：数据类型的操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Java使用&amp;quot;引用类型&amp;quot;和原始数据类型区别&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>创建对象
&lt;ul>
&lt;li>每种数据类型中的值都存储于一个对象中&lt;/li>
&lt;li>构造函数总是返回他的数据类型的对象的引用&lt;/li>
&lt;li>使用new()，会为新的对象分配内存空间，调用构造函数初始化对象中的值，返回该对象的一个引用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>抽象数据类型向用例隐藏了值的表示细节&lt;/li>
&lt;li>实例方法：参数按值传递&lt;/li>
&lt;li>方法每次触发都和一个对象相关&lt;/li>
&lt;li>静态方法的主要作用是实现函数；非静态(实例)方法的主要作用是实现数据类型的操作&lt;/li>
&lt;li>使用对象&lt;br>
开发某种数据类型的用例
&lt;ul>
&lt;li>声明该类型的变量，以引用对象&lt;/li>
&lt;li>使用new触发能够创建该类型的对象的一个构造函数&lt;/li>
&lt;li>使用变量名调用实例方法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>赋值语句(对象赋值)
&lt;ul>
&lt;li>别名：两个变量同时指向同一个对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>将对象作为参数
&lt;ul>
&lt;li>Java将参数值的一个副本从调用端传递给了方法，这种方式称为按值传递&lt;/li>
&lt;li>当使用引用类型作为参数时我们创建的都是别名，这种约定会传递引用的值(复制引用)，也就是传递对象的引用&lt;/li>
&lt;li>虽然无法改变原始的引用(将原变量指向另一个Counter对象)，但能够改变该对象的值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>将对象作为返回值
&lt;ul>
&lt;li>由于Java只由一个返回值，有了对象实际上就能返回多个值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数组也是对象
&lt;ul>
&lt;li>将数组传递给一个方法或是将一个数组变量放在赋值语句的右侧时，我们都是在创建数组引用的一个副本，而非数组的副本&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>对象的数组&lt;br>
创建一个对象的数组
&lt;ul>
&lt;li>使用方括号语法调用数组的构造函数创建数组&lt;/li>
&lt;li>对于每个数组元素调用它的构造函数创建相应的对象&lt;br>
如下图&lt;br>
&lt;img src="img/ly-20241212142049192.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>运用数据抽象的思想编写代码(定义和使用数据类型，将数据类型的值封装在对象中)的方式称为面向对象编程&lt;/li>
&lt;li>总结
&lt;ul>
&lt;li>数据类型指的是一组值和一组对值的操作的集合&lt;/li>
&lt;li>我们会在数据类型的Java类中编写用理&lt;/li>
&lt;li>对象是能够存储任意该数据类型的值的实体&lt;/li>
&lt;li>对象有三个关键性质：状态、标识和行为&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="抽象数据类型举例">
 抽象数据类型举例
 &lt;a class="anchor" href="#%e6%8a%bd%e8%b1%a1%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e4%b8%be%e4%be%8b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>本书中将会用到或开发的所有数据类型
&lt;ul>
&lt;li>java.lang.*&lt;/li>
&lt;li>Java标准库中的抽象数据类型，需要import，比如java.io、java.net等&lt;/li>
&lt;li>I/O处理嘞抽象数据类型,StdIn和StdOut&lt;/li>
&lt;li>面向数据类抽象数据类型，计算机和和信息处理&lt;/li>
&lt;li>集合类抽象数据类型，主要是为了简化对同一类型的一组数据的操作，包括Bag、Stack和Queue，PQ(优先队列)、ST(符号表)、SET(集合)&lt;/li>
&lt;li>面向操作的抽象数据类型(用来分析各种算法)&lt;/li>
&lt;li>图算法相关的抽象数据类型，用来封装各种图的表示的面向数据的抽象数据类型，和一些提供图的处理算法的面向操作的抽象数据类型&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>几何对象(画图(图形)的)[跳过]&lt;/li>
&lt;li>信息处理
&lt;ul>
&lt;li>抽象数据类型是组织信息的一种自然方式&lt;/li>
&lt;li>定义和真实世界中的物体相对应的对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>字符串
&lt;ul>
&lt;li>java的String&lt;/li>
&lt;li>一个String值是一串可以由索引访问的char值&lt;/li>
&lt;li>有了String类型可以写出清晰干净的用例代码而无需关心字符串的表示方式&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="抽象数据类型的实现">
 抽象数据类型的实现
 &lt;a class="anchor" href="#%e6%8a%bd%e8%b1%a1%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e7%9a%84%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>使用Java的类(class)实现抽象数据类型并将所有代码放入一个和类名相同并带有.java扩展名的文件&lt;/li>
&lt;li>如下图&lt;br>
&lt;img src="img/ly-20241212142049302.png" alt="" />&lt;/li>
&lt;li>实例变量&lt;br>
用来定义数据类型的值(每个对象的状态)&lt;/li>
&lt;li>构造函数
&lt;ul>
&lt;li>每个Java类都至少有一个构造函数以创建一个对象的标识&lt;/li>
&lt;li>每个构造函数将创建一个对象并向调用者返回一个该对象的引用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>实例方法
&lt;ul>
&lt;li>如图&lt;br>
&lt;img src="img/ly-20241212142049410.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>作用域
&lt;ul>
&lt;li>参数变量、局部变量、实例变量&lt;/li>
&lt;li>范围(如图)&lt;br>
&lt;img src="img/ly-20241212142049527.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>API、用例与实现
&lt;ul>
&lt;li>我们要学习的每个抽象数据类型的实现，都会是一个含有若干私有实例变量、构造函数、实例方法和一个测试用例的Java类&lt;/li>
&lt;li>用例和实现分离(一般将用例独立成含有静态方法main()的类)&lt;/li>
&lt;li>做法如下
&lt;ul>
&lt;li>定义一份API，APi的作用是将使用和实现分离，以实现模块化编程&lt;/li>
&lt;li>用一个Java类&lt;strong>实现&lt;/strong>API的定义&lt;/li>
&lt;li>实现多个测试用例来验证前两步做出的设计决定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>例子如下
&lt;ul>
&lt;li>API&lt;br>
&lt;img src="img/ly-20241212142049645.png" alt="" />&lt;/li>
&lt;li>典型用例&lt;br>
&lt;img src="img/ly-20241212142049754.png" alt="" />&lt;/li>
&lt;li>数据类型的实现&lt;br>
&lt;img src="img/ly-20241212142049860.png" alt="" />&lt;/li>
&lt;li>使用方法(执行程序)&lt;br>
&lt;img src="img/ly-20241212142049969.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="更多抽象数据类型的实现">
 更多抽象数据类型的实现
 &lt;a class="anchor" href="#%e6%9b%b4%e5%a4%9a%e6%8a%bd%e8%b1%a1%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e7%9a%84%e5%ae%9e%e7%8e%b0">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>日期
&lt;ul>
&lt;li>两种实现方式&lt;br>
&lt;img src="img/ly-20241212142050078.png" alt="" />&lt;/li>
&lt;li>本书反复出现的主题，即理解各种实现对空间和时间的需求&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>维护多个实现
&lt;ul>
&lt;li>比较同一份API的两种实现在同一个用例中的性能表现，需要下面非正式的命名约定
&lt;ul>
&lt;li>使用前缀的描述性修饰符，比如BasicDate和SmallDate,以及是否合法的SmartDate&lt;/li>
&lt;li>适合大多数用力的需求的实现，比如Date&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>累加器&lt;/li>
&lt;/ul>
&lt;h3 id="数据类型的设计">
 数据类型的设计
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e7%9a%84%e8%ae%be%e8%ae%a1">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>抽象数据类型是一种向用例隐藏内部表示的数据类型
&lt;ul>
&lt;li>封装(数据封装)&lt;/li>
&lt;li>设计APi&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>算法与抽象数据类型
&lt;ul>
&lt;li>能够准确地说明一个算法的目的及其他程序应该如何使用该算法&lt;/li>
&lt;li>每个Java程序都是一组静态方法和(或)一种数据类型的实现的集合&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>本书中关注的是抽象数据类型的实现中的操作和向用例隐藏其中的数据表示&lt;/li>
&lt;li>例子，将二分法封装
&lt;ul>
&lt;li>API&lt;br>
&lt;img src="img/ly-20241212142050191.png" alt="" />&lt;/li>
&lt;li>典型的用例&lt;br>
&lt;img src="img/ly-20241212142050300.png" alt="" />&lt;/li>
&lt;li>数据类型的实现&lt;br>
&lt;img src="img/ly-20241212142050413.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>接口继承
&lt;ul>
&lt;li>Java语言为定义对象之间的关系提供了支持，称为接口&lt;/li>
&lt;li>接口继承使得我们的程序能够通过调用接口中的方法操作实现该接口的任意类型的对象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>本书中使用到的接口&lt;br>
&lt;img src="img/ly-20241212142050528.png" alt="" />&lt;/li>
&lt;li>继承
&lt;ul>
&lt;li>由Object类继承得到的方法&lt;br>
&lt;img src="img/ly-20241212142050645.png" alt="" />&lt;/li>
&lt;li>继承toString()并自定义&lt;/li>
&lt;li>封装类型(内置的引用类型，包括Boolean、Byte、Character、Double、Float、Integer、Long和Short)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>等价性
&lt;ul>
&lt;li>如图&lt;br>
&lt;img src="img/ly-20241212142050756.png" alt="" />&lt;/li>
&lt;li>例子，在Date中重写equals&lt;br>
&lt;img src="img/ly-20241212142050900.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>内存管理&lt;br>
Java具有自动内存管理，通过记录孤儿对象并将它们的内存释放到内存池中&lt;/li>
&lt;li>不可变性&lt;br>
使用final保证数据不可变&lt;br>
使用final修饰的引用类型，不能再引用(指向)其他对象，但对象本身的值可改变&lt;/li>
&lt;li>契约式设计
&lt;ul>
&lt;li>Java语言能够在程序运行时检测程序状态&lt;/li>
&lt;li>异常(Exception)+断言(Assertion)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>异常与错误&lt;br>
允许抛出异常或抛出错误&lt;/li>
&lt;li>断言&lt;br>
程序不应该依赖断言&lt;/li>
&lt;/ul>
&lt;h3 id="end">
 End
 &lt;a class="anchor" href="#end">#&lt;/a>
&lt;/h3></description></item><item><title>算法红皮书 1.1.6-1.1.11</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.1.6-1.1.11/</link><pubDate>Tue, 22 Feb 2022 09:55:11 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.1.6-1.1.11/</guid><description>&lt;h2 id="基础编程模型">
 基础编程模型
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e7%bc%96%e7%a8%8b%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="静态方法">
 静态方法
 &lt;a class="anchor" href="#%e9%9d%99%e6%80%81%e6%96%b9%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>本书中所有的Java程序要么是数据类型的定义，要么是一个静态方法库&lt;/li>
&lt;li>当讨论静态方法和实体方法共有的属性时，我们会使用不加定语的方法一词&lt;/li>
&lt;li>方法需要参数(某种数据类型的值)并根据参数计算出某种数据类型的返回值(例如数学函数的结果)或者产生某种副作用(例如打印一个值)&lt;/li>
&lt;li>静态方法由签名(public static 以及函数的返回值,方法名及一串参数)和函数体组成&lt;/li>
&lt;li>调用静态方法(写出方法名并在后面的括号中列出数值)&lt;/li>
&lt;li>方法的性质
&lt;ul>
&lt;li>方法的参数按值传递，方法中使用的参数变量能够引用调用者的参数并改变其内容(只是不能改变&lt;em>&lt;strong>原数组变量&lt;/strong>&lt;/em>本身)&lt;/li>
&lt;li>方法名可以被重载&lt;/li>
&lt;li>方法只能返回一个值，但能包含多个返回语句&lt;/li>
&lt;li>方法可以产生副作用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>递归：方法可以调用自己
可以使用数学归纳法证明所解释算法的正确性,编写递归重要的三点
&lt;ul>
&lt;li>递归总有一个最简单的情况(方法第一条总包含return的条件语句)&lt;/li>
&lt;li>递归调用总是去尝试解决一个规模更小的子问题&lt;/li>
&lt;li>递归调用的父问题和尝试解决的子问题之间不应该由交集
如下图中，两个子问题各自操作的数组部分是不同的&lt;br>
&lt;img src="img/ly-20241212142047263.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>基础编程模型
&lt;ul>
&lt;li>静态方法库是定义在一个Java类中的一组静态方法&lt;/li>
&lt;li>Java开发的基本模式是编写一个静态方法库(包含一个main()方法)类完成一个任务&lt;/li>
&lt;li>在本书中，当我们提到用于执行一项人物的Java程序时，我们指的就是用这种模式开发的代码(还包括对数据类型的定义)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>模块化编程
&lt;ul>
&lt;li>通过静态方法库实现了模块化编程&lt;/li>
&lt;li>一个库中的静态方法也能够调用另一个库中定义的静态方法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>单元测试
&lt;ul>
&lt;li>Java编程最佳实践之一就是每个静态方法库中都包含一个main()函数来测试库中所有的方法&lt;/li>
&lt;li>本书中使用main()来说明模块的功能并将测试用例留作练习&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>外部库
&lt;ul>
&lt;li>系统标准库 java.lang.*:包括Math库;String和StringBuilder库&lt;/li>
&lt;li>导入的系统库 java.util.Arrays&lt;/li>
&lt;li>本书中其他库&lt;/li>
&lt;li>本书使用了作者开发的标准库Std*&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="api">
 API
 &lt;a class="anchor" href="#api">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>模块化编程重要组成部分，记录库方法的用法并供其他人参考的文档&lt;/li>
&lt;li>会统一使用应用程序编程接口API的方法列出每个库方法、签名及简述&lt;/li>
&lt;li>用例(调用另一个库中的方法的程序)，实现(实现了某个API方法的Java代码)&lt;/li>
&lt;li>作者自己的两个库，一个扩展Math.random(),一个支持各种统计
&lt;ul>
&lt;li>随机静态方法库(StdRandom)的API&lt;br>
&lt;img src="img/ly-20241212142047502.png" alt="" />&lt;/li>
&lt;li>数据分析方法库(StdStats)的API&lt;br>
&lt;img src="img/ly-20241212142047617.png" alt="" />&lt;/li>
&lt;li>StdRandom库中的静态方法的实现
&lt;img src="img/ly-20241212142047730.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>编写自己的库
&lt;ul>
&lt;li>编写用例，实现中将计算过程分解&lt;/li>
&lt;li>明确静态方法库和与之对应的API&lt;/li>
&lt;li>实现API和一个能够对方法进行独立测试的main()函数&lt;/li>
&lt;li>API的目的是将调用和实现分离&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="字符串">
 字符串
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e4%b8%b2">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>字符串拼接，使用 +&lt;/li>
&lt;li>类型转换(将用户从键盘输入的内容转换成相应数据类型的值以及将各种数据类型的值转换成能够在屏幕上显示的值)&lt;br>
&lt;img src="img/ly-20241212142047840.png" alt="" />&lt;/li>
&lt;li>如果数字跟在+后面，那么会将数据类型的值自动转换为字符串&lt;/li>
&lt;li>命令行参数
&lt;ul>
&lt;li>Java中字符串的存在，使程序能够接收到从命令行传递来的信息&lt;/li>
&lt;li>当输入命令java和一个库名及一系列字符串后，Java系统会调用库的main()方法并将后面的一系列字符串变成一个数组作为参数传递给它&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="输入输出">
 输入输出
 &lt;a class="anchor" href="#%e8%be%93%e5%85%a5%e8%be%93%e5%87%ba">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Java程序可以从&lt;em>&lt;strong>命令行参数&lt;/strong>&lt;/em>或者一个名为&lt;em>&lt;strong>标准输入流&lt;/strong>&lt;/em>的抽象字符流中获得输入，并将输出写入另一个名为标准输出流的字符流中&lt;/li>
&lt;li>默认情况下，命令行参数、标准输入和标准输出是和应用程序绑定的，而应用程序是由能够接受命令输入的操作系统或是开发环境所支持&lt;/li>
&lt;li>使用终端来指代这个应用程序提供的供输入和显示的窗口,如图&lt;br>
&lt;img src="img/ly-20241212142047952.png" alt="" />&lt;/li>
&lt;li>命令和参数
&lt;ul>
&lt;li>终端窗口包含一个提示符，通过它我们能够向操作系统输入命令和参数&lt;/li>
&lt;li>操作系统常用命令&lt;br>
&lt;img src="img/ly-20241212142048067.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>标准输出
&lt;ul>
&lt;li>StdOut库的作用是支持标准输出&lt;/li>
&lt;li>标准输出库的静态方法的API&lt;br>
&lt;img src="img/ly-20241212142048178.png" alt="" />&lt;/li>
&lt;li>格式化输出 字符%并紧跟一个字符表示的转换代码(包括d,f和s)。%和转换代码之间可以插入证书表示值的宽度，且转换后会在字符串左边添加空格以达到需要的宽度。负数表示空格从右边加&lt;/li>
&lt;li>宽度后用小数点及数值可以指定精度(或String字符串所截取的长度)&lt;/li>
&lt;li>格式中转换代码和对应参数的数据类型必须匹配
&lt;img src="img/ly-20241212142048287.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>标准输入
&lt;ul>
&lt;li>StdIn库从标准输入流中获取数据，然后将标准输出定向到终端窗口&lt;/li>
&lt;li>标准输入流最重要的特点，这些值会在程序读取后消失&lt;/li>
&lt;li>例子&lt;br>
&lt;img src="img/ly-20241212142048398.png" alt="" />&lt;/li>
&lt;li>标准输入库中的静态方法API&lt;br>
&lt;img src="img/ly-20241212142048512.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>重定向和管道
&lt;ul>
&lt;li>将标准输出重定向到一个文件
&lt;pre tabindex="0">&lt;code>java RandomSeq 1000 100.0 200.0 &amp;gt; data.txt
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>从文件而不是终端应用程序中读取数据
&lt;pre tabindex="0">&lt;code>java Average &amp;lt; data.txt
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>将一个程序的输出重定向为另一个程序的输入，叫做管道
&lt;pre tabindex="0">&lt;code>java RandomSeq 1000 100.0 200.0 | java Average
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>突破了我们能够处理的输入输出流的长度限制&lt;/li>
&lt;li>即使计算机没有足够的空间来存储十亿个数，&lt;/li>
&lt;li>我们仍然可以将例子中的1000 换成1 000 000 000 （当然我们还是需要一些时间来处理它们）。当RandomSeq 调用StdOut.println() 时，它就向输出流的末尾添加了一个字符串；当Average 调用StdIn.readInt() 时，它就从输入流的开头删除了一个字符串。这些动作发生的实际顺序取决于操作系统&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>命令行的重定向及管道&lt;br>
&lt;img src="img/ly-20241212142048626.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>基于文件的输入输出&lt;/li>
&lt;li>In和Out库提供了一些静态方法,来实现向文件中写入或从文件中读取一个原始数据类型的数组的抽象&lt;/li>
&lt;li>用于读取和写入数组的静态方法的API&lt;br>
&lt;img src="img/ly-20241212142048736.png" alt="" />&lt;/li>
&lt;li>标准绘图库(基本方法和控制方法)&amp;ndash;这里跳过&lt;/li>
&lt;/ul>
&lt;h3 id="二分查找">
 二分查找
 &lt;a class="anchor" href="#%e4%ba%8c%e5%88%86%e6%9f%a5%e6%89%be">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>如图，在终端接收需要判断的数字，如果不存在于白名单(文件中的int数组)中则输出&lt;/li>
&lt;li>开发用例以及使用测试文件(数组长度很大的白名单)&lt;/li>
&lt;li>模拟实际情况来展示当前算法的必要性，比如
&lt;ul>
&lt;li>将客户的账号保存在一个文件中，我们称它为白名单；&lt;/li>
&lt;li>从标准输入中得到每笔交易的账号；&lt;/li>
&lt;li>使用这个测试用例在标准输出中打印所有与任何客户无关的账号，公司很可能拒绝此类交易。
&lt;img src="img/ly-20241212142048842.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用顺序查找
&lt;pre tabindex="0">&lt;code>public static int rank(int key, int[] a)
{
 for (int i = 0; i &amp;lt; a.length; i++)
 if (a[i] == key) return i;
 return -1;
}
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>当处理大量输入的时候，顺序查找的效率极其低&lt;/li>
&lt;/ul>
&lt;h3 id="展望">
 展望
 &lt;a class="anchor" href="#%e5%b1%95%e6%9c%9b">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>下一节，鼓励使用数据抽象，或称面向对象编程，而不是操作预定义的数据类型的静态方法&lt;/li>
&lt;li>使用数据抽象的好处
&lt;ul>
&lt;li>复用性&lt;/li>
&lt;li>链式数据结构比数组更灵活&lt;/li>
&lt;li>可以准确地定义锁面对的算法问题&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="11-end">
 1.1 End
 &lt;a class="anchor" href="#11-end">#&lt;/a>
&lt;/h3></description></item><item><title>电脑基础操作</title><link>https://lwmfjc.github.io/zh/docs/technology/Other/pc_base/</link><pubDate>Mon, 21 Feb 2022 16:53:04 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Other/pc_base/</guid><description>&lt;p>&lt;img src="img/ly-20241212141829107.png" alt="ly-20241212141829107" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141829358.png" alt="ly-20241212141829358" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141829580.png" alt="ly-20241212141829580" />&lt;/p>
&lt;p>&lt;img src="img/ly-20241212141829793.png" alt="ly-20241212141829793" />&lt;/p></description></item><item><title>算法红皮书 1.1.1-1.1.5</title><link>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.1.1-1.1.5/</link><pubDate>Mon, 21 Feb 2022 16:53:04 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Algorithm/_algorithhms_4th_/1.1.1-1.1.5/</guid><description>&lt;h2 id="基础编程模型">
 基础编程模型
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e7%bc%96%e7%a8%8b%e6%a8%a1%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="java程序的基本结构">
 Java程序的基本结构
 &lt;a class="anchor" href="#java%e7%a8%8b%e5%ba%8f%e7%9a%84%e5%9f%ba%e6%9c%ac%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>本书学习算法的方法：用Java编程语言编写的程序来实现算法(相比用自然语言有很多优势)&lt;/li>
&lt;li>劣势：编程语言特定，使算法的思想和实现细节变得困难(所以本书尽量使用大部分语言都必须的语法)&lt;/li>
&lt;li>把描述和实现算法所用到的语言特性、软件库和操作系统特定总称为基础编程模型&lt;/li>
&lt;li>Java程序的基本结构
&lt;ul>
&lt;li>
&lt;p>一段Java程序或者是一个静态方法库，或者定义了一个数据类型，需要用到的语法&lt;/p>
&lt;ul>
&lt;li>原始数据类型(在计算机中精确地定义整数浮点数布尔值等)&lt;/li>
&lt;li>语句(创建变量并赋值，控制运行流程或引发副作用来进行计算，包括声明、赋值、条件、循环、调用和返回)&lt;/li>
&lt;li>数组(多个同种数据类型值的集合)&lt;/li>
&lt;li>静态方法(封装并重用代码)&lt;/li>
&lt;li>字符串(一连串的字符，内置一些对他们的操作)&lt;/li>
&lt;li>标准输入/输出(是程序与外界联系的桥梁)&lt;/li>
&lt;li>数据抽象(数据抽象封装和重用代码，可以定义非原始数据类型，进而面向对象编程)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>把这种输入命令执行程序的环境称为 虚拟终端&lt;/p>
&lt;/li>
&lt;li>
&lt;p>要执行一条Java程序，需要先用javac命令编译，然后用java命令运行，比如下面的文件，需要使用命令&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>javac BinarySearch.java
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>java BinarySearch 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="img/ly-20241212142046412.png" alt="" />&lt;br>
&lt;img src="img/ly-20241212142046572.png" alt="" />&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="原始数据类型与表达式">
 原始数据类型与表达式
 &lt;a class="anchor" href="#%e5%8e%9f%e5%a7%8b%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b%e4%b8%8e%e8%a1%a8%e8%be%be%e5%bc%8f">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>数据类型就是一组数据和其所能进行的操作的集合&lt;/li>
&lt;li>Java中最基础的数据类型(整型int，双精度实数类型double,布尔值boolean,字符型char)&lt;/li>
&lt;li>Java程序控制用标识符命名的变量&lt;/li>
&lt;li>对于原始类型，用标识符引用变量，+-*/指定操作，用字面量来表示值(如1或3.14),用表达式表示对值的操作( 表达式:(x+2.334)/2 )&lt;/li>
&lt;li>只要能够指定值域和在此值域上的操作，就能定义一个数据类型(很像数学上函数的定义)&lt;/li>
&lt;li>+-*/是被重载过的&lt;/li>
&lt;li>运算产生的数据的数据类型和参与运算的数据的数据类型是相同的(5/3=1,5.0/3.0=1.6667等)&lt;/li>
&lt;li>如下图(图歪了亿点点..)
&lt;img src="img/ly-20241212142046692.png" alt="" />&lt;/li>
&lt;li>表达式&lt;/li>
&lt;li>表达式具有优先级，Java使用的是中缀表达式(一个字面量紧接运算符，然后是另一个字面量)。逻辑运算中优先级 ! &amp;amp;&amp;amp; || ,运算符中 * / % 高于+ - 。括号能改变这些规则。代码中尽量使用括号消除对优先级的依赖&lt;/li>
&lt;li>类型转换
&lt;ul>
&lt;li>数值会自动提升为高级数据类型，如1+2.5 1会被先转为double 1.0，值也为double的3.5&lt;/li>
&lt;li>强转(把类型名放在括号里讲其转换为括号中的类型) 讲高级数据类型转为低级可能会导致精度的缺失，尽量少使用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>比较
&lt;ul>
&lt;li>==、!=、&amp;lt;、&amp;lt;=、&amp;gt;、&amp;gt;=，这些运算符称为 混合类型运算符，因为结果是布尔型而不是参与比较的数据类型&lt;/li>
&lt;li>结果是布尔型的表达式称为布尔表达式&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>其他原始类型(int为32位，double为64位)
&lt;ul>
&lt;li>long,64位整数&lt;/li>
&lt;li>short,16位整数&lt;/li>
&lt;li>char,16位字符&lt;/li>
&lt;li>byte,8位整数&lt;/li>
&lt;li>32位单精度实数,float&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="语句">
 语句
 &lt;a class="anchor" href="#%e8%af%ad%e5%8f%a5">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>语句用来创建和操作变量、对变量赋值并控制操作的执行流程&lt;/li>
&lt;li>包括声明语句、赋值语句、条件语句、循环语句、调用和返回语句&lt;/li>
&lt;li>声明：让一个变量名和一个类型在编译时关联起来&lt;/li>
&lt;li>赋值：将(由一个表达式定义的)某个数据类型额值和一个变量关联起来&lt;/li>
&lt;li>条件语句：
&lt;pre tabindex="0">&lt;code>if (&amp;lt;boolean expression&amp;gt;) { &amp;lt;block statement&amp;gt; }
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>循环语句
&lt;pre tabindex="0">&lt;code>while(&amp;lt;boolean expression&amp;gt;) { &amp;lt;block statement&amp;gt; }
&lt;/code>&lt;/pre>其中循环语句中的代码段称为循环体&lt;/li>
&lt;li>break与continue语句
&lt;ul>
&lt;li>break，立即退出循环&lt;/li>
&lt;li>continue，立即开始下一轮循环&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="简便记法">
 简便记法
 &lt;a class="anchor" href="#%e7%ae%80%e4%be%bf%e8%ae%b0%e6%b3%95">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>声明并初始化&lt;/li>
&lt;li>隐式赋值
&lt;ul>
&lt;li>++i;&amp;ndash;i&lt;/li>
&lt;li>i/=2;i+=1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>单语句代码段(省略if/while代码段的花括号)&lt;/li>
&lt;li>for语句
&lt;pre tabindex="0">&lt;code>for(&amp;lt;initialize&amp;gt;;&amp;lt;boolean expression&amp;gt;;&amp;lt;increment&amp;gt;)
{
 &amp;lt;block statements&amp;gt;
}
&lt;/code>&lt;/pre>这段代码等价于后面的
&lt;pre tabindex="0">&lt;code>&amp;lt;initialize&amp;gt;;
while(&amp;lt;boolean expression&amp;gt;)
{
 &amp;lt;block statments&amp;gt;
 &amp;lt;increment&amp;gt;;
}
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>java语句总结&lt;br>
&lt;img src="img/ly-20241212142046803.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h3 id="数组">
 数组
 &lt;a class="anchor" href="#%e6%95%b0%e7%bb%84">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>数组能够存储相同类型的多个数据&lt;/li>
&lt;li>N个数组的数组编号为0至N-1；这种数组在Java中称为一维数组&lt;/li>
&lt;li>创建并初始化数组
&lt;ul>
&lt;li>需要三个步骤，声明数组名字和类型，创建数组，初始化数组元素&lt;/li>
&lt;li>声明并初始化一个数组&lt;br>
&lt;img src="img/ly-20241212142046916.png" alt="" />&lt;/li>
&lt;li>简化写法&lt;br>
double[] a = new double[N];&lt;/li>
&lt;li>使用数组(访问的索引小于0或者大于N-1时会抛出ArrayIndexOutOfBoundsException)&lt;/li>
&lt;li>典型的数组处理代码&lt;br>
&lt;img src="img/ly-20241212142047031.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>起别名
&lt;ul>
&lt;li>下面的情况并没有将数组新复制一份，而是a，b指向了同一个数组&lt;br>
&lt;img src="img/ly-20241212142047141.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>二维数组
&lt;ul>
&lt;li>Java中二维数组就是一堆数组的数组&lt;/li>
&lt;li>二维数组可以是参差不齐，比如a[0]=new double[5],a[1]=new double[6]之类&lt;/li>
&lt;li>二维数组的创建及初始化
&lt;pre tabindex="0">&lt;code>double[][] a;
a = new double[M][N];
for (int i = 0; i &amp;lt; M; i++)
 for (int j = 0; j &amp;lt; N; j++)
 a[i][j] = 0.0;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>精简后的代码
double[][] a=new double[M][N];&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>linux_韩老师_01-06</title><link>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/01-06/</link><pubDate>Tue, 25 Jan 2022 14:43:19 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Linux/hanshunping_/01-06/</guid><description>&lt;h2 id="基础介绍">
 基础介绍
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>本套课程内容&lt;br>
&lt;img src="img/ly-20241212142131562.png" alt="" />
&lt;ul>
&lt;li>基础篇: linux入门、vm和Linux的安装、linux目录结构&lt;/li>
&lt;li>实操篇
&lt;ul>
&lt;li>远程登录（xshell，xftp）、实用指令、进程管理、用户管理&lt;/li>
&lt;li>vi和vim编辑器、定时任务调度、RPM和YUM&lt;/li>
&lt;li>开机、重启和用户登录注销、磁盘分区及挂载、网络配置&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>linux使用的地方
&lt;ul>
&lt;li>在linux下开发项目(需要把javaee项目部署到linux下运行)&lt;/li>
&lt;li>linux运维工程师(服务器规划、优化、监控等)&lt;/li>
&lt;li>linux嵌入式工程师(linux下驱动开发[c,c++])&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>linux应用领域
&lt;ul>
&lt;li>个人桌面&lt;/li>
&lt;li>服务器(免费稳定高效)&lt;/li>
&lt;li>嵌入式领域(对软件裁剪，内核最小可达几百kb等)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="linux介绍">
 linux介绍
 &lt;a class="anchor" href="#linux%e4%bb%8b%e7%bb%8d">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>linux是一个开源免费操作系统&lt;/li>
&lt;li>linux吉祥物&lt;br>
tux(/tu&amp;rsquo;ks/唾可si)，没找到音标，将就一下&lt;br>
&lt;img src="img/ly-20241212142131760.png" alt="" />&lt;/li>
&lt;li>linux之父，linus，也是git的创作者&lt;br>
主要发行版：&lt;strong>Ubuntu、RedHat，Centos&lt;/strong>，Debian等&lt;br>
RedHat和Centos使用同样的源码，但是RedHat收费&lt;/li>
&lt;li>Linux和Unix的关系&lt;br>
unix也是一个操作系统，贝尔实验室。做一个多用户分时操作系统，
multics，但是没完成。其中一个后来在这基础上，完成的操作系统为unix
（原本是B语言写的），后面和另一个人用unix用c语言改写了。&lt;br>
unix源码是公开的，后面商业公司拿来包装做成自己的系统，
后面有个人提倡自由时代用户应该对源码享有读写权利而非垄断&lt;br>
后面RichardStallman发起GNU计划（开源计划），Linus参加该计划，并共享出linux内核，于是大家在此基础上开发出各种软件。linux又称GNU/linux&lt;/li>
&lt;li>Linux和Unix关系&lt;br>
&lt;img src="img/ly-20241212142131836.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="vmware安装centos76">
 VMWare安装Centos7.6
 &lt;a class="anchor" href="#vmware%e5%ae%89%e8%a3%85centos76">#&lt;/a>
&lt;/h2>
&lt;p>在windows中安装Linux系统&lt;/p>
&lt;ul>
&lt;li>
&lt;p>VM和Linux系统在pc中的关系&lt;br>
&lt;img src="img/ly-20241212142131913.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装过程中，网络模式使用NAT模式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>选择最小安装，且选择CompatibilityLibraries和DevelopmentTools&lt;br>
&lt;img src="img/ly-20241212142131988.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>linux分区&lt;br>
一般分为三个&lt;br>
&lt;img src="img/ly-20241212142132065.png" alt="" />&lt;br>
一般boot1G,swap分区一般跟内存大小一致，这里是2G，所以根分区就是剩下的，也就是20-1-2=17G&lt;br>
如图，boot，/，swap都是标准分区。且boot和/是ext4的文件格式，swap是swap的文件格式&lt;br>
&lt;img src="img/ly-20241212142132139.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改主机名&lt;br>
&lt;img src="img/ly-20241212142132210.png" alt="" />&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改密码及增加除root外的普通用户&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改网络为固定ip(NAT模式下)&lt;/p>
&lt;ul>
&lt;li>先在VM里面把子网ip改了，这里改成
192.168.200.0&lt;br>
&lt;img src="img/ly-20241212142132285.png" alt="" />&lt;/li>
&lt;li>然后改网关为192.168.200.200&lt;br>
&lt;img src="img/ly-20241212142132357.png" alt="" />&lt;/li>
&lt;li>使用yum install -y vim 安装文本编辑工具&lt;/li>
&lt;li>最后在linux中改配置文件
&lt;pre tabindex="0">&lt;code>vim /etc/sysconfig/network-scripts/ifcfg-ens33
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>其中先修改BOOTPROTO=&amp;ldquo;static&amp;rdquo;&lt;/li>
&lt;li>然后设置ip地址、网关和DNS，
下面是添加到上面的ifcfg-ens33后面，不是直接执行代码
&lt;pre tabindex="0">&lt;code>IPADDR=192.168.200.200
GATEWAY=192.168.200.2
DNS1=192.168.200.2
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>使用命令重启网络
&lt;pre tabindex="0">&lt;code>service network restart 
# 或者直接重启电脑 reboot
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>这里顺便装一下zsx&lt;/p></description></item><item><title>redis_尚硅谷_19-A</title><link>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/19-A/</link><pubDate>Wed, 19 Jan 2022 16:52:19 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/19-A/</guid><description>&lt;h2 id="验证码模拟">
 验证码模拟
 &lt;a class="anchor" href="#%e9%aa%8c%e8%af%81%e7%a0%81%e6%a8%a1%e6%8b%9f">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>首先需要一个MyRedis单例类&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * MyRedis单例类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MyJedis&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Jedis myJedis;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> Jedis &lt;span style="color:#a6e22e">getInstance&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//如果是空则进行初始化&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (myJedis &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//由于synchronized同步是在条件判断内，所以同步&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//并不会一直都执行，增加了效率&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">synchronized&lt;/span> (MyJedis.&lt;span style="color:#a6e22e">class&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (myJedis &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//设置密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DefaultJedisClientConfig.&lt;span style="color:#a6e22e">Builder&lt;/span> builder &lt;span style="color:#f92672">=&lt;/span> DefaultJedisClientConfig.&lt;span style="color:#a6e22e">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">password&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hello.lwm&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DefaultJedisClientConfig config &lt;span style="color:#f92672">=&lt;/span> builder.&lt;span style="color:#a6e22e">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Jedis jedis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> redis.&lt;span style="color:#a6e22e">clients&lt;/span>.&lt;span style="color:#a6e22e">jedis&lt;/span>.&lt;span style="color:#a6e22e">Jedis&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;192.168.200.200&amp;#34;&lt;/span>, 6379, config);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> jedis;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> myJedis;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>redis_尚硅谷_18</title><link>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/18/</link><pubDate>Wed, 19 Jan 2022 14:07:52 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/18/</guid><description>&lt;h2 id="jedis操作redis6">
 Jedis操作Redis6
 &lt;a class="anchor" href="#jedis%e6%93%8d%e4%bd%9credis6">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>插曲:本地项目关联github远程库
&lt;pre tabindex="0">&lt;code> git init
 git add README.md
 git commit -m &amp;#34;first commit&amp;#34;
 #-m表示强制重命名
 git branch -M main
 #使用别名
 git remote add origin git@github.com:lwmfjc/jedis_demo.git
 #用了-u之后以后可以直接用git push替代整行 
 git push -u origin main 
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>jedis pom依赖
&lt;pre tabindex="0">&lt;code class="language-pom" data-lang="pom">&amp;lt;!-- https://mvnrepository.com/artifact/redis.clients/jedis --&amp;gt;
&amp;lt;dependency&amp;gt;
 &amp;lt;groupId&amp;gt;redis.clients&amp;lt;/groupId&amp;gt;
 &amp;lt;artifactId&amp;gt;jedis&amp;lt;/artifactId&amp;gt;
 &amp;lt;version&amp;gt;4.0.1&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>jedis使用
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Main&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(String&lt;span style="color:#f92672">[]&lt;/span> args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//设置密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DefaultJedisClientConfig.&lt;span style="color:#a6e22e">Builder&lt;/span> builder &lt;span style="color:#f92672">=&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DefaultJedisClientConfig.&lt;span style="color:#a6e22e">builder&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">password&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hello.lwm&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DefaultJedisClientConfig config &lt;span style="color:#f92672">=&lt;/span> builder.&lt;span style="color:#a6e22e">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Jedis jedis &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Jedis(&lt;span style="color:#e6db74">&amp;#34;192.168.200.200&amp;#34;&lt;/span>, 6379, config);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//ping&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String value &lt;span style="color:#f92672">=&lt;/span> jedis.&lt;span style="color:#a6e22e">ping&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//返回所有key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> keys &lt;span style="color:#f92672">=&lt;/span> jedis.&lt;span style="color:#a6e22e">keys&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;key count: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keys.&lt;span style="color:#a6e22e">size&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (String key : keys) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;key--:%s---value:%s\n&amp;#34;&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> key, jedis.&lt;span style="color:#a6e22e">get&lt;/span>(key));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;操作list&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//操作list&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">lpush&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly-list&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;java&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;c++&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;css&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> lrange &lt;span style="color:#f92672">=&lt;/span> jedis.&lt;span style="color:#a6e22e">lrange&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly-list&amp;#34;&lt;/span>, 0, &lt;span style="color:#f92672">-&lt;/span>1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (String v : lrange) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;value:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> v);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//操作set&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;操作set&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">sadd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly-set&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;5&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Set&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> smembers &lt;span style="color:#f92672">=&lt;/span> jedis.&lt;span style="color:#a6e22e">smembers&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly-set&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (String v : smembers) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;value:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> v);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//操作hash&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;操作hash&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">hset&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly-hash&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;lidian&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">hset&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly-hash&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;age&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;30&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">hset&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly-hash&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;sex&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;man&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, String&lt;span style="color:#f92672">&amp;gt;&lt;/span> lyHash &lt;span style="color:#f92672">=&lt;/span> jedis.&lt;span style="color:#a6e22e">hgetAll&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ly-hash&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (String key : lyHash.&lt;span style="color:#a6e22e">keySet&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(key &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> lyHash.&lt;span style="color:#a6e22e">get&lt;/span>(key));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//操作zset&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;操作zset&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">zadd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;person&amp;#34;&lt;/span>, 100, &lt;span style="color:#e6db74">&amp;#34;xiaohong&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">zadd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;person&amp;#34;&lt;/span>, 80, &lt;span style="color:#e6db74">&amp;#34;xiaoli&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">zadd&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;person&amp;#34;&lt;/span>, 90, &lt;span style="color:#e6db74">&amp;#34;xiaochen&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>String&lt;span style="color:#f92672">&amp;gt;&lt;/span> person &lt;span style="color:#f92672">=&lt;/span> jedis.&lt;span style="color:#a6e22e">zrange&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;person&amp;#34;&lt;/span>, 0, &lt;span style="color:#f92672">-&lt;/span>1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (String name : person) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> System.&lt;span style="color:#a6e22e">out&lt;/span>.&lt;span style="color:#a6e22e">println&lt;/span>(name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//结束操作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">flushDB&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> jedis.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>redis_尚硅谷_12-17</title><link>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/12-17/</link><pubDate>Tue, 18 Jan 2022 08:48:54 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/12-17/</guid><description>&lt;h2 id="redis配置文件">
 Redis配置文件
 &lt;a class="anchor" href="#redis%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>redis中单位的设置，支持k,kb,m,mb,g,gb，且不区分大小写&lt;br>
&lt;img src="img/ly-20241212142200403.png" alt="" />&lt;/li>
&lt;li>include (包含其他文件，比如公共部分)&lt;br>
&lt;img src="img/ly-20241212142200557.png" alt="" />&lt;/li>
&lt;li>bind
&lt;pre tabindex="0">&lt;code>bind 127.0.0.1 ::1 #listens on loopback IPv4 and IPv6 
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>后面这个::1，相当于ipv6版的127.0.0.1。在redis配置文件中，整句表示只允许本地网卡的某个ip连接(但是它并不能指定某个主机连接到redis中。比如本机有两个网卡，两个ip，可以限定只有其中一个ip可以连接)&lt;/li>
&lt;li>如果注释掉了/或者bind 0.0.0.0，表示允许所有主机连接&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>protected-mode
&lt;pre tabindex="0">&lt;code>protected-mode yes 
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>设置保护模式为yes，protected是redis本身的一个安全层，这个安全层在同时满足下面三个条件的时候会开启，开启后只有本机可以访问redis
&lt;ul>
&lt;li>protected-mode yes&lt;/li>
&lt;li>没有bind指令(bind 0.0.0.0不属于这个条件)&lt;/li>
&lt;li>没有设置密码 (没有设置requirepass password)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>只要上面一个条件不满足，就不会开启保护模式。换言之，只要设置了bind 0.0.0.0或者没有设置bind，且不满足上面三个条件之一，就能够进行远程访问(当然，linux/windows的6379端口要开放)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>tcp-backlog 表示未连接队列总和&lt;/li>
&lt;li>timeout 秒为单位，时间内没操作则断开连接&lt;/li>
&lt;li>tcp-keepalive 300 心跳检测，每隔300s检测连接是否存在&lt;/li>
&lt;li>pidfile /var/run/redis_6379.pid 将进程号保存到文件中&lt;/li>
&lt;li>loglevel 表示日志的级别/debug/verbose/&lt;strong>notice&lt;/strong>/warning&lt;/li>
&lt;li>logfile &amp;quot;&amp;quot; 设置日志的路径&lt;/li>
&lt;li>database 16 默认有16个库&lt;/li>
&lt;li>requirepass password 设置密码&lt;/li>
&lt;li>maxclients 设置最大连接数&lt;/li>
&lt;li>maxmemory 设置最大内存量，达到则会根据移除策略进行移除操作&lt;/li>
&lt;/ul>
&lt;h2 id="redis的发布和订阅">
 Redis的发布和订阅
 &lt;a class="anchor" href="#redis%e7%9a%84%e5%8f%91%e5%b8%83%e5%92%8c%e8%ae%a2%e9%98%85">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>发布订阅，pub/sub，是一种消息通信模式：发送者pub发送消息，订阅器sub接收消息&lt;/li>
&lt;li>发布者能发布消息，订阅者可以订阅/接收消息&lt;br>
&lt;img src="img/ly-20241212142200586.png" alt="" />&lt;/li>
&lt;li>操作
&lt;pre tabindex="0">&lt;code class="language-redis" data-lang="redis">subscribe channel1 #客户端A订阅频道 
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code class="language-redis" data-lang="redis">publish channel1 helloly #向频道发送消息
&lt;/code>&lt;/pre>此时订阅channel1频道的客户端就会接收到消息&lt;br>
&lt;img src="img/ly-20241212142200619.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h2 id="redis新数据类型">
 redis新数据类型
 &lt;a class="anchor" href="#redis%e6%96%b0%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="bitmaps">
 Bitmaps
 &lt;a class="anchor" href="#bitmaps">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>进行二进制操作&lt;/p></description></item><item><title>redis_尚硅谷_06-11</title><link>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/06-11/</link><pubDate>Tue, 04 Jan 2022 16:22:12 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/06-11/</guid><description>&lt;h2 id="redis针对key的基本操作">
 Redis针对key的基本操作
 &lt;a class="anchor" href="#redis%e9%92%88%e5%af%b9key%e7%9a%84%e5%9f%ba%e6%9c%ac%e6%93%8d%e4%bd%9c">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>常用命令
&lt;pre tabindex="0">&lt;code>keys * #查找当前库所有库
exists key1 #key1是否存在 1存在；0不存在
type key2 #key2的类型
del key3 #删除key3
unlink key3 #删除key3(选择非阻塞删除。会先从元数据删除，而真正删除是异步删除)
expire key1 10 #设置key1的过期时间，单位秒
ttl key1 #获取key1的剩余存活时间，-2表示key已过期或不存在，-1表示永不过期
select 1 #切换到1号库(redis中有15个库，默认在库1)
dbsize #查找当前redis库中有多少个key
flushdb #清空当前库
flushall #清空所有库
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="redis中常用数据类型">
 Redis中常用数据类型
 &lt;a class="anchor" href="#redis%e4%b8%ad%e5%b8%b8%e7%94%a8%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b">#&lt;/a>
&lt;/h2>
&lt;h3 id="字符串string">
 字符串（String）
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e4%b8%b2string">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>String是二进制安全的，可以包含jpg图片或序列化的对象&lt;/li>
&lt;li>一个Redis中字符串value最多可以只能是512M&lt;/li>
&lt;li>常用命令
&lt;pre tabindex="0">&lt;code>set key1 value1
get key1 
set key1 value11 #将覆盖上一个值
append key1 abc #在key1的值追加&amp;#34;abc&amp;#34;
strlen key1 #key值的长度
setnx key1 value #当key不存在时才设置key
incr n1 #将n1的值加一,,如果n1不存在则会创建key n1 并改为1(0+1)
decr n1 #将n1的值减一,如果n1不存在则会创建key n1 并改为-1(0-1)
incrby n1 20 #将n1的值加20，其他同上
decrby n1 20 #将n1的值减20，其他同上
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>redis原子性&lt;br>
incr具有原子性操作&lt;br>
java中的i++不是原子操作&lt;/li>
&lt;li>其他命令
&lt;pre tabindex="0">&lt;code>mset k1 v1 k2 v2
mget k1 k2 
msetnx k1 v1 k2 v2 #仅当所有的key都不存在时才会进行设置
getrange name 0 3 #截断字符串[0,3]
setrange name 3 123 #从下标[3]开始替换字符串（换成123）
setex k1 20 v1 #设置过期时间为20s
expire k1 30 #设置过期时间为30s
getset k1 123 #获取旧值，并设置一个新值
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>数据结构，SimpleDynamicString，SDS，简单动态字符串，内部结构类似Java的ArrayList，采用预分配冗余空间的方式来减少内存的频繁分配&lt;br>
&lt;img src="img/ly-20241212142200067.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h3 id="列表-list">
 列表 (List)
 &lt;a class="anchor" href="#%e5%88%97%e8%a1%a8-list">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>单键多值&lt;/li>
&lt;li>底层是双向链表&lt;/li>
&lt;li>从左放
&lt;pre tabindex="0">&lt;code>lpush k1 v1 v2 v3 #从左边放(从左往右推)
lrange k1 0 -1 #从左边取(v3 v2 v1)
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>lpush:&lt;br>
&lt;img src="img/ly-20241212142200123.png" alt="" />&lt;/li>
&lt;li>从右放
&lt;pre tabindex="0">&lt;code>rpush k2 v1 v2 v3 
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>brpush:&lt;br>
&lt;img src="img/ly-20241212142200156.png" alt="" />&lt;/li>
&lt;li>lpop/rpop
&lt;pre tabindex="0">&lt;code>lpop k2 #从左边弹出一个值
lpop k2 2 #从左边弹出两个值，当键没有包含值时，键被删除
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>rpoplpush
&lt;pre tabindex="0">&lt;code>lpush a a1 a2 a3
rpush b b1 b2 b3
rpoplpush a b #此时a:a1 a2，b:a3 b1 b2 b3
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>lrange
&lt;pre tabindex="0">&lt;code>lrange b 1 2 #获取b中下标[1,2]的所有值
lrange b 1 -1 #获取所有值[1,最大下标]的所有值
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>lindex,llen
&lt;pre tabindex="0">&lt;code>lindex b 1 #直接取第一个下标的元素
llen b #获取列表的长度
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>linsert
&lt;pre tabindex="0">&lt;code>linsert b before b2 myinsert
linsert b after b2 myinsert
#在某个列表的值(如果重复取第一个)的位置之前/之后插入值
&lt;/code>&lt;/pre>&lt;img src="img/ly-20241212142200200.png" alt="" />&lt;/li>
&lt;li>lrem,lset
&lt;pre tabindex="0">&lt;code>lrem b 2 a #从b列表中，删除两个a（从左往右）
lset b 2 AA #把下标2的值设置为AA
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>list数据结构是一个快速列表，quicklist&lt;br>
当元素较少的时候，会使用连续的内存存储，结构时ziplist，即压缩列表；当数据多的时候会有多个压缩列表，然后会链接到一起(使用双向指针)&lt;br>
&lt;img src="img/ly-20241212142200233.png" alt="" />&lt;/li>
&lt;/ul>
&lt;h3 id="集合set">
 集合(Set)
 &lt;a class="anchor" href="#%e9%9b%86%e5%90%88set">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>特点：无序，不重复&lt;/li>
&lt;li>Set:string类型的无序集合，底层是一个value为null的hash表；添加/删除时间复杂度为O(1)&lt;/li>
&lt;li>常用命令
&lt;pre tabindex="0">&lt;code>sadd k1 v1 v2 v3 v2 v2 v1 #设置集合中的值
smembers k1 #取出集合中的值
sismember k1 v3 #k1是否存在v3，存在返回1，不存在返回0
scard k1 #返回集合中元素的个数
srem k1 v2 v3 #删除集合中的v2和v3
spop k1 #从k1中随机取出一个值
srandmember k1 2 #从k1中随机取出2个值
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>smove a k a1 #从a中将a1移动到k中
sinter a k #取a，k的交集
sunion a k #取a，k的并集
sdiff a k #返回两个集合的差集（从集合a中，去除存在集合k中的元素，即a-k）
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>Set数据结构时dict字典，字典使用哈希表实现的&lt;/li>
&lt;/ul>
&lt;h3 id="哈希hash">
 哈希（Hash)
 &lt;a class="anchor" href="#%e5%93%88%e5%b8%8chash">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>是String类型的field和value的映射表，用来存储对象,类似java中的Map&amp;lt;String,Object&amp;gt; &lt;br>
&lt;img src="img/ly-20241212142200266.png" alt="" />&lt;/li>
&lt;li>常用命令
&lt;pre tabindex="0">&lt;code>hset user:1001 id 1 #设置(对象)user:1001的id属性值
hset user:1001 name zhangsan 
hget user:1001 name #取出user:1001的name
hmset user:1001 id 1 name zhangsan #批量设置（现在hset也可以批量设置了，hmset已弃用）
hexists user:1001 id 1 #判断属性id是否存在
hkeys user:1001 #查看hash结构中的所有filed
hvals user:1001 #查看hash结构中所有value
hincrby user:1001 age 2 #给hash结构的age属性值加2
hsetnx user:1001 age 10 #给hash结构的age属性设置值为10（如果age属性不存在）
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>hash类型数据结构，当field-value长度较短时用的是ziplist，否则使用的是hashtable&lt;/li>
&lt;/ul>
&lt;h3 id="有序集合zset">
 有序集合(ZSet)
 &lt;a class="anchor" href="#%e6%9c%89%e5%ba%8f%e9%9b%86%e5%90%88zset">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>与set很相似，但是是有序的&lt;/li>
&lt;li>有序集合的所有元素（成员）都关联一个评分(score)，score用来从最低到最高方式进行排序，成员唯一但评分是重复的&lt;/li>
&lt;li>常用命令
&lt;pre tabindex="0">&lt;code>zadd topn 100 xiaoming 120 xiaohong 60 xiaochen #添加key并为每个成员添加评分
zadd topn xiaoli 200 
zrange topn 0 -1 #查找出所有成员(按排名由小到大)
zrange topn 0 -1 withscores #从小到大查找所有成员并显示分数
zrangebyscore topn 130 200 #查找所有在130-200的成员
zrevrangebyscore topn 200 130 #从大到小查找所有成员（注意，从大到小时第一个值必须大于等于第二个）
zincrby topn 15 xiaohong #给小红添加15分
zrem topn xiaohong #删除元素
zcount topn 10 200 #统计该集合，分数区间内的元素个数
zrank topn xiaohong #xiaohong的排名，从0开始
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>zset底层数据结构
&lt;ul>
&lt;li>hash结构&lt;br>
&lt;img src="img/ly-20241212142200298.png" alt="" />&lt;/li>
&lt;li>跳跃表
给元素value排序，根据score的范围获取元素列表&lt;/li>
&lt;li>对比有序链表和跳跃表
&lt;ul>
&lt;li>查找51元素&lt;br>
&lt;img src="img/ly-20241212142200328.png" alt="" />&lt;/li>
&lt;li>跳跃表&lt;br>
按图中的顺序查找，查找四次就能找到&lt;br>
&lt;img src="img/ly-20241212142200360.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>End&lt;/li>
&lt;/ul></description></item><item><title>redis_尚硅谷_01-05</title><link>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/01-05/</link><pubDate>Mon, 27 Dec 2021 09:09:03 +0000</pubDate><guid>https://lwmfjc.github.io/zh/docs/technology/Redis/shangguigu_BV1Rv41177Af_/01-05/</guid><description>&lt;h2 id="课程简介">
 课程简介
 &lt;a class="anchor" href="#%e8%af%be%e7%a8%8b%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;p>NoSQL数据库简介、Redis概述与安装、常用五大数据结构、配置文件详解、发布与订阅、Redis6新数据类型、Redis与spring boot整合、事务操作、持久化之RDB、持久化之AOF、主从复制及集群、Redis6应用问题(缓存穿透、击穿、雪崩以及分布式锁)、Redis6新增功能&lt;/p>
&lt;h2 id="nosql数据库简介">
 NoSQL数据库简介
 &lt;a class="anchor" href="#nosql%e6%95%b0%e6%8d%ae%e5%ba%93%e7%ae%80%e4%bb%8b">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Redis属于NoSQL数据库&lt;/li>
&lt;li>技术分为三大类
&lt;ul>
&lt;li>解决功能性问题：Java、Jsp、RDBMS、Tomcat、Linux、JDBC、SVN&lt;/li>
&lt;li>解决扩展性问题：Struts、Spring、SpringMVC、Hibernate、Mybatis&lt;/li>
&lt;li>解决性能问题：NoSQL、Java线程、Nginx、MQ、ElasticSearch&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>缓存数据库的好处
&lt;ul>
&lt;li>完全在内存中，速度快，结构简单&lt;/li>
&lt;li>作为缓存数据库：减少io的读操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NoSQL＝Not Only SQL,不仅仅是SQL，泛指&lt;strong>非泛型数据库&lt;/strong>
&lt;ul>
&lt;li>不支持ACID(但是NoSQL支持事务)&lt;/li>
&lt;li>选超于SQL的性能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NoSQL适用场景
&lt;ul>
&lt;li>对数据高并发的读写&lt;/li>
&lt;li>海量数据的读写&lt;/li>
&lt;li>对数据高可扩展性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>NoSQL不适用的场景
&lt;ul>
&lt;li>需要事务支持&lt;/li>
&lt;li>基于sql的结构化查询存储&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>多种NoSQL数据库介绍
&lt;ul>
&lt;li>Memcache 不支持持久化，数据类型单一，一般作为辅助持久化的数据库&lt;/li>
&lt;li>Redis 支持持久化，除了k-v模式还有其他多种数据结构，一般作为辅助持久化的数据库&lt;/li>
&lt;li>MongoDB，是文档型数据类型；k-v模型，但是对value提供了丰富的查询功能；支持二进制数据及大型对象；替代RDBMS，成为独立数据库&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>大数据时代（行式数据库、列式数据库）
&lt;ul>
&lt;li>行式数据库&lt;br>
查询某一块数据的时候效率高&lt;br>
&lt;img src="img/ly-20241212142159687.png" alt="" />&lt;/li>
&lt;li>列式数据库&lt;br>
查询某一列统计信息快&lt;br>
&lt;img src="img/ly-20241212142159845.png" alt="" />&lt;/li>
&lt;li>其他&lt;br>
Hbase，Cassandra，图关系数据库(比如社会关系，公共交通网等)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>小计&lt;br>
NoSQL数据库是为提高性能而产生的非关系型数据库&lt;/li>
&lt;/ul>
&lt;h2 id="redis概述与安装">
 Redis概述与安装
 &lt;a class="anchor" href="#redis%e6%a6%82%e8%bf%b0%e4%b8%8e%e5%ae%89%e8%a3%85">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>简单概述
&lt;ul>
&lt;li>Redis是一个开源的kv存储系统&lt;/li>
&lt;li>相比Mencached，支持存储的数据类型更多，包括string，list，set，zset以及hash，这些类型都支持(pop、add/remove及取交并集和差集等)，操作都是原子性的&lt;/li>
&lt;li>Redis数据都是缓存在内存中&lt;/li>
&lt;li>Redis会周期性地把数据写入磁盘或修改操作写入追加的记录文件&lt;/li>
&lt;li>能在此基础上实现master-slave(主从)同步&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Redis功能
&lt;ul>
&lt;li>配合关系型数据库做高速缓存&lt;/li>
&lt;li>Redis具有多样的数据结构存储持久化数据&lt;/li>
&lt;li>其他部分功能&lt;br>
&lt;img src="img/ly-20241212142159875.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Redis安装
&lt;ul>
&lt;li>从官网中下载redis-6.xx.tar.gz包(该教程在linux中使用redis6教学)&lt;/li>
&lt;li>编译redis需要gcc环境
&lt;ul>
&lt;li>使用gcc &amp;ndash;version查看服务器是否有gcc环境&lt;/li>
&lt;li>如果没有需要进行安装
&lt;pre tabindex="0">&lt;code class="language-l" data-lang="l">apt install -y gcc
或者
yum install -y gcc
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>将redis压缩文件进行解压
&lt;pre tabindex="0">&lt;code>tar -zxvf redis-6xx.tar.gz
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>进入解压后的文件夹，并使用make命令进行编译
&lt;pre tabindex="0">&lt;code>make
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>如果报错了，需要先用下面命令清理，之后再进行编译
&lt;pre tabindex="0">&lt;code>make distclean
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>安装redis
&lt;pre tabindex="0">&lt;code>make install
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>进入/usr/local/bin目录，查看目录&lt;br>
&lt;img src="img/ly-20241212142159913.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Redis启动
&lt;ul>
&lt;li>前台启动
&lt;pre tabindex="0">&lt;code>redis-server 
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>后台启动
&lt;ul>
&lt;li>在刚才解压的文件夹中，拷贝出redis.conf文件(这里拷贝到/etc/目录下)
&lt;pre tabindex="0">&lt;code>cp redis.conf /etc/redis.conf
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>到etc中修改redis.conf文件
&lt;pre tabindex="0">&lt;code>vim /etc/redis.conf
# 进入编辑器后使用下面命令进行搜索并回车
/daemonize no
&lt;/code>&lt;/pre>将no改为yes并保存&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>进入/usr/local/bin目录启动redis
&lt;pre tabindex="0">&lt;code>redis-server /etc/redis.conf 
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>查看进程，发现redis已经启动
&lt;pre tabindex="0">&lt;code>ps -ef | grep redis
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>使用redis-cli 客户端连接redis
&lt;pre tabindex="0">&lt;code>redis-cli
keys * 
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="相关知识">
 相关知识
 &lt;a class="anchor" href="#%e7%9b%b8%e5%85%b3%e7%9f%a5%e8%af%86">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Redis6379的由来
&lt;ul>
&lt;li>人名Merz 在九宫格对应的数字就是6379&lt;br>
&lt;img src="img/ly-20241212142159946.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Redis默认有15个库，默认数据都在数据库0中，所有库的密码都是相同的&lt;/li>
&lt;li>Redis是单线程+多路复用技术
&lt;ul>
&lt;li>Redis是串行操作&lt;br>
&lt;img src="img/ly-20241212142159981.png" alt="" />&lt;/li>
&lt;li>火车站的例子&lt;br>
当1，2，3没有票的时候，不用一直等待买票，可以继续做自己的事情，黄牛买到票就会通知123进行取票&lt;br>
&lt;img src="img/ly-20241212142200015.png" alt="" />&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Memcached和Redis区别
&lt;ul>
&lt;li>Memcached支持单一数据类型，Redis支持多数据类型&lt;/li>
&lt;li>Memcached不支持持久化&lt;/li>
&lt;li>Memcached用的多线程+锁的机制，Redis用的是单线程+多路复用程序&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="end">
 End
 &lt;a class="anchor" href="#end">#&lt;/a>
&lt;/h2></description></item></channel></rss>